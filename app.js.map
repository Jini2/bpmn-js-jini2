{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/app.js","webpack:///./app/diagram.bpmn","webpack:///./app/properties-panel/PropertiesView.css?69be","webpack:///./app/properties-panel/PropertiesView.js","webpack:///./app/properties-panel/index.js","webpack:///./node_modules/bpmn-js/lib/Modeler.js","webpack:///./node_modules/bpmn-js/lib/NavigatedViewer.js","webpack:///./node_modules/bpmn-js/lib/Viewer.js","webpack:///./node_modules/bpmn-js/lib/core/index.js","webpack:///./node_modules/bpmn-js/lib/draw/BpmnRenderUtil.js","webpack:///./node_modules/bpmn-js/lib/draw/BpmnRenderer.js","webpack:///./node_modules/bpmn-js/lib/draw/PathMap.js","webpack:///./node_modules/bpmn-js/lib/draw/TextRenderer.js","webpack:///./node_modules/bpmn-js/lib/draw/index.js","webpack:///./node_modules/bpmn-js/lib/features/auto-place/AutoPlace.js","webpack:///./node_modules/bpmn-js/lib/features/auto-place/AutoPlaceSelectionBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/auto-place/AutoPlaceUtil.js","webpack:///./node_modules/bpmn-js/lib/features/auto-place/index.js","webpack:///./node_modules/bpmn-js/lib/features/auto-resize/BpmnAutoResize.js","webpack:///./node_modules/bpmn-js/lib/features/auto-resize/BpmnAutoResizeProvider.js","webpack:///./node_modules/bpmn-js/lib/features/auto-resize/index.js","webpack:///./node_modules/bpmn-js/lib/features/context-pad/ContextPadProvider.js","webpack:///./node_modules/bpmn-js/lib/features/context-pad/index.js","webpack:///./node_modules/bpmn-js/lib/features/copy-paste/BpmnCopyPaste.js","webpack:///./node_modules/bpmn-js/lib/features/copy-paste/index.js","webpack:///./node_modules/bpmn-js/lib/features/distribute-elements/BpmnDistributeElements.js","webpack:///./node_modules/bpmn-js/lib/features/distribute-elements/index.js","webpack:///./node_modules/bpmn-js/lib/features/editor-actions/BpmnEditorActions.js","webpack:///./node_modules/bpmn-js/lib/features/editor-actions/index.js","webpack:///./node_modules/bpmn-js/lib/features/keyboard/BpmnKeyboardBindings.js","webpack:///./node_modules/bpmn-js/lib/features/keyboard/index.js","webpack:///./node_modules/bpmn-js/lib/features/label-editing/LabelEditingPreview.js","webpack:///./node_modules/bpmn-js/lib/features/label-editing/LabelEditingProvider.js","webpack:///./node_modules/bpmn-js/lib/features/label-editing/LabelUtil.js","webpack:///./node_modules/bpmn-js/lib/features/label-editing/cmd/UpdateLabelHandler.js","webpack:///./node_modules/bpmn-js/lib/features/label-editing/index.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/BpmnFactory.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/BpmnLayouter.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/BpmnUpdater.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/ElementFactory.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/Modeling.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/AdaptiveLabelPositioningBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/AppendBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/BoundaryEventBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/CopyPasteBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/CreateBoundaryEventBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/CreateDataObjectBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/CreateParticipantBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/DataInputAssociationBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/DataStoreBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/DeleteLaneBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/DropOnFlowBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/ImportDockingFix.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/IsHorizontalFix.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/LabelBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/ModelingFeedback.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/RemoveElementBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/RemoveParticipantBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/ReplaceConnectionBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/ReplaceElementBehaviour.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/ResizeLaneBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/ToggleElementCollapseBehaviour.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/UnclaimIdBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/UnsetDefaultFlowBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/UpdateFlowNodeRefsBehavior.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/index.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/util/GeometricUtil.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/util/LabelLayoutUtil.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/util/LineAttachmentUtil.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/behavior/util/LineIntersect.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/AddLaneHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/IdClaimHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/ResizeLaneHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/SetColorHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/SplitLaneHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateCanvasRootHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateFlowNodeRefsHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/UpdatePropertiesHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/cmd/UpdateSemanticParentHandler.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/index.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/util/LaneUtil.js","webpack:///./node_modules/bpmn-js/lib/features/modeling/util/ModelingUtil.js","webpack:///./node_modules/bpmn-js/lib/features/ordering/BpmnOrderingProvider.js","webpack:///./node_modules/bpmn-js/lib/features/ordering/index.js","webpack:///./node_modules/bpmn-js/lib/features/palette/PaletteProvider.js","webpack:///./node_modules/bpmn-js/lib/features/palette/index.js","webpack:///./node_modules/bpmn-js/lib/features/popup-menu/ReplaceMenuProvider.js","webpack:///./node_modules/bpmn-js/lib/features/popup-menu/index.js","webpack:///./node_modules/bpmn-js/lib/features/popup-menu/util/TypeUtil.js","webpack:///./node_modules/bpmn-js/lib/features/replace-preview/BpmnReplacePreview.js","webpack:///./node_modules/bpmn-js/lib/features/replace-preview/index.js","webpack:///./node_modules/bpmn-js/lib/features/replace/BpmnReplace.js","webpack:///./node_modules/bpmn-js/lib/features/replace/ReplaceOptions.js","webpack:///./node_modules/bpmn-js/lib/features/replace/index.js","webpack:///./node_modules/bpmn-js/lib/features/rules/BpmnRules.js","webpack:///./node_modules/bpmn-js/lib/features/rules/index.js","webpack:///./node_modules/bpmn-js/lib/features/search/BpmnSearchProvider.js","webpack:///./node_modules/bpmn-js/lib/features/search/index.js","webpack:///./node_modules/bpmn-js/lib/features/snapping/BpmnSnapping.js","webpack:///./node_modules/bpmn-js/lib/features/snapping/BpmnSnappingUtil.js","webpack:///./node_modules/bpmn-js/lib/features/snapping/index.js","webpack:///./node_modules/bpmn-js/lib/import/BpmnImporter.js","webpack:///./node_modules/bpmn-js/lib/import/BpmnTreeWalker.js","webpack:///./node_modules/bpmn-js/lib/import/Importer.js","webpack:///./node_modules/bpmn-js/lib/import/Util.js","webpack:///./node_modules/bpmn-js/lib/import/index.js","webpack:///./node_modules/bpmn-js/lib/util/DiUtil.js","webpack:///./node_modules/bpmn-js/lib/util/LabelUtil.js","webpack:///./node_modules/bpmn-js/lib/util/ModelUtil.js","webpack:///./node_modules/bpmn-js/lib/util/PoweredByUtil.js","webpack:///./node_modules/bpmn-js/lib/util/model/ModelCloneHelper.js","webpack:///./node_modules/bpmn-js/lib/util/model/ModelCloneUtils.js","webpack:///./node_modules/bpmn-moddle/index.js","webpack:///./node_modules/bpmn-moddle/lib/bpmn-moddle.js","webpack:///./node_modules/bpmn-moddle/lib/simple.js","webpack:///./app/properties-panel/PropertiesView.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css.escape/css.escape.js","webpack:///./node_modules/diagram-js-direct-editing/index.js","webpack:///./node_modules/diagram-js-direct-editing/lib/DirectEditing.js","webpack:///./node_modules/diagram-js-direct-editing/lib/TextBox.js","webpack:///./node_modules/diagram-js/index.js","webpack:///./node_modules/diagram-js/lib/Diagram.js","webpack:///./node_modules/diagram-js/lib/command/CommandInterceptor.js","webpack:///./node_modules/diagram-js/lib/command/CommandStack.js","webpack:///./node_modules/diagram-js/lib/command/index.js","webpack:///./node_modules/diagram-js/lib/core/Canvas.js","webpack:///./node_modules/diagram-js/lib/core/ElementFactory.js","webpack:///./node_modules/diagram-js/lib/core/ElementRegistry.js","webpack:///./node_modules/diagram-js/lib/core/EventBus.js","webpack:///./node_modules/diagram-js/lib/core/GraphicsFactory.js","webpack:///./node_modules/diagram-js/lib/core/index.js","webpack:///./node_modules/diagram-js/lib/draw/BaseRenderer.js","webpack:///./node_modules/diagram-js/lib/draw/DefaultRenderer.js","webpack:///./node_modules/diagram-js/lib/draw/Styles.js","webpack:///./node_modules/diagram-js/lib/draw/index.js","webpack:///./node_modules/diagram-js/lib/features/align-elements/AlignElements.js","webpack:///./node_modules/diagram-js/lib/features/align-elements/index.js","webpack:///./node_modules/diagram-js/lib/features/attach-support/AttachSupport.js","webpack:///./node_modules/diagram-js/lib/features/attach-support/index.js","webpack:///./node_modules/diagram-js/lib/features/auto-resize/AutoResize.js","webpack:///./node_modules/diagram-js/lib/features/auto-resize/AutoResizeProvider.js","webpack:///./node_modules/diagram-js/lib/features/auto-scroll/AutoScroll.js","webpack:///./node_modules/diagram-js/lib/features/auto-scroll/index.js","webpack:///./node_modules/diagram-js/lib/features/bendpoints/BendpointMove.js","webpack:///./node_modules/diagram-js/lib/features/bendpoints/BendpointSnapping.js","webpack:///./node_modules/diagram-js/lib/features/bendpoints/BendpointUtil.js","webpack:///./node_modules/diagram-js/lib/features/bendpoints/Bendpoints.js","webpack:///./node_modules/diagram-js/lib/features/bendpoints/ConnectionSegmentMove.js","webpack:///./node_modules/diagram-js/lib/features/bendpoints/index.js","webpack:///./node_modules/diagram-js/lib/features/change-support/ChangeSupport.js","webpack:///./node_modules/diagram-js/lib/features/change-support/index.js","webpack:///./node_modules/diagram-js/lib/features/clipboard/Clipboard.js","webpack:///./node_modules/diagram-js/lib/features/clipboard/index.js","webpack:///./node_modules/diagram-js/lib/features/connect/Connect.js","webpack:///./node_modules/diagram-js/lib/features/connect/index.js","webpack:///./node_modules/diagram-js/lib/features/context-pad/ContextPad.js","webpack:///./node_modules/diagram-js/lib/features/context-pad/index.js","webpack:///./node_modules/diagram-js/lib/features/copy-paste/CopyPaste.js","webpack:///./node_modules/diagram-js/lib/features/copy-paste/index.js","webpack:///./node_modules/diagram-js/lib/features/create/Create.js","webpack:///./node_modules/diagram-js/lib/features/create/index.js","webpack:///./node_modules/diagram-js/lib/features/distribute-elements/DistributeElements.js","webpack:///./node_modules/diagram-js/lib/features/distribute-elements/index.js","webpack:///./node_modules/diagram-js/lib/features/dragging/Dragging.js","webpack:///./node_modules/diagram-js/lib/features/dragging/HoverFix.js","webpack:///./node_modules/diagram-js/lib/features/dragging/index.js","webpack:///./node_modules/diagram-js/lib/features/editor-actions/EditorActions.js","webpack:///./node_modules/diagram-js/lib/features/editor-actions/index.js","webpack:///./node_modules/diagram-js/lib/features/global-connect/GlobalConnect.js","webpack:///./node_modules/diagram-js/lib/features/global-connect/index.js","webpack:///./node_modules/diagram-js/lib/features/hand-tool/HandTool.js","webpack:///./node_modules/diagram-js/lib/features/hand-tool/index.js","webpack:///./node_modules/diagram-js/lib/features/interaction-events/InteractionEvents.js","webpack:///./node_modules/diagram-js/lib/features/interaction-events/index.js","webpack:///./node_modules/diagram-js/lib/features/keyboard-move-selection/KeyboardMoveSelection.js","webpack:///./node_modules/diagram-js/lib/features/keyboard-move-selection/index.js","webpack:///./node_modules/diagram-js/lib/features/keyboard/Keyboard.js","webpack:///./node_modules/diagram-js/lib/features/keyboard/KeyboardBindings.js","webpack:///./node_modules/diagram-js/lib/features/keyboard/KeyboardUtil.js","webpack:///./node_modules/diagram-js/lib/features/keyboard/index.js","webpack:///./node_modules/diagram-js/lib/features/label-support/LabelSupport.js","webpack:///./node_modules/diagram-js/lib/features/label-support/index.js","webpack:///./node_modules/diagram-js/lib/features/lasso-tool/LassoTool.js","webpack:///./node_modules/diagram-js/lib/features/lasso-tool/index.js","webpack:///./node_modules/diagram-js/lib/features/modeling/Modeling.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/AlignElementsHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/AppendShapeHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/CreateConnectionHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/CreateLabelHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/CreateShapeHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/DeleteConnectionHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/DeleteElementsHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/DeleteShapeHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/DistributeElementsHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/LayoutConnectionHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/MoveConnectionHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/MoveElementsHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/MoveShapeHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/PasteHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/ReconnectConnectionHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/ReplaceShapeHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/ResizeShapeHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/SpaceToolHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/ToggleShapeCollapseHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/UpdateAttachmentHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/UpdateWaypointsHandler.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/helper/AnchorsHelper.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/helper/MoveClosure.js","webpack:///./node_modules/diagram-js/lib/features/modeling/cmd/helper/MoveHelper.js","webpack:///./node_modules/diagram-js/lib/features/mouse-tracking/MouseTracking.js","webpack:///./node_modules/diagram-js/lib/features/mouse-tracking/index.js","webpack:///./node_modules/diagram-js/lib/features/move/Move.js","webpack:///./node_modules/diagram-js/lib/features/move/MovePreview.js","webpack:///./node_modules/diagram-js/lib/features/move/index.js","webpack:///./node_modules/diagram-js/lib/features/ordering/OrderingProvider.js","webpack:///./node_modules/diagram-js/lib/features/outline/Outline.js","webpack:///./node_modules/diagram-js/lib/features/outline/index.js","webpack:///./node_modules/diagram-js/lib/features/overlays/Overlays.js","webpack:///./node_modules/diagram-js/lib/features/overlays/index.js","webpack:///./node_modules/diagram-js/lib/features/palette/Palette.js","webpack:///./node_modules/diagram-js/lib/features/palette/index.js","webpack:///./node_modules/diagram-js/lib/features/popup-menu/PopupMenu.js","webpack:///./node_modules/diagram-js/lib/features/popup-menu/index.js","webpack:///./node_modules/diagram-js/lib/features/preview-support/PreviewSupport.js","webpack:///./node_modules/diagram-js/lib/features/preview-support/index.js","webpack:///./node_modules/diagram-js/lib/features/replace/Replace.js","webpack:///./node_modules/diagram-js/lib/features/replace/index.js","webpack:///./node_modules/diagram-js/lib/features/resize/Resize.js","webpack:///./node_modules/diagram-js/lib/features/resize/ResizeHandles.js","webpack:///./node_modules/diagram-js/lib/features/resize/ResizePreview.js","webpack:///./node_modules/diagram-js/lib/features/resize/ResizeUtil.js","webpack:///./node_modules/diagram-js/lib/features/resize/index.js","webpack:///./node_modules/diagram-js/lib/features/rules/RuleProvider.js","webpack:///./node_modules/diagram-js/lib/features/rules/Rules.js","webpack:///./node_modules/diagram-js/lib/features/rules/index.js","webpack:///./node_modules/diagram-js/lib/features/search-pad/SearchPad.js","webpack:///./node_modules/diagram-js/lib/features/search-pad/index.js","webpack:///./node_modules/diagram-js/lib/features/selection/Selection.js","webpack:///./node_modules/diagram-js/lib/features/selection/SelectionBehavior.js","webpack:///./node_modules/diagram-js/lib/features/selection/SelectionVisuals.js","webpack:///./node_modules/diagram-js/lib/features/selection/index.js","webpack:///./node_modules/diagram-js/lib/features/snapping/SnapContext.js","webpack:///./node_modules/diagram-js/lib/features/snapping/SnapUtil.js","webpack:///./node_modules/diagram-js/lib/features/snapping/Snapping.js","webpack:///./node_modules/diagram-js/lib/features/space-tool/SpaceTool.js","webpack:///./node_modules/diagram-js/lib/features/space-tool/SpaceToolPreview.js","webpack:///./node_modules/diagram-js/lib/features/space-tool/SpaceUtil.js","webpack:///./node_modules/diagram-js/lib/features/space-tool/index.js","webpack:///./node_modules/diagram-js/lib/features/tool-manager/ToolManager.js","webpack:///./node_modules/diagram-js/lib/features/tool-manager/index.js","webpack:///./node_modules/diagram-js/lib/features/tooltips/Tooltips.js","webpack:///./node_modules/diagram-js/lib/features/tooltips/index.js","webpack:///./node_modules/diagram-js/lib/features/touch/TouchFix.js","webpack:///./node_modules/diagram-js/lib/features/touch/TouchInteractionEvents.js","webpack:///./node_modules/diagram-js/lib/features/touch/index.js","webpack:///./node_modules/diagram-js/lib/i18n/translate/index.js","webpack:///./node_modules/diagram-js/lib/i18n/translate/translate.js","webpack:///./node_modules/diagram-js/lib/layout/BaseLayouter.js","webpack:///./node_modules/diagram-js/lib/layout/CroppingConnectionDocking.js","webpack:///./node_modules/diagram-js/lib/layout/LayoutUtil.js","webpack:///./node_modules/diagram-js/lib/layout/ManhattanLayout.js","webpack:///./node_modules/diagram-js/lib/model/index.js","webpack:///./node_modules/diagram-js/lib/navigation/keyboard-move/KeyboardMove.js","webpack:///./node_modules/diagram-js/lib/navigation/keyboard-move/index.js","webpack:///./node_modules/diagram-js/lib/navigation/movecanvas/MoveCanvas.js","webpack:///./node_modules/diagram-js/lib/navigation/movecanvas/index.js","webpack:///./node_modules/diagram-js/lib/navigation/touch/index.js","webpack:///./node_modules/diagram-js/lib/navigation/zoomscroll/ZoomScroll.js","webpack:///./node_modules/diagram-js/lib/navigation/zoomscroll/ZoomUtil.js","webpack:///./node_modules/diagram-js/lib/navigation/zoomscroll/index.js","webpack:///./node_modules/diagram-js/lib/util/AttachUtil.js","webpack:///./node_modules/diagram-js/lib/util/ClickTrap.js","webpack:///./node_modules/diagram-js/lib/util/Collections.js","webpack:///./node_modules/diagram-js/lib/util/CopyPasteUtil.js","webpack:///./node_modules/diagram-js/lib/util/Cursor.js","webpack:///./node_modules/diagram-js/lib/util/Elements.js","webpack:///./node_modules/diagram-js/lib/util/Event.js","webpack:///./node_modules/diagram-js/lib/util/Geometry.js","webpack:///./node_modules/diagram-js/lib/util/GraphicsUtil.js","webpack:///./node_modules/diagram-js/lib/util/IdGenerator.js","webpack:///./node_modules/diagram-js/lib/util/LineIntersection.js","webpack:///./node_modules/diagram-js/lib/util/Math.js","webpack:///./node_modules/diagram-js/lib/util/Mouse.js","webpack:///./node_modules/diagram-js/lib/util/Platform.js","webpack:///./node_modules/diagram-js/lib/util/PositionUtil.js","webpack:///./node_modules/diagram-js/lib/util/Removal.js","webpack:///./node_modules/diagram-js/lib/util/RenderUtil.js","webpack:///./node_modules/diagram-js/lib/util/SvgTransformUtil.js","webpack:///./node_modules/diagram-js/lib/util/Text.js","webpack:///./node_modules/didi/dist/index.esm.js","webpack:///./node_modules/hammerjs/hammer.js","webpack:///./node_modules/hat/index.js","webpack:///./node_modules/ids/index.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/min-dash/dist/index.esm.js","webpack:///./node_modules/min-dom/dist/index.esm.js","webpack:///./node_modules/moddle-xml/index.js","webpack:///./node_modules/moddle-xml/lib/common.js","webpack:///./node_modules/moddle-xml/lib/read.js","webpack:///./node_modules/moddle-xml/lib/write.js","webpack:///./node_modules/moddle/index.js","webpack:///./node_modules/moddle/lib/base.js","webpack:///./node_modules/moddle/lib/descriptor-builder.js","webpack:///./node_modules/moddle/lib/factory.js","webpack:///./node_modules/moddle/lib/moddle.js","webpack:///./node_modules/moddle/lib/ns.js","webpack:///./node_modules/moddle/lib/properties.js","webpack:///./node_modules/moddle/lib/registry.js","webpack:///./node_modules/moddle/lib/types.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/object-refs/index.js","webpack:///./node_modules/object-refs/lib/collection.js","webpack:///./node_modules/object-refs/lib/refs.js","webpack:///./node_modules/path-intersection/intersect.js","webpack:///./node_modules/prop-types/checkPropTypes.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/react-dom/cjs/react-dom.development.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/react/cjs/react.development.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/saxen/dist/index.esm.js","webpack:///./node_modules/scheduler/cjs/scheduler-tracing.development.js","webpack:///./node_modules/scheduler/cjs/scheduler.development.js","webpack:///./node_modules/scheduler/index.js","webpack:///./node_modules/scheduler/tracing.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/tiny-stack/lib/tiny-stack.js","webpack:///./node_modules/tiny-svg/dist/index.esm.js","webpack:///(webpack)/buildin/global.js"],"names":["$modelerContainer","document","querySelector","$propertiesContainer","modeler","Modeler","container","moddleExtensions","custom","customModdleExtension","keyboard","bindTo","body","propertiesPanel","PropertiesPanel","importXML","diagramXML","PropertiesView","Component","constructor","props","state","selectedElements","element","componentDidMount","on","e","setState","newSelection","currentElement","id","render","length","ElementProperties","labelTarget","updateName","name","modeling","get","updateLabel","updateTopic","topic","updateProperties","makeMessageEvent","bpmnReplace","replaceElement","type","businessObject","$type","eventDefinitionType","makeServiceTask","attachTimeout","autoPlace","selection","attrs","position","x","width","y","height","boundaryEvent","createShape","attach","taskShape","append","select","isTimeoutConfigured","attachers","some","hasDefinition","elementFactory","shape","event","target","value","is","definitionType","definitions","eventDefinitions","d","options","ReactDOM"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA,MAAMA,iBAAiB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAA1B;AACA,MAAMC,oBAAoB,GAAGF,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,CAA7B;AAEA,MAAME,OAAO,GAAG,IAAIC,2DAAJ,CAAY;AAC1BC,WAAS,EAAEN,iBADe;AAE1BO,kBAAgB,EAAE;AAChBC,UAAM,EAAEC,gDAAqBA;AADb,GAFQ;AAK1BC,UAAQ,EAAE;AACRC,UAAM,EAAEV,QAAQ,CAACW;AADT;AALgB,CAAZ,CAAhB;AAUA,MAAMC,eAAe,GAAG,IAAIC,yDAAJ,CAAoB;AAC1CR,WAAS,EAAEH,oBAD+B;AAE1CC;AAF0C,CAApB,CAAxB;AAKAA,OAAO,CAACW,SAAR,CAAkBC,oDAAlB,E;;;;;;;;;;;AC1BA,upH;;;;;;;;;;;;;;;;;;;;;;;ACCA,cAAc,mBAAO,CAAC,wJAAkE;;AAExF,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,sGAAmD;;AAExE;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACnBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGe,MAAMC,cAAN,SAA6BC,+CAA7B,CAAuC;AAEpDC,aAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,sBAAgB,EAAE,EADP;AAEXC,aAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,mBAAiB,GAAG;AAElB,UAAM;AACJpB;AADI,QAEF,KAAKgB,KAFT;AAIAhB,WAAO,CAACqB,EAAR,CAAW,mBAAX,EAAiCC,CAAD,IAAO;AAErC,YAAM;AACJH;AADI,UAEF,KAAKF,KAFT;AAIA,WAAKM,QAAL,CAAc;AACZL,wBAAgB,EAAEI,CAAC,CAACE,YADR;AAEZL,eAAO,EAAEG,CAAC,CAACE,YAAF,CAAe,CAAf;AAFG,OAAd;AAID,KAVD;AAaAxB,WAAO,CAACqB,EAAR,CAAW,iBAAX,EAA+BC,CAAD,IAAO;AAEnC,YAAM;AACJH;AADI,UAEFG,CAFJ;AAIA,YAAM;AACJH,eAAO,EAAEM;AADL,UAEF,KAAKR,KAFT;;AAIA,UAAI,CAACQ,cAAL,EAAqB;AACnB;AACD,OAZkC,CAcnC;;;AACA,UAAIN,OAAO,CAACO,EAAR,KAAeD,cAAc,CAACC,EAAlC,EAAsC;AACpC,aAAKH,QAAL,CAAc;AACZJ;AADY,SAAd;AAGD;AAEF,KArBD;AAsBD;;AAEDQ,QAAM,GAAG;AAEP,UAAM;AACJ3B;AADI,QAEF,KAAKgB,KAFT;AAIA,UAAM;AACJE,sBADI;AAEJC;AAFI,QAGF,KAAKF,KAHT;AAKA,WACE,wEAGIC,gBAAgB,CAACU,MAAjB,KAA4B,CAA5B,IACK,2DAAC,iBAAD;AAAmB,aAAO,EAAG5B,OAA7B;AAAuC,aAAO,EAAGmB;AAAjD,MAJT,EAQID,gBAAgB,CAACU,MAAjB,KAA4B,CAA5B,IACK,qGATT,EAaIV,gBAAgB,CAACU,MAAjB,GAA0B,CAA1B,IACK,2GAdT,CADF;AAmBD;;AApFmD;;AAyFtD,SAASC,iBAAT,CAA2Bb,KAA3B,EAAkC;AAEhC,MAAI;AACFG,WADE;AAEFnB;AAFE,MAGAgB,KAHJ;;AAKA,MAAIG,OAAO,CAACW,WAAZ,EAAyB;AACvBX,WAAO,GAAGA,OAAO,CAACW,WAAlB;AACD;;AAED,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,UAAMC,QAAQ,GAAGjC,OAAO,CAACkC,GAAR,CAAY,UAAZ,CAAjB;AAEAD,YAAQ,CAACE,WAAT,CAAqBhB,OAArB,EAA8Ba,IAA9B;AACD;;AAED,WAASI,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,UAAMJ,QAAQ,GAAGjC,OAAO,CAACkC,GAAR,CAAY,UAAZ,CAAjB;AAEAD,YAAQ,CAACK,gBAAT,CAA0BnB,OAA1B,EAAmC;AACjC,sBAAgBkB;AADiB,KAAnC;AAGD;;AAED,WAASE,gBAAT,GAA4B;AAE1B,UAAMC,WAAW,GAAGxC,OAAO,CAACkC,GAAR,CAAY,aAAZ,CAApB;AAEAM,eAAW,CAACC,cAAZ,CAA2BtB,OAA3B,EAAoC;AAClCuB,UAAI,EAAEvB,OAAO,CAACwB,cAAR,CAAuBC,KADK;AAElCC,yBAAmB,EAAE;AAFa,KAApC;AAID;;AAED,WAASC,eAAT,CAAyBd,IAAzB,EAA+B;AAC7B,UAAMQ,WAAW,GAAGxC,OAAO,CAACkC,GAAR,CAAY,aAAZ,CAApB;AAEAM,eAAW,CAACC,cAAZ,CAA2BtB,OAA3B,EAAoC;AAClCuB,UAAI,EAAE;AAD4B,KAApC;AAGD;;AAED,WAASK,aAAT,GAAyB;AACvB,UAAMd,QAAQ,GAAGjC,OAAO,CAACkC,GAAR,CAAY,UAAZ,CAAjB;AACA,UAAMc,SAAS,GAAGhD,OAAO,CAACkC,GAAR,CAAY,WAAZ,CAAlB;AACA,UAAMe,SAAS,GAAGjD,OAAO,CAACkC,GAAR,CAAY,WAAZ,CAAlB;AAEA,UAAMgB,KAAK,GAAG;AACZR,UAAI,EAAE,oBADM;AAEZG,yBAAmB,EAAE;AAFT,KAAd;AAKA,UAAMM,QAAQ,GAAG;AACfC,OAAC,EAAEjC,OAAO,CAACiC,CAAR,GAAYjC,OAAO,CAACkC,KADR;AAEfC,OAAC,EAAEnC,OAAO,CAACmC,CAAR,GAAYnC,OAAO,CAACoC;AAFR,KAAjB;AAKA,UAAMC,aAAa,GAAGvB,QAAQ,CAACwB,WAAT,CAAqBP,KAArB,EAA4BC,QAA5B,EAAsChC,OAAtC,EAA+C;AAAEuC,YAAM,EAAE;AAAV,KAA/C,CAAtB;AAEA,UAAMC,SAAS,GAAGC,MAAM,CAACJ,aAAD,EAAgB;AACtCd,UAAI,EAAE;AADgC,KAAhB,CAAxB;AAIAO,aAAS,CAACY,MAAV,CAAiBF,SAAjB;AACD;;AAED,WAASG,mBAAT,CAA6B3C,OAA7B,EAAsC;AACpC,UAAM4C,SAAS,GAAG5C,OAAO,CAAC4C,SAAR,IAAqB,EAAvC;AAEA,WAAOA,SAAS,CAACC,IAAV,CAAe1C,CAAC,IAAI2C,aAAa,CAAC3C,CAAD,EAAI,2BAAJ,CAAjC,CAAP;AACD;;AAED,WAASsC,MAAT,CAAgBzC,OAAhB,EAAyB+B,KAAzB,EAAgC;AAE9B,UAAMF,SAAS,GAAGhD,OAAO,CAACkC,GAAR,CAAY,WAAZ,CAAlB;AACA,UAAMgC,cAAc,GAAGlE,OAAO,CAACkC,GAAR,CAAY,gBAAZ,CAAvB;AAEA,QAAIiC,KAAK,GAAGD,cAAc,CAACT,WAAf,CAA2BP,KAA3B,CAAZ;AAEA,WAAOF,SAAS,CAACY,MAAV,CAAiBzC,OAAjB,EAA0BgD,KAA1B,CAAP;AACD;;AAAA;AAED,SACE;AAAK,aAAS,EAAC,oBAAf;AAAoC,OAAG,EAAGhD,OAAO,CAACO;AAAlD,KACE,6EACE,+EADF,EAEE,yEAAQP,OAAO,CAACO,EAAhB,CAFF,CADF,EAME,6EACE,iFADF,EAEE;AAAO,SAAK,EAAGP,OAAO,CAACwB,cAAR,CAAuBX,IAAvB,IAA+B,EAA9C;AAAmD,YAAQ,EAAIoC,KAAD,IAAW;AACvErC,gBAAU,CAACqC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD;AAFD,IAFF,CANF,EAcIC,qEAAE,CAACpD,OAAD,EAAU,oBAAV,CAAF,IACE,6EACE,2FADF,EAEE;AAAO,SAAK,EAAGA,OAAO,CAACwB,cAAR,CAAuBT,GAAvB,CAA2B,cAA3B,CAAf;AAA4D,YAAQ,EAAIkC,KAAD,IAAW;AAChFhC,iBAAW,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AAFD,IAFF,CAfN,EAuBE,6EACE,oFADF,EAIIC,qEAAE,CAACpD,OAAD,EAAU,WAAV,CAAF,IAA4B,CAACoD,qEAAE,CAACpD,OAAD,EAAU,kBAAV,CAA/B,IACE;AAAQ,WAAO,EAAG2B;AAAlB,yBALN,EASIyB,qEAAE,CAACpD,OAAD,EAAU,YAAV,CAAF,IAA6B,CAAC8C,aAAa,CAAC9C,OAAD,EAAU,6BAAV,CAA3C,IACE;AAAQ,WAAO,EAAGoB;AAAlB,0BAVN,EAcIgC,qEAAE,CAACpD,OAAD,EAAU,WAAV,CAAF,IAA4B,CAAC2C,mBAAmB,CAAC3C,OAAD,CAAhD,IACE;AAAQ,WAAO,EAAG4B;AAAlB,sBAfN,CAvBF,CADF;AA4CD,C,CAGD;;;AAEA,SAASkB,aAAT,CAAuBG,KAAvB,EAA8BI,cAA9B,EAA8C;AAE5C,QAAMC,WAAW,GAAGL,KAAK,CAACzB,cAAN,CAAqB+B,gBAArB,IAAyC,EAA7D;AAEA,SAAOD,WAAW,CAACT,IAAZ,CAAiBW,CAAC,IAAIJ,qEAAE,CAACI,CAAD,EAAIH,cAAJ,CAAxB,CAAP;AACD,C;;;;;;;;;;;;ACzOD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGe,MAAM9D,eAAN,CAAsB;AAEnCK,aAAW,CAAC6D,OAAD,EAAU;AAEnB,UAAM;AACJ5E,aADI;AAEJE;AAFI,QAGF0E,OAHJ;AAKAC,oDAAQ,CAAClD,MAAT,CACE,2DAAC,uDAAD;AAAgB,aAAO,EAAG3B;AAA1B,MADF,EAEEE,SAFF;AAID;;AAbkC,C;;;;;;;;;;;;ACNrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;;AAEV;;AAEQ;;AAEkB;;AAEyB;AACL;AACV;AACU;;AAEK;AACrB;AACE;AACa;AACD;AACZ;AACF;AACkB;AACV;AACX;AACyC;AAChC;AACT;AACK;AACP;AACe;AACJ;AACT;AACJ;;;AAG7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAyC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uCAAuC;AACzE;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B;AACe;AACf,EAAE,+CAAM;;AAER;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA,+CAAQ,UAAU,+CAAM;;AAExB,iBAAiB,+CAAM;AACvB,0BAA0B,wDAAe;;AAEzC;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,eAAe,+CAAM;;AAErB;AACA;AACA;AACA,mBAAmB,0CAAG;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,+EAAkB;AACpB,EAAE,4EAAgB;AAClB,EAAE,uEAAW;AACb,EAAE,4EAAgB;AAClB;;AAEA;AACA;AACA,EAAE,8EAAmB;AACrB,EAAE,4DAAe;AACjB,EAAE,4EAAgB;AAClB,EAAE,8DAAgB;AAClB,EAAE,2EAAgB;AAClB,EAAE,8DAAgB;AAClB,EAAE,6DAAe;AACjB,EAAE,sEAAwB;AAC1B,EAAE,iEAAmB;AACrB,EAAE,2DAAc;AAChB,EAAE,wFAA2B;AAC7B,EAAE,gEAAkB;AACpB,EAAE,2DAAc;AAChB,EAAE,qEAAU;AACZ,EAAE,0DAAa;AACf,EAAE,kEAAoB;AACtB,EAAE,uEAAY;AACd,EAAE,2DAAc;AAChB,EAAE,yDAAY;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;;AAEF;;AAE2C;AACL;AACA;;AAEpE;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACe;AACf,EAAE,+CAAM;AACR;;AAEA,+CAAQ,kBAAkB,+CAAM;;AAEhC;AACA,EAAE,+EAAkB;AACpB,EAAE,4EAAgB;AAClB,EAAE,4EAAgB;AAClB;;AAEA;AACA;AACA,gD;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKkB;;AAMD;;AAIC;;AAEe;AACI;;AAEL;;AAIL;;AAEK;AAC4B;AACI;AACF;;;AAG9D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,gBAAgB,yDAAQ;AACxB;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB,KAAK,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B;AACe;;AAEf,YAAY,uDAAM,GAAG;;AAErB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,+CAAQ,SAAS,kDAAO;;;AAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,0CAA0C,WAAW;;AAErD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA,iCAAiC,sCAAsC;;AAEvE;AACA;;AAEA;AACA;;AAEA,iCAAiC,oCAAoC;;AAErE;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,mBAAmB,qDAAQ;;AAE3B,mBAAmB,yDAAQ;AAC3B,qCAAqC,yDAAQ;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,WAAW,SAAS;AACpB;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,SAAS,0EAAiB;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,kDAAO;;AAET;AACA,EAAE,sDAAS;AACX;;AAEA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qDAAQ;AACzB;;AAEA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uDAAM,CAAC,qDAAI;AAClC,YAAY,uDAAM,GAAG,mBAAmB,uBAAuB;AAC/D;AACA,GAAG;;AAEH;AACA,EAAE,kDAAO;;AAET;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,sDAAM;;AAExB,EAAE,uDAAM;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,sBAAsB,uDAAM,GAAG;;AAE/B,aAAa,mDAAU;AACvB;;AAEA;AACA;AACA,EAAE,6CAAU;AACZ,EAAE,qEAAe;AACjB,EAAE,yEAAe;AACjB,EAAE,yEAAc;AAChB;;AAEA;AACA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ACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP,qBAAqB,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sEAAc;AAChC,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,sEAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,sEAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,sEAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,sEAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP,MAAM,mFAAM;;AAEZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,8BAA8B,sEAAc;;AAE5C;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AAET,4BAA4B;;AAE5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,oEAAY;AAC1B;AACA,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP,qBAAqB,mEAAW;;AAEhC,UAAU,oEAAY;AACtB;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA,iEAAiE,iBAAiB;;AAElF;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,oEAAY;AAC1B;AACA,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA,qBAAqB,mEAAW;AAChC;;AAEA;AACA;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAM,GAAG;AAChC;AACA,OAAO;;AAEP;AACA,uBAAuB,uDAAM,GAAG;AAChC;AACA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA,qBAAqB,mEAAW;AAChC,eAAe,6DAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sEAAc;AAChC;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP,iBAAiB,mEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,gBAAgB,sEAAc;AAC9B;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;;AAEP;AACA;AACA,MAAM,sFAAS;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,oEAAY;AAC1B,gBAAgB,sEAAc;AAC9B;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,cAAc,sEAAc;AAC5B,gBAAgB,sEAAc;AAC9B,OAAO;AACP;AACA;;AAEA;AACA,cAAc,mEAAW;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;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A;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG,MAAM,KAAK,IAAI,KAAK,SAAS,KAAK,MAAM,KAAK,EAAE,KAAK,IAAI,KAAK,GAAG,KAAK;AAC1F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;AACA,KAAK;AACL;AACA,aAAa,GAAG,EAAE,GAAG;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;;;AAGA;AACA,+BAA+B,6CAA6C;AAC5E;AACA;;AAEA;AACA,8BAA8B,2CAA2C;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,IAAI,KAAK;AAC7B,kFAAkF;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACzdA;AAAA;AAAA;AAAA;AAAkC;;AAEc;;AAEhD;AACA;;AAEA;;;AAGe;;AAEf,qBAAqB,uDAAM;AAC3B;AACA;AACA;AACA;AACA,GAAG,qCAAqC;;AAExC;;AAEA,sBAAsB,uDAAM,GAAG;AAC/B;AACA,GAAG,sCAAsC;;AAEzC,qBAAqB,gEAAQ;AAC7B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,cAAc,WAAW;AACzB;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,E;;;;;;;;;;;;ACnHA;AAAA;AAAA;AAAA;AAA0C;AACA;;AAEV;;AAEjB;AACf;AACA,0BAA0B,qDAAY;AACtC,0BAA0B,qDAAY;AACtC,qBAAqB,gDAAO;AAC5B,CAAC,EAAC;;;;;;;;;;;;;ACVF;AAAA;AAAA;AAAA;AAAA;AAA0C;AACY;;AAO7B;;;AAGzB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACe;;AAEf;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,gBAAgB;AAC7B;AACA,cAAc,gBAAgB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;;AAEA,MAAM,0DAAE;AACR,WAAW,gFAAyB;AACpC;;AAEA,MAAM,yEAAK;AACX,WAAW,6EAAsB;AACjC;;AAEA,MAAM,0DAAE;AACR,WAAW,0EAAmB;AAC9B;;AAEA,SAAS,yEAAkB;AAC3B;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB;AACe;;AAEf;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;AAMA;;AAKxB;;AAElB;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACO;;AAEP,mBAAmB,+EAAM;AACzB,kBAAkB,+EAAM;;AAExB;;AAEA;AACA;AACA;;AAEA,MAAM,0DAAE;AACR,kBAAkB,uFAAc;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA,YAAY,OAAO;AACnB;AACO;;AAEP,mBAAmB,+EAAM;;AAEzB;AACA;AACA,WAAW,0DAAE;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+EAAM;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+EAAM;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAM;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,IAAI;;AAEP;AACA;AACA,4BAA4B,OAAO,eAAe,EAAE;AACpD,yBAAyB,uDAAM;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG,GAAG,EAAE;;;AAGR;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACO;;AAEP,mBAAmB,+EAAM;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACO;;AAEP,mBAAmB,+EAAM;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACO;;AAEP,mBAAmB,+EAAM;;AAEzB,kBAAkB,+EAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,qDAAI;;AAEb;AACA;AACA;;AAEA,sBAAsB,uFAAc;;AAEpC;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,C;;;;;;;;;;;;AClZA;AAAA;AAAA;AAAoC;AACkC;;AAEvD;AACf;AACA,uBAAuB,kDAAS;AAChC,wCAAwC,mEAA0B;AAClE,CAAC,E;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;AAExC;;AAEU;;;AAG1C;AACA;AACA;AACA;AACe;;AAEf,kBAAkB,sFAAU;AAC5B;;AAEA;AACA;AACA;;AAEA,+CAAQ,iBAAiB,sFAAU;;;AAGnC;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,OAAO;AACnB;AACA;;AAEA,MAAM,0DAAE;AACR;AACA,GAAG;AACH;AACA;AACA,E;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;AAEV;;AAEG;;AAEqD;;;AAGxF;AACA;AACA;AACe;AACf,EAAE,8FAAkB;;AAEpB;AACA;;AAEA,+CAAQ,yBAAyB,8FAAkB;;AAEnD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;;AAEA,OAAO,0DAAE,iCAAiC,0DAAE,2BAA2B,0DAAE;AACzE;AACA;;AAEA;;AAEA,EAAE,wDAAO;;AAET,QAAQ,0DAAE;AACV;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAA8C;AACgB;;;AAG/C;AACf;AACA;AACA;AACA;AACA,4BAA4B,uDAAc;AAC1C,oCAAoC,+DAAsB;AAC1D,CAAC,EAAC;;;;;;;;;;;;;ACXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkB;;AAIY;;AAKH;;AAIY;;AAIJ;;AAIA;;;AAGnC;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,oFAAkB;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA,iCAAiC,KAAK,IAAI,mCAAmC;AAC7E;;AAEA;;AAEA,6CAA6C,uDAAM,EAAE,aAAa;AAClE;AACA;;;AAGA;AACA,6CAA6C,uDAAM,EAAE,aAAa;;AAElE;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,MAAM,yEAAK,yDAAyD,+DAAU;;AAE9E,qBAAqB,6EAAa;;AAElC,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,QAAQ,uDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,QAAQ,uDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,MAAM,0DAAE;;AAER,QAAQ,0DAAE;;AAEV,MAAM,uDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA,MAAM,uDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL,SAAS,0DAAE;AACX;AACA;AACA,SAAS,sEAAiB;;AAE1B,MAAM,uDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,uDAAM;AACjC,uBAAuB;AACvB,aAAa;;AAEb;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,yEAAK;AACX;AACA;AACA;AACA;AACA;;AAEA,IAAI,uDAAM;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,yEAAK;AACX,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,wDAAwD,wBAAwB;;AAEhF,MAAM,wDAAO;AACb;AACA;AACA;;AAEA;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE,wDAAO;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;AC/aA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACO;AACH;AACJ;AACF;AACd;;AAEU;;AAEvC;AACf;AACA,IAAI,iEAAmB;AACvB,IAAI,2EAAgB;AACpB,IAAI,yEAAe;AACnB,IAAI,uEAAa;AACjB,IAAI,sEAAY;AAChB,IAAI,mDAAe;AACnB;AACA;AACA,gCAAgC,2DAAkB;AAClD,CAAC,E;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAG8B;;AAEmC;;AAKvB;;AAKxB;;AAElB;AACA,EAAE,wDAAO;AACT;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,EAAE,wDAAO;AACT;AACA;AACA;AACA,GAAG;AACH;;AAEe;AACf;AACA;;AAEA,mBAAmB,oEAAgB;;AAEnC;AACA,wDAAwD,yEAAiB;;AAEzE;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,iFAAa;;AAElC,iBAAiB,uDAAM;AACvB,aAAa,8EAAkB;AAC/B,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA,QAAQ,0DAAE;AACV,0BAA0B,0DAAE;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,0DAAE;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAiE;;AAErB;;AAE7B;AACf;AACA,IAAI,0EAAe;AACnB;AACA;AACA,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;ACVF;AAAA;AAAA;AAAA;AAEkB;;AAIqB;;;AAGvC;AACA;AACA;AACA;AACe;;AAEf;AACA,WAAW,uDAAM;AACjB,6BAA6B,yEAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,0D;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAmF;;AAErB;;;AAG/C;AACf;AACA,IAAI,mFAAwB;AAC5B;AACA;AACA,oCAAoC,+DAAsB;AAC1D,CAAC,EAAC;;;;;;;;;;;;;ACXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;;AAEiD;;AAE/C;;AAEQ;;AAIJ;;;AAGtC;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;AACf,kBAAkB,4FAAa;AAC/B;;AAEA,+CAAQ,oBAAoB,4FAAa;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;;AAEA,EAAE,4FAAa;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,uDAAM;AACnC,kBAAkB,0DAAE;AACpB,SAAS;;AAET;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU,0DAAE;AACZ;AACA,iBAAiB,0DAAE;AACnB,SAAS;AACT,OAAO;AACP;AACA,6CAA6C,0DAAE;AAC/C,SAAS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ACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA,aAAa,2DAAQ;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,uDAAM;;AAER;;AAEA;AACA;AACA,IAAI,yEAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAM;AACV;AACA,KAAK;AACL;;AAEA;AACA,MAAM,uEAAe;AACrB,IAAI,uDAAM;AACV;AACA,KAAK;AACL;;AAEA;AACA,MAAM,0DAAE;AACR,IAAI,uDAAM;AACV;AACA;AACA,KAAK;AACL;;AAEA,EAAE,uDAAM;AACR;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,0DAAE;;AAER,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA,KAAK;;AAEL,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,MAAM,yEAAK;AACX;AACA;;AAEA,IAAI,uDAAM;AACV;AACA;AACA,KAAK;;AAEL,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,IAAI,uDAAM;AACV;AACA;AACA,KAAK;;AAEL,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA,KAAK;;AAEL,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,MAAM,uEAAe;AACrB,UAAU,wEAAgB;AAC1B,UAAU,+DAAO;;AAEjB,2BAA2B,2EAAmB;;AAE9C;AACA;AACA;AACA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A;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,+EAAM;AACxB,kBAAkB,+EAAM;AACxB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0BAA0B,uFAAc;AACxC;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;;;;;AC/VA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGkB;;AAEc;;AAKS;;AAIX;;AAKA;;AAE6C;;AAE3E;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA,EAAE,iFAAkB;;AAEpB;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;;AAIH;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,wDAAO;AACX,UAAU,0DAAE;AACZ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA,SAAS,0DAAE;AACX;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oBAAoB,WAAW,uBAAuB,EAAE;AACxD;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAiB;AAC1C,oBAAoB,yEAAiB;AACrC,oBAAoB,yEAAiB;AACrC,oBAAoB,yEAAiB;AACrC,oBAAoB,yEAAiB;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,0DAAE;AACZ,UAAU,0DAAE;AACZ,UAAU,0DAAE;AACZ,UAAU,0DAAE;AACZ;AACA;AACA;;AAEA;AACA;AACA,QAAQ,0DAAE;AACV,QAAQ,0DAAE;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU,0DAAE;AACZ,UAAU,0DAAE;AACZ,UAAU,0DAAE;AACZ,UAAU,0DAAE;AACZ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAiB;AAC1C,oBAAoB,yEAAiB;;AAErC;AACA;AACA,UAAU,0DAAE,wCAAwC,0DAAE;AACtD,UAAU,0DAAE;AACZ;AACA;AACA;;AAEA;AACA,uCAAuC,0DAAE;AACzC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAAQ,cAAc,iFAAkB;;AAExC;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,0DAAK;AAC9B;AACA;;AAEA;AACA,MAAM,0DAAE;AACR;AACA,MAAM,0DAAE;AACR;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAM,0DAAE;AACR;AACA;;AAEA,MAAM,0DAAE;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,MAAM,0DAAE;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA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AAW;AACX,YAAY;AACZ;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,WAAW,MAAM;AACjB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,YAAY;AACZ;AACA;;AAEA;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,aAAa,MAAM,GAAG,MAAM;AAC5B,YAAY,MAAM;AAClB;AACO;;AAEP;;AAEA;AACA,YAAY;;AAEZ;AACA;;AAEA,UAAU;AACV;;;AAGA;AACA;AACA;AACA,WAAW;AACX,aAAa,MAAM,GAAG,MAAM;AAC5B,YAAY,MAAM;AAClB;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,YAAY,MAAM;AAClB;AACO;;AAEP;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;;;;;ACvHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIyB;;AAIK;;AAIY;;;AAGnC;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB;AACA,YAAY,MAAM;AAClB;AACO;;AAEP;AACA;;AAEA;;AAEA;AACA,mBAAmB,yEAAa;AAChC;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAY;AACnC;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,SAAS,mFAAU;AACnB;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;;AAEA,yBAAyB,4EAAqB;AAC9C,yBAAyB,4EAAqB;;AAE9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+DAAQ;AACnB,WAAW,+DAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,4EAAqB;AACpC,qBAAqB,4EAAqB;;AAE1C;AACA;;;;;;;;;;;;;AC7NA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;;AAEtC;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,aAAa;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpOA;AAAA;AAAA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,YAAY;AACZ;AACe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAEkB;;AAIoB;;AAMZ;;;AAG1B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,mEAAY;;AAE9B;AACA;;AAEA,2BAA2B,oEAAa;;AAExC;AACA;AACA,0BAA0B,oBAAoB;AAC9C,mBAAmB,+DAAgB;AACnC;AACA,2BAA2B,+DAAgB;AAC3C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,EAAE,gFAAW;AACb;;AAEA;AACA;AACA;;AAEA,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;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+CAAQ,uBAAuB,yFAAgB,E;;;;;;;;;;;;ACxK/C;AAAA;AAAA;AAAsD;;AAEI;;AAE3C;AACf;AACA,IAAI,qEAAS;AACb;AACA;AACA,kCAAkC,6DAAoB;AACtD,CAAC,E;;;;;;;;;;;;ACVD;AAAA;AAAA;AAEkB;;;AAGlB;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C,uDAAM,EAAE,aAAa;;AAElE;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yCAAyC,KAAK,IAAI,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACF;AACO;AACA;AACF;AACU;AACn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AACA,4EAA4E,WAAW;;AAEvF,8CAA8C,2CAA2C;AACzF,SAAS;AACT;AACA;AACA;AACA;AACA,UAAU,0DAAE;AACZ;AACA,8CAA8C,iCAAiC;AAC/E,SAAS;AACT;AACA;AACA,WAAW,0DAAE;AACb,WAAW,0DAAE;AACb,WAAW,0DAAE;AACb,WAAW,0DAAE;AACb;;AAEA;AACA,qDAAqD,qBAAqB;AAC1E,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,cAAc;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,2CAA2C;AACzF;;AAEA,uBAAuB,yEAAiB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,uBAAuB,yEAAiB;;AAExC,gBAAgB,0DAAE;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0BAA0B;AAClE,OAAO;AACP,wCAAwC,+BAA+B;AACvE;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC5eA;AAAA;AAAA;AAAA;AAAiE;AAC1B;;AAEiB;;;AAGzC;AACf;AACA,IAAI,0EAAe;AACnB,IAAI,gDAAa;AACjB;AACA;AACA,i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A;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,SAAS,0DAAE;AACX;;AAEA;;AAEA,WAAW,yEAAiB;;AAE5B;AACA,WAAW,0DAAE;AACb,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;;;;;ACvQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B;AAC1B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChxBA;AAAA;AAAA;AAAA;AAAgE;AACJ;;AAEpB;;AAEzB;AACf;AACA,IAAI,yEAAe;AACnB,IAAI,uEAAa;AACjB;AACA,yBAAyB,oDAAW;AACpC,CAAC,EAAC;;;;;;;;;;;;;ACXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKkB;;AAEc;;AAKF;;AAIS;;AAIT;;AASH;;AAE2C;;AAIhC;;;AA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AAW,0DAAE,gCAAgC,0DAAE;AAC/C;;AAEA,MAAM,0DAAE;AACR;AACA;;AAEA;AACA;AACA,MAAM,0DAAE,kCAAkC,0DAAE;AAC5C,QAAQ,0DAAE;AACV,aAAa,+DAAU;AACvB;;AAEA,WAAW,yEAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA,MAAM,yEAAK;AACX,WAAW,yEAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,0DAAE;AACR,WAAW,0DAAE;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,0DAAE;AACR,WAAW,sDAAK;AAChB;AACA,KAAK;AACL;;AAEA,MAAM,0DAAE;AACR,mBAAmB,qDAAI;AACvB;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,MAAM,0DAAE,iCAAiC,+DAAU;AACnD;AACA;;AAEA,MAAM,0DAAE;AACR,WAAW,+DAAU;AACrB;;AAEA,SAAS,yEAAK;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,+DAAO,aAAa,0DAAE;AAChC;;AAEA;AACA,SAAS,0DAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAAE;AACX;;AAEA;AACA;AACA,IAAI,0DAAE;AACN,IAAI,qDAAI;AACR,aAAa,0DAAE;AACf,KAAK;AACL;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM,+DAAO;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,sEAAiB;AACvB;AACA;;AAEA;AACA,OAAO,0DAAE;AACT;AACA;;AAEA;AACA,mBAAmB,wFAAoB;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,MAAM;AACN;AACA,MAAM;AACN;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;;AAET,SAAS,sEAAiB;;AAE1B,UAAU,0DAAE;AACZ;AACA;;AAEA;AACA;AACA,aAAa,mEAAc;AAC3B;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,YAAY,4EAAuB;AACnC,YAAY,iFAA4B;AACxC,YAAY,iFAA4B;AACxC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,SAAS,0DAAE;AACX;AACA;;AAEA,YAAY,0DAAE;AACd;AACA;AACA;AACA,WAAW;AACX;;AAEA,YAAY,0DAAE;AACd;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA,MAAM,qDAAI;AACV;AACA;;AAEA;AACA,MAAM,qDAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAM,+DAAO;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,0DAAE;AACR;AACA,MAAM,+DAAU;AAChB;AACA;AACA;AACA;;AAEA,MAAM,0DAAE;AACR;AACA;;AAEA,MAAM,0DAAE;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,0DAAE;AACb;;;AAGA;;AAEA,MAAM,yEAAK;AACX,MAAM,yEAAK;AACX,YAAY;AACZ;;AAEA,MAAM,yEAAK;AACX,MAAM,yEAAK;AACX,YAAY;AACZ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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AAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,8EAAsB;;AAEjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,gCAAgC,SAAS,EAAE,KAAK;AAChD,gBAAgB,6DAAe;AAC/B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkB;;AAEa;;AAIf;;AAEhB,iBAAiB,kDAAI;AACrB,GAAG,wCAAwC;AAC3C,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS,qDAAI;AACb;AACA,GAAG;AACH;;;AAGe;;AAEf;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,qCAAqC,QAAQ,IAAI,UAAU,6DAAe,WAAW;AACrF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,2BAA2B,6BAA6B;;AAExD,iDAAiD,QAAQ,IAAI,UAAU,6DAAe,WAAW;AACjG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D,qBAAqB,6DAAe;AACpC,WAAW;AACX,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,iDAAiD,QAAQ;AACzD,mBAAmB,6DAAe;AAClC,SAAS;AACT,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,wDAAO;AACX;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,cAAc;AAC3B;AACA,cAAc,MAAM;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B,SAAS,UAAU,6DAAe;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,wDAAwD,MAAM,KAAK,YAAY;AAC/E,mBAAmB,6DAAe;AAClC,yBAAyB,6DAAe;AACxC,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,KAAK;AACL;AACA,gDAAgD,MAAM,GAAG,YAAY;AACrE,iBAAiB,6DAAe;AAChC,uBAAuB,6DAAe;AACtC,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB,uDAAM;AAC1B;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,wDAAO;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,IAAI,wDAAO;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI,wDAAO;AACX,IAAI,wDAAO;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wDAAO;AACb,MAAM,wDAAO;AACb,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,wDAAO;AACX;;AAEA;AACA,IAAI,wDAAO;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,wDAAO;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,+CAA+C,QAAQ,aAAa,QAAQ;AAC5E,qBAAqB,6DAAe;AACpC,gCAAgC,6DAAe;AAC/C,WAAW;AACX,WAAW;AACX;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,wDAAO;;AAEX;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,IAAI,wDAAO;AACX;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC/cA;AAAA;AAAA;AAA8C;;;AAG9C;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B,YAAY,SAAS;AACrB;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,uBAAuB,qCAAqC;AAC5D;AACA;;AAEA,qBAAqB,uDAAc;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,2BAA2B;;AAErE;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACrEA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAsD;;AAEZ;;AAE3B;AACf;AACA,IAAI,qEAAS;AACb;AACA,0BAA0B,qDAAY;AACtC,CAAC,E;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGqB;;AAIH;;;AAGX;;AAEP,MAAM,qDAAE;AACR;AACA;;AAEA,MAAM,qDAAE;AACR,aAAa,oEAAiB;AAC9B;;AAEA,MAAM,qDAAE;AACR,aAAa,oEAAiB;AAC9B;;AAEA;AACA;;AAEO;AACP,oBAAoB,oEAAiB;AACrC;;AAEO;AACP,sBAAsB,oEAAiB;AACvC;;AAEO;AACP,WAAW,oEAAiB;AAC5B;;AAEA;AACA,IAAI,wDAAO;AACX,UAAU,qDAAE;AACZ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEkB;;AAEe;;;AAG1B;AACP;AACA;AACA;;AAEO;;;AAGP;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACO;AACP,SAAS,qDAAE;AACX,SAAS,qDAAE;AACX,SAAS,qDAAE;AACX,SAAS,qDAAE;AACX,SAAS,qDAAE;AACX,SAAS,qDAAE;AACX;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,MAAM;AAClB;AACO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,UAAU;AACV;;;AAGA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,MAAM;AAClB;AACO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;;AAEP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,eAAe;AAC1B;AACO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA,SAAS,uDAAM;AACf;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA,YAAY;AACZ;AACO;AACP;AACA,C;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAKiB;;;AAGjB;AACA;;AAEA;;AAEO;;AAEP;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEO;;AAEP;AACA,eAAe,sDAAM;;AAErB,IAAI,gDAAW;AACf;AACA,KAAK;AACL;;AAEA;AACA,C;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAMkB;;AAIS;;;AAG3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,qDAAI;AACb;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,uDAAM;AACrB;AACA,GAAG;;AAEH,EAAE,wDAAO;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;A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AC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;;;;ACpFA;AACA,CAAC;AACD;AACA,KAAK,IAA0B;AAC/B;AACA;AACA,EAAE,MAAM,EAMN;AACF,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;ACzGD;AAAA;AAAA;AAAiF;;AAEjC;;AAEjC;AACf;AACA,IAAI,kFAAuB;AAC3B;AACA;AACA,2BAA2B,0DAAa;AACxC,CAAC,E;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAGkB;;AAEc;;;AAGhC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;;AAEf;;AAEA;AACA,sBAAsB,gDAAO;AAC7B;AACA,gBAAgB,qDAAI;AACpB,mBAAmB,qDAAI;AACvB,GAAG;AACH;;AAEA;;;AAGA;AACA;;AAEA,WAAW,OAAO;AAClB,oDAAoD,UAAU,qBAAqB,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,4DAA4D,uBAAuB;AACnF;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,qDAAI;AACrB;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,E;;;;;;;;;;;;ACpLA;AAAA;AAAA;AAAA;AAIkB;;AAOD;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACe;AACf;;AAEA,gBAAgB,sDAAM;AACtB;AACA;AACA;AACA;;AAEA,iBAAiB,qDAAQ;;AAEzB;AACA;;AAEA,oBAAoB,qDAAI;AACxB,qBAAqB,qDAAI;AACzB;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,oBAAoB,qDAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB,qDAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,EAAE,6CAAQ;AACV,EAAE,6CAAQ;AACV,EAAE,6CAAQ;;AAEV;AACA,IAAI,6CAAQ;AACZ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU,sDAAS;AACnB;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,sDAAM;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,MAAM,6CAAQ;AACd,MAAM,6CAAQ;AACd;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA,MAAM,6CAAQ;AACd,MAAM,6CAAQ;AACd;;AAEA,IAAI,6CAAQ;AACZ;;AAEA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,6CAAQ;AACV,EAAE,6CAAQ;AACV,EAAE,6CAAQ;AACV,EAAE,6CAAQ;;AAEV;AACA;;AAEA,IAAI,sDAAS;AACb;;AAEA,EAAE,sDAAS;AACX;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5bA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAgC;;AAEA;;;AAGhC;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA,YAAY,cAAc;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,qBAAqB,6CAAQ;;AAE7B;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gCAAgC,6CAAU;;AAE1C;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,sBAAsB,eAAe;AACrC,IAAI;AACJ;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,mBAAmB;AAC9B,WAAW,cAAc;AACzB;AACe;;AAEf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD,MAAM;AACN;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzMA;AAAA;AAAA;AAMkB;;;AAGlB;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA;;AAEA,MAAM,2DAAU,UAAU,yDAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,2DAAU;AAChB;AACA;AACA;AACA;AACA;;AAEA,MAAM,yDAAQ;AACd;AACA;AACA;;AAEA,OAAO,2DAAU;AACjB;AACA;;AAEA,OAAO,wDAAO;AACd;AACA;;AAEA;;AAEA,EAAE,wDAAO;AACT;AACA,wEAAwE,UAAU,EAAE;;AAEpF;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAO;;AAEP;AACA,MAAM;AACN;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB;AACA;;AAEA,QAAQ,2DAAU,YAAY,yDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;AC9ID;AAAA;AAAA;AAGkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA,6BAA6B,kCAAkC;AAC/D,IAAI,iCAAiC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,UAAU;AAC3D,kBAAkB,YAAY,EAAE,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,QAAQ,iCAAiC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACe;;AAEf;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA,gBAAgB;;AAEhB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS,sBAAsB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,aAAa,mBAAmB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C,WAAW,yDAAQ,eAAe;;AAE/E;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,wDAAO;;AAEpB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvfA;AAAA;AAA0C;;AAE3B;AACf,0BAA0B,qDAAY;AACtC,CAAC,EAAC;;;;;;;;;;;;;ACJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAQkB;;AAKW;;AAIH;;AAQR;;AAEsC;;;AAGxD;AACA;AACA;;AAEA;AACA,SAAS,yDAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,YAAY;AACxB;AACA;;AAEA,YAAY,uDAAM,GAAG,GAAG,gCAAgC;;AAExD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA,cAAc,uDAAS;AACvB,EAAE,wDAAU;;AAEZ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACe;;AAEf;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc,WAAW,eAAe;AACvF;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,uDAAS;AACjC,EAAE,qDAAO,OAAO,gCAAgC;;AAEhD,EAAE,uDAAS;;AAEX;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B,yDAAQ,CAAC,qDAAI;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,WAAW;AAC7B,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,eAAe,8DAAO;;AAEtB;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,OAAO,wBAAwB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,uDAAM;AACzB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA;AACA;AACA,QAAQ,wDAAU;AAClB,OAAO;AACP,QAAQ,wDAAU;AAClB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,kBAAkB;AAClC,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA,gDAAgD,mEAAmE;AACnH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,wDAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,qCAAqC;AAC9D;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,uBAAuB;AACzD,mCAAmC,uBAAuB;;AAE1D;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,mBAAmB;;AAElD;;AAEA,iCAAiC,6BAA6B;AAC9D;;AAEA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc,sDAAK;AACnB;AACA,GAAG;;AAEH;AACA;AACA,oBAAoB,mCAAmC;AACvD;AACA;;AAEA;AACA,EAAE,6DAAa;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAK;AACb,QAAQ,KAAK;AACb;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,gCAAgC,mCAAmC;;AAEnE;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,kCAAkC,6BAA6B;;AAE/D;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,mBAAmB;;AAEtD;;AAEA;AACA,EAAE,gEAAgB;AAClB;;AAEA,oCAAoC,mBAAmB;;AAEvD;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,gBAAgB;AAChC,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,gBAAgB;AAChC,gBAAgB,OAAO;AACvB;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA,YAAY,qBAAqB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,qBAAqB;AACrC,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,qBAAqB;AACrC,gBAAgB,OAAO;AACvB;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA,iDAAiD,0BAA0B;AAC3E;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,0DAAY;AAC5B,4CAA4C,6DAAY;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,0DAAY;AAClB,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,uDAAM,EAAE,eAAe,aAAa;;AAElD;;AAEA;AACA,KAAK;AACL;;AAEA,UAAU;AACV;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,WAAW,aAAa,+BAA+B,cAAc;AACrE;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAkB,uDAAM;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AChiCA;AAAA;AAAA;AAAA;AAEkB;;AAEgB;;AAElC;AACA;AACA;AACe;AACf;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;AACA;;AAEA,UAAU,uDAAM,GAAG,aAAa;;AAEhC;AACA;AACA;;AAEA,SAAS,qDAAM;AACf,E;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;;AAE2C;;;AAG3C;AACA;AACA;AACA;AACA;AACe;AACf;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAE,qDAAO;;AAET;AACA,IAAI,qDAAO;AACX;;AAEA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,qDAAO;;AAEX;AACA,MAAM,qDAAO;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,mBAAmB,qDAAO;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,UAAU,EAAE;AAC9C;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,kDAAkD;AAClD;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5MA;AAAA;AAAA;AAMkB;;AAElB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB,MAAM;AACvD,oCAAoC,mBAAmB;AACvD,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACe;AACf;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;;AAEA,WAAW,wDAAO;;AAElB,MAAM,2DAAU;AAChB;AACA;AACA;AACA;;AAEA,OAAO,yDAAQ;AACf;AACA;;AAEA;;AAEA;AACA,qBAAqB,qDAAI;;AAEzB;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA,MAAM,2DAAU;AAChB;AACA;AACA;AACA;;AAEA,OAAO,yDAAQ;AACf;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,0BAA0B,WAAW;AACrC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,SAAS;AACpB;AACA;;AAEA,WAAW,wDAAO;;AAElB;;AAEA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,cAAc;AAC9B;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,6BAA6B,eAAe;AAC5C;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,WAAW;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,uDAAM,iBAAiB;AACzB;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,cAAc;AACzB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;;;;AC7fA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGkB;;AAKY;;AAEuB;;AAET;;AAQ1B;;;AAGlB;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACe;AACf;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,sEAAW;AAC7B;AACA,oBAAoB,uDAAS;AAC7B,MAAM,wDAAU;;AAEhB,MAAM,uDAAS;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAS;;AAExB,EAAE,qDAAQ;;AAEV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,YAAY,OAAO,EAAE;AACrB;AACA;AACA,UAAU;AACV;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvPA;AAAA;AAAA;AAAA;AAAA;AAAiD;;AAEjB;;AAEhC;AACA;AACA;AACe;;AAEf,EAAE,2DAAY;;AAEd;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA,+CAAQ,qBAAqB,2DAAY;;AAEzC;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;AACA;AACA,E;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAkC;;AAIR;;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;;AAEf;AACA;;AAEA,eAAe,uDAAM;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,OAAO,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;;AAEpC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,eAAe,uDAAM,GAAG;AACxB;;;AAGA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;;AAEA,uBAAuB,2DAAO;;AAE9B;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAyC;AACW;;AAEd;;;AAGvB;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,uDAAmB;AACvB;AACA;AACA,wBAAwB,mDAAU;AAClC,CAAC,E;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAG6B;;AAIJ;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAKkB;;AAEsC;;;AAGxD;AACA;AACA;AACe;AACf;AACA;AACA;;;AAGA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU,oEAAa;AACvB,UAAU,mEAAY;;AAEtB,8CAA8C;AAC9C,4BAA4B,cAAc,KAAK,MAAM,KAAK;AAC1D;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,mEAAY;AACrC,IAAI,wDAAU;;AAEd;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD;;AAEpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,wEAAS;;AAEb;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,uDAAS;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACzRA;AAAA;AAAA;AAIkB;;AAElB;AACA;;AAEA;;;AAGe;;AAEf;;AAEA,QAAQ,wDAAO;AACf;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC;;AAEvC,IAAI,wDAAO;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uCAAuC;;AAEvC,IAAI,wDAAO;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AA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AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,qDAAO,sBAAsB,2BAA2B;AAChE;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9SA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG6B;;AAIJ;;AAKQ;;AAEjC;AACA;;AAKkB;;AAImB;;;AAGrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,gBAAgB;AAC5B,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH,mBAAmB,iEAAM;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,oEAAa;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,aAAa;AAC1B;AACA,cAAc,aAAa;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,wEAAS;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA,cAAc,OAAO,EAAE;AACvB;AACA;;AAEA;;AAEA;AACA,UAAU,mEAAY;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,wEAAiB;AAC1C,IAAI,wDAAU;;AAEd;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mCAAmC,yEAAc;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,yEAAc;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,uDAAS;AACf;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACN;;AAEG;AACM;AACgB;AACR;;;AAGrC;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,8CAAW;AACf;AACA;AACA,wBAAwB,mDAAU;AAClC,2BAA2B,sDAAa;AACxC,mCAAmC,8DAAqB;AACxD,+BAA+B,0DAAiB;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CA;AACA;;AAEA;AACA,MAAM,wDAAO;AACb;;AAEA,UAAU,wDAAO;;AAEjB,YAAY,wDAAO;AACnB;AACA;AACA;AACA,eAAe;AACf,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA,IAAI,wDAAO;;AAEX;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB,oDAAG;AACxB;AACA;AACA,GAAG;;AAEH;AACA;AACA,qBAAqB,uDAAM;AAC3B;AACA,GAAG;;AAEH,cAAc,oDAAG;AACjB;AACA,GAAG;;AAEH,EAAE,wDAAO;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;ACvdA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACR;AACiB;;AAEhB;;;AAGrB;AACf;AACA,IAAI,kDAAe;AACnB,IAAI,8CAAW;AACf,IAAI,uDAAmB;AACvB;AACA;AACA,uBAAuB,kDAAS;AAChC,CAAC,EAAC;;;;;;;;;;;;;ACfF;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAQkB;;AAImB;;;AAGrC;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;AACe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;;AAEA,YAAY,uDAAS;AACrB,IAAI,qDAAO;;AAEX,IAAI,uDAAS;;AAEb,cAAc,uDAAS;AACvB,IAAI,wDAAU;;AAEd,IAAI,uDAAS;;AAEb,IAAI,wEAAS;;AAEb,sBAAsB,uDAAS;AAC/B,IAAI,wDAAU;;AAEd,IAAI,uDAAS;;AAEb;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,wEAAS;AACb,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA,MAAM,uDAAS;AACf;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;AClSA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACE;AACR;;AAEL;;;AAGf;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,kDAAe;AACnB,IAAI,8CAAW;AACf;AACA,oBAAoB,+CAAM;AAC1B,CAAC,EAAC;;;;;;;;;;;;;ACdF;AAAA;AAAA;AAIkB;;AAElB;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACe;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,wDAAO;AACX;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;;AAEA,WAAW,uDAAM;AACjB;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAM;;AAE7B,EAAE,wDAAO;AACT;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,eAAe;;AAEf;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO,SAAS;AAC5B,YAAY,OAAO,SAAS;AAC5B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxNA;AAAA;AAAsD;;AAEvC;AACf;AACA,gCAAgC,2DAAkB;AAClD,CAAC,EAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEkC;;AAIjB;;AAMS;;AAKC;;AAIG;;AAIG;;AAEjC;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,2BAA2B;AAC3B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;AACA;AACe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,MAAM,uDAAM;AACZ,UAAU;AACV;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,2DAAO;AAC/B,sBAAsB,gEAAQ;;AAE9B;AACA;AACA,qBAAqB,gEAAQ;;;AAG7B;AACA;;AAEA;AACA;;AAEA,MAAM,uDAAM;AACZ;AACA;AACA;AACA;AACA,OAAO,GAAG,uBAAuB;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,wDAAS;AACjB;;AAEA;AACA;AACA;;AAEA,IAAI,mEAAe;;AAEnB;;AAEA;AACA,MAAM,uDAAM;AACZ;AACA;AACA;AACA;AACA,OAAO,GAAG,uBAAuB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,mEAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,+DAAgB;;AAE/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,OAAO,YAAY,OAAO;AACzE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,0DAAW;;AAEf;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,IAAI,6CAAQ;;AAEZ,IAAI,6CAAQ;AACZ,IAAI,6CAAQ;;AAEZ,IAAI,6CAAQ;AACZ,IAAI,6CAAQ;;AAEZ,IAAI,6CAAQ;;AAEZ,IAAI,6CAAQ;AACZ,IAAI,6CAAQ;AACZ,IAAI,6CAAQ;AACZ,IAAI,6CAAQ;;AAEZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,uDAAM,GAAG,+BAA+B;;AAEtD,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,sBAAsB,+DAAW;AACjC,oBAAoB,2DAAO;;AAE3B,MAAM,mEAAe;;AAErB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc,uDAAM;AACpB;AACA;AACA,iBAAiB;AACjB;AACA,oBAAoB,gEAAQ;AAC5B;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,6CAAQ;AAChB,QAAQ,6CAAQ;AAChB,QAAQ,6CAAQ;AAChB,QAAQ,6CAAQ;AAChB,OAAO;AACP;AACA,QAAQ,6CAAQ;;AAEhB;AACA,QAAQ,6CAAQ;AAChB,QAAQ,6CAAQ;;AAEhB,QAAQ,6CAAQ;AAChB,QAAQ,6CAAQ;AAChB;;AAEA,MAAM,6CAAQ;;AAEd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,uDAAM;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpiBA;AAAA;AAAA;AAAA;AAEiB;;AAIS;;AAE1B;AACA,aAAa,uDAAU;AACvB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACe;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,2DAAO;;AAEtB;AACA;;AAEA;;AAEA;AACA;;AAEA,sBAAsB,6BAA6B;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAA2C;;AAET;AACA;;AAEnB;AACf;AACA;AACA;AACA;AACA,IAAI,kDAAe;AACnB;AACA,sBAAsB,iDAAQ;AAC9B,sBAAsB,iDAAQ;AAC9B,CAAC,E;;;;;;;;;;;;ACdD;AAAA;AAAA;AAGkB;;AAElB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACe;;AAEf;AACA;;AAEA;;AAEA;;AAEA,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sDAAsD,6BAA6B;AACnF;;AAEA;AACA;AACA;AACA,eAAe,wDAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;ACpQA;AAAA;AAA4C;;AAE7B;AACf;AACA,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB;AACe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA,kDAAkD,sBAAsB;AACxE;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACJ;AACM;AACO;;AAEJ;;AAE7B;AACf;AACA,IAAI,gDAAa;AACjB,IAAI,8CAAW;AACf,IAAI,iDAAc;AAClB,IAAI,qDAAiB;AACrB;AACA,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;ACfF;AAAA;AAAA;AAAsD;;AAEtD;AACA;;;AAGe;AACf;;;AAGA;AACA;AACA;AACA,GAAG;;AAEH;AACA,QAAQ,sEAAkB;AAC1B;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,mBAAmB;AACjE,KAAK;;AAEL,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,SAAS,sEAAkB;;AAE3B;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnHA;AAAA;AAAA;AAAgD;;AAEd;;AAEnB;AACf;AACA,IAAI,qDAAiB;AACrB;AACA;AACA,sBAAsB,iDAAQ;AAC9B,CAAC,EAAC;;;;;;;;;;;;;ACVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEkB;;AAKD;;AAEkC;;AAMjC;;AAKa;;AAE/B,sBAAsB,aAAa;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;;AAEf;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mDAAmD,2DAAe;;AAElE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,WAAW;AACxB,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,gDAAW;AACnC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI,gDAAW;AACf;;AAEA;AACA,IAAI,wDAAO;AACX;AACA,KAAK;AACL;;AAEA;AACA,IAAI,wDAAO;AACX;AACA,KAAK;AACL;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA,YAAY,mEAAU;AACtB,KAAK;AACL,YAAY,uDAAS;AACrB,MAAM,qDAAO;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,IAAI,qDAAO;;AAEX,IAAI,uDAAS;AACb,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,qDAAQ;;AAEtB,IAAI,qDAAO;AACX;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA,cAAc,qDAAQ;;AAEtB,IAAI,mEAAU;AACd,GAAG;;;AAGH;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,eAAe;AAC7B,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB,G;;;;;;;;;;;;ACtVA;AAAA;AAAoD;;AAErC;AACf;AACA,+BAA+B,0DAAiB;AAChD,CAAC,E;;;;;;;;;;;;ACLD;AAAA;AAAA;AAEkB;;;AAGlB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB;AACe;AACf;AACA;AACA;;AAEA;;AAEA,iBAAiB,uDAAM,GAAG,8BAA8B;;AAExD;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAyC;AACE;;AAEiB;;AAE7C;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,kDAAe;AACnB;AACA;AACA;AACA;AACA,mCAAmC,8DAAqB;AACxD,CAAC,EAAC;;;;;;;;;;;;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ACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,4BAA4B;AACvC,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA,YAAY,qBAAqB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,MAAM;AACjB,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,uBAAuB;AAClC,WAAW,MAAM;AACjB,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,4BAA4B;AACvC,WAAW,eAAe;AAC1B;AACA,YAAY,gBAAgB;AAC5B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;A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CA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,wDAAO;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH,EAAE,wDAAO;AACT;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,sBAAsB,oDAAG;AACzB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;ACxSA;AAAA;AAAA;AAAmC;;;AAGnC;AACA;AACA;AACe,uCAAuC;;AAEtD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAM,wDAAO;AACb;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,E;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAmC;;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA,qCAAqC,aAAa;AAClD;;AAEA;;AAEA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,EAAE,wDAAO;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,wDAAO;AACT,kCAAkC,mBAAmB;AACrD,GAAG;;AAEH,EAAE,wDAAO;AACT,kCAAkC,qBAAqB;AACvD,GAAG;;AAEH;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;ACxJA;AAAA;AAAA;AAAA;AAGkB;;AAKc;;;AAGhC;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;AACf;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,EAAE,wDAAO;AACT;AACA,qBAAqB,oFAAsB;AAC3C,KAAK;AACL,GAAG;;AAEH,EAAE,wDAAO;AACT;AACA,uBAAuB,oFAAsB;AAC7C,KAAK;AACL,GAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE,uDAAM;AAC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AAEA;AACA;AACA;;AAEA;;AAEA,2BAA2B,qDAAI;;AAE/B;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAA4C;;AAE7B;AACf;AACA,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAIkB;;AAElB;AACA;AACA;;AAEmE;;AAEnE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB;AACe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,uDAAM;AACV;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,oBAAoB,yBAAyB;AAC7C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;;;AAGH;;AAEA;;AAEA,wBAAwB,+DAAgB;;AAExC;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA,YAAY,sBAAsB;AAClC;AACA;;AAEA,YAAY,wDAAO;;AAEnB,SAAS,uDAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;ACtOA;AAAA;AAAA;AAAA;AAAA;AAAA;AASkB;;AAIW;;AAOX;;AAEsC;;AAExD;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACe;AACf;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,oBAAoB,yEAAkB;;AAEtC,yBAAyB,oDAAG;AAC5B;AACA,KAAK;;AAEL,WAAW,wDAAO;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,uDAAS;AAC/B,MAAM,qDAAO;;AAEb;;AAEA,MAAM,uDAAS;;AAEf;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B,wDAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA,IAAI,wEAAS;AACb,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;AACA,MAAM,sDAAQ;AACd;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,uDAAM;;AAE/B;AACA;AACA,KAAK;;AAEL;AACA,QAAQ,qDAAI,WAAW,6DAAY,EAAE,wBAAwB;AAC7D,QAAQ,qDAAI,WAAW,6DAAY,EAAE,wBAAwB;AAC7D;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,SAAS,qDAAI,CAAC,wDAAO,wBAAwB,gCAAgC,EAAE;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACjB;AACJ;AACJ;AACM;AACa;;AAE5B;AACc;;AAEzB;AACf;AACA,IAAI,2DAAuB;AAC3B,IAAI,kDAAe;AACnB,IAAI,gDAAa;AACjB,IAAI,8CAAW;AACf,IAAI,iDAAc;AAClB,IAAI,wDAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,kBAAkB,6CAAI;AACtB,yBAAyB,oDAAW;AACpC,CAAC,EAAC;;;;;;;;;;;;;ACzBF;AAAA;AAAA;AAAA;AAAA;AAAgC;;AAEkC;;;AAGlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;;AAEf,EAAE,mEAAkB;;;AAGpB;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,gBAAgB;AAC3B;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,+CAAQ,mBAAmB,mEAAkB,E;;;;;;;;;;;;AC9F7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;;AAE9C;;AAMkB;;AAID;;AAIC;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;AACe;;AAEf;;AAEA;;AAEA;;AAEA;AACA,kBAAkB,uDAAS;;AAE3B,IAAI,qDAAO,UAAU,uDAAM;AAC3B;AACA;AACA;AACA;AACA,KAAK;;AAEL,IAAI,uDAAS;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,qDAAQ;;AAE1B;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,kBAAkB,qDAAQ;;AAE1B;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,eAAe;AAC3B;AACA;;AAEA,EAAE,qDAAO;AACT;AACA;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,eAAe;AAC3B;AACA;;AAEA,aAAa,8DAAO;;AAEpB,EAAE,qDAAO;AACT;AACA;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA,4D;;;;;;;;;;;;AC1HA;AAAA;AAAgC;;AAEjB;AACf;AACA,qBAAqB,gDAAO;AAC5B,CAAC,E;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAUkB;;AAQD;;AAIY;;AAEY;;AAEzC;AACA,cAAc,yDAAG;;AAEjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,oCAAoC,qBAAqB,cAAc;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB,cAAc;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB,cAAc;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B;AACe;;AAEf;AACA;AACA;;AAEA;;AAEA,0BAA0B,uDAAM;AAChC;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA,iBAAiB,oCAAoC;AACrD;AACA;AACA,iBAAiB,uCAAuC;AACxD;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB;AACA,YAAY,qBAAqB;AACjC;AACA;;AAEA,MAAM,yDAAQ;AACd,cAAc;AACd;;AAEA,MAAM,yDAAQ;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,uDAAM,qBAAqB,6DAAY,EAAE,oBAAoB;AACxF,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,WAAW,uDAAM,iBAAiB,6DAAY,EAAE,oBAAoB;AACpE,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA,MAAM,yDAAQ;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;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,OAAO;AAClB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,qDAAQ;;AAE/B,2BAA2B,qDAAQ;AACnC;;AAEA;;AAEA,EAAE,wDAAO;AACT;;AAEA;AACA;AACA;;AAEA,sBAAsB,uDAAU;;AAEhC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,SAAS,uDAAU;AACnB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,gBAAgB,uDAAU;;AAE1B,yBAAyB,wDAAO;AAChC;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AC3ZA;AAAA;AAAgC;;AAEjB;AACf;AACA,qBAAqB,gDAAO;AAC5B,CAAC,EAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAMkB;;AAQD;;AAEjB;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe,gBAAgB,qBAAqB;AAC/D,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACe;;AAEf,cAAc,0DAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE,sDAAS;AACX;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,oDAAO;;AAEvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA,eAAe,6DAAY,EAAE,cAAc;;AAE3C,cAAc,qDAAI,mCAAmC,qDAAI;;AAEzD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,kBAAkB,sDAAM;AACxB;AACA;;AAEA,EAAE,uDAAM;AACR;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE,uDAAU;;AAEZ;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA,EAAE,gDAAW;AACb;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;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A4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACe;;AAEf;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,gEAAY;;AAE5B;AACA,wBAAwB,qEAAiB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,iEAAM;AACjB;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sEAAW;;AAE7B;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;;AAEA,YAAY,qDAAI;;AAEhB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,uDAAM,EAAE,eAAe;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uEAAmB;;AAEtC;AACA;AACA,SAAS,sEAAkB;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;AClOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGkB;;AAElB;AACA;AACA;;AAEA;;AAQkB;;AAID;;AAIS;;AAIO;;AAII;;;AAGrC;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB;AACe;;AAEf;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,wDAAO,eAAe,qDAAI;AAChC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;AACA,QAAQ,mEAAe;AACvB;AACA;AACA;;AAEA,EAAE,6CAAQ;AACV,EAAE,6CAAQ;AACV;;;AAGA;AACA;;AAEA,cAAc,uDAAS;AACvB,EAAE,wDAAU;AACZ,EAAE,wDAAU;AACZ,EAAE,wDAAU;;AAEZ,EAAE,uDAAS;;AAEX;;AAEA;AACA,eAAe,uDAAS;AACxB,EAAE,qDAAO;AACT;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,wDAAU;;AAEZ,EAAE,uDAAS;;AAEX,YAAY,uDAAS;AACrB,EAAE,qDAAO;AACT;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,wDAAU;;AAEZ,EAAE,uDAAS;;AAEX,EAAE,wEAAS;;AAEX;AACA;;AAEA;AACA;;AAEA,aAAa,iEAAM;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;;AAEA,yBAAyB,eAAe;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,sDAAQ;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1LA;AAAA;AAAA;AAAA;AACA;;AAEA;;AAMkB;;;AAGlB;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACe;;AAEf;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,qDAAO,SAAS,mCAAmC;AACzD;;AAEA;AACA,MAAM,qDAAO,SAAS,qCAAqC;AAC3D;;AAEA;AACA,MAAM,wDAAU;AAChB,KAAK;AACL,MAAM,wDAAU;AAChB;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,MAAM,uDAAS;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGkB;;AAElB;AACA;;AAEA;;AAI6B;;AAKI;;;AAGjC;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,IAAI,2BAA2B;AAC/B;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA,MAAM,yDAAQ;AACd;AACA;;AAEA,MAAM,yDAAQ;AACd;AACA;;AAEA;AACA;;AAEO;;AAEP;AACA;AACA;;AAEA,oBAAoB,iEAAM;;AAE1B,SAAS,mEAAQ;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGO;;AAEP,mBAAmB,iEAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,iEAAM;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mEAAQ;AACjB;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,uCAAuC;AACnD,YAAY,cAAc;AAC1B;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA,eAAe,uDAAM;;AAErB,GAAG;AACH;AACA;;AAEA;AACA,sBAAsB,8DAAO;AAC7B;AACA;;;;;;;;;;;;;AClQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACM;AACa;;AAExB;AACc;AACA;;AAE7B;AACf;AACA,IAAI,8CAAW;AACf,IAAI,iDAAc;AAClB,IAAI,wDAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAAM;AAC1B,2BAA2B,sDAAa;AACxC,2BAA2B,sDAAa;AACxC,CAAC,EAAC;;;;;;;;;;;;;ACtBF;AAAA;AAAA;AAAA;AAAA;AAAgC;;AAEkC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;AACf,EAAE,mEAAkB;;AAEpB;AACA;;AAEA;;AAEA,+CAAQ,eAAe,mEAAkB;;;AAGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,4C;;;;;;;;;;;;ACtFA;AAAA;AAAA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;AACf;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC7CA;AAAA;AAA4B;;AAEb;AACf;AACA,mBAAmB,8CAAK;AACxB,CAAC,EAAC;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAOiB;;AAIY;;;AAG7B;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sDAAM;AAC1B,sBAAsB,qDAAQ;AAC9B,2BAA2B,qDAAQ;;AAEnC;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAW;AACf,GAAG;AACH;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,qDAAQ;AACrB;AACA;AACA;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,EAAE,qDAAQ;;AAEV;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS,qDAAQ;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA,aAAa,sDAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,oDAAO;;AAET;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAE,uDAAU;;AAEZ;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAE,uDAAU;;AAEZ;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,uDAAU;AACd;;AAEA,WAAW,oDAAO;AAClB;;AAEA,EAAE,uDAAU;;AAEZ;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,WAAW,oDAAO;AAClB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA,YAAY,8DAAc;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,8DAAc;AAC5B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAkB,sDAAM;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACniBA;AAAA;AAAA;AAAA;AAAyC;AACE;;AAEP;;AAErB;AACf;AACA,IAAI,iDAAc;AAClB,IAAI,kDAAe;AACnB;AACA,uBAAuB,kDAAS;AAChC,CAAC,EAAC;;;;;;;;;;;;;ACXF;AAAA;AAAA;AAGkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACe;;AAEf;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,8CAA8C,6DAA6D;AAC3G;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,OAAO,wDAAO;AACd;AACA;;AAEA;AACA;AACA;AACA,IAAI,wDAAO;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,4CAA4C,6DAA6D;AACzG;;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAE0B;;AAIR;;;AAGH;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,sEAAkB;;AAEhC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAEkB;;AAElB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB;AACe;;AAEf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,wDAAO;AACX;AACA;AACA;AACA,KAAK;;AAEL,IAAI,wDAAO;AACX;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACrB;;AAEH;AACc;AACE;;;AAGrC;AACf;AACA;AACA,IAAI,2DAAuB;AAC3B,IAAI,gDAAa;AACjB;AACA,uBAAuB,kDAAS;AAChC,8BAA8B,yDAAgB;AAC9C,+BAA+B,0DAAiB;AAChD,CAAC,EAAC;;;;;;;;;;;;;ACjBF;AAAA;AAAA;AAAA;AAEkB;;AAIE;;;AAGpB;AACA;AACA;AACA;AACA;AACe;;AAEf;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,2BAA2B,wDAAM;AACjC;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA,EAAE,wDAAO,mBAAmB;AAC5B,IAAI,wDAAO;AACX;AACA,KAAK;AACL,GAAG;AACH,E;;;;;;;;;;;;ACzKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACO;AACP;;AAEA;;AAEA,eAAe,qBAAqB;AACpC;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;;;AAGO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;;;AAGA;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A;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,uBAAuB;AACnC,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,sEAAkB;AACxB;AACA;;AAEA;;AAEA,kBAAkB,yEAAc;;AAEhC;;AAEA;AACA,EAAE,uDAAM;AACR;AACA,eAAe,+DAAY;AAC3B,GAAG;;AAEH,EAAE,wDAAS;;AAEX;AACA;;AAEA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,eAAe;;AAEtD;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1SA;AAAA;AAAA;AAAA;AAAA;AAEkB;;AAElB;AACA;;AAEA;;AAQkB;;AAImB;;;AAGrC;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACe;AACf;AACA;;AAEA;AACA,IAAI,wDAAO;AACX;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,uDAAS;AAClC,IAAI,qDAAO;;AAEX,IAAI,uDAAS;;AAEb;AACA,gBAAgB,uDAAS;AACzB,IAAI,qDAAO;AACX,IAAI,wDAAU;;AAEd,IAAI,uDAAS;;AAEb;AACA,gBAAgB,uDAAS;AACzB,IAAI,qDAAO;AACX,IAAI,wDAAU;;AAEd,IAAI,uDAAS;;AAEb;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,IAAI,wEAAS;AACb,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,MAAM,uDAAS;AACf;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,uDAAS;AACtB,MAAM,qDAAO;AACb,MAAM,wDAAU;;AAEhB,MAAM,uDAAS;;AAEf;;AAEA,sBAAsB,uDAAS;AAC/B,MAAM,qDAAO;;AAEb,MAAM,uDAAS;;AAEf;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,wDAAO;AACf,UAAU,wDAAO;AACjB;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;;AAEA,QAAQ,wDAAO;AACf,UAAU,wDAAO;AACjB;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;;AAEA,QAAQ,wDAAO;AACf,UAAU,wDAAO;AACjB;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;;AAEA,QAAQ,wDAAO;AACf,UAAU,wDAAO;AACjB;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA,OAAO;;;AAGP;;AAEA;AACA;;AAEA;AACA,uBAAuB,uDAAS;AAChC,MAAM,qDAAO;;AAEb,MAAM,uDAAS;;AAEf;;AAEA,MAAM,wDAAO;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,qDAAO,QAAQ,yCAAyC;;AAE5D,oBAAoB;AACpB,iBAAiB;AACjB;;AAEA;AACA,IAAI,wEAAS;;AAEb;AACA,IAAI,wDAAO;AACX;AACA,QAAQ,qDAAO,iBAAiB,sCAAsC;AACtE;;AAEA;AACA,QAAQ,qDAAO,iBAAiB,wCAAwC;AACxE;AACA,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;AACA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;AACA,MAAM,uDAAS;AACf,MAAM,uDAAS;AACf;;AAEA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;AACA,MAAM,uDAAS;AACf;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvRA;AAAA;AAAA;AAAA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACN;AACa;AACM;;AAElB;AACc;;AAEnC;AACf;AACA;AACA,IAAI,iDAAc;AAClB,IAAI,8CAAW;AACf,IAAI,qDAAiB;AACrB,IAAI,wDAAoB;AACxB;AACA,sBAAsB,kDAAS;AAC/B,6BAA6B,yDAAgB;AAC7C,CAAC,EAAC;;;;;;;;;;;;;AClBF;AAAA;AAAA;AAAA;AAEkB;;AAID;;AAEjB;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AA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lB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,YAAY,OAAO,iBAAiB;AACpC;AACO;;AAEP;;AAEA;AACA,qBAAqB,OAAO;AAC5B,OAAO,yDAAQ;AACf,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,wCAAwC,oEAAa;AACxD;AACA,GAAG;;AAEH;AACA;AACA,oBAAoB,uDAAM;AAC1B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;;AAGO;AACP,SAAS,wDAAc;AACvB,C;;;;;;;;;;;;AC/KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKkB;;AAKI;;AAOI;;AAE1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,oBAAoB,kEAAc;;AAElC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAqC,kBAAkB,IAAI;;AAE3D;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;AACA,OAAO,kBAAkB;AACzB,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO,kBAAkB;AACzB,OAAO;AACP;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,WAAW,OAAO,sEAAsE,WAAW,EAAE,WAAW;AAChH;AACA;AACA,YAAY;AACZ;AACO;;AAEP;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB;AACA,YAAY,aAAa;AACzB;AACO;;AAEP;;AAEA,wBAAwB,wDAAO;;AAE/B;;AAEA,oBAAoB,kEAAc;;AAElC;;AAEA,mBAAmB,0DAAM;AACzB,eAAe,0DAAM;;AAErB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACO;;AAEP,MAAM,wDAAO;AACb;AACA;;AAEA,YAAY,0DAAM;AAClB,UAAU,0DAAM;AAChB;;AAEA,UAAU,uDAAM,EAAE,uBAAuB;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,aAAa;AACzB;AACO;AACP,eAAe;AACf;AACA;;AAEA,gBAAgB,kEAAc;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB;AACA,YAAY,aAAa;AACzB;AACO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,qDAAI;AACjB;;AAEA,kBAAkB,oEAAa;AAC/B,KAAK;AACL;;AAEA;;AAEA,oBAAoB,oEAAa;;AAEjC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;;AAEA,YAAY;AACZ;;AAEA;AACA;;AAEA,+BAA+B,SAAS;;AAExC;AACA,UAAU,kEAAW;AACrB,UAAU,kEAAW;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,8BAA8B;AAC9B;AACA,qCAAqC;AACrC,qCAAqC;AACrC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;;AAEA,SAAS,mEAAY;AACrB;AACA;;AAEA;AACA,GAAG;AACH,C;;;;;;;;;;;;ACrsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACF;;AAED;;AAE/B,qBAAqB,kDAAI,EAAE,uDAAuD,GAAG,iBAAiB;AACtG,oBAAoB,kDAAI,EAAE,qDAAqD,GAAG,sBAAsB;AACxG,uBAAuB,kDAAI,EAAE,sCAAsC,GAAG,eAAe;AACrF,uBAAuB,kDAAI,EAAE,qCAAqC,GAAG,iBAAiB;AACtF,uBAAuB,kDAAI,EAAE,qCAAqC,GAAG,iBAAiB;;AAEtF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wCAAwC;AAC/E,uCAAuC,0CAA0C;AACjF;AACA,gDAAgD,eAAe,gBAAgB,GAAG,eAAe,IAAI;AACrG;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA,SAAS,uDAAM;AACf,C;;;;;;;;;;;;ACtOA;AAAA;AAAA;AAAkC;;;AAGlC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,uDAAM,GAAG,8BAA8B;;AAExD;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvHA;AAAA;AAAA;AAAqD;;AAEX;;;AAG3B;AACf;AACA,IAAI,0DAAc;AAClB;AACA;AACA,0BAA0B,qDAAY;AACtC,CAAC,E;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG2B;;AAIG;;AAIG;;AAKhB;;AAIS;;;AAG1B;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACe;;AAEf;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA,mBAAmB,2DAAO;AAC1B,gBAAgB,gEAAQ;;AAExB;AACA;;AAEA,MAAM,+DAAgB;;AAEtB,MAAM,wDAAS;AACf;;AAEA;;AAEA;;AAEA,cAAc,gEAAQ;;AAEtB;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,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,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACO;;AAEP;;AAEA,OAAO,wDAAO;AACd;AACA;;AAEA,EAAE,wDAAO;AACT;;AAEA,QAAQ,wDAAO;AACf;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA,YAAY,sBAAsB;AAClC;AACO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB;AACA,YAAY,sBAAsB;AAClC;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB;AACA,YAAY,sBAAsB;AAClC;AACO;AACP;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACO;;AAEP,MAAM,4DAAW;AACjB;AACA;;AAEA,MAAM,yDAAQ;AACd;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,wDAAO,wBAAwB,aAAa,EAAE;AAChE;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,MAAM,wDAAO;;AAEb,MAAM,wDAAO;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,OAAO,wDAAO;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,wDAAO;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,gBAAgB;AAC3B;AACA,YAAY,uBAAuB;AACnC;AACO;;AAEP;;AAEA,EAAE,wDAAO;;AAET;;AAEA;AACA;AACA;;AAEA,SAAS,yDAAQ;AACjB;AACA;AACA,SAAS,yDAAQ;AACjB;AACA;AACA;AACA,UAAU,yDAAQ,gBAAgB,yDAAQ;AAC1C;AACA;;AAEA;AACA,OAAO,WAAW,yDAAQ,iBAAiB,yDAAQ;AACnD;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,SAAS,uDAAM,GAAG,YAAY,YAAY;AAC1C,C;;;;;;;;;;;;AC7TA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;;;AAGO;AACP;AACA;;;AAGO;AACP;AACA;AACA;;;AAGO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA,YAAY,MAAM;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAEiB;;AAEjB;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,YAAY;AACZ;AACO;AACP,SAAS,qDAAQ;AACjB;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACO;AACP;AACA,C;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAEoB;;AAE2B;;AAE/C;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;;AAEA;;AAEA;;AAEA,aAAa,oBAAoB;;AAEjC,QAAQ,+DAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,sBAAsB,wDAAc;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAA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;;;;;;ACvWA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,kCAAkC,0BAA0B,0CAA0C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE,OAAO,wBAAwB,EAAE;;AAEjM;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEsC;;;;;;;;;;;;AC1UtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM,GAAG,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,KAAK;AACvB,WAAW,OAAO,KAAK;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,mGAAmG,GAAG;AACtG;;AAEA,IAAI,IAA0C;AAC9C,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,oGAAC;AACN,CAAC,MAAM,EAIN;;AAED,CAAC;;;;;;;;;;;;ACllFD;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Da;;AAEb,UAAU,mBAAO,CAAC,wCAAK;;;AAGvB;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY,MAAM;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY,MAAM;AAClB;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB;AACA,YAAY,OAAO,WAAW;AAC9B;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;;AAEA,2FAA2F,aAAa;AACxG;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,gBAAgB;AAC5B;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,SAAS;AACrB;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA,YAAY,SAAS;AACrB;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA,YAAY,SAAS;AACrB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,YAAY,OAAO;AACnB;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,YAAY,OAAO;AACnB;AACA;AACA,2FAA2F,eAAe;AAC1G;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEuT;;;;;;;;;;;;;ACpoBvT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEoK;;;;;;;;;;;;;ACzhBpK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoB;;;;;;;;;;;;;;ACFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;;AAEP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,C;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkB;;AAEa;;AAIhB;;AAEa;AAGL;;AAKG;;AAMR;;;AAGlB;AACA;AACA;;AAEA;;AAEA,OAAO,iEAAiB;AACxB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,eAAe,+DAAW;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACO;;AAEP;AACA,gBAAgB,eAAe;AAC/B;;AAEA;AACA,gBAAgB,QAAQ;AACxB;;AAEA,EAAE,uDAAM;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAU,mEAAU;;AAEpB;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,mEAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA,EAAE,wDAAO;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA,QAAQ,wDAAO;AACf;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA,KAAK;AACL;AACA,gBAAgB,mEAAU;AAC1B,OAAO;AACP;AACA,qBAAqB,+DAAW;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA,eAAe,+DAAW;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,QAAQ,+DAAe;AACvB,wCAAwC,gDAAQ;;AAEhD;AACA;AACA;;AAEA;AACA,2CAA2C,WAAW;AACtD;;AAEA;;AAEA,eAAe,uDAAM,GAAG;AACxB;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,qDAAI;AACnB;AACA,KAAK;;AAEL;AACA,aAAa,uDAAM,GAAG;AACtB;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,eAAe,qDAAI;AACnB;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAM,iEAAY;AAClB;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,MAAM,uDAAM;AACZ;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,WAAW,+DAAW;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACO;;AAEP,yBAAyB,8CAAM;AAC/B;AACA;AACA;AACA;;AAEA,EAAE,uDAAM,QAAQ,aAAa;AAC7B;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,YAAY,SAAS;AACrB;AACA;;AAEA;;AAEA;AACA,sCAAsC,8BAA8B;AACpE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,4BAA4B;AACnE;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,uDAAM,GAAG,YAAY,2BAA2B;AAC5E,mBAAmB,4CAAS,EAAE,cAAc;AAC5C,kBAAkB,iDAAK;;AAEvB;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,eAAe,qBAAqB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG,IAAI;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,OAAO,IAAI;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA,E;;;;;;;;;;;;ACn2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMkB;;AAIQ;;AAIH;;AAQL;;AAElB;;AAEA;AACA;;;AAGO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,iEAAiB;AACvB;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,MAAM,yDAAQ;AACd;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,SAAS,oDAAG;AACZ;AACA,YAAY;AACZ,GAAG;;AAEH;;AAEA;AACA;AACA,WAAW,uDAAM,EAAE,qCAAqC;AACxD,GAAG;AACH,WAAW,uDAAM,EAAE,mEAAmE;AACtF;AACA;;AAEA;AACA,SAAS,uDAAM,EAAE,qCAAqC;AACtD;;AAEA;AACA;;AAEA,SAAS,uDAAM;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,yDAAQ;;AAEhB;AACA,mCAAmC;AACnC,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,uDAAM,qBAAqB,iBAAiB,EAAE;AACvD;;AAEA;AACA,SAAS,uDAAM,qBAAqB,kBAAkB,EAAE;AACxD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA,MAAM,yDAAQ;AACd,SAAS,+DAAW;AACpB,GAAG;AACH;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH,WAAW,uDAAM,EAAE,0BAA0B;AAC7C;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,EAAE,wDAAO;;AAET;;AAEA;AACA,4CAA4C,iBAAiB;AAC7D,KAAK;AACL;AACA,MAAM,wDAAO;AACb;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA,eAAe,+DAAW;;AAE1B;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE,wDAAO;;AAET;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA,EAAE,wDAAO;;AAET;AACA;AACA,sBAAsB,gDAAQ;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,QAAQ,iEAAY;AACpB,MAAM,wDAAO;AACb;AACA,OAAO;AACP,KAAK;AACL;AACA,MAAM,wDAAO;AACb;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,mBAAmB,+DAAe;AAClC,uBAAuB,mEAAmB;;AAE1C,MAAM,wDAAO;AACb;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA,iBAAiB,sDAAc,oDAAoD;;AAEnF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,8BAA8B;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAO;AACf;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAM,yDAAQ;AACd;AACA;;AAEA,cAAc,2BAA2B;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;AACT;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,wDAAO;AACX;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,gDAAQ;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;;AAEP,YAAY,uDAAM,EAAE,gCAAgC,eAAe;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACv0BA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACe,iBAAiB;;AAEhC;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAKkB;;AAIJ;;;AAGd;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,SAAS,qDAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA,aAAa,qDAAW;AACxB,iBAAiB,qDAAW;;AAE5B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO,eAAe,qDAAI;;AAE5B;AACA,QAAQ,uDAAM,GAAG;AACjB;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,E;;;;;;;;;;;;ACxOA;AAAA;AAAA;AAAA;AAGkB;;AAEQ;;AAE1B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB;AACe;AACf;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA,gCAAgC,6CAAI;;AAEpC;AACA,EAAE,wDAAO;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,gCAAgC;AACjE,kCAAkC,UAAU,EAAE;AAC9C,mCAAmC,iBAAiB;;AAEpD,IAAI,wDAAO,QAAQ,qDAAI;AACvB;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkB;;AAEc;AACE;AACI;;AAIxB;;;AAGd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACe;;AAEf,wBAAwB,mDAAU;;AAElC,qBAAqB,gDAAO;AAC5B,sBAAsB,iDAAQ;;AAE9B;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA,aAAa,yDAAQ;;AAErB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;;AAEA,eAAe,qDAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,oCAAoC;;AAElF,EAAE,wDAAO;AACT,QAAQ,yDAAQ;AAChB;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;AC7NA;AAAA;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACjCA;AAAA;AAAA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACe;AACf;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIkB;;AAID;;AAEoC;;AAIvC;;;AAGd;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,WAAW;AACtB;AACe;AACf;AACA;;AAEA;;AAEA;;AAEA,EAAE,wDAAO,WAAW,qDAAI;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA,QAAQ,uDAAM,GAAG;;AAEjB;;AAEA;AACA;;AAEA;AACA,EAAE,wDAAO,YAAY,qDAAI;AACzB;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,SAAS,uDAAM,GAAG;AAClB;AACA;AACA;AACA,UAAU,uDAAM,IAAI,iBAAiB;AACrC,GAAG;;AAEH,WAAW,qDAAW;AACtB;AACA;;AAEA;AACA,EAAE,wDAAO,kBAAkB,qDAAI;;AAE/B;AACA,qBAAqB,qDAAW;AAChC;;AAEA;AACA,SAAS,wDAAa;AACtB,eAAe,qDAAW;AAC1B;;AAEA,IAAI,uDAAM;AACV;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA,EAAE,uDAAM;AACR;AACA;AACA;AACA,GAAG;;AAEH,EAAE,wDAAO,eAAe,qDAAI;AAC5B;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;;AAEA,aAAa,wDAAa,iBAAiB,oBAAoB;;AAE/D;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA,mBAAmB,qDAAW,MAAM,wDAAa;AACjD;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,wDAAO;;AAET;AACA;;AAEA,EAAE,wDAAO;AACT;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,WAAW;AACvB;AACA;;AAEA,eAAe,qDAAW;;AAE1B,oBAAoB,2DAAiB;;AAErC;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA,0CAA0C,aAAa;AACvD;;;;AAIA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,UAAU,EAAE;AACnC,wBAAwB,qBAAqB,EAAE;AAC/C,wBAAwB,wBAAwB,EAAE;AAClD,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;AACA;AACO;;AAEP;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA,C;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzFA,iBAAiB,mBAAO,CAAC,0DAAY;;AAErC,4BAA4B,mBAAO,CAAC,sEAAkB,E;;;;;;;;;;;;ACFzC;;AAEb;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,uBAAuB;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,uC;;;;;;;;;;;;ACvHa;;AAEb,iBAAiB,mBAAO,CAAC,kEAAc;;AAEvC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D,MAAM,yBAAyB,GAAG,4BAA4B,MAAM,8BAA8B;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC;AACA;AACA;AACA,oBAAoB,qDAAqD,GAAG,cAAc;AAC1F;AACA,cAAc;AACd,kBAAkB,oBAAoB,GAAG,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB,GAAG,qBAAqB;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,iEAAiE,WAAW;AAC5E;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,G;;;;;;;;;;;;ACzMa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAqB,+EAA+E;AACpG;;AAEA,8DAA8D;AAC9D;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,eAAe;AACvB,QAAQ,eAAe;AACvB,YAAY,eAAe;AAC3B,UAAU,eAAe;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,iBAAiB,YAAY;AAC7B;AACA,gBAAgB,4BAA4B;AAC5C;;AAEA,aAAa,YAAY;AACzB;AACA,gBAAgB,4BAA4B;AAC5C;;AAEA,aAAa,QAAQ;;AAErB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;;AAEX,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD,QAAQ;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,mBAAmB;AACvD;AACA,OAAO,iCAAiC;AACxC,OAAO,6BAA6B;AACpC,OAAO,iCAAiC;AACxC,OAAO;AACP;;AAEA;;AAEA;AACA,gBAAgB;AAChB,OAAO;AACP,gBAAgB;AAChB,OAAO;AACP,gBAAgB;AAChB,gBAAgB;AAChB;;AAEA,KAAK;;AAEL;AACA;AACA,OAAO;AACP,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;;AAExB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,2DAA2D;AACrE,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,2DAA2D;AAC1E,gBAAgB,2DAA2D;AAC3E;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,gBAAgB;;AAEhB,4DAA4D,QAAQ;AACpE,+BAA+B;;AAE/B;AACA;AACA,yBAAyB;AACzB,kCAAkC;AAClC;AACA,0CAA0C;;AAE1C,2DAA2D;AAC3D;AACA;;AAEA,iBAAiB;;AAEjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uC;;;;;;;;;;;;AC1mCA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,IAAI,IAAqC;AACzC,6BAA6B,mBAAO,CAAC,yFAA4B;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,YAAY,mBAAO,CAAC,4CAAO;AAC3B,cAAc,mBAAO,CAAC,4DAAe;AACrC,qBAAqB,mBAAO,CAAC,8EAA2B;AACxD,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,cAAc,mBAAO,CAAC,8DAAmB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;;;AAGA;AACA,WAAW,eAAe;AAC1B,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,YAAY,WAAW;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B,iBAAiB;AACjB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH;AACvH,yHAAyH;AACzH;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,mCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC;;AAEzC;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;AACtB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AACllB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,iCAAiC;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,gCAAgC,KAAK;AAC3C;AACA;AACA,MAAM,gCAAgC,KAAK;AAC3C;AACA,4DAA4D;AAC5D,MAAM,gCAAgC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qOAAqO;AACrO;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8KAA8K,YAAY;AAC1L;AACA;AACA;AACA;AACA,uLAAuL,+BAA+B;AACtiKAAiK,iBAAiB;AAClL,OAAO;AACP,iKAAiK,iBAAiB,wDAAwD,mBAAmB,gBAAgB,8BAA8B;AAC3S;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+GAA+G,GAAG;AAClH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,4IAA4I,mBAAmB,gBAAgB,8BAA8B;AAC7M,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,KAAI;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA,sDAAsD,eAAe;AACrE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAI;AAClB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,cAAc,KAAI;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,KAAI;AAChB;AACA;AACA;AACA;AACA,KAAK,UAAU,KAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC,gBAAgB;;AAEhmBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,KAAI;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wCAAwC;AACxC,iDAAiD;AACjD,qDAAqD;AACrD,0DAA0D;AAC1D,8DAA8D;AAC9D,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kKAAkK,yCAAyC;AAC3M;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbqBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,kDAAkD;AAC5D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU,iCAAiC;AAC3C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,YAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,MAAM;AACnuBAAuB,8BAA8B;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yNAAyN,0CAA0C;AACnoDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACteAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,sCAAsC;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,+PAA+P,sCAAsC,0BAA0B,iCAAiC,QAAQ,eAAe;AACvX,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,KAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,UAAU,KAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA,UAAU,KAAI;AACd;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAI;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU,KAAI;AACd;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAI;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,KAAI;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8MAA8M,oDAAoD,EAAE;AACpQ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE,mBAAmB;AACzF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,iQAAiQ,cAAc;AAC/Q;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AC/upBa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,IAAI,KAAqC,EAAE,EAK1C;AACD,mBAAmB,mBAAO,CAAC,6FAAgC;AAC3D;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,cAAc,mBAAO,CAAC,4DAAe;AACrC,qBAAqB,mBAAO,CAAC,8EAA2B;;AAExD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qOAAqO;AACrO;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0IAA0I,yCAAyC;AACnL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,kDAAkD;;;AAGlD;;;AAGA;;;AAGA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AC52Da;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,mBAAmB,mBAAO,CAAC,iFAA4B;AACvD;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;;AAEA;;AAEA,8BAA8B,gBAAgB,QAAQ;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC;AACnC,eAAe,sBAAsB;AACrC;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC,6BAA6B;AAC7B,qCAAqC;AACrC,+BAA+B;AAC/B,gCAAgC;AAChC,+BAA+B;AAC/B,uCAAuC,OAAO;AAC9C,qCAAqC,OAAO;AAC5C,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,cAAc,wBAAwB;AACtC;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA,4CAA4C,gBAAgB;AAC5D;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS,qBAAqB;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA,yBAAyB,OAAO;AAChC;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,wCAAwC,OAAO;;AAE/C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,qCAAqC;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA,qCAAqC;AACrC;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB;AACrB;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,uDAAuD;AACvD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C;AAC1C,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB;;AAEA,8CAA8C;AAC9C;AACA;;AAEA;AACA;;AAEA,OAAO;AACP,2CAA2C;AAC3C;;AAEA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;;AAEA,iCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAE4C;;;;;;;;;;;;;AClhC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,8CAA8C,cAAc;;AAE5D;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,kDAAkD;;;AAGlD;;;AAGA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACtaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,8CAA8C,cAAc;;AAE5D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;AC1rBa;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,mBAAmB,mBAAO,CAAC,6FAAgC;AAC3D;;;;;;;;;;;;;ACNa;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,mBAAmB,mBAAO,CAAC,6GAAwC;AACnE;;;;;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,kDAAkD,sBAAsB;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA,KAAK,KAAwC,EAAE,EAE7C;;AAEF,QAAQ,sBAAiB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC9YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,EAAE;AACrD,wCAAwC,WAAW,EAAE;;AAErD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,sCAAsC;AACtC,GAAG;AACH;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;;;;;;;;;;;;ACxFA,8CAAa;;AAEb,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kEAAkE,aAAa;AAC/E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA,oEAAoE,eAAe;AACnF;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,IAA8B;AACnC;AACA,EAAE,MAAM,EAMN;AACF,CAAC;;;;;;;;;;;;;;ACtGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,EAAE;AAC9B,8BAA8B,EAAE;;AAEhC;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA,aAAa,qBAAqB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,qDAAqD;AACjE;AACA,YAAY,aAAa;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEmM;;;;;;;;;;;;AC9zBnM;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Modeler from 'bpmn-js/lib/Modeler';\r\n\r\nimport PropertiesPanel from './properties-panel';\r\n\r\nimport customModdleExtension from './moddle/custom.json';\r\n\r\nimport diagramXML from './diagram.bpmn';\r\n\r\nconst $modelerContainer = document.querySelector('#modeler-container');\r\nconst $propertiesContainer = document.querySelector('#properties-container');\r\n\r\nconst modeler = new Modeler({\r\n  container: $modelerContainer,\r\n  moddleExtensions: {\r\n    custom: customModdleExtension\r\n  },\r\n  keyboard: {\r\n    bindTo: document.body\r\n  }\r\n});\r\n\r\nconst propertiesPanel = new PropertiesPanel({\r\n  container: $propertiesContainer,\r\n  modeler\r\n});\r\n\r\nmodeler.importXML(diagramXML);","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<bpmn:definitions xmlns:bpmn=\\\"http://www.omg.org/spec/BPMN/20100524/MODEL\\\" xmlns:bpmndi=\\\"http://www.omg.org/spec/BPMN/20100524/DI\\\" xmlns:di=\\\"http://www.omg.org/spec/DD/20100524/DI\\\" xmlns:dc=\\\"http://www.omg.org/spec/DD/20100524/DC\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:custom=\\\"http://custom/ns\\\" id=\\\"Definitions_1\\\" targetNamespace=\\\"http://bpmn.io/schema/bpmn\\\">\\r\\n  <bpmn:process id=\\\"Process_1\\\" isExecutable=\\\"false\\\">\\r\\n    <bpmn:startEvent id=\\\"StartEvent_1\\\">\\r\\n      <bpmn:outgoing>SequenceFlow_0b6cm13</bpmn:outgoing>\\r\\n    </bpmn:startEvent>\\r\\n    <bpmn:sequenceFlow id=\\\"SequenceFlow_0b6cm13\\\" sourceRef=\\\"StartEvent_1\\\" targetRef=\\\"Task_0zlv465\\\" />\\r\\n    <bpmn:endEvent id=\\\"EndEvent_09arx8f\\\">\\r\\n      <bpmn:incoming>SequenceFlow_035kn8o</bpmn:incoming>\\r\\n    </bpmn:endEvent>\\r\\n    <bpmn:sequenceFlow id=\\\"SequenceFlow_17w8608\\\" sourceRef=\\\"Task_0zlv465\\\" targetRef=\\\"Task_1xewseo\\\" />\\r\\n    <bpmn:task id=\\\"Task_1xewseo\\\" name=\\\"Do more work\\\">\\r\\n      <bpmn:incoming>SequenceFlow_17w8608</bpmn:incoming>\\r\\n      <bpmn:outgoing>SequenceFlow_035kn8o</bpmn:outgoing>\\r\\n    </bpmn:task>\\r\\n    <bpmn:sequenceFlow id=\\\"SequenceFlow_035kn8o\\\" sourceRef=\\\"Task_1xewseo\\\" targetRef=\\\"EndEvent_09arx8f\\\" />\\r\\n    <bpmn:serviceTask id=\\\"Task_0zlv465\\\" name=\\\"Do work\\\" custom:topic=\\\"my.custom.topic\\\">\\r\\n      <bpmn:incoming>SequenceFlow_0b6cm13</bpmn:incoming>\\r\\n      <bpmn:outgoing>SequenceFlow_17w8608</bpmn:outgoing>\\r\\n    </bpmn:serviceTask>\\r\\n  </bpmn:process>\\r\\n  <bpmndi:BPMNDiagram id=\\\"BPMNDiagram_1\\\">\\r\\n    <bpmndi:BPMNPlane id=\\\"BPMNPlane_1\\\" bpmnElement=\\\"Process_1\\\">\\r\\n      <bpmndi:BPMNShape id=\\\"_BPMNShape_StartEvent_2\\\" bpmnElement=\\\"StartEvent_1\\\">\\r\\n        <dc:Bounds x=\\\"173\\\" y=\\\"188\\\" width=\\\"36\\\" height=\\\"36\\\" />\\r\\n        <bpmndi:BPMNLabel>\\r\\n          <dc:Bounds x=\\\"146\\\" y=\\\"224\\\" width=\\\"90\\\" height=\\\"20\\\" />\\r\\n        </bpmndi:BPMNLabel>\\r\\n      </bpmndi:BPMNShape>\\r\\n      <bpmndi:BPMNEdge id=\\\"SequenceFlow_0b6cm13_di\\\" bpmnElement=\\\"SequenceFlow_0b6cm13\\\">\\r\\n        <di:waypoint x=\\\"209\\\" y=\\\"206\\\" />\\r\\n        <di:waypoint x=\\\"256\\\" y=\\\"206\\\" />\\r\\n        <bpmndi:BPMNLabel>\\r\\n          <dc:Bounds x=\\\"192.5\\\" y=\\\"110\\\" width=\\\"90\\\" height=\\\"20\\\" />\\r\\n        </bpmndi:BPMNLabel>\\r\\n      </bpmndi:BPMNEdge>\\r\\n      <bpmndi:BPMNShape id=\\\"EndEvent_09arx8f_di\\\" bpmnElement=\\\"EndEvent_09arx8f\\\">\\r\\n        <dc:Bounds x=\\\"552\\\" y=\\\"188\\\" width=\\\"36\\\" height=\\\"36\\\" />\\r\\n        <bpmndi:BPMNLabel>\\r\\n          <dc:Bounds x=\\\"404\\\" y=\\\"138\\\" width=\\\"90\\\" height=\\\"20\\\" />\\r\\n        </bpmndi:BPMNLabel>\\r\\n      </bpmndi:BPMNShape>\\r\\n      <bpmndi:BPMNEdge id=\\\"SequenceFlow_17w8608_di\\\" bpmnElement=\\\"SequenceFlow_17w8608\\\">\\r\\n        <di:waypoint x=\\\"356\\\" y=\\\"206\\\" />\\r\\n        <di:waypoint x=\\\"399\\\" y=\\\"206\\\" />\\r\\n        <bpmndi:BPMNLabel>\\r\\n          <dc:Bounds x=\\\"353.5\\\" y=\\\"110\\\" width=\\\"90\\\" height=\\\"20\\\" />\\r\\n        </bpmndi:BPMNLabel>\\r\\n      </bpmndi:BPMNEdge>\\r\\n      <bpmndi:BPMNShape id=\\\"Task_1xewseo_di\\\" bpmnElement=\\\"Task_1xewseo\\\">\\r\\n        <dc:Bounds x=\\\"399\\\" y=\\\"166\\\" width=\\\"100\\\" height=\\\"80\\\" />\\r\\n      </bpmndi:BPMNShape>\\r\\n      <bpmndi:BPMNEdge id=\\\"SequenceFlow_035kn8o_di\\\" bpmnElement=\\\"SequenceFlow_035kn8o\\\">\\r\\n        <di:waypoint x=\\\"499\\\" y=\\\"206\\\" />\\r\\n        <di:waypoint x=\\\"552\\\" y=\\\"206\\\" />\\r\\n      </bpmndi:BPMNEdge>\\r\\n      <bpmndi:BPMNShape id=\\\"ServiceTask_0wob562_di\\\" bpmnElement=\\\"Task_0zlv465\\\">\\r\\n        <dc:Bounds x=\\\"256\\\" y=\\\"166\\\" width=\\\"100\\\" height=\\\"80\\\" />\\r\\n      </bpmndi:BPMNShape>\\r\\n    </bpmndi:BPMNPlane>\\r\\n  </bpmndi:BPMNDiagram>\\r\\n</bpmn:definitions>\\r\\n\"","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./PropertiesView.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!./PropertiesView.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!./PropertiesView.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { is } from 'bpmn-js/lib/util/ModelUtil';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport './PropertiesView.css';\r\n\r\n\r\nexport default class PropertiesView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedElements: [],\r\n      element: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const {\r\n      modeler\r\n    } = this.props;\r\n\r\n    modeler.on('selection.changed', (e) => {\r\n\r\n      const {\r\n        element\r\n      } = this.state;\r\n\r\n      this.setState({\r\n        selectedElements: e.newSelection,\r\n        element: e.newSelection[0]\r\n      });\r\n    });\r\n\r\n\r\n    modeler.on('element.changed', (e) => {\r\n\r\n      const {\r\n        element\r\n      } = e;\r\n\r\n      const {\r\n        element: currentElement\r\n      } = this.state;\r\n\r\n      if (!currentElement) {\r\n        return;\r\n      }\r\n\r\n      // update panel, if currently selected element changed\r\n      if (element.id === currentElement.id) {\r\n        this.setState({\r\n          element\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      modeler\r\n    } = this.props;\r\n\r\n    const {\r\n      selectedElements,\r\n      element\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n\r\n        {\r\n          selectedElements.length === 1\r\n            && <ElementProperties modeler={ modeler } element={ element } />\r\n        }\r\n\r\n        {\r\n          selectedElements.length === 0\r\n            && <span>Please select an element.</span>\r\n        }\r\n\r\n        {\r\n          selectedElements.length > 1\r\n            && <span>Please select a single element.</span>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction ElementProperties(props) {\r\n\r\n  let {\r\n    element,\r\n    modeler\r\n  } = props;\r\n\r\n  if (element.labelTarget) {\r\n    element = element.labelTarget;\r\n  }\r\n\r\n  function updateName(name) {\r\n    const modeling = modeler.get('modeling');\r\n\r\n    modeling.updateLabel(element, name);\r\n  }\r\n\r\n  function updateTopic(topic) {\r\n    const modeling = modeler.get('modeling');\r\n\r\n    modeling.updateProperties(element, {\r\n      'custom:topic': topic\r\n    });\r\n  }\r\n\r\n  function makeMessageEvent() {\r\n\r\n    const bpmnReplace = modeler.get('bpmnReplace');\r\n\r\n    bpmnReplace.replaceElement(element, {\r\n      type: element.businessObject.$type,\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    });\r\n  }\r\n\r\n  function makeServiceTask(name) {\r\n    const bpmnReplace = modeler.get('bpmnReplace');\r\n\r\n    bpmnReplace.replaceElement(element, {\r\n      type: 'bpmn:ServiceTask'\r\n    });\r\n  }\r\n\r\n  function attachTimeout() {\r\n    const modeling = modeler.get('modeling');\r\n    const autoPlace = modeler.get('autoPlace');\r\n    const selection = modeler.get('selection');\r\n\r\n    const attrs = {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    };\r\n\r\n    const position = {\r\n      x: element.x + element.width,\r\n      y: element.y + element.height\r\n    };\r\n\r\n    const boundaryEvent = modeling.createShape(attrs, position, element, { attach: true });\r\n\r\n    const taskShape = append(boundaryEvent, {\r\n      type: 'bpmn:Task'\r\n    });\r\n\r\n    selection.select(taskShape);\r\n  }\r\n\r\n  function isTimeoutConfigured(element) {\r\n    const attachers = element.attachers || [];\r\n\r\n    return attachers.some(e => hasDefinition(e, 'bpmn:TimerEventDefinition'));\r\n  }\r\n\r\n  function append(element, attrs) {\r\n\r\n    const autoPlace = modeler.get('autoPlace');\r\n    const elementFactory = modeler.get('elementFactory');\r\n\r\n    var shape = elementFactory.createShape(attrs);\r\n\r\n    return autoPlace.append(element, shape);\r\n  };\r\n\r\n  return (\r\n    <div className=\"element-properties\" key={ element.id }>\r\n      <fieldset>\r\n        <label>id</label>\r\n        <span>{ element.id }</span>\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <label>name</label>\r\n        <input value={ element.businessObject.name || '' } onChange={ (event) => {\r\n          updateName(event.target.value)\r\n        } } />\r\n      </fieldset>\r\n\r\n      {\r\n        is(element, 'custom:TopicHolder') &&\r\n          <fieldset>\r\n            <label>topic (custom)</label>\r\n            <input value={ element.businessObject.get('custom:topic') } onChange={ (event) => {\r\n              updateTopic(event.target.value)\r\n            } } />\r\n          </fieldset>\r\n      }\r\n\r\n      <fieldset>\r\n        <label>actions</label>\r\n\r\n        {\r\n          is(element, 'bpmn:Task') && !is(element, 'bpmn:ServiceTask') &&\r\n            <button onClick={ makeServiceTask }>Make Service Task</button>\r\n        }\r\n\r\n        {\r\n          is(element, 'bpmn:Event') && !hasDefinition(element, 'bpmn:MessageEventDefinition') &&\r\n            <button onClick={ makeMessageEvent }>Make Message Event</button>\r\n        }\r\n\r\n        {\r\n          is(element, 'bpmn:Task') && !isTimeoutConfigured(element) &&\r\n            <button onClick={ attachTimeout }>Attach Timeout</button>\r\n        }\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// helpers ///////////////////\r\n\r\nfunction hasDefinition(event, definitionType) {\r\n\r\n  const definitions = event.businessObject.eventDefinitions || [];\r\n\r\n  return definitions.some(d => is(d, definitionType));\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\n\r\nimport PropertiesView from './PropertiesView';\r\n\r\n\r\nexport default class PropertiesPanel {\r\n\r\n  constructor(options) {\r\n\r\n    const {\r\n      modeler,\r\n      container\r\n    } = options;\r\n\r\n    ReactDOM.render(\r\n      <PropertiesView modeler={ modeler } />,\r\n      container\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import inherits from 'inherits';\r\n\r\nimport Ids from 'ids';\r\n\r\nimport Viewer from './Viewer';\r\n\r\nimport NavigatedViewer from './NavigatedViewer';\r\n\r\nimport KeyboardMoveModule from 'diagram-js/lib/navigation/keyboard-move';\r\nimport MoveCanvasModule from 'diagram-js/lib/navigation/movecanvas';\r\nimport TouchModule from 'diagram-js/lib/navigation/touch';\r\nimport ZoomScrollModule from 'diagram-js/lib/navigation/zoomscroll';\r\n\r\nimport AlignElementsModule from 'diagram-js/lib/features/align-elements';\r\nimport AutoPlaceModule from './features/auto-place';\r\nimport AutoResizeModule from './features/auto-resize';\r\nimport AutoScrollModule from 'diagram-js/lib/features/auto-scroll';\r\nimport BendpointsModule from 'diagram-js/lib/features/bendpoints';\r\nimport ContextPadModule from './features/context-pad';\r\nimport CopyPasteModule from './features/copy-paste';\r\nimport DistributeElementsModule from './features/distribute-elements';\r\nimport EditorActionsModule from './features/editor-actions';\r\nimport KeyboardModule from './features/keyboard';\r\nimport KeyboardMoveSelectionModule from 'diagram-js/lib/features/keyboard-move-selection';\r\nimport LabelEditingModule from './features/label-editing';\r\nimport ModelingModule from './features/modeling';\r\nimport MoveModule from 'diagram-js/lib/features/move';\r\nimport PaletteModule from './features/palette';\r\nimport ReplacePreviewModule from './features/replace-preview';\r\nimport ResizeModule from 'diagram-js/lib/features/resize';\r\nimport SnappingModule from './features/snapping';\r\nimport SearchModule from './features/search';\r\n\r\n\r\nvar initialDiagram =\r\n  '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\r\n  '<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\r\n                    'xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" ' +\r\n                    'xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" ' +\r\n                    'xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" ' +\r\n                    'targetNamespace=\"http://bpmn.io/schema/bpmn\" ' +\r\n                    'id=\"Definitions_1\">' +\r\n    '<bpmn:process id=\"Process_1\" isExecutable=\"false\">' +\r\n      '<bpmn:startEvent id=\"StartEvent_1\"/>' +\r\n    '</bpmn:process>' +\r\n    '<bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">' +\r\n      '<bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">' +\r\n        '<bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">' +\r\n          '<dc:Bounds height=\"36.0\" width=\"36.0\" x=\"173.0\" y=\"102.0\"/>' +\r\n        '</bpmndi:BPMNShape>' +\r\n      '</bpmndi:BPMNPlane>' +\r\n    '</bpmndi:BPMNDiagram>' +\r\n  '</bpmn:definitions>';\r\n\r\n\r\n/**\r\n * A modeler for BPMN 2.0 diagrams.\r\n *\r\n *\r\n * ## Extending the Modeler\r\n *\r\n * In order to extend the viewer pass extension modules to bootstrap via the\r\n * `additionalModules` option. An extension module is an object that exposes\r\n * named services.\r\n *\r\n * The following example depicts the integration of a simple\r\n * logging component that integrates with interaction events:\r\n *\r\n *\r\n * ```javascript\r\n *\r\n * // logging component\r\n * function InteractionLogger(eventBus) {\r\n *   eventBus.on('element.hover', function(event) {\r\n *     console.log()\r\n *   })\r\n * }\r\n *\r\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\r\n *\r\n * // extension module\r\n * var extensionModule = {\r\n *   __init__: [ 'interactionLogger' ],\r\n *   interactionLogger: [ 'type', InteractionLogger ]\r\n * };\r\n *\r\n * // extend the viewer\r\n * var bpmnModeler = new Modeler({ additionalModules: [ extensionModule ] });\r\n * bpmnModeler.importXML(...);\r\n * ```\r\n *\r\n *\r\n * ## Customizing / Replacing Components\r\n *\r\n * You can replace individual diagram components by redefining them in override modules.\r\n * This works for all components, including those defined in the core.\r\n *\r\n * Pass in override modules via the `options.additionalModules` flag like this:\r\n *\r\n * ```javascript\r\n * function CustomContextPadProvider(contextPad) {\r\n *\r\n *   contextPad.registerProvider(this);\r\n *\r\n *   this.getContextPadEntries = function(element) {\r\n *     // no entries, effectively disable the context pad\r\n *     return {};\r\n *   };\r\n * }\r\n *\r\n * CustomContextPadProvider.$inject = [ 'contextPad' ];\r\n *\r\n * var overrideModule = {\r\n *   contextPadProvider: [ 'type', CustomContextPadProvider ]\r\n * };\r\n *\r\n * var bpmnModeler = new Modeler({ additionalModules: [ overrideModule ]});\r\n * ```\r\n *\r\n * @param {Object} [options] configuration options to pass to the viewer\r\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\r\n * @param {String|Number} [options.width] the width of the viewer\r\n * @param {String|Number} [options.height] the height of the viewer\r\n * @param {Object} [options.moddleExtensions] extension packages to provide\r\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\r\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\r\n */\r\nexport default function Modeler(options) {\r\n  Viewer.call(this, options);\r\n\r\n  // hook ID collection into the modeler\r\n  this.on('import.parse.complete', function(event) {\r\n    if (!event.error) {\r\n      this._collectIds(event.definitions, event.context);\r\n    }\r\n  }, this);\r\n\r\n  this.on('diagram.destroy', function() {\r\n    this.get('moddle').ids.clear();\r\n  }, this);\r\n}\r\n\r\ninherits(Modeler, Viewer);\r\n\r\nModeler.Viewer = Viewer;\r\nModeler.NavigatedViewer = NavigatedViewer;\r\n\r\n/**\r\n * Create a new diagram to start modeling.\r\n *\r\n * @param {Function} [done]\r\n */\r\nModeler.prototype.createDiagram = function(done) {\r\n  return this.importXML(initialDiagram, done);\r\n};\r\n\r\n/**\r\n * Create a moddle instance, attaching ids to it.\r\n *\r\n * @param {Object} options\r\n */\r\nModeler.prototype._createModdle = function(options) {\r\n  var moddle = Viewer.prototype._createModdle.call(this, options);\r\n\r\n  // attach ids to moddle to be able to track\r\n  // and validated ids in the BPMN 2.0 XML document\r\n  // tree\r\n  moddle.ids = new Ids([ 32, 36, 1 ]);\r\n\r\n  return moddle;\r\n};\r\n\r\n/**\r\n * Collect ids processed during parsing of the\r\n * definitions object.\r\n *\r\n * @param {ModdleElement} definitions\r\n * @param {Context} context\r\n */\r\nModeler.prototype._collectIds = function(definitions, context) {\r\n\r\n  var moddle = definitions.$model,\r\n      ids = moddle.ids,\r\n      id;\r\n\r\n  // remove references from previous import\r\n  ids.clear();\r\n\r\n  for (id in context.elementsById) {\r\n    ids.claim(id, context.elementsById[id]);\r\n  }\r\n};\r\n\r\nModeler.prototype._interactionModules = [\r\n  // non-modeling components\r\n  KeyboardMoveModule,\r\n  MoveCanvasModule,\r\n  TouchModule,\r\n  ZoomScrollModule\r\n];\r\n\r\nModeler.prototype._modelingModules = [\r\n  // modeling components\r\n  AlignElementsModule,\r\n  AutoPlaceModule,\r\n  AutoScrollModule,\r\n  AutoResizeModule,\r\n  BendpointsModule,\r\n  ContextPadModule,\r\n  CopyPasteModule,\r\n  DistributeElementsModule,\r\n  EditorActionsModule,\r\n  KeyboardModule,\r\n  KeyboardMoveSelectionModule,\r\n  LabelEditingModule,\r\n  ModelingModule,\r\n  MoveModule,\r\n  PaletteModule,\r\n  ReplacePreviewModule,\r\n  ResizeModule,\r\n  SnappingModule,\r\n  SearchModule\r\n];\r\n\r\n\r\n// modules the modeler is composed of\r\n//\r\n// - viewer modules\r\n// - interaction modules\r\n// - modeling modules\r\n\r\nModeler.prototype._modules = [].concat(\r\n  Modeler.prototype._modules,\r\n  Modeler.prototype._interactionModules,\r\n  Modeler.prototype._modelingModules);\r\n","import inherits from 'inherits';\r\n\r\nimport Viewer from './Viewer';\r\n\r\nimport KeyboardMoveModule from 'diagram-js/lib/navigation/keyboard-move';\r\nimport MoveCanvasModule from 'diagram-js/lib/navigation/movecanvas';\r\nimport ZoomScrollModule from 'diagram-js/lib/navigation/zoomscroll';\r\n\r\n/**\r\n * A viewer that includes mouse navigation facilities\r\n *\r\n * @param {Object} options\r\n */\r\nexport default function NavigatedViewer(options) {\r\n  Viewer.call(this, options);\r\n}\r\n\r\ninherits(NavigatedViewer, Viewer);\r\n\r\nNavigatedViewer.prototype._navigationModules = [\r\n  KeyboardMoveModule,\r\n  MoveCanvasModule,\r\n  ZoomScrollModule\r\n];\r\n\r\nNavigatedViewer.prototype._modules = [].concat(\r\n  NavigatedViewer.prototype._modules,\r\n  NavigatedViewer.prototype._navigationModules);","/**\r\n * The code in the <project-logo></project-logo> area\r\n * must not be changed.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\nimport {\r\n  assign,\r\n  isNumber,\r\n  omit\r\n} from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  query as domQuery,\r\n  remove as domRemove\r\n} from 'min-dom';\r\n\r\nimport {\r\n  innerSVG\r\n} from 'tiny-svg';\r\n\r\nimport Diagram from 'diagram-js';\r\nimport BpmnModdle from 'bpmn-moddle';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport {\r\n  importBpmnDiagram\r\n} from './import/Importer';\r\n\r\nimport CoreModule from './core';\r\nimport TranslateModule from 'diagram-js/lib/i18n/translate';\r\nimport SelectionModule from 'diagram-js/lib/features/selection';\r\nimport OverlaysModule from 'diagram-js/lib/features/overlays';\r\n\r\n\r\nfunction checkValidationError(err) {\r\n\r\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\r\n  // (in case he or the exporting tool did not get that right)\r\n\r\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/;\r\n  var match = pattern.exec(err.message);\r\n\r\n  if (match) {\r\n    err.message =\r\n      'unparsable content <' + match[1] + '> detected; ' +\r\n      'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\r\n  }\r\n\r\n  return err;\r\n}\r\n\r\nvar DEFAULT_OPTIONS = {\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'relative'\r\n};\r\n\r\n\r\n/**\r\n * Ensure the passed argument is a proper unit (defaulting to px)\r\n */\r\nfunction ensureUnit(val) {\r\n  return val + (isNumber(val) ? 'px' : '');\r\n}\r\n\r\n/**\r\n * A viewer for BPMN 2.0 diagrams.\r\n *\r\n * Have a look at {@link NavigatedViewer} or {@link Modeler} for bundles that include\r\n * additional features.\r\n *\r\n *\r\n * ## Extending the Viewer\r\n *\r\n * In order to extend the viewer pass extension modules to bootstrap via the\r\n * `additionalModules` option. An extension module is an object that exposes\r\n * named services.\r\n *\r\n * The following example depicts the integration of a simple\r\n * logging component that integrates with interaction events:\r\n *\r\n *\r\n * ```javascript\r\n *\r\n * // logging component\r\n * function InteractionLogger(eventBus) {\r\n *   eventBus.on('element.hover', function(event) {\r\n *     console.log()\r\n *   })\r\n * }\r\n *\r\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\r\n *\r\n * // extension module\r\n * var extensionModule = {\r\n *   __init__: [ 'interactionLogger' ],\r\n *   interactionLogger: [ 'type', InteractionLogger ]\r\n * };\r\n *\r\n * // extend the viewer\r\n * var bpmnViewer = new Viewer({ additionalModules: [ extensionModule ] });\r\n * bpmnViewer.importXML(...);\r\n * ```\r\n *\r\n * @param {Object} [options] configuration options to pass to the viewer\r\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\r\n * @param {String|Number} [options.width] the width of the viewer\r\n * @param {String|Number} [options.height] the height of the viewer\r\n * @param {Object} [options.moddleExtensions] extension packages to provide\r\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\r\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\r\n */\r\nexport default function Viewer(options) {\r\n\r\n  options = assign({}, DEFAULT_OPTIONS, options);\r\n\r\n  this._moddle = this._createModdle(options);\r\n\r\n  this._container = this._createContainer(options);\r\n\r\n  /* <project-logo> */\r\n\r\n  addProjectLogo(this._container);\r\n\r\n  /* </project-logo> */\r\n\r\n  this._init(this._container, this._moddle, options);\r\n}\r\n\r\ninherits(Viewer, Diagram);\r\n\r\n\r\n/**\r\n * Parse and render a BPMN 2.0 diagram.\r\n *\r\n * Once finished the viewer reports back the result to the\r\n * provided callback function with (err, warnings).\r\n *\r\n * ## Life-Cycle Events\r\n *\r\n * During import the viewer will fire life-cycle events:\r\n *\r\n *   * import.parse.start (about to read model from xml)\r\n *   * import.parse.complete (model read; may have worked or not)\r\n *   * import.render.start (graphical import start)\r\n *   * import.render.complete (graphical import finished)\r\n *   * import.done (everything done)\r\n *\r\n * You can use these events to hook into the life-cycle.\r\n *\r\n * @param {String} xml the BPMN 2.0 xml\r\n * @param {Function} [done] invoked with (err, warnings=[])\r\n */\r\nViewer.prototype.importXML = function(xml, done) {\r\n\r\n  // done is optional\r\n  done = done || function() {};\r\n\r\n  var self = this;\r\n\r\n  // hook in pre-parse listeners +\r\n  // allow xml manipulation\r\n  xml = this._emit('import.parse.start', { xml: xml }) || xml;\r\n\r\n  this._moddle.fromXML(xml, 'bpmn:Definitions', function(err, definitions, context) {\r\n\r\n    // hook in post parse listeners +\r\n    // allow definitions manipulation\r\n    definitions = self._emit('import.parse.complete', {\r\n      error: err,\r\n      definitions: definitions,\r\n      context: context\r\n    }) || definitions;\r\n\r\n    var parseWarnings = context.warnings;\r\n\r\n    if (err) {\r\n      err = checkValidationError(err);\r\n\r\n      self._emit('import.done', { error: err, warnings: parseWarnings });\r\n\r\n      return done(err, parseWarnings);\r\n    }\r\n\r\n    self.importDefinitions(definitions, function(err, importWarnings) {\r\n      var allWarnings = [].concat(parseWarnings, importWarnings || []);\r\n\r\n      self._emit('import.done', { error: err, warnings: allWarnings });\r\n\r\n      done(err, allWarnings);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Export the currently displayed BPMN 2.0 diagram as\r\n * a BPMN 2.0 XML document.\r\n *\r\n * ## Life-Cycle Events\r\n *\r\n * During XML saving the viewer will fire life-cycle events:\r\n *\r\n *   * saveXML.start (before serialization)\r\n *   * saveXML.serialized (after xml generation)\r\n *   * saveXML.done (everything done)\r\n *\r\n * You can use these events to hook into the life-cycle.\r\n *\r\n * @param {Object} [options] export options\r\n * @param {Boolean} [options.format=false] output formated XML\r\n * @param {Boolean} [options.preamble=true] output preamble\r\n *\r\n * @param {Function} done invoked with (err, xml)\r\n */\r\nViewer.prototype.saveXML = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var self = this;\r\n\r\n  var definitions = this._definitions;\r\n\r\n  if (!definitions) {\r\n    return done(new Error('no definitions loaded'));\r\n  }\r\n\r\n  // allow to fiddle around with definitions\r\n  definitions = this._emit('saveXML.start', {\r\n    definitions: definitions\r\n  }) || definitions;\r\n\r\n  this._moddle.toXML(definitions, options, function(err, xml) {\r\n\r\n    try {\r\n      xml = self._emit('saveXML.serialized', {\r\n        error: err,\r\n        xml: xml\r\n      }) || xml;\r\n\r\n      self._emit('saveXML.done', {\r\n        error: err,\r\n        xml: xml\r\n      });\r\n    } catch (e) {\r\n      console.error('error in saveXML life-cycle listener', e);\r\n    }\r\n\r\n    done(err, xml);\r\n  });\r\n};\r\n\r\n/**\r\n * Export the currently displayed BPMN 2.0 diagram as\r\n * an SVG image.\r\n *\r\n * ## Life-Cycle Events\r\n *\r\n * During SVG saving the viewer will fire life-cycle events:\r\n *\r\n *   * saveSVG.start (before serialization)\r\n *   * saveSVG.done (everything done)\r\n *\r\n * You can use these events to hook into the life-cycle.\r\n *\r\n * @param {Object} [options]\r\n * @param {Function} done invoked with (err, svgStr)\r\n */\r\nViewer.prototype.saveSVG = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  this._emit('saveSVG.start');\r\n\r\n  var svg, err;\r\n\r\n  try {\r\n    var canvas = this.get('canvas');\r\n\r\n    var contentNode = canvas.getDefaultLayer(),\r\n        defsNode = domQuery('defs', canvas._svg);\r\n\r\n    var contents = innerSVG(contentNode),\r\n        defs = defsNode ? '<defs>' + innerSVG(defsNode) + '</defs>' : '';\r\n\r\n    var bbox = contentNode.getBBox();\r\n\r\n    svg =\r\n      '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\r\n      '<!-- created with bpmn-js / http://bpmn.io -->\\n' +\r\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\r\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\r\n           'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' +\r\n           'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' +\r\n        defs + contents +\r\n      '</svg>';\r\n  } catch (e) {\r\n    err = e;\r\n  }\r\n\r\n  this._emit('saveSVG.done', {\r\n    error: err,\r\n    svg: svg\r\n  });\r\n\r\n  done(err, svg);\r\n};\r\n\r\n/**\r\n * Get a named diagram service.\r\n *\r\n * @example\r\n *\r\n * var elementRegistry = viewer.get('elementRegistry');\r\n * var startEventShape = elementRegistry.get('StartEvent_1');\r\n *\r\n * @param {String} name\r\n *\r\n * @return {Object} diagram service instance\r\n *\r\n * @method Viewer#get\r\n */\r\n\r\n/**\r\n * Invoke a function in the context of this viewer.\r\n *\r\n * @example\r\n *\r\n * viewer.invoke(function(elementRegistry) {\r\n *   var startEventShape = elementRegistry.get('StartEvent_1');\r\n * });\r\n *\r\n * @param {Function} fn to be invoked\r\n *\r\n * @return {Object} the functions return value\r\n *\r\n * @method Viewer#invoke\r\n */\r\n\r\n/**\r\n * Remove all drawn elements from the viewer.\r\n *\r\n * After calling this method the viewer can still\r\n * be reused for opening another diagram.\r\n *\r\n * @method Viewer#clear\r\n */\r\n\r\nViewer.prototype.importDefinitions = function(definitions, done) {\r\n\r\n  // catch synchronous exceptions during #clear()\r\n  try {\r\n    if (this._definitions) {\r\n      // clear existing rendered diagram\r\n      this.clear();\r\n    }\r\n\r\n    // update definitions\r\n    this._definitions = definitions;\r\n  } catch (e) {\r\n    return done(e);\r\n  }\r\n\r\n  // perform graphical import\r\n  return importBpmnDiagram(this, definitions, done);\r\n};\r\n\r\nViewer.prototype.getModules = function() {\r\n  return this._modules;\r\n};\r\n\r\n/**\r\n * Destroy the viewer instance and remove all its\r\n * remainders from the document tree.\r\n */\r\nViewer.prototype.destroy = function() {\r\n\r\n  // diagram destroy\r\n  Diagram.prototype.destroy.call(this);\r\n\r\n  // dom detach\r\n  domRemove(this._container);\r\n};\r\n\r\n/**\r\n * Register an event listener\r\n *\r\n * Remove a previously added listener via {@link #off(event, callback)}.\r\n *\r\n * @param {String} event\r\n * @param {Number} [priority]\r\n * @param {Function} callback\r\n * @param {Object} [that]\r\n */\r\nViewer.prototype.on = function(event, priority, callback, target) {\r\n  return this.get('eventBus').on(event, priority, callback, target);\r\n};\r\n\r\n/**\r\n * De-register an event listener\r\n *\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\r\nViewer.prototype.off = function(event, callback) {\r\n  this.get('eventBus').off(event, callback);\r\n};\r\n\r\nViewer.prototype.attachTo = function(parentNode) {\r\n\r\n  if (!parentNode) {\r\n    throw new Error('parentNode required');\r\n  }\r\n\r\n  // ensure we detach from the\r\n  // previous, old parent\r\n  this.detach();\r\n\r\n  // unwrap jQuery if provided\r\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\r\n    parentNode = parentNode.get(0);\r\n  }\r\n\r\n  if (typeof parentNode === 'string') {\r\n    parentNode = domQuery(parentNode);\r\n  }\r\n\r\n  parentNode.appendChild(this._container);\r\n\r\n  this._emit('attach', {});\r\n\r\n  this.get('canvas').resized();\r\n};\r\n\r\nViewer.prototype.getDefinitions = function() {\r\n  return this._definitions;\r\n};\r\n\r\nViewer.prototype.detach = function() {\r\n\r\n  var container = this._container,\r\n      parentNode = container.parentNode;\r\n\r\n  if (!parentNode) {\r\n    return;\r\n  }\r\n\r\n  this._emit('detach', {});\r\n\r\n  parentNode.removeChild(container);\r\n};\r\n\r\nViewer.prototype._init = function(container, moddle, options) {\r\n\r\n  var baseModules = options.modules || this.getModules(),\r\n      additionalModules = options.additionalModules || [],\r\n      staticModules = [\r\n        {\r\n          bpmnjs: [ 'value', this ],\r\n          moddle: [ 'value', moddle ]\r\n        }\r\n      ];\r\n\r\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\r\n\r\n  var diagramOptions = assign(omit(options, [ 'additionalModules' ]), {\r\n    canvas: assign({}, options.canvas, { container: container }),\r\n    modules: diagramModules\r\n  });\r\n\r\n  // invoke diagram constructor\r\n  Diagram.call(this, diagramOptions);\r\n\r\n  if (options && options.container) {\r\n    this.attachTo(options.container);\r\n  }\r\n};\r\n\r\n/**\r\n * Emit an event on the underlying {@link EventBus}\r\n *\r\n * @param  {String} type\r\n * @param  {Object} event\r\n *\r\n * @return {Object} event processing result (if any)\r\n */\r\nViewer.prototype._emit = function(type, event) {\r\n  return this.get('eventBus').fire(type, event);\r\n};\r\n\r\nViewer.prototype._createContainer = function(options) {\r\n\r\n  var container = domify('<div class=\"bjs-container\"></div>');\r\n\r\n  assign(container.style, {\r\n    width: ensureUnit(options.width),\r\n    height: ensureUnit(options.height),\r\n    position: options.position\r\n  });\r\n\r\n  return container;\r\n};\r\n\r\nViewer.prototype._createModdle = function(options) {\r\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\r\n\r\n  return new BpmnModdle(moddleOptions);\r\n};\r\n\r\n// modules the viewer is composed of\r\nViewer.prototype._modules = [\r\n  CoreModule,\r\n  TranslateModule,\r\n  SelectionModule,\r\n  OverlaysModule\r\n];\r\n\r\n// default moddle extensions the viewer is composed of\r\nViewer.prototype._moddleExtensions = {};\r\n\r\n/* <project-logo> */\r\n\r\nimport {\r\n  open as openPoweredBy,\r\n  BPMNIO_IMG\r\n} from './util/PoweredByUtil';\r\n\r\nimport {\r\n  event as domEvent\r\n} from 'min-dom';\r\n\r\n/**\r\n * Adds the project logo to the diagram container as\r\n * required by the bpmn.io license.\r\n *\r\n * @see http://bpmn.io/license\r\n *\r\n * @param {Element} container\r\n */\r\nfunction addProjectLogo(container) {\r\n  var img = BPMNIO_IMG;\r\n\r\n  var linkMarkup =\r\n    '<a href=\"http://bpmn.io\" ' +\r\n       'target=\"_blank\" ' +\r\n       'class=\"bjs-powered-by\" ' +\r\n       'title=\"Powered by bpmn.io\" ' +\r\n       'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100\">' +\r\n      img +\r\n    '</a>';\r\n\r\n  var linkElement = domify(linkMarkup);\r\n\r\n  container.appendChild(linkElement);\r\n\r\n  domEvent.bind(linkElement, 'click', function(event) {\r\n    openPoweredBy();\r\n\r\n    event.preventDefault();\r\n  });\r\n}\r\n\r\n/* </project-logo> */","import DrawModule from '../draw';\r\nimport ImportModule from '../import';\r\n\r\nexport default {\r\n  __depends__: [\r\n    DrawModule,\r\n    ImportModule\r\n  ]\r\n};","import {\r\n  every,\r\n  some\r\n} from 'min-dash';\r\n\r\nimport {\r\n  componentsToPath\r\n} from 'diagram-js/lib/util/RenderUtil';\r\n\r\n\r\n// element utils //////////////////////\r\n\r\n/**\r\n * Checks if eventDefinition of the given element matches with semantic type.\r\n *\r\n * @return {boolean} true if element is of the given semantic type\r\n */\r\nexport function isTypedEvent(event, eventDefinitionType, filter) {\r\n\r\n  function matches(definition, filter) {\r\n    return every(filter, function(val, key) {\r\n\r\n      // we want a == conversion here, to be able to catch\r\n      // undefined == false and friends\r\n      /* jshint -W116 */\r\n      return definition[key] == val;\r\n    });\r\n  }\r\n\r\n  return some(event.eventDefinitions, function(definition) {\r\n    return definition.$type === eventDefinitionType && matches(event, filter);\r\n  });\r\n}\r\n\r\nexport function isThrowEvent(event) {\r\n  return (event.$type === 'bpmn:IntermediateThrowEvent') || (event.$type === 'bpmn:EndEvent');\r\n}\r\n\r\nexport function isCollection(element) {\r\n  var dataObject = element.dataObjectRef;\r\n\r\n  return element.isCollection || (dataObject && dataObject.isCollection);\r\n}\r\n\r\nexport function getDi(element) {\r\n  return element.businessObject.di;\r\n}\r\n\r\nexport function getSemantic(element) {\r\n  return element.businessObject;\r\n}\r\n\r\n\r\n// color access //////////////////////\r\n\r\nexport function getFillColor(element, defaultColor) {\r\n  return getDi(element).get('bioc:fill') || defaultColor || 'white';\r\n}\r\n\r\nexport function getStrokeColor(element, defaultColor) {\r\n  return getDi(element).get('bioc:stroke') || defaultColor || 'black';\r\n}\r\n\r\n\r\n// cropping path customizations //////////////////////\r\n\r\nexport function getCirclePath(shape) {\r\n\r\n  var cx = shape.x + shape.width / 2,\r\n      cy = shape.y + shape.height / 2,\r\n      radius = shape.width / 2;\r\n\r\n  var circlePath = [\r\n    ['M', cx, cy],\r\n    ['m', 0, -radius],\r\n    ['a', radius, radius, 0, 1, 1, 0, 2 * radius],\r\n    ['a', radius, radius, 0, 1, 1, 0, -2 * radius],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(circlePath);\r\n}\r\n\r\nexport function getRoundRectPath(shape, borderRadius) {\r\n\r\n  var x = shape.x,\r\n      y = shape.y,\r\n      width = shape.width,\r\n      height = shape.height;\r\n\r\n  var roundRectPath = [\r\n    ['M', x + borderRadius, y],\r\n    ['l', width - borderRadius * 2, 0],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, borderRadius, borderRadius],\r\n    ['l', 0, height - borderRadius * 2],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, -borderRadius, borderRadius],\r\n    ['l', borderRadius * 2 - width, 0],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, -borderRadius, -borderRadius],\r\n    ['l', 0, borderRadius * 2 - height],\r\n    ['a', borderRadius, borderRadius, 0, 0, 1, borderRadius, -borderRadius],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(roundRectPath);\r\n}\r\n\r\nexport function getDiamondPath(shape) {\r\n\r\n  var width = shape.width,\r\n      height = shape.height,\r\n      x = shape.x,\r\n      y = shape.y,\r\n      halfWidth = width / 2,\r\n      halfHeight = height / 2;\r\n\r\n  var diamondPath = [\r\n    ['M', x + halfWidth, y],\r\n    ['l', halfWidth, halfHeight],\r\n    ['l', -halfWidth, halfHeight],\r\n    ['l', -halfWidth, -halfHeight],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(diamondPath);\r\n}\r\n\r\nexport function getRectPath(shape) {\r\n  var x = shape.x,\r\n      y = shape.y,\r\n      width = shape.width,\r\n      height = shape.height;\r\n\r\n  var rectPath = [\r\n    ['M', x, y],\r\n    ['l', width, 0],\r\n    ['l', 0, height],\r\n    ['l', -width, 0],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(rectPath);\r\n}","import inherits from 'inherits';\r\n\r\nimport {\r\n  isObject,\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\r\n\r\nimport {\r\n  isExpanded,\r\n  isEventSubProcess\r\n} from '../util/DiUtil';\r\n\r\nimport { is } from '../util/ModelUtil';\r\n\r\nimport {\r\n  createLine\r\n} from 'diagram-js/lib/util/RenderUtil';\r\n\r\nimport {\r\n  isTypedEvent,\r\n  isThrowEvent,\r\n  isCollection,\r\n  getDi,\r\n  getSemantic,\r\n  getCirclePath,\r\n  getRoundRectPath,\r\n  getDiamondPath,\r\n  getRectPath,\r\n  getFillColor,\r\n  getStrokeColor\r\n} from './BpmnRenderUtil';\r\n\r\nimport {\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  classes as svgClasses\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  rotate,\r\n  transform,\r\n  translate\r\n} from 'diagram-js/lib/util/SvgTransformUtil';\r\n\r\nimport Ids from 'ids';\r\n\r\nvar RENDERER_IDS = new Ids();\r\n\r\nvar TASK_BORDER_RADIUS = 10;\r\nvar INNER_OUTER_DIST = 3;\r\n\r\nvar DEFAULT_FILL_OPACITY = .95,\r\n    HIGH_FILL_OPACITY = .35;\r\n\r\n\r\nexport default function BpmnRenderer(\r\n    config, eventBus, styles, pathMap,\r\n    canvas, textRenderer, priority) {\r\n\r\n  BaseRenderer.call(this, eventBus, priority);\r\n\r\n  var defaultFillColor = config && config.defaultFillColor,\r\n      defaultStrokeColor = config && config.defaultStrokeColor;\r\n\r\n  var rendererId = RENDERER_IDS.next();\r\n\r\n  var markers = {};\r\n\r\n  var computeStyle = styles.computeStyle;\r\n\r\n  function addMarker(id, options) {\r\n    var attrs = assign({\r\n      fill: 'black',\r\n      strokeWidth: 1,\r\n      strokeLinecap: 'round',\r\n      strokeDasharray: 'none'\r\n    }, options.attrs);\r\n\r\n    var ref = options.ref || { x: 0, y: 0 };\r\n\r\n    var scale = options.scale || 1;\r\n\r\n    // fix for safari / chrome / firefox bug not correctly\r\n    // resetting stroke dash array\r\n    if (attrs.strokeDasharray === 'none') {\r\n      attrs.strokeDasharray = [10000, 1];\r\n    }\r\n\r\n    var marker = svgCreate('marker');\r\n\r\n    svgAttr(options.element, attrs);\r\n\r\n    svgAppend(marker, options.element);\r\n\r\n    svgAttr(marker, {\r\n      id: id,\r\n      viewBox: '0 0 20 20',\r\n      refX: ref.x,\r\n      refY: ref.y,\r\n      markerWidth: 20 * scale,\r\n      markerHeight: 20 * scale,\r\n      orient: 'auto'\r\n    });\r\n\r\n    var defs = domQuery('defs', canvas._svg);\r\n\r\n    if (!defs) {\r\n      defs = svgCreate('defs');\r\n\r\n      svgAppend(canvas._svg, defs);\r\n    }\r\n\r\n    svgAppend(defs, marker);\r\n\r\n    markers[id] = marker;\r\n  }\r\n\r\n  function marker(type, fill, stroke) {\r\n    var id = type + '-' + fill + '-' + stroke + '-' + rendererId;\r\n\r\n    if (!markers[id]) {\r\n      createMarker(type, fill, stroke);\r\n    }\r\n\r\n    return 'url(#' + id + ')';\r\n  }\r\n\r\n  function createMarker(type, fill, stroke) {\r\n    var id = type + '-' + fill + '-' + stroke + '-' + rendererId;\r\n\r\n    if (type === 'sequenceflow-end') {\r\n      var sequenceflowEnd = svgCreate('path');\r\n      svgAttr(sequenceflowEnd, { d: 'M 1 5 L 11 10 L 1 15 Z' });\r\n\r\n      addMarker(id, {\r\n        element: sequenceflowEnd,\r\n        ref: { x: 11, y: 10 },\r\n        scale: 0.5,\r\n        attrs: {\r\n          fill: stroke,\r\n          stroke: stroke\r\n        }\r\n      });\r\n    }\r\n\r\n    if (type === 'messageflow-start') {\r\n      var messageflowStart = svgCreate('circle');\r\n      svgAttr(messageflowStart, { cx: 6, cy: 6, r: 3.5 });\r\n\r\n      addMarker(id, {\r\n        element: messageflowStart,\r\n        attrs: {\r\n          fill: fill,\r\n          stroke: stroke\r\n        },\r\n        ref: { x: 6, y: 6 }\r\n      });\r\n    }\r\n\r\n    if (type === 'messageflow-end') {\r\n      var messageflowEnd = svgCreate('path');\r\n      svgAttr(messageflowEnd, { d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z' });\r\n\r\n      addMarker(id, {\r\n        element: messageflowEnd,\r\n        attrs: {\r\n          fill: fill,\r\n          stroke: stroke,\r\n          strokeLinecap: 'butt'\r\n        },\r\n        ref: { x: 8.5, y: 5 }\r\n      });\r\n    }\r\n\r\n    if (type === 'association-start') {\r\n      var associationStart = svgCreate('path');\r\n      svgAttr(associationStart, { d: 'M 11 5 L 1 10 L 11 15' });\r\n\r\n      addMarker(id, {\r\n        element: associationStart,\r\n        attrs: {\r\n          fill: 'none',\r\n          stroke: stroke,\r\n          strokeWidth: 1.5\r\n        },\r\n        ref: { x: 1, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n\r\n    if (type === 'association-end') {\r\n      var associationEnd = svgCreate('path');\r\n      svgAttr(associationEnd, { d: 'M 1 5 L 11 10 L 1 15' });\r\n\r\n      addMarker(id, {\r\n        element: associationEnd,\r\n        attrs: {\r\n          fill: 'none',\r\n          stroke: stroke,\r\n          strokeWidth: 1.5\r\n        },\r\n        ref: { x: 12, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n\r\n    if (type === 'conditional-flow-marker') {\r\n      var conditionalflowMarker = svgCreate('path');\r\n      svgAttr(conditionalflowMarker, { d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z' });\r\n\r\n      addMarker(id, {\r\n        element: conditionalflowMarker,\r\n        attrs: {\r\n          fill: fill,\r\n          stroke: stroke\r\n        },\r\n        ref: { x: -1, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n\r\n    if (type === 'conditional-default-flow-marker') {\r\n      var conditionaldefaultflowMarker = svgCreate('path');\r\n      svgAttr(conditionaldefaultflowMarker, { d: 'M 6 4 L 10 16' });\r\n\r\n      addMarker(id, {\r\n        element: conditionaldefaultflowMarker,\r\n        attrs: {\r\n          stroke: stroke\r\n        },\r\n        ref: { x: 0, y: 10 },\r\n        scale: 0.5\r\n      });\r\n    }\r\n  }\r\n\r\n  function drawCircle(parentGfx, width, height, offset, attrs) {\r\n\r\n    if (isObject(offset)) {\r\n      attrs = offset;\r\n      offset = 0;\r\n    }\r\n\r\n    offset = offset || 0;\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    if (attrs.fill === 'none') {\r\n      delete attrs.fillOpacity;\r\n    }\r\n\r\n    var cx = width / 2,\r\n        cy = height / 2;\r\n\r\n    var circle = svgCreate('circle');\r\n    svgAttr(circle, {\r\n      cx: cx,\r\n      cy: cy,\r\n      r: Math.round((width + height) / 4 - offset)\r\n    });\r\n    svgAttr(circle, attrs);\r\n\r\n    svgAppend(parentGfx, circle);\r\n\r\n    return circle;\r\n  }\r\n\r\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\r\n\r\n    if (isObject(offset)) {\r\n      attrs = offset;\r\n      offset = 0;\r\n    }\r\n\r\n    offset = offset || 0;\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    var rect = svgCreate('rect');\r\n    svgAttr(rect, {\r\n      x: offset,\r\n      y: offset,\r\n      width: width - offset * 2,\r\n      height: height - offset * 2,\r\n      rx: r,\r\n      ry: r\r\n    });\r\n    svgAttr(rect, attrs);\r\n\r\n    svgAppend(parentGfx, rect);\r\n\r\n    return rect;\r\n  }\r\n\r\n  function drawDiamond(parentGfx, width, height, attrs) {\r\n\r\n    var x_2 = width / 2;\r\n    var y_2 = height / 2;\r\n\r\n    var points = [{ x: x_2, y: 0 }, { x: width, y: y_2 }, { x: x_2, y: height }, { x: 0, y: y_2 }];\r\n\r\n    var pointsString = points.map(function(point) {\r\n      return point.x + ',' + point.y;\r\n    }).join(' ');\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    var polygon = svgCreate('polygon');\r\n    svgAttr(polygon, {\r\n      points: pointsString\r\n    });\r\n    svgAttr(polygon, attrs);\r\n\r\n    svgAppend(parentGfx, polygon);\r\n\r\n    return polygon;\r\n  }\r\n\r\n  function drawLine(parentGfx, waypoints, attrs) {\r\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'none'\r\n    });\r\n\r\n    var line = createLine(waypoints, attrs);\r\n\r\n    svgAppend(parentGfx, line);\r\n\r\n    return line;\r\n  }\r\n\r\n  function drawPath(parentGfx, d, attrs) {\r\n\r\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\r\n      strokeWidth: 2,\r\n      stroke: 'black'\r\n    });\r\n\r\n    var path = svgCreate('path');\r\n    svgAttr(path, { d: d });\r\n    svgAttr(path, attrs);\r\n\r\n    svgAppend(parentGfx, path);\r\n\r\n    return path;\r\n  }\r\n\r\n  function drawMarker(type, parentGfx, path, attrs) {\r\n    return drawPath(parentGfx, path, assign({ 'data-marker': type }, attrs));\r\n  }\r\n\r\n  function as(type) {\r\n    return function(parentGfx, element) {\r\n      return handlers[type](parentGfx, element);\r\n    };\r\n  }\r\n\r\n  function renderer(type) {\r\n    return handlers[type];\r\n  }\r\n\r\n  function renderEventContent(element, parentGfx) {\r\n\r\n    var event = getSemantic(element);\r\n    var isThrowing = isThrowEvent(event);\r\n\r\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\r\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\r\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\r\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\r\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') &&\r\n      isTypedEvent(event, 'bpmn:TerminateEventDefinition', { parallelMultiple: false })) {\r\n      return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition') &&\r\n      isTypedEvent(event, 'bpmn:TerminateEventDefinition', { parallelMultiple: true })) {\r\n      return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\r\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\r\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\r\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\r\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\r\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\r\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function renderLabel(parentGfx, label, options) {\r\n\r\n    options = assign({\r\n      size: {\r\n        width: 100\r\n      }\r\n    }, options);\r\n\r\n    var text = textRenderer.createText(label || '', options);\r\n\r\n    svgClasses(text).add('djs-label');\r\n\r\n    svgAppend(parentGfx, text);\r\n\r\n    return text;\r\n  }\r\n\r\n  function renderEmbeddedLabel(parentGfx, element, align) {\r\n    var semantic = getSemantic(element);\r\n\r\n    return renderLabel(parentGfx, semantic.name, {\r\n      box: element,\r\n      align: align,\r\n      padding: 5,\r\n      style: {\r\n        fill: getStrokeColor(element, defaultStrokeColor)\r\n      }\r\n    });\r\n  }\r\n\r\n  function renderExternalLabel(parentGfx, element) {\r\n    var semantic = getSemantic(element);\r\n    var box = {\r\n      width: 90,\r\n      height: 30,\r\n      x: element.width / 2 + element.x,\r\n      y: element.height / 2 + element.y\r\n    };\r\n\r\n    return renderLabel(parentGfx, semantic.name, {\r\n      box: box,\r\n      fitBox: true,\r\n      style: assign(\r\n        {},\r\n        textRenderer.getExternalStyle(),\r\n        {\r\n          fill: getStrokeColor(element, defaultStrokeColor)\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  function renderLaneLabel(parentGfx, text, element) {\r\n    var textBox = renderLabel(parentGfx, text, {\r\n      box: {\r\n        height: 30,\r\n        width: element.height\r\n      },\r\n      align: 'center-middle',\r\n      style: {\r\n        fill: getStrokeColor(element, defaultStrokeColor)\r\n      }\r\n    });\r\n\r\n    var top = -1 * element.height;\r\n\r\n    transform(textBox, 0, -top, 270);\r\n  }\r\n\r\n  function createPathFromConnection(connection) {\r\n    var waypoints = connection.waypoints;\r\n\r\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\r\n    for (var i = 1; i < waypoints.length; i++) {\r\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\r\n    }\r\n    return pathData;\r\n  }\r\n\r\n  var handlers = this.handlers = {\r\n    'bpmn:Event': function(parentGfx, element, attrs) {\r\n\r\n      if (!('fillOpacity' in attrs)) {\r\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\r\n      }\r\n\r\n      return drawCircle(parentGfx, element.width, element.height, attrs);\r\n    },\r\n    'bpmn:StartEvent': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      if (!semantic.isInterrupting) {\r\n        attrs = {\r\n          strokeDasharray: '6',\r\n          strokeLinecap: 'round',\r\n          fill: getFillColor(element, defaultFillColor),\r\n          stroke: getStrokeColor(element, defaultStrokeColor)\r\n        };\r\n      }\r\n\r\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\r\n\r\n      renderEventContent(element, parentGfx);\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:MessageEventDefinition': function(parentGfx, element, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\r\n        xScaleFactor: 0.9,\r\n        yScaleFactor: 0.9,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.235,\r\n          my: 0.315\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor) : getFillColor(element, defaultFillColor);\r\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor) : getStrokeColor(element, defaultStrokeColor);\r\n\r\n      var messagePath = drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: stroke\r\n      });\r\n\r\n      return messagePath;\r\n    },\r\n    'bpmn:TimerEventDefinition': function(parentGfx, element) {\r\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\r\n        strokeWidth: 2,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\r\n        xScaleFactor: 0.75,\r\n        yScaleFactor: 0.75,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.5\r\n        }\r\n      });\r\n\r\n      drawPath(parentGfx, pathData, {\r\n        strokeWidth: 2,\r\n        strokeLinecap: 'square',\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      for (var i = 0;i < 12; i++) {\r\n\r\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\r\n          xScaleFactor: 0.75,\r\n          yScaleFactor: 0.75,\r\n          containerWidth: element.width,\r\n          containerHeight: element.height,\r\n          position: {\r\n            mx: 0.5,\r\n            my: 0.5\r\n          }\r\n        });\r\n\r\n        var width = element.width / 2;\r\n        var height = element.height / 2;\r\n\r\n        drawPath(parentGfx, linePathData, {\r\n          strokeWidth: 1,\r\n          strokeLinecap: 'square',\r\n          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')',\r\n          stroke: getStrokeColor(element, defaultStrokeColor)\r\n        });\r\n      }\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:EscalationEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.2\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:ConditionalEventDefinition': function(parentGfx, event) {\r\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.222\r\n        }\r\n      });\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:LinkEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.57,\r\n          my: 0.263\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:ErrorEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\r\n        xScaleFactor: 1.1,\r\n        yScaleFactor: 1.1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.2,\r\n          my: 0.722\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:CancelEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\r\n        xScaleFactor: 1.0,\r\n        yScaleFactor: 1.0,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.638,\r\n          my: -0.055\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      var path = drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n\r\n      rotate(path, 45);\r\n\r\n      return path;\r\n    },\r\n    'bpmn:CompensateEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.22,\r\n          my: 0.5\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:SignalEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\r\n        xScaleFactor: 0.9,\r\n        yScaleFactor: 0.9,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.5,\r\n          my: 0.2\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill,\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:MultipleEventDefinition': function(parentGfx, event, isThrowing) {\r\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\r\n        xScaleFactor: 1.1,\r\n        yScaleFactor: 1.1,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.222,\r\n          my: 0.36\r\n        }\r\n      });\r\n\r\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: fill\r\n      });\r\n    },\r\n    'bpmn:ParallelMultipleEventDefinition': function(parentGfx, event) {\r\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\r\n        xScaleFactor: 1.2,\r\n        yScaleFactor: 1.2,\r\n        containerWidth: event.width,\r\n        containerHeight: event.height,\r\n        position: {\r\n          mx: 0.458,\r\n          my: 0.194\r\n        }\r\n      });\r\n\r\n      return drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(event, defaultStrokeColor),\r\n        stroke: getStrokeColor(event, defaultStrokeColor)\r\n      });\r\n    },\r\n    'bpmn:EndEvent': function(parentGfx, element) {\r\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\r\n        strokeWidth: 4,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      renderEventContent(element, parentGfx, true);\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:TerminateEventDefinition': function(parentGfx, element) {\r\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\r\n        strokeWidth: 4,\r\n        fill: getStrokeColor(element, defaultStrokeColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return circle;\r\n    },\r\n    'bpmn:IntermediateEvent': function(parentGfx, element) {\r\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      /* inner */\r\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, 'none'),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      renderEventContent(element, parentGfx);\r\n\r\n      return outer;\r\n    },\r\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\r\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\r\n\r\n    'bpmn:Activity': function(parentGfx, element, attrs) {\r\n\r\n      attrs = attrs || {};\r\n\r\n      if (!('fillOpacity' in attrs)) {\r\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\r\n      }\r\n\r\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\r\n    },\r\n\r\n    'bpmn:Task': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\r\n\r\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\r\n      attachTaskMarkers(parentGfx, element);\r\n\r\n      return rect;\r\n    },\r\n    'bpmn:ServiceTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\r\n        abspos: {\r\n          x: 12,\r\n          y: 18\r\n        }\r\n      });\r\n\r\n      /* service bg */ drawPath(parentGfx, pathDataBG, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\r\n        abspos: {\r\n          x: 17.2,\r\n          y: 18\r\n        }\r\n      });\r\n\r\n      /* service fill */ drawPath(parentGfx, fillPathData, {\r\n        strokeWidth: 0,\r\n        fill: getFillColor(element, defaultFillColor)\r\n      });\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\r\n        abspos: {\r\n          x: 17,\r\n          y: 22\r\n        }\r\n      });\r\n\r\n      /* service */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:UserTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var x = 15;\r\n      var y = 12;\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\r\n        abspos: {\r\n          x: x,\r\n          y: y\r\n        }\r\n      });\r\n\r\n      /* user path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 0.5,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\r\n        abspos: {\r\n          x: x,\r\n          y: y\r\n        }\r\n      });\r\n\r\n      /* user2 path */ drawPath(parentGfx, pathData2, {\r\n        strokeWidth: 0.5,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\r\n        abspos: {\r\n          x: x,\r\n          y: y\r\n        }\r\n      });\r\n\r\n      /* user3 path */ drawPath(parentGfx, pathData3, {\r\n        strokeWidth: 0.5,\r\n        fill: getStrokeColor(element, defaultStrokeColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:ManualTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\r\n        abspos: {\r\n          x: 17,\r\n          y: 15\r\n        }\r\n      });\r\n\r\n      /* manual path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 0.5, // 0.25,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:SendTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: 21,\r\n        containerHeight: 14,\r\n        position: {\r\n          mx: 0.285,\r\n          my: 0.357\r\n        }\r\n      });\r\n\r\n      /* send path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element, defaultStrokeColor),\r\n        stroke: getFillColor(element, defaultFillColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:ReceiveTask' : function(parentGfx, element) {\r\n      var semantic = getSemantic(element);\r\n\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n      var pathData;\r\n\r\n      if (semantic.instantiate) {\r\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, { strokeWidth: 1 });\r\n\r\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\r\n          abspos: {\r\n            x: 7.77,\r\n            y: 9.52\r\n          }\r\n        });\r\n      } else {\r\n\r\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\r\n          xScaleFactor: 0.9,\r\n          yScaleFactor: 0.9,\r\n          containerWidth: 21,\r\n          containerHeight: 14,\r\n          position: {\r\n            mx: 0.3,\r\n            my: 0.4\r\n          }\r\n        });\r\n      }\r\n\r\n      /* receive path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:ScriptTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\r\n        abspos: {\r\n          x: 15,\r\n          y: 20\r\n        }\r\n      });\r\n\r\n      /* script path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:BusinessRuleTask': function(parentGfx, element) {\r\n      var task = renderer('bpmn:Task')(parentGfx, element);\r\n\r\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\r\n        abspos: {\r\n          x: 8,\r\n          y: 8\r\n        }\r\n      });\r\n\r\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\r\n      svgAttr(businessHeaderPath, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, '#aaaaaa'),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\r\n        abspos: {\r\n          x: 8,\r\n          y: 8\r\n        }\r\n      });\r\n\r\n      var businessPath = drawPath(parentGfx, headerData);\r\n      svgAttr(businessPath, {\r\n        strokeWidth: 1,\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return task;\r\n    },\r\n    'bpmn:SubProcess': function(parentGfx, element, attrs) {\r\n      attrs = assign({\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      }, attrs);\r\n\r\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\r\n\r\n      var expanded = isExpanded(element);\r\n\r\n      if (isEventSubProcess(element)) {\r\n        svgAttr(rect, {\r\n          strokeDasharray: '1,2'\r\n        });\r\n      }\r\n\r\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\r\n\r\n      if (expanded) {\r\n        attachTaskMarkers(parentGfx, element);\r\n      } else {\r\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\r\n      }\r\n\r\n      return rect;\r\n    },\r\n    'bpmn:AdHocSubProcess': function(parentGfx, element) {\r\n      return renderer('bpmn:SubProcess')(parentGfx, element);\r\n    },\r\n    'bpmn:Transaction': function(parentGfx, element) {\r\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\r\n\r\n      var innerAttrs = styles.style([ 'no-fill', 'no-events' ], {\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      /* inner path */ drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\r\n\r\n      return outer;\r\n    },\r\n    'bpmn:CallActivity': function(parentGfx, element) {\r\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\r\n        strokeWidth: 5\r\n      });\r\n    },\r\n    'bpmn:Participant': function(parentGfx, element) {\r\n\r\n      var attrs = {\r\n        fillOpacity: DEFAULT_FILL_OPACITY,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\r\n\r\n      var expandedPool = isExpanded(element);\r\n\r\n      if (expandedPool) {\r\n        drawLine(parentGfx, [\r\n          { x: 30, y: 0 },\r\n          { x: 30, y: element.height }\r\n        ], {\r\n          stroke: getStrokeColor(element, defaultStrokeColor)\r\n        });\r\n        var text = getSemantic(element).name;\r\n        renderLaneLabel(parentGfx, text, element);\r\n      } else {\r\n        // Collapsed pool draw text inline\r\n        var text2 = getSemantic(element).name;\r\n        renderLabel(parentGfx, text2, {\r\n          box: element, align: 'center-middle',\r\n          style: {\r\n            fill: getStrokeColor(element, defaultStrokeColor)\r\n          }\r\n        });\r\n      }\r\n\r\n      var participantMultiplicity = !!(getSemantic(element).participantMultiplicity);\r\n\r\n      if (participantMultiplicity) {\r\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\r\n      }\r\n\r\n      return lane;\r\n    },\r\n    'bpmn:Lane': function(parentGfx, element, attrs) {\r\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\r\n        fill: getFillColor(element, defaultFillColor),\r\n        fillOpacity: HIGH_FILL_OPACITY,\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      }, attrs));\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      if (semantic.$type === 'bpmn:Lane') {\r\n        var text = semantic.name;\r\n        renderLaneLabel(parentGfx, text, element);\r\n      }\r\n\r\n      return rect;\r\n    },\r\n    'bpmn:InclusiveGateway': function(parentGfx, element) {\r\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\r\n\r\n      /* circle path */\r\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\r\n        strokeWidth: 2.5,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:ExclusiveGateway': function(parentGfx, element) {\r\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\r\n        xScaleFactor: 0.4,\r\n        yScaleFactor: 0.4,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.32,\r\n          my: 0.3\r\n        }\r\n      });\r\n\r\n      if ((getDi(element).isMarkerVisible)) {\r\n        drawPath(parentGfx, pathData, {\r\n          strokeWidth: 1,\r\n          fill: getStrokeColor(element, defaultStrokeColor),\r\n          stroke: getStrokeColor(element, defaultStrokeColor)\r\n        });\r\n      }\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:ComplexGateway': function(parentGfx, element) {\r\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\r\n        xScaleFactor: 0.5,\r\n        yScaleFactor:0.5,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.46,\r\n          my: 0.26\r\n        }\r\n      });\r\n\r\n      /* complex path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element, defaultStrokeColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:ParallelGateway': function(parentGfx, element) {\r\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\r\n\r\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\r\n        xScaleFactor: 0.6,\r\n        yScaleFactor:0.6,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.46,\r\n          my: 0.2\r\n        }\r\n      });\r\n\r\n      /* parallel path */ drawPath(parentGfx, pathData, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element, defaultStrokeColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:EventBasedGateway': function(parentGfx, element) {\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\r\n\r\n      /* outer circle path */ drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\r\n        strokeWidth: 1,\r\n        fill: 'none',\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var type = semantic.eventGatewayType;\r\n      var instantiate = !!semantic.instantiate;\r\n\r\n      function drawEvent() {\r\n\r\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\r\n          xScaleFactor: 0.18,\r\n          yScaleFactor: 0.18,\r\n          containerWidth: element.width,\r\n          containerHeight: element.height,\r\n          position: {\r\n            mx: 0.36,\r\n            my: 0.44\r\n          }\r\n        });\r\n\r\n        var attrs = {\r\n          strokeWidth: 2,\r\n          fill: getFillColor(element, 'none'),\r\n          stroke: getStrokeColor(element, defaultStrokeColor)\r\n        };\r\n\r\n        /* event path */ drawPath(parentGfx, pathData, attrs);\r\n      }\r\n\r\n      if (type === 'Parallel') {\r\n\r\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\r\n          xScaleFactor: 0.4,\r\n          yScaleFactor:0.4,\r\n          containerWidth: element.width,\r\n          containerHeight: element.height,\r\n          position: {\r\n            mx: 0.474,\r\n            my: 0.296\r\n          }\r\n        });\r\n\r\n        var parallelPath = drawPath(parentGfx, pathData);\r\n        svgAttr(parallelPath, {\r\n          strokeWidth: 1,\r\n          fill: 'none'\r\n        });\r\n      } else if (type === 'Exclusive') {\r\n\r\n        if (!instantiate) {\r\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\r\n          svgAttr(innerCircle, {\r\n            strokeWidth: 1,\r\n            fill: 'none',\r\n            stroke: getStrokeColor(element, defaultStrokeColor)\r\n          });\r\n        }\r\n\r\n        drawEvent();\r\n      }\r\n\r\n\r\n      return diamond;\r\n    },\r\n    'bpmn:Gateway': function(parentGfx, element) {\r\n      var attrs = {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        fillOpacity: DEFAULT_FILL_OPACITY,\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      return drawDiamond(parentGfx, element.width, element.height, attrs);\r\n    },\r\n    'bpmn:SequenceFlow': function(parentGfx, element) {\r\n      var pathData = createPathFromConnection(element);\r\n\r\n      var fill = getFillColor(element, defaultFillColor),\r\n          stroke = getStrokeColor(element, defaultStrokeColor);\r\n\r\n      var attrs = {\r\n        strokeLinejoin: 'round',\r\n        markerEnd: marker('sequenceflow-end', fill, stroke),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      var path = drawPath(parentGfx, pathData, attrs);\r\n\r\n      var sequenceFlow = getSemantic(element);\r\n\r\n      var source;\r\n\r\n      if (element.source) {\r\n        source = element.source.businessObject;\r\n\r\n        // conditional flow marker\r\n        if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\r\n          svgAttr(path, {\r\n            markerStart: marker('conditional-flow-marker', fill, stroke)\r\n          });\r\n        }\r\n\r\n        // default marker\r\n        if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) &&\r\n            source.default === sequenceFlow) {\r\n          svgAttr(path, {\r\n            markerStart: marker('conditional-default-flow-marker', fill, stroke)\r\n          });\r\n        }\r\n      }\r\n\r\n      return path;\r\n    },\r\n    'bpmn:Association': function(parentGfx, element, attrs) {\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      var fill = getFillColor(element, defaultFillColor),\r\n          stroke = getStrokeColor(element, defaultStrokeColor);\r\n\r\n      attrs = assign({\r\n        strokeDasharray: '0.5, 5',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      }, attrs || {});\r\n\r\n      if (semantic.associationDirection === 'One' ||\r\n          semantic.associationDirection === 'Both') {\r\n        attrs.markerEnd = marker('association-end', fill, stroke);\r\n      }\r\n\r\n      if (semantic.associationDirection === 'Both') {\r\n        attrs.markerStart = marker('association-start', fill, stroke);\r\n      }\r\n\r\n      return drawLine(parentGfx, element.waypoints, attrs);\r\n    },\r\n    'bpmn:DataInputAssociation': function(parentGfx, element) {\r\n      var fill = getFillColor(element, defaultFillColor),\r\n          stroke = getStrokeColor(element, defaultStrokeColor);\r\n\r\n      return renderer('bpmn:Association')(parentGfx, element, {\r\n        markerEnd: marker('association-end', fill, stroke)\r\n      });\r\n    },\r\n    'bpmn:DataOutputAssociation': function(parentGfx, element) {\r\n      var fill = getFillColor(element, defaultFillColor),\r\n          stroke = getStrokeColor(element, defaultStrokeColor);\r\n\r\n      return renderer('bpmn:Association')(parentGfx, element, {\r\n        markerEnd: marker('association-end', fill, stroke)\r\n      });\r\n    },\r\n    'bpmn:MessageFlow': function(parentGfx, element) {\r\n\r\n      var semantic = getSemantic(element),\r\n          di = getDi(element);\r\n\r\n      var fill = getFillColor(element, defaultFillColor),\r\n          stroke = getStrokeColor(element, defaultStrokeColor);\r\n\r\n      var pathData = createPathFromConnection(element);\r\n\r\n      var attrs = {\r\n        markerEnd: marker('messageflow-end', fill, stroke),\r\n        markerStart: marker('messageflow-start', fill, stroke),\r\n        strokeDasharray: '10, 12',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        strokeWidth: '1.5px',\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      var path = drawPath(parentGfx, pathData, attrs);\r\n\r\n      if (semantic.messageRef) {\r\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\r\n\r\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\r\n          abspos: {\r\n            x: midPoint.x,\r\n            y: midPoint.y\r\n          }\r\n        });\r\n\r\n        var messageAttrs = { strokeWidth: 1 };\r\n\r\n        if (di.messageVisibleKind === 'initiating') {\r\n          messageAttrs.fill = 'white';\r\n          messageAttrs.stroke = 'black';\r\n        } else {\r\n          messageAttrs.fill = '#888';\r\n          messageAttrs.stroke = 'white';\r\n        }\r\n\r\n        drawPath(parentGfx, markerPathData, messageAttrs);\r\n      }\r\n\r\n      return path;\r\n    },\r\n    'bpmn:DataObject': function(parentGfx, element) {\r\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.474,\r\n          my: 0.296\r\n        }\r\n      });\r\n\r\n      var elementObject = drawPath(parentGfx, pathData, {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        fillOpacity: DEFAULT_FILL_OPACITY,\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var semantic = getSemantic(element);\r\n\r\n      if (isCollection(semantic)) {\r\n        renderDataItemCollection(parentGfx, element);\r\n      }\r\n\r\n      return elementObject;\r\n    },\r\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\r\n    'bpmn:DataInput': function(parentGfx, element) {\r\n\r\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\r\n\r\n      // page\r\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\r\n\r\n      /* input arrow path */ drawPath(parentGfx, arrowPathData, { strokeWidth: 1 });\r\n\r\n      return elementObject;\r\n    },\r\n    'bpmn:DataOutput': function(parentGfx, element) {\r\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\r\n\r\n      // page\r\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\r\n\r\n      /* output arrow path */ drawPath(parentGfx, arrowPathData, {\r\n        strokeWidth: 1,\r\n        fill: 'black'\r\n      });\r\n\r\n      return elementObject;\r\n    },\r\n    'bpmn:DataStoreReference': function(parentGfx, element) {\r\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0,\r\n          my: 0.133\r\n        }\r\n      });\r\n\r\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\r\n        strokeWidth: 2,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        fillOpacity: DEFAULT_FILL_OPACITY,\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      return elementStore;\r\n    },\r\n    'bpmn:BoundaryEvent': function(parentGfx, element) {\r\n\r\n      var semantic = getSemantic(element),\r\n          cancel = semantic.cancelActivity;\r\n\r\n      var attrs = {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      };\r\n\r\n      if (!cancel) {\r\n        attrs.strokeDasharray = '6';\r\n        attrs.strokeLinecap = 'round';\r\n      }\r\n\r\n      // apply fillOpacity\r\n      var outerAttrs = assign({}, attrs, {\r\n        fillOpacity: 1\r\n      });\r\n\r\n      // apply no-fill\r\n      var innerAttrs = assign({}, attrs, {\r\n        fill: 'none'\r\n      });\r\n\r\n      var outer = renderer('bpmn:Event')(parentGfx, element, outerAttrs);\r\n\r\n      /* inner path */ drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, innerAttrs);\r\n\r\n      renderEventContent(element, parentGfx);\r\n\r\n      return outer;\r\n    },\r\n    'bpmn:Group': function(parentGfx, element) {\r\n      var semantic = getSemantic(element),\r\n          di = getDi(element);\r\n\r\n      var group = drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\r\n        strokeWidth: 1,\r\n        strokeDasharray: '8,3,1,3',\r\n        fill: 'none',\r\n        pointerEvents: 'none'\r\n      });\r\n\r\n      var categoryValueRef = semantic.categoryValueRef || {};\r\n\r\n      if (categoryValueRef.value) {\r\n        var box = di.label ? di.label.bounds : element;\r\n\r\n        renderLabel(parentGfx, categoryValueRef.value, {\r\n          box: box,\r\n          style: {\r\n            fill: getStrokeColor(element, defaultStrokeColor)\r\n          }\r\n        });\r\n      }\r\n\r\n      return group;\r\n    },\r\n    'label': function(parentGfx, element) {\r\n      return renderExternalLabel(parentGfx, element);\r\n    },\r\n    'bpmn:TextAnnotation': function(parentGfx, element) {\r\n      var style = {\r\n        'fill': 'none',\r\n        'stroke': 'none'\r\n      };\r\n\r\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\r\n\r\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.0\r\n        }\r\n      });\r\n\r\n      drawPath(parentGfx, textPathData, {\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      var text = getSemantic(element).text || '';\r\n      renderLabel(parentGfx, text, {\r\n        box: element,\r\n        align: 'left-top',\r\n        padding: 5,\r\n        style: {\r\n          fill: getStrokeColor(element, defaultStrokeColor)\r\n        }\r\n      });\r\n\r\n      return textElement;\r\n    },\r\n    'ParticipantMultiplicityMarker': function(parentGfx, element) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2) / element.width),\r\n          my: (element.height - 15) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n    },\r\n    'SubProcessMarker': function(parentGfx, element) {\r\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n\r\n      // Process marker is placed in the middle of the box\r\n      // therefore fixed values can be used here\r\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\r\n\r\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\r\n        xScaleFactor: 1.5,\r\n        yScaleFactor: 1.5,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: (element.width / 2 - 7.5) / element.width,\r\n          my: (element.height - 20) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('sub-process', parentGfx, markerPath, {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n    },\r\n    'ParallelMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.parallel) / element.width),\r\n          my: (element.height - 20) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('parallel', parentGfx, markerPath, {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n    },\r\n    'SequentialMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.seq) / element.width),\r\n          my: (element.height - 19) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('sequential', parentGfx, markerPath, {\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n    },\r\n    'CompensationMarker': function(parentGfx, element, position) {\r\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.compensation) / element.width),\r\n          my: (element.height - 13) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('compensation', parentGfx, markerMath, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n    },\r\n    'LoopMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.loop) / element.width),\r\n          my: (element.height - 7) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('loop', parentGfx, markerPath, {\r\n        strokeWidth: 1,\r\n        fill: getFillColor(element, defaultFillColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor),\r\n        strokeLinecap: 'round',\r\n        strokeMiterlimit: 0.5\r\n      });\r\n    },\r\n    'AdhocMarker': function(parentGfx, element, position) {\r\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: ((element.width / 2 + position.adhoc) / element.width),\r\n          my: (element.height - 15) / element.height\r\n        }\r\n      });\r\n\r\n      drawMarker('adhoc', parentGfx, markerPath, {\r\n        strokeWidth: 1,\r\n        fill: getStrokeColor(element, defaultStrokeColor),\r\n        stroke: getStrokeColor(element, defaultStrokeColor)\r\n      });\r\n    }\r\n  };\r\n\r\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\r\n    var obj = getSemantic(element);\r\n\r\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\r\n    var position;\r\n\r\n    if (subprocess) {\r\n      position = {\r\n        seq: -21,\r\n        parallel: -22,\r\n        compensation: -42,\r\n        loop: -18,\r\n        adhoc: 10\r\n      };\r\n    } else {\r\n      position = {\r\n        seq: -3,\r\n        parallel: -6,\r\n        compensation: -27,\r\n        loop: 0,\r\n        adhoc: 10\r\n      };\r\n    }\r\n\r\n    forEach(taskMarkers, function(marker) {\r\n      renderer(marker)(parentGfx, element, position);\r\n    });\r\n\r\n    if (obj.isForCompensation) {\r\n      renderer('CompensationMarker')(parentGfx, element, position);\r\n    }\r\n\r\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\r\n      renderer('AdhocMarker')(parentGfx, element, position);\r\n    }\r\n\r\n    var loopCharacteristics = obj.loopCharacteristics,\r\n        isSequential = loopCharacteristics && loopCharacteristics.isSequential;\r\n\r\n    if (loopCharacteristics) {\r\n\r\n      if (isSequential === undefined) {\r\n        renderer('LoopMarker')(parentGfx, element, position);\r\n      }\r\n\r\n      if (isSequential === false) {\r\n        renderer('ParallelMarker')(parentGfx, element, position);\r\n      }\r\n\r\n      if (isSequential === true) {\r\n        renderer('SequentialMarker')(parentGfx, element, position);\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderDataItemCollection(parentGfx, element) {\r\n\r\n    var yPosition = (element.height - 16) / element.height;\r\n\r\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\r\n      xScaleFactor: 1,\r\n      yScaleFactor: 1,\r\n      containerWidth: element.width,\r\n      containerHeight: element.height,\r\n      position: {\r\n        mx: 0.451,\r\n        my: yPosition\r\n      }\r\n    });\r\n\r\n    /* collection path */ drawPath(parentGfx, pathData, {\r\n      strokeWidth: 2\r\n    });\r\n  }\r\n\r\n\r\n  // extension API, use at your own risk\r\n  this._drawPath = drawPath;\r\n\r\n}\r\n\r\n\r\ninherits(BpmnRenderer, BaseRenderer);\r\n\r\nBpmnRenderer.$inject = [\r\n  'config.bpmnRenderer',\r\n  'eventBus',\r\n  'styles',\r\n  'pathMap',\r\n  'canvas',\r\n  'textRenderer'\r\n];\r\n\r\n\r\nBpmnRenderer.prototype.canRender = function(element) {\r\n  return is(element, 'bpmn:BaseElement');\r\n};\r\n\r\nBpmnRenderer.prototype.drawShape = function(parentGfx, element) {\r\n  var type = element.type;\r\n  var h = this.handlers[type];\r\n\r\n  /* jshint -W040 */\r\n  return h(parentGfx, element);\r\n};\r\n\r\nBpmnRenderer.prototype.drawConnection = function(parentGfx, element) {\r\n  var type = element.type;\r\n  var h = this.handlers[type];\r\n\r\n  /* jshint -W040 */\r\n  return h(parentGfx, element);\r\n};\r\n\r\nBpmnRenderer.prototype.getShapePath = function(element) {\r\n\r\n  if (is(element, 'bpmn:Event')) {\r\n    return getCirclePath(element);\r\n  }\r\n\r\n  if (is(element, 'bpmn:Activity')) {\r\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\r\n  }\r\n\r\n  if (is(element, 'bpmn:Gateway')) {\r\n    return getDiamondPath(element);\r\n  }\r\n\r\n  return getRectPath(element);\r\n};\r\n","/**\r\n * Map containing SVG paths needed by BpmnRenderer.\r\n */\r\n\r\nexport default function PathMap() {\r\n\r\n  /**\r\n   * Contains a map of path elements\r\n   *\r\n   * <h1>Path definition</h1>\r\n   * A parameterized path is defined like this:\r\n   * <pre>\r\n   * 'GATEWAY_PARALLEL': {\r\n   *   d: 'm {mx},{my} {e.x0},0 0,{e.x1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\r\n          '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\r\n   *   height: 17.5,\r\n   *   width:  17.5,\r\n   *   heightElements: [2.5, 7.5],\r\n   *   widthElements: [2.5, 7.5]\r\n   * }\r\n   * </pre>\r\n   * <p>It's important to specify a correct <b>height and width</b> for the path as the scaling\r\n   * is based on the ratio between the specified height and width in this object and the\r\n   * height and width that is set as scale target (Note x,y coordinates will be scaled with\r\n   * individual ratios).</p>\r\n   * <p>The '<b>heightElements</b>' and '<b>widthElements</b>' array must contain the values that will be scaled.\r\n   * The scaling is based on the computed ratios.\r\n   * Coordinates on the y axis should be in the <b>heightElement</b>'s array, they will be scaled using\r\n   * the computed ratio coefficient.\r\n   * In the parameterized path the scaled values can be accessed through the 'e' object in {} brackets.\r\n   *   <ul>\r\n   *    <li>The values for the y axis can be accessed in the path string using {e.y0}, {e.y1}, ....</li>\r\n   *    <li>The values for the x axis can be accessed in the path string using {e.x0}, {e.x1}, ....</li>\r\n   *   </ul>\r\n   *   The numbers x0, x1 respectively y0, y1, ... map to the corresponding array index.\r\n   * </p>\r\n   */\r\n  this.pathMap = {\r\n    'EVENT_MESSAGE': {\r\n      d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [6, 14],\r\n      widthElements: [10.5, 21]\r\n    },\r\n    'EVENT_SIGNAL': {\r\n      d: 'M {mx},{my} l {e.x0},{e.y0} l -{e.x1},0 Z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [18],\r\n      widthElements: [10, 20]\r\n    },\r\n    'EVENT_ESCALATION': {\r\n      d: 'M {mx},{my} l {e.x0},{e.y0} l -{e.x0},-{e.y1} l -{e.x0},{e.y1} Z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [20, 7],\r\n      widthElements: [8]\r\n    },\r\n    'EVENT_CONDITIONAL': {\r\n      d: 'M {e.x0},{e.y0} l {e.x1},0 l 0,{e.y2} l -{e.x1},0 Z ' +\r\n         'M {e.x2},{e.y3} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y4} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y5} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y6} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y7} l {e.x0},0 ' +\r\n         'M {e.x2},{e.y8} l {e.x0},0 ',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [8.5, 14.5, 18, 11.5, 14.5, 17.5, 20.5, 23.5, 26.5],\r\n      widthElements:  [10.5, 14.5, 12.5]\r\n    },\r\n    'EVENT_LINK': {\r\n      d: 'm {mx},{my} 0,{e.y0} -{e.x1},0 0,{e.y1} {e.x1},0 0,{e.y0} {e.x0},-{e.y2} -{e.x0},-{e.y2} z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [4.4375, 6.75, 7.8125],\r\n      widthElements: [9.84375, 13.5]\r\n    },\r\n    'EVENT_ERROR': {\r\n      d: 'm {mx},{my} {e.x0},-{e.y0} {e.x1},-{e.y1} {e.x2},{e.y2} {e.x3},-{e.y3} -{e.x4},{e.y4} -{e.x5},-{e.y5} z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [0.023, 8.737, 8.151, 16.564, 10.591, 8.714],\r\n      widthElements: [0.085, 6.672, 6.97, 4.273, 5.337, 6.636]\r\n    },\r\n    'EVENT_CANCEL_45': {\r\n      d: 'm {mx},{my} -{e.x1},0 0,{e.x0} {e.x1},0 0,{e.y1} {e.x0},0 ' +\r\n        '0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [4.75, 8.5],\r\n      widthElements: [4.75, 8.5]\r\n    },\r\n    'EVENT_COMPENSATION': {\r\n      d: 'm {mx},{my} {e.x0},-{e.y0} 0,{e.y1} z m {e.x1},-{e.y2} {e.x2},-{e.y3} 0,{e.y1} -{e.x2},-{e.y3} z',\r\n      height: 36,\r\n      width: 36,\r\n      heightElements: [6.5, 13, 0.4, 6.1],\r\n      widthElements: [9, 9.3, 8.7]\r\n    },\r\n    'EVENT_TIMER_WH': {\r\n      d: 'M {mx},{my} l {e.x0},-{e.y0} m -{e.x0},{e.y0} l {e.x1},{e.y1} ',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [10, 2],\r\n      widthElements: [3, 7]\r\n    },\r\n    'EVENT_TIMER_LINE': {\r\n      d:  'M {mx},{my} ' +\r\n          'm {e.x0},{e.y0} l -{e.x1},{e.y1} ',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [10, 3],\r\n      widthElements: [0, 0]\r\n    },\r\n    'EVENT_MULTIPLE': {\r\n      d:'m {mx},{my} {e.x1},-{e.y0} {e.x1},{e.y0} -{e.x0},{e.y1} -{e.x2},0 z',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [6.28099, 12.56199],\r\n      widthElements: [3.1405, 9.42149, 12.56198]\r\n    },\r\n    'EVENT_PARALLEL_MULTIPLE': {\r\n      d:'m {mx},{my} {e.x0},0 0,{e.y1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\r\n        '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\r\n      height: 36,\r\n      width:  36,\r\n      heightElements: [2.56228, 7.68683],\r\n      widthElements: [2.56228, 7.68683]\r\n    },\r\n    'GATEWAY_EXCLUSIVE': {\r\n      d:'m {mx},{my} {e.x0},{e.y0} {e.x1},{e.y0} {e.x2},0 {e.x4},{e.y2} ' +\r\n                    '{e.x4},{e.y1} {e.x2},0 {e.x1},{e.y3} {e.x0},{e.y3} ' +\r\n                    '{e.x3},0 {e.x5},{e.y1} {e.x5},{e.y2} {e.x3},0 z',\r\n      height: 17.5,\r\n      width:  17.5,\r\n      heightElements: [8.5, 6.5312, -6.5312, -8.5],\r\n      widthElements:  [6.5, -6.5, 3, -3, 5, -5]\r\n    },\r\n    'GATEWAY_PARALLEL': {\r\n      d:'m {mx},{my} 0,{e.y1} -{e.x1},0 0,{e.y0} {e.x1},0 0,{e.y1} {e.x0},0 ' +\r\n        '0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z',\r\n      height: 30,\r\n      width:  30,\r\n      heightElements: [5, 12.5],\r\n      widthElements: [5, 12.5]\r\n    },\r\n    'GATEWAY_EVENT_BASED': {\r\n      d:'m {mx},{my} {e.x0},{e.y0} {e.x0},{e.y1} {e.x1},{e.y2} {e.x2},0 z',\r\n      height: 11,\r\n      width:  11,\r\n      heightElements: [-6, 6, 12, -12],\r\n      widthElements: [9, -3, -12]\r\n    },\r\n    'GATEWAY_COMPLEX': {\r\n      d:'m {mx},{my} 0,{e.y0} -{e.x0},-{e.y1} -{e.x1},{e.y2} {e.x0},{e.y1} -{e.x2},0 0,{e.y3} ' +\r\n        '{e.x2},0  -{e.x0},{e.y1} l {e.x1},{e.y2} {e.x0},-{e.y1} 0,{e.y0} {e.x3},0 0,-{e.y0} {e.x0},{e.y1} ' +\r\n        '{e.x1},-{e.y2} -{e.x0},-{e.y1} {e.x2},0 0,-{e.y3} -{e.x2},0 {e.x0},-{e.y1} -{e.x1},-{e.y2} ' +\r\n        '-{e.x0},{e.y1} 0,-{e.y0} -{e.x3},0 z',\r\n      height: 17.125,\r\n      width:  17.125,\r\n      heightElements: [4.875, 3.4375, 2.125, 3],\r\n      widthElements: [3.4375, 2.125, 4.875, 3]\r\n    },\r\n    'DATA_OBJECT_PATH': {\r\n      d:'m 0,0 {e.x1},0 {e.x0},{e.y0} 0,{e.y1} -{e.x2},0 0,-{e.y2} {e.x1},0 0,{e.y0} {e.x0},0',\r\n      height: 61,\r\n      width:  51,\r\n      heightElements: [10, 50, 60],\r\n      widthElements: [10, 40, 50, 60]\r\n    },\r\n    'DATA_OBJECT_COLLECTION_PATH': {\r\n      d:'m {mx}, {my} ' +\r\n        'm  0 15  l 0 -15 ' +\r\n        'm  4 15  l 0 -15 ' +\r\n        'm  4 15  l 0 -15 ',\r\n      height: 61,\r\n      width:  51,\r\n      heightElements: [12],\r\n      widthElements: [1, 6, 12, 15]\r\n    },\r\n    'DATA_ARROW': {\r\n      d:'m 5,9 9,0 0,-3 5,5 -5,5 0,-3 -9,0 z',\r\n      height: 61,\r\n      width:  51,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'DATA_STORE': {\r\n      d:'m  {mx},{my} ' +\r\n        'l  0,{e.y2} ' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 ' +\r\n        'l  0,-{e.y2} ' +\r\n        'c -{e.x0},-{e.y1} -{e.x1},-{e.y1} -{e.x2},0' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 ' +\r\n        'm  -{e.x2},{e.y0}' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1} {e.x2},0' +\r\n        'm  -{e.x2},{e.y0}' +\r\n        'c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0',\r\n      height: 61,\r\n      width:  61,\r\n      heightElements: [7, 10, 45],\r\n      widthElements:  [2, 58, 60]\r\n    },\r\n    'TEXT_ANNOTATION': {\r\n      d: 'm {mx}, {my} m 10,0 l -10,0 l 0,{e.y0} l 10,0',\r\n      height: 30,\r\n      width: 10,\r\n      heightElements: [30],\r\n      widthElements: [10]\r\n    },\r\n    'MARKER_SUB_PROCESS': {\r\n      d: 'm{mx},{my} m 7,2 l 0,10 m -5,-5 l 10,0',\r\n      height: 10,\r\n      width: 10,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_PARALLEL': {\r\n      d: 'm{mx},{my} m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10',\r\n      height: 10,\r\n      width: 10,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_SEQUENTIAL': {\r\n      d: 'm{mx},{my} m 0,3 l 10,0 m -10,3 l 10,0 m -10,3 l 10,0',\r\n      height: 10,\r\n      width: 10,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_COMPENSATION': {\r\n      d: 'm {mx},{my} 7,-5 0,10 z m 7.1,-0.3 6.9,-4.7 0,10 -6.9,-4.7 z',\r\n      height: 10,\r\n      width: 21,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_LOOP': {\r\n      d: 'm {mx},{my} c 3.526979,0 6.386161,-2.829858 6.386161,-6.320661 0,-3.490806 -2.859182,-6.320661 ' +\r\n        '-6.386161,-6.320661 -3.526978,0 -6.38616,2.829855 -6.38616,6.320661 0,1.745402 ' +\r\n        '0.714797,3.325567 1.870463,4.469381 0.577834,0.571908 1.265885,1.034728 2.029916,1.35457 ' +\r\n        'l -0.718163,-3.909793 m 0.718163,3.909793 -3.885211,0.802902',\r\n      height: 13.9,\r\n      width: 13.7,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'MARKER_ADHOC': {\r\n      d: 'm {mx},{my} m 0.84461,2.64411 c 1.05533,-1.23780996 2.64337,-2.07882 4.29653,-1.97997996 2.05163,0.0805 ' +\r\n        '3.85579,1.15803 5.76082,1.79107 1.06385,0.34139996 2.24454,0.1438 3.18759,-0.43767 0.61743,-0.33642 ' +\r\n        '1.2775,-0.64078 1.7542,-1.17511 0,0.56023 0,1.12046 0,1.6807 -0.98706,0.96237996 -2.29792,1.62393996 ' +\r\n        '-3.6918,1.66181996 -1.24459,0.0927 -2.46671,-0.2491 -3.59505,-0.74812 -1.35789,-0.55965 ' +\r\n        '-2.75133,-1.33436996 -4.27027,-1.18121996 -1.37741,0.14601 -2.41842,1.13685996 -3.44288,1.96782996 z',\r\n      height: 4,\r\n      width: 15,\r\n      heightElements: [],\r\n      widthElements: []\r\n    },\r\n    'TASK_TYPE_SEND': {\r\n      d: 'm {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}',\r\n      height: 14,\r\n      width:  21,\r\n      heightElements: [6, 14],\r\n      widthElements: [10.5, 21]\r\n    },\r\n    'TASK_TYPE_SCRIPT': {\r\n      d: 'm {mx},{my} c 9.966553,-6.27276 -8.000926,-7.91932 2.968968,-14.938 l -8.802728,0 ' +\r\n        'c -10.969894,7.01868 6.997585,8.66524 -2.968967,14.938 z ' +\r\n        'm -7,-12 l 5,0 ' +\r\n        'm -4.5,3 l 4.5,0 ' +\r\n        'm -3,3 l 5,0' +\r\n        'm -4,3 l 5,0',\r\n      height: 15,\r\n      width:  12.6,\r\n      heightElements: [6, 14],\r\n      widthElements: [10.5, 21]\r\n    },\r\n    'TASK_TYPE_USER_1': {\r\n      d: 'm {mx},{my} c 0.909,-0.845 1.594,-2.049 1.594,-3.385 0,-2.554 -1.805,-4.62199999 ' +\r\n        '-4.357,-4.62199999 -2.55199998,0 -4.28799998,2.06799999 -4.28799998,4.62199999 0,1.348 ' +\r\n        '0.974,2.562 1.89599998,3.405 -0.52899998,0.187 -5.669,2.097 -5.794,4.7560005 v 6.718 ' +\r\n        'h 17 v -6.718 c 0,-2.2980005 -5.5279996,-4.5950005 -6.0509996,-4.7760005 z' +\r\n        'm -8,6 l 0,5.5 m 11,0 l 0,-5'\r\n    },\r\n    'TASK_TYPE_USER_2': {\r\n      d: 'm {mx},{my} m 2.162,1.009 c 0,2.4470005 -2.158,4.4310005 -4.821,4.4310005 ' +\r\n        '-2.66499998,0 -4.822,-1.981 -4.822,-4.4310005 '\r\n    },\r\n    'TASK_TYPE_USER_3': {\r\n      d: 'm {mx},{my} m -6.9,-3.80 c 0,0 2.25099998,-2.358 4.27399998,-1.177 2.024,1.181 4.221,1.537 ' +\r\n        '4.124,0.965 -0.098,-0.57 -0.117,-3.79099999 -4.191,-4.13599999 -3.57499998,0.001 ' +\r\n        '-4.20799998,3.36699999 -4.20699998,4.34799999 z'\r\n    },\r\n    'TASK_TYPE_MANUAL': {\r\n      d: 'm {mx},{my} c 0.234,-0.01 5.604,0.008 8.029,0.004 0.808,0 1.271,-0.172 1.417,-0.752 0.227,-0.898 ' +\r\n        '-0.334,-1.314 -1.338,-1.316 -2.467,-0.01 -7.886,-0.004 -8.108,-0.004 -0.014,-0.079 0.016,-0.533 0,-0.61 ' +\r\n        '0.195,-0.042 8.507,0.006 9.616,0.002 0.877,-0.007 1.35,-0.438 1.353,-1.208 0.003,-0.768 -0.479,-1.09 ' +\r\n        '-1.35,-1.091 -2.968,-0.002 -9.619,-0.013 -9.619,-0.013 v -0.591 c 0,0 5.052,-0.016 7.225,-0.016 ' +\r\n        '0.888,-0.002 1.354,-0.416 1.351,-1.193 -0.006,-0.761 -0.492,-1.196 -1.361,-1.196 -3.473,-0.005 ' +\r\n        '-10.86,-0.003 -11.0829995,-0.003 -0.022,-0.047 -0.045,-0.094 -0.069,-0.139 0.3939995,-0.319 ' +\r\n        '2.0409995,-1.626 2.4149995,-2.017 0.469,-0.4870005 0.519,-1.1650005 0.162,-1.6040005 -0.414,-0.511 ' +\r\n        '-0.973,-0.5 -1.48,-0.236 -1.4609995,0.764 -6.5999995,3.6430005 -7.7329995,4.2710005 -0.9,0.499 ' +\r\n        '-1.516,1.253 -1.882,2.19 -0.37000002,0.95 -0.17,2.01 -0.166,2.979 0.004,0.718 -0.27300002,1.345 ' +\r\n        '-0.055,2.063 0.629,2.087 2.425,3.312 4.859,3.318 4.6179995,0.014 9.2379995,-0.139 13.8569995,-0.158 ' +\r\n        '0.755,-0.004 1.171,-0.301 1.182,-1.033 0.012,-0.754 -0.423,-0.969 -1.183,-0.973 -1.778,-0.01 ' +\r\n        '-5.824,-0.004 -6.04,-0.004 10e-4,-0.084 0.003,-0.586 10e-4,-0.67 z'\r\n    },\r\n    'TASK_TYPE_INSTANTIATING_SEND': {\r\n      d: 'm {mx},{my} l 0,8.4 l 12.6,0 l 0,-8.4 z l 6.3,3.6 l 6.3,-3.6'\r\n    },\r\n    'TASK_TYPE_SERVICE': {\r\n      d: 'm {mx},{my} v -1.71335 c 0.352326,-0.0705 0.703932,-0.17838 1.047628,-0.32133 ' +\r\n        '0.344416,-0.14465 0.665822,-0.32133 0.966377,-0.52145 l 1.19431,1.18005 1.567487,-1.57688 ' +\r\n        '-1.195028,-1.18014 c 0.403376,-0.61394 0.683079,-1.29908 0.825447,-2.01824 l 1.622133,-0.01 ' +\r\n        'v -2.2196 l -1.636514,0.01 c -0.07333,-0.35153 -0.178319,-0.70024 -0.323564,-1.04372 ' +\r\n        '-0.145244,-0.34406 -0.321407,-0.6644 -0.522735,-0.96217 l 1.131035,-1.13631 -1.583305,-1.56293 ' +\r\n        '-1.129598,1.13589 c -0.614052,-0.40108 -1.302883,-0.68093 -2.022633,-0.82247 l 0.0093,-1.61852 ' +\r\n        'h -2.241173 l 0.0042,1.63124 c -0.353763,0.0736 -0.705369,0.17977 -1.049785,0.32371 -0.344415,0.14437 ' +\r\n        '-0.665102,0.32092 -0.9635006,0.52046 l -1.1698628,-1.15823 -1.5667691,1.5792 1.1684265,1.15669 ' +\r\n        'c -0.4026573,0.61283 -0.68308,1.29797 -0.8247287,2.01713 l -1.6588041,0.003 v 2.22174 ' +\r\n        'l 1.6724648,-0.006 c 0.073327,0.35077 0.1797598,0.70243 0.3242851,1.04472 0.1452428,0.34448 ' +\r\n        '0.3214064,0.6644 0.5227339,0.96066 l -1.1993431,1.19723 1.5840256,1.56011 1.1964668,-1.19348 ' +\r\n        'c 0.6140517,0.40346 1.3028827,0.68232 2.0233517,0.82331 l 7.19e-4,1.69892 h 2.226848 z ' +\r\n        'm 0.221462,-3.9957 c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 ' +\r\n        '0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 ' +\r\n        '0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z'\r\n    },\r\n    'TASK_TYPE_SERVICE_FILL': {\r\n      d: 'm {mx},{my} c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 ' +\r\n        '0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 ' +\r\n        '0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z'\r\n    },\r\n    'TASK_TYPE_BUSINESS_RULE_HEADER': {\r\n      d: 'm {mx},{my} 0,4 20,0 0,-4 z'\r\n    },\r\n    'TASK_TYPE_BUSINESS_RULE_MAIN': {\r\n      d: 'm {mx},{my} 0,12 20,0 0,-12 z' +\r\n        'm 0,8 l 20,0 ' +\r\n        'm -13,-4 l 0,8'\r\n    },\r\n    'MESSAGE_FLOW_MARKER': {\r\n      d: 'm {mx},{my} m -10.5 ,-7 l 0,14 l 21,0 l 0,-14 z l 10.5,6 l 10.5,-6'\r\n    }\r\n  };\r\n\r\n  this.getRawPath = function getRawPath(pathId) {\r\n    return this.pathMap[pathId].d;\r\n  };\r\n\r\n  /**\r\n   * Scales the path to the given height and width.\r\n   * <h1>Use case</h1>\r\n   * <p>Use case is to scale the content of elements (event, gateways) based\r\n   * on the element bounding box's size.\r\n   * </p>\r\n   * <h1>Why not transform</h1>\r\n   * <p>Scaling a path with transform() will also scale the stroke and IE does not support\r\n   * the option 'non-scaling-stroke' to prevent this.\r\n   * Also there are use cases where only some parts of a path should be\r\n   * scaled.</p>\r\n   *\r\n   * @param {String} pathId The ID of the path.\r\n   * @param {Object} param <p>\r\n   *   Example param object scales the path to 60% size of the container (data.width, data.height).\r\n   *   <pre>\r\n   *   {\r\n   *     xScaleFactor: 0.6,\r\n   *     yScaleFactor:0.6,\r\n   *     containerWidth: data.width,\r\n   *     containerHeight: data.height,\r\n   *     position: {\r\n   *       mx: 0.46,\r\n   *       my: 0.2,\r\n   *     }\r\n   *   }\r\n   *   </pre>\r\n   *   <ul>\r\n   *    <li>targetpathwidth = xScaleFactor * containerWidth</li>\r\n   *    <li>targetpathheight = yScaleFactor * containerHeight</li>\r\n   *    <li>Position is used to set the starting coordinate of the path. M is computed:\r\n    *    <ul>\r\n    *      <li>position.x * containerWidth</li>\r\n    *      <li>position.y * containerHeight</li>\r\n    *    </ul>\r\n    *    Center of the container <pre> position: {\r\n   *       mx: 0.5,\r\n   *       my: 0.5,\r\n   *     }</pre>\r\n   *     Upper left corner of the container\r\n   *     <pre> position: {\r\n   *       mx: 0.0,\r\n   *       my: 0.0,\r\n   *     }</pre>\r\n   *    </li>\r\n   *   </ul>\r\n   * </p>\r\n   *\r\n   */\r\n  this.getScaledPath = function getScaledPath(pathId, param) {\r\n    var rawPath = this.pathMap[pathId];\r\n\r\n    // positioning\r\n    // compute the start point of the path\r\n    var mx, my;\r\n\r\n    if (param.abspos) {\r\n      mx = param.abspos.x;\r\n      my = param.abspos.y;\r\n    } else {\r\n      mx = param.containerWidth * param.position.mx;\r\n      my = param.containerHeight * param.position.my;\r\n    }\r\n\r\n    var coordinates = {}; // map for the scaled coordinates\r\n    if (param.position) {\r\n\r\n      // path\r\n      var heightRatio = (param.containerHeight / rawPath.height) * param.yScaleFactor;\r\n      var widthRatio = (param.containerWidth / rawPath.width) * param.xScaleFactor;\r\n\r\n\r\n      // Apply height ratio\r\n      for (var heightIndex = 0; heightIndex < rawPath.heightElements.length; heightIndex++) {\r\n        coordinates['y' + heightIndex] = rawPath.heightElements[heightIndex] * heightRatio;\r\n      }\r\n\r\n      // Apply width ratio\r\n      for (var widthIndex = 0; widthIndex < rawPath.widthElements.length; widthIndex++) {\r\n        coordinates['x' + widthIndex] = rawPath.widthElements[widthIndex] * widthRatio;\r\n      }\r\n    }\r\n\r\n    // Apply value to raw path\r\n    var path = format(\r\n      rawPath.d, {\r\n        mx: mx,\r\n        my: my,\r\n        e: coordinates\r\n      }\r\n    );\r\n    return path;\r\n  };\r\n}\r\n\r\n// helpers //////////////////////\r\n\r\n// copied from https://github.com/adobe-webplatform/Snap.svg/blob/master/src/svg.js\r\nvar tokenRegex = /\\{([^}]+)\\}/g,\r\n    objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g; // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n\r\nfunction replacer(all, key, obj) {\r\n  var res = obj;\r\n  key.replace(objNotationRegex, function(all, name, quote, quotedName, isFunc) {\r\n    name = name || quotedName;\r\n    if (res) {\r\n      if (name in res) {\r\n        res = res[name];\r\n      }\r\n      typeof res == 'function' && isFunc && (res = res());\r\n    }\r\n  });\r\n  res = (res == null || res == obj ? all : res) + '';\r\n\r\n  return res;\r\n}\r\n\r\nfunction format(str, obj) {\r\n  return String(str).replace(tokenRegex, function(all, key) {\r\n    return replacer(all, key, obj);\r\n  });\r\n}\r\n","import { assign } from 'min-dash';\r\n\r\nimport TextUtil from 'diagram-js/lib/util/Text';\r\n\r\nvar DEFAULT_FONT_SIZE = 12;\r\nvar LINE_HEIGHT_RATIO = 1.2;\r\n\r\nvar MIN_TEXT_ANNOTATION_HEIGHT = 30;\r\n\r\n\r\nexport default function TextRenderer(config) {\r\n\r\n  var defaultStyle = assign({\r\n    fontFamily: 'Arial, sans-serif',\r\n    fontSize: DEFAULT_FONT_SIZE,\r\n    fontWeight: 'normal',\r\n    lineHeight: LINE_HEIGHT_RATIO\r\n  }, config && config.defaultStyle || {});\r\n\r\n  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;\r\n\r\n  var externalStyle = assign({}, defaultStyle, {\r\n    fontSize: fontSize\r\n  }, config && config.externalStyle || {});\r\n\r\n  var textUtil = new TextUtil({\r\n    style: defaultStyle\r\n  });\r\n\r\n  /**\r\n   * Get the new bounds of an externally rendered,\r\n   * layouted label.\r\n   *\r\n   * @param  {Bounds} bounds\r\n   * @param  {String} text\r\n   *\r\n   * @return {Bounds}\r\n   */\r\n  this.getExternalLabelBounds = function(bounds, text) {\r\n\r\n    var layoutedDimensions = textUtil.getDimensions(text, {\r\n      box: {\r\n        width: 90,\r\n        height: 30,\r\n        x: bounds.width / 2 + bounds.x,\r\n        y: bounds.height / 2 + bounds.y\r\n      },\r\n      style: externalStyle\r\n    });\r\n\r\n    // resize label shape to fit label text\r\n    return {\r\n      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),\r\n      y: Math.round(bounds.y),\r\n      width: Math.ceil(layoutedDimensions.width),\r\n      height: Math.ceil(layoutedDimensions.height)\r\n    };\r\n\r\n  };\r\n\r\n  /**\r\n   * Get the new bounds of text annotation.\r\n   *\r\n   * @param  {Bounds} bounds\r\n   * @param  {String} text\r\n   *\r\n   * @return {Bounds}\r\n   */\r\n  this.getTextAnnotationBounds = function(bounds, text) {\r\n\r\n    var layoutedDimensions = textUtil.getDimensions(text, {\r\n      box: bounds,\r\n      style: defaultStyle,\r\n      align: 'left-top',\r\n      padding: 5\r\n    });\r\n\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width,\r\n      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Create a layouted text element.\r\n   *\r\n   * @param {String} text\r\n   * @param {Object} [options]\r\n   *\r\n   * @return {SVGElement} rendered text\r\n   */\r\n  this.createText = function(text, options) {\r\n    return textUtil.createText(text, options || {});\r\n  };\r\n\r\n  /**\r\n   * Get default text style.\r\n   */\r\n  this.getDefaultStyle = function() {\r\n    return defaultStyle;\r\n  };\r\n\r\n  /**\r\n   * Get the external text style.\r\n   */\r\n  this.getExternalStyle = function() {\r\n    return externalStyle;\r\n  };\r\n\r\n}\r\n\r\nTextRenderer.$inject = [\r\n  'config.textRenderer'\r\n];","import BpmnRenderer from './BpmnRenderer';\r\nimport TextRenderer from './TextRenderer';\r\n\r\nimport PathMap from './PathMap';\r\n\r\nexport default {\r\n  __init__: [ 'bpmnRenderer' ],\r\n  bpmnRenderer: [ 'type', BpmnRenderer ],\r\n  textRenderer: [ 'type', TextRenderer ],\r\n  pathMap: [ 'type', PathMap ]\r\n};\r\n","import { is } from '../../util/ModelUtil';\r\nimport { isAny } from '../modeling/util/ModelingUtil';\r\n\r\nimport {\r\n  getTextAnnotationPosition,\r\n  getDataElementPosition,\r\n  getFlowNodePosition,\r\n  getDefaultPosition\r\n} from './AutoPlaceUtil';\r\n\r\n\r\n/**\r\n * A service that places elements connected to existing ones\r\n * to an appropriate position in an _automated_ fashion.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n */\r\nexport default function AutoPlace(eventBus, modeling) {\r\n\r\n  function emit(event, payload) {\r\n    return eventBus.fire(event, payload);\r\n  }\r\n\r\n\r\n  /**\r\n   * Append shape to source at appropriate position.\r\n   *\r\n   * @param {djs.model.Shape} source\r\n   * @param {djs.model.Shape} shape\r\n   *\r\n   * @return {djs.model.Shape} appended shape\r\n   */\r\n  this.append = function(source, shape) {\r\n\r\n    // allow others to provide the position\r\n    var position = emit('autoPlace', {\r\n      source: source,\r\n      shape: shape\r\n    });\r\n\r\n    if (!position) {\r\n      position = getNewShapePosition(source, shape);\r\n    }\r\n\r\n    var newShape = modeling.appendShape(source, shape, position, source.parent);\r\n\r\n    // notify interested parties on new shape placed\r\n    emit('autoPlace.end', {\r\n      shape: newShape\r\n    });\r\n\r\n    return newShape;\r\n  };\r\n\r\n}\r\n\r\nAutoPlace.$inject = [\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Find the new position for the target element to\r\n * connect to source.\r\n *\r\n * @param  {djs.model.Shape} source\r\n * @param  {djs.model.Shape} element\r\n *\r\n * @return {Point}\r\n */\r\nfunction getNewShapePosition(source, element) {\r\n\r\n  if (is(element, 'bpmn:TextAnnotation')) {\r\n    return getTextAnnotationPosition(source, element);\r\n  }\r\n\r\n  if (isAny(element, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ])) {\r\n    return getDataElementPosition(source, element);\r\n  }\r\n\r\n  if (is(element, 'bpmn:FlowNode')) {\r\n    return getFlowNodePosition(source, element);\r\n  }\r\n\r\n  return getDefaultPosition(source, element);\r\n}\r\n","/**\r\n * Select element after auto placement.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Selection} selection\r\n */\r\nexport default function AutoPlaceSelectionBehavior(eventBus, selection) {\r\n\r\n  eventBus.on('autoPlace.end', 500, function(e) {\r\n    selection.select(e.shape);\r\n  });\r\n\r\n}\r\n\r\nAutoPlaceSelectionBehavior.$inject = [\r\n  'eventBus',\r\n  'selection'\r\n];","import { is } from '../../util/ModelUtil';\r\n\r\nimport {\r\n  getMid,\r\n  asTRBL,\r\n  getOrientation\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  find,\r\n  reduce\r\n} from 'min-dash';\r\n\r\nvar DEFAULT_HORIZONTAL_DISTANCE = 50;\r\n\r\nvar MAX_HORIZONTAL_DISTANCE = 250;\r\n\r\n// padding to detect element placement\r\nvar PLACEMENT_DETECTION_PAD = 10;\r\n\r\n\r\n/**\r\n * Always try to place element right of source;\r\n * compute actual distance from previous nodes in flow.\r\n */\r\nexport function getFlowNodePosition(source, element) {\r\n\r\n  var sourceTrbl = asTRBL(source);\r\n  var sourceMid = getMid(source);\r\n\r\n  var horizontalDistance = getFlowNodeDistance(source, element);\r\n\r\n  var orientation = 'left',\r\n      rowSize = 80,\r\n      margin = 30;\r\n\r\n  if (is(source, 'bpmn:BoundaryEvent')) {\r\n    orientation = getOrientation(source, source.host, -25);\r\n\r\n    if (orientation.indexOf('top') !== -1) {\r\n      margin *= -1;\r\n    }\r\n  }\r\n\r\n  function getVerticalDistance(orient) {\r\n    if (orient.indexOf('top') != -1) {\r\n      return -1 * rowSize;\r\n    } else if (orient.indexOf('bottom') != -1) {\r\n      return rowSize;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  var position = {\r\n    x: sourceTrbl.right + horizontalDistance + element.width / 2,\r\n    y: sourceMid.y + getVerticalDistance(orientation)\r\n  };\r\n\r\n  var escapeDirection = {\r\n    y: {\r\n      margin: margin,\r\n      rowSize: rowSize\r\n    }\r\n  };\r\n\r\n  return deconflictPosition(source, element, position, escapeDirection);\r\n}\r\n\r\n\r\n/**\r\n * Compute best distance between source and target,\r\n * based on existing connections to and from source.\r\n *\r\n * @param {djs.model.Shape} source\r\n * @param {djs.model.Shape} element\r\n *\r\n * @return {Number} distance\r\n */\r\nexport function getFlowNodeDistance(source, element) {\r\n\r\n  var sourceTrbl = asTRBL(source);\r\n\r\n  // is connection a reference to consider?\r\n  function isReference(c) {\r\n    return is(c, 'bpmn:SequenceFlow');\r\n  }\r\n\r\n  function toTargetNode(weight) {\r\n\r\n    return function(shape) {\r\n      return {\r\n        shape: shape,\r\n        weight: weight,\r\n        distanceTo: function(shape) {\r\n          var shapeTrbl = asTRBL(shape);\r\n\r\n          return shapeTrbl.left - sourceTrbl.right;\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  function toSourceNode(weight) {\r\n    return function(shape) {\r\n      return {\r\n        shape: shape,\r\n        weight: weight,\r\n        distanceTo: function(shape) {\r\n          var shapeTrbl = asTRBL(shape);\r\n\r\n          return sourceTrbl.left - shapeTrbl.right;\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  // we create a list of nodes to take into consideration\r\n  // for calculating the optimal flow node distance\r\n  //\r\n  //   * weight existing target nodes higher than source nodes\r\n  //   * only take into account individual nodes once\r\n  //\r\n  var nodes = reduce([].concat(\r\n    getTargets(source, isReference).map(toTargetNode(5)),\r\n    getSources(source, isReference).map(toSourceNode(1))\r\n  ), function(nodes, node) {\r\n    // filter out shapes connected twice via source or target\r\n    nodes[node.shape.id + '__weight_' + node.weight] = node;\r\n\r\n    return nodes;\r\n  }, {});\r\n\r\n  // compute distances between source and incoming nodes;\r\n  // group at the same time by distance and expose the\r\n  // favourite distance as { fav: { count, value } }.\r\n  var distancesGrouped = reduce(nodes, function(result, node) {\r\n\r\n    var shape = node.shape,\r\n        weight = node.weight,\r\n        distanceTo = node.distanceTo;\r\n\r\n    var fav = result.fav,\r\n        currentDistance,\r\n        currentDistanceCount,\r\n        currentDistanceEntry;\r\n\r\n    currentDistance = distanceTo(shape);\r\n\r\n    // ignore too far away peers\r\n    // or non-left to right modeled nodes\r\n    if (currentDistance < 0 || currentDistance > MAX_HORIZONTAL_DISTANCE) {\r\n      return result;\r\n    }\r\n\r\n    currentDistanceEntry = result[String(currentDistance)] =\r\n      result[String(currentDistance)] || {\r\n        value: currentDistance,\r\n        count: 0\r\n      };\r\n\r\n    // inc diff count\r\n    currentDistanceCount = currentDistanceEntry.count += 1 * weight;\r\n\r\n    if (!fav || fav.count < currentDistanceCount) {\r\n      result.fav = currentDistanceEntry;\r\n    }\r\n\r\n    return result;\r\n  }, { });\r\n\r\n\r\n  if (distancesGrouped.fav) {\r\n    return distancesGrouped.fav.value;\r\n  } else {\r\n    return DEFAULT_HORIZONTAL_DISTANCE;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Always try to place text annotations top right of source.\r\n */\r\nexport function getTextAnnotationPosition(source, element) {\r\n\r\n  var sourceTrbl = asTRBL(source);\r\n\r\n  var position = {\r\n    x: sourceTrbl.right + element.width / 2,\r\n    y: sourceTrbl.top - 50 - element.height / 2\r\n  };\r\n\r\n  var escapeDirection = {\r\n    y: {\r\n      margin: -30,\r\n      rowSize: 20\r\n    }\r\n  };\r\n\r\n  return deconflictPosition(source, element, position, escapeDirection);\r\n}\r\n\r\n\r\n/**\r\n * Always put element bottom right of source.\r\n */\r\nexport function getDataElementPosition(source, element) {\r\n\r\n  var sourceTrbl = asTRBL(source);\r\n\r\n  var position = {\r\n    x: sourceTrbl.right - 10 + element.width / 2,\r\n    y: sourceTrbl.bottom + 40 + element.width / 2\r\n  };\r\n\r\n  var escapeDirection = {\r\n    x: {\r\n      margin: 30,\r\n      rowSize: 30\r\n    }\r\n  };\r\n\r\n  return deconflictPosition(source, element, position, escapeDirection);\r\n}\r\n\r\n\r\n/**\r\n * Always put element right of source per default.\r\n */\r\nexport function getDefaultPosition(source, element) {\r\n\r\n  var sourceTrbl = asTRBL(source);\r\n\r\n  var sourceMid = getMid(source);\r\n\r\n  // simply put element right next to source\r\n  return {\r\n    x: sourceTrbl.right + DEFAULT_HORIZONTAL_DISTANCE + element.width / 2,\r\n    y: sourceMid.y\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Returns all connected elements around the given source.\r\n *\r\n * This includes:\r\n *\r\n *   - connected elements\r\n *   - host connected elements\r\n *   - attachers connected elements\r\n *\r\n * @param  {djs.model.Shape} source\r\n * @param  {djs.model.Shape} element\r\n *\r\n * @return {Array<djs.model.Shape>}\r\n */\r\nfunction getAutoPlaceClosure(source, element) {\r\n\r\n  var allConnected = getConnected(source);\r\n\r\n  if (source.host) {\r\n    allConnected = allConnected.concat(getConnected(source.host));\r\n  }\r\n\r\n  if (source.attachers) {\r\n    allConnected = allConnected.concat(source.attachers.reduce(function(shapes, attacher) {\r\n      return shapes.concat(getConnected(attacher));\r\n    }, []));\r\n  }\r\n\r\n  return allConnected;\r\n}\r\n\r\n/**\r\n * Return target at given position, if defined.\r\n *\r\n * This takes connected elements from host and attachers\r\n * into account, too.\r\n */\r\nexport function getConnectedAtPosition(source, position, element) {\r\n\r\n  var bounds = {\r\n    x: position.x - (element.width / 2),\r\n    y: position.y - (element.height / 2),\r\n    width: element.width,\r\n    height: element.height\r\n  };\r\n\r\n  var closure = getAutoPlaceClosure(source, element);\r\n\r\n  return find(closure, function(target) {\r\n\r\n    if (target === element) {\r\n      return false;\r\n    }\r\n\r\n    var orientation = getOrientation(target, bounds, PLACEMENT_DETECTION_PAD);\r\n\r\n    return orientation === 'intersect';\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Returns a new, position for the given element\r\n * based on the given element that is not occupied\r\n * by some element connected to source.\r\n *\r\n * Take into account the escapeDirection (where to move\r\n * on positining clashes) in the computation.\r\n *\r\n * @param {djs.model.Shape} source\r\n * @param {djs.model.Shape} element\r\n * @param {Point} position\r\n * @param {Object} escapeDelta\r\n *\r\n * @return {Point}\r\n */\r\nexport function deconflictPosition(source, element, position, escapeDelta) {\r\n\r\n  function nextPosition(existingElement) {\r\n\r\n    var newPosition = {\r\n      x: position.x,\r\n      y: position.y\r\n    };\r\n\r\n    [ 'x', 'y' ].forEach(function(axis) {\r\n\r\n      var axisDelta = escapeDelta[axis];\r\n\r\n      if (!axisDelta) {\r\n        return;\r\n      }\r\n\r\n      var dimension = axis === 'x' ? 'width' : 'height';\r\n\r\n      var margin = axisDelta.margin,\r\n          rowSize = axisDelta.rowSize;\r\n\r\n      if (margin < 0) {\r\n        newPosition[axis] = Math.min(\r\n          existingElement[axis] + margin - element[dimension] / 2,\r\n          position[axis] - rowSize + margin\r\n        );\r\n      } else {\r\n        newPosition[axis] = Math.max(\r\n          existingTarget[axis] + existingTarget[dimension] + margin + element[dimension] / 2,\r\n          position[axis] + rowSize + margin\r\n        );\r\n      }\r\n    });\r\n\r\n    return newPosition;\r\n  }\r\n\r\n  var existingTarget;\r\n\r\n  // deconflict position until free slot is found\r\n  while ((existingTarget = getConnectedAtPosition(source, position, element))) {\r\n    position = nextPosition(existingTarget);\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction noneFilter() {\r\n  return true;\r\n}\r\n\r\nfunction getConnected(element, connectionFilter) {\r\n  return [].concat(\r\n    getTargets(element, connectionFilter),\r\n    getSources(element, connectionFilter)\r\n  );\r\n}\r\n\r\nfunction getSources(shape, connectionFilter) {\r\n\r\n  if (!connectionFilter) {\r\n    connectionFilter = noneFilter;\r\n  }\r\n\r\n  return shape.incoming.filter(connectionFilter).map(function(c) {\r\n    return c.source;\r\n  });\r\n}\r\n\r\nfunction getTargets(shape, connectionFilter) {\r\n\r\n  if (!connectionFilter) {\r\n    connectionFilter = noneFilter;\r\n  }\r\n\r\n  return shape.outgoing.filter(connectionFilter).map(function(c) {\r\n    return c.target;\r\n  });\r\n}","import AutoPlace from './AutoPlace';\r\nimport AutoPlaceSelectionBehavior from './AutoPlaceSelectionBehavior';\r\n\r\nexport default {\r\n  __init__: [ 'autoPlaceSelectionBehavior' ],\r\n  autoPlace: [ 'type', AutoPlace ],\r\n  autoPlaceSelectionBehavior: [ 'type', AutoPlaceSelectionBehavior ]\r\n};","import AutoResize from 'diagram-js/lib/features/auto-resize/AutoResize';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * Sub class of the AutoResize module which implements a BPMN\r\n * specific resize function.\r\n */\r\nexport default function BpmnAutoResize(injector) {\r\n\r\n  injector.invoke(AutoResize, this);\r\n}\r\n\r\nBpmnAutoResize.$inject = [\r\n  'injector'\r\n];\r\n\r\ninherits(BpmnAutoResize, AutoResize);\r\n\r\n\r\n/**\r\n * Resize shapes and lanes\r\n *\r\n * @param  {djs.model.Shape} target\r\n * @param  {Object} newBounds\r\n */\r\nBpmnAutoResize.prototype.resize = function(target, newBounds) {\r\n\r\n  if (is(target, 'bpmn:Participant')) {\r\n    this._modeling.resizeLane(target, newBounds);\r\n  } else {\r\n    this._modeling.resizeShape(target, newBounds);\r\n  }\r\n};","import { is } from '../../util/ModelUtil';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport { forEach } from 'min-dash';\r\n\r\nimport AutoResizeProvider from 'diagram-js/lib/features/auto-resize/AutoResizeProvider';\r\n\r\n\r\n/**\r\n * This module is a provider for automatically resizing parent BPMN elements\r\n */\r\nexport default function BpmnAutoResizeProvider(eventBus, modeling) {\r\n  AutoResizeProvider.call(this, eventBus);\r\n\r\n  this._modeling = modeling;\r\n}\r\n\r\ninherits(BpmnAutoResizeProvider, AutoResizeProvider);\r\n\r\nBpmnAutoResizeProvider.$inject = [\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n\r\n\r\n/**\r\n * Check if the given target can be expanded\r\n *\r\n * @param  {djs.model.Shape} target\r\n *\r\n * @return {boolean}\r\n */\r\nBpmnAutoResizeProvider.prototype.canResize = function(elements, target) {\r\n\r\n  if (!is(target, 'bpmn:Participant') && !is(target, 'bpmn:Lane') && !(is(target, 'bpmn:SubProcess'))) {\r\n    return false;\r\n  }\r\n\r\n  var canResize = true;\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    if (is(element, 'bpmn:Lane') || element.labelTarget) {\r\n      canResize = false;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return canResize;\r\n};\r\n","import BpmnAutoResize from './BpmnAutoResize';\r\nimport BpmnAutoResizeProvider from './BpmnAutoResizeProvider';\r\n\r\n\r\nexport default {\r\n  __init__: [\r\n    'bpmnAutoResize',\r\n    'bpmnAutoResizeProvider'\r\n  ],\r\n  bpmnAutoResize: [ 'type', BpmnAutoResize ],\r\n  bpmnAutoResizeProvider: [ 'type', BpmnAutoResizeProvider ]\r\n};\r\n","import {\r\n  assign,\r\n  forEach,\r\n  isArray\r\n} from 'min-dash';\r\n\r\nimport {\r\n  is\r\n} from '../../util/ModelUtil';\r\n\r\nimport {\r\n  isExpanded,\r\n  isEventSubProcess\r\n} from '../../util/DiUtil';\r\n\r\nimport {\r\n  isAny\r\n} from '../modeling/util/ModelingUtil';\r\n\r\nimport {\r\n  getChildLanes\r\n} from '../modeling/util/LaneUtil';\r\n\r\nimport {\r\n  hasPrimaryModifier\r\n} from 'diagram-js/lib/util/Mouse';\r\n\r\n\r\n/**\r\n * A provider for BPMN 2.0 elements context pad\r\n */\r\nexport default function ContextPadProvider(\r\n    config, injector, eventBus,\r\n    contextPad, modeling, elementFactory,\r\n    connect, create, popupMenu,\r\n    canvas, rules, translate) {\r\n\r\n  config = config || {};\r\n\r\n  contextPad.registerProvider(this);\r\n\r\n  this._contextPad = contextPad;\r\n\r\n  this._modeling = modeling;\r\n\r\n  this._elementFactory = elementFactory;\r\n  this._connect = connect;\r\n  this._create = create;\r\n  this._popupMenu = popupMenu;\r\n  this._canvas = canvas;\r\n  this._rules = rules;\r\n  this._translate = translate;\r\n\r\n  if (config.autoPlace !== false) {\r\n    this._autoPlace = injector.get('autoPlace', false);\r\n  }\r\n\r\n  eventBus.on('create.end', 250, function(event) {\r\n    var shape = event.context.shape;\r\n\r\n    if (!hasPrimaryModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    var entries = contextPad.getEntries(shape);\r\n\r\n    if (entries.replace) {\r\n      entries.replace.action.click(event, shape);\r\n    }\r\n  });\r\n}\r\n\r\nContextPadProvider.$inject = [\r\n  'config.contextPad',\r\n  'injector',\r\n  'eventBus',\r\n  'contextPad',\r\n  'modeling',\r\n  'elementFactory',\r\n  'connect',\r\n  'create',\r\n  'popupMenu',\r\n  'canvas',\r\n  'rules',\r\n  'translate'\r\n];\r\n\r\n\r\nContextPadProvider.prototype.getContextPadEntries = function(element) {\r\n\r\n  var contextPad = this._contextPad,\r\n      modeling = this._modeling,\r\n\r\n      elementFactory = this._elementFactory,\r\n      connect = this._connect,\r\n      create = this._create,\r\n      popupMenu = this._popupMenu,\r\n      canvas = this._canvas,\r\n      rules = this._rules,\r\n      autoPlace = this._autoPlace,\r\n      translate = this._translate;\r\n\r\n  var actions = {};\r\n\r\n  if (element.type === 'label') {\r\n    return actions;\r\n  }\r\n\r\n  var businessObject = element.businessObject;\r\n\r\n  function startConnect(event, element) {\r\n    connect.start(event, element);\r\n  }\r\n\r\n  function removeElement(e) {\r\n    modeling.removeElements([ element ]);\r\n  }\r\n\r\n  function getReplaceMenuPosition(element) {\r\n\r\n    var Y_OFFSET = 5;\r\n\r\n    var diagramContainer = canvas.getContainer(),\r\n        pad = contextPad.getPad(element).html;\r\n\r\n    var diagramRect = diagramContainer.getBoundingClientRect(),\r\n        padRect = pad.getBoundingClientRect();\r\n\r\n    var top = padRect.top - diagramRect.top;\r\n    var left = padRect.left - diagramRect.left;\r\n\r\n    var pos = {\r\n      x: left,\r\n      y: top + padRect.height + Y_OFFSET\r\n    };\r\n\r\n    return pos;\r\n  }\r\n\r\n\r\n  /**\r\n   * Create an append action\r\n   *\r\n   * @param {String} type\r\n   * @param {String} className\r\n   * @param {String} [title]\r\n   * @param {Object} [options]\r\n   *\r\n   * @return {Object} descriptor\r\n   */\r\n  function appendAction(type, className, title, options) {\r\n\r\n    if (typeof title !== 'string') {\r\n      options = title;\r\n      title = translate('Append {type}', { type: type.replace(/^bpmn:/, '') });\r\n    }\r\n\r\n    function appendStart(event, element) {\r\n\r\n      var shape = elementFactory.createShape(assign({ type: type }, options));\r\n      create.start(event, shape, element);\r\n    }\r\n\r\n\r\n    var append = autoPlace ? function(event, element) {\r\n      var shape = elementFactory.createShape(assign({ type: type }, options));\r\n\r\n      autoPlace.append(element, shape);\r\n    } : appendStart;\r\n\r\n\r\n    return {\r\n      group: 'model',\r\n      className: className,\r\n      title: title,\r\n      action: {\r\n        dragstart: appendStart,\r\n        click: append\r\n      }\r\n    };\r\n  }\r\n\r\n  function splitLaneHandler(count) {\r\n\r\n    return function(event, element) {\r\n      // actual split\r\n      modeling.splitLane(element, count);\r\n\r\n      // refresh context pad after split to\r\n      // get rid of split icons\r\n      contextPad.open(element, true);\r\n    };\r\n  }\r\n\r\n\r\n  if (isAny(businessObject, [ 'bpmn:Lane', 'bpmn:Participant' ]) && isExpanded(businessObject)) {\r\n\r\n    var childLanes = getChildLanes(element);\r\n\r\n    assign(actions, {\r\n      'lane-insert-above': {\r\n        group: 'lane-insert-above',\r\n        className: 'bpmn-icon-lane-insert-above',\r\n        title: translate('Add Lane above'),\r\n        action: {\r\n          click: function(event, element) {\r\n            modeling.addLane(element, 'top');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (childLanes.length < 2) {\r\n\r\n      if (element.height >= 120) {\r\n        assign(actions, {\r\n          'lane-divide-two': {\r\n            group: 'lane-divide',\r\n            className: 'bpmn-icon-lane-divide-two',\r\n            title: translate('Divide into two Lanes'),\r\n            action: {\r\n              click: splitLaneHandler(2)\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (element.height >= 180) {\r\n        assign(actions, {\r\n          'lane-divide-three': {\r\n            group: 'lane-divide',\r\n            className: 'bpmn-icon-lane-divide-three',\r\n            title: translate('Divide into three Lanes'),\r\n            action: {\r\n              click: splitLaneHandler(3)\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    assign(actions, {\r\n      'lane-insert-below': {\r\n        group: 'lane-insert-below',\r\n        className: 'bpmn-icon-lane-insert-below',\r\n        title: translate('Add Lane below'),\r\n        action: {\r\n          click: function(event, element) {\r\n            modeling.addLane(element, 'bottom');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  if (is(businessObject, 'bpmn:FlowNode')) {\r\n\r\n    if (is(businessObject, 'bpmn:EventBasedGateway')) {\r\n\r\n      assign(actions, {\r\n        'append.receive-task': appendAction(\r\n          'bpmn:ReceiveTask',\r\n          'bpmn-icon-receive-task'\r\n        ),\r\n        'append.message-intermediate-event': appendAction(\r\n          'bpmn:IntermediateCatchEvent',\r\n          'bpmn-icon-intermediate-event-catch-message',\r\n          translate('Append MessageIntermediateCatchEvent'),\r\n          { eventDefinitionType: 'bpmn:MessageEventDefinition' }\r\n        ),\r\n        'append.timer-intermediate-event': appendAction(\r\n          'bpmn:IntermediateCatchEvent',\r\n          'bpmn-icon-intermediate-event-catch-timer',\r\n          translate('Append TimerIntermediateCatchEvent'),\r\n          { eventDefinitionType: 'bpmn:TimerEventDefinition' }\r\n        ),\r\n        'append.condtion-intermediate-event': appendAction(\r\n          'bpmn:IntermediateCatchEvent',\r\n          'bpmn-icon-intermediate-event-catch-condition',\r\n          translate('Append ConditionIntermediateCatchEvent'),\r\n          { eventDefinitionType: 'bpmn:ConditionalEventDefinition' }\r\n        ),\r\n        'append.signal-intermediate-event': appendAction(\r\n          'bpmn:IntermediateCatchEvent',\r\n          'bpmn-icon-intermediate-event-catch-signal',\r\n          translate('Append SignalIntermediateCatchEvent'),\r\n          { eventDefinitionType: 'bpmn:SignalEventDefinition' }\r\n        )\r\n      });\r\n    } else\r\n\r\n    if (isEventType(businessObject, 'bpmn:BoundaryEvent', 'bpmn:CompensateEventDefinition')) {\r\n\r\n      assign(actions, {\r\n        'append.compensation-activity':\r\n            appendAction(\r\n              'bpmn:Task',\r\n              'bpmn-icon-task',\r\n              translate('Append compensation activity'),\r\n              {\r\n                isForCompensation: true\r\n              }\r\n            )\r\n      });\r\n    } else\r\n\r\n    if (!is(businessObject, 'bpmn:EndEvent') &&\r\n        !businessObject.isForCompensation &&\r\n        !isEventType(businessObject, 'bpmn:IntermediateThrowEvent', 'bpmn:LinkEventDefinition') &&\r\n        !isEventSubProcess(businessObject)) {\r\n\r\n      assign(actions, {\r\n        'append.end-event': appendAction(\r\n          'bpmn:EndEvent',\r\n          'bpmn-icon-end-event-none'\r\n        ),\r\n        'append.gateway': appendAction(\r\n          'bpmn:ExclusiveGateway',\r\n          'bpmn-icon-gateway-none',\r\n          translate('Append Gateway')\r\n        ),\r\n        'append.append-task': appendAction(\r\n          'bpmn:Task',\r\n          'bpmn-icon-task'\r\n        ),\r\n        'append.intermediate-event': appendAction(\r\n          'bpmn:IntermediateThrowEvent',\r\n          'bpmn-icon-intermediate-event-none',\r\n          translate('Append Intermediate/Boundary Event')\r\n        )\r\n      });\r\n    }\r\n  }\r\n\r\n  if (!popupMenu.isEmpty(element, 'bpmn-replace')) {\r\n    // Replace menu entry\r\n    assign(actions, {\r\n      'replace': {\r\n        group: 'edit',\r\n        className: 'bpmn-icon-screw-wrench',\r\n        title: translate('Change type'),\r\n        action: {\r\n          click: function(event, element) {\r\n\r\n            var position = assign(getReplaceMenuPosition(element), {\r\n              cursor: { x: event.x, y: event.y }\r\n            });\r\n\r\n            popupMenu.open(element, 'bpmn-replace', position);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (isAny(businessObject, [\r\n    'bpmn:FlowNode',\r\n    'bpmn:InteractionNode',\r\n    'bpmn:DataObjectReference',\r\n    'bpmn:DataStoreReference'\r\n  ])) {\r\n\r\n    assign(actions, {\r\n      'append.text-annotation': appendAction('bpmn:TextAnnotation', 'bpmn-icon-text-annotation'),\r\n\r\n      'connect': {\r\n        group: 'connect',\r\n        className: 'bpmn-icon-connection-multi',\r\n        title: translate('Connect using ' +\r\n                  (businessObject.isForCompensation ? '' : 'Sequence/MessageFlow or ') +\r\n                  'Association'),\r\n        action: {\r\n          click: startConnect,\r\n          dragstart: startConnect\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (isAny(businessObject, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ])) {\r\n    assign(actions, {\r\n      'connect': {\r\n        group: 'connect',\r\n        className: 'bpmn-icon-connection-multi',\r\n        title: translate('Connect using DataInputAssociation'),\r\n        action: {\r\n          click: startConnect,\r\n          dragstart: startConnect\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // delete element entry, only show if allowed by rules\r\n  var deleteAllowed = rules.allowed('elements.delete', { elements: [ element ] });\r\n\r\n  if (isArray(deleteAllowed)) {\r\n    // was the element returned as a deletion candidate?\r\n    deleteAllowed = deleteAllowed[0] === element;\r\n  }\r\n\r\n  if (deleteAllowed) {\r\n    assign(actions, {\r\n      'delete': {\r\n        group: 'edit',\r\n        className: 'bpmn-icon-trash',\r\n        title: translate('Remove'),\r\n        action: {\r\n          click: removeElement\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return actions;\r\n};\r\n\r\nfunction isEventType(eventBo, type, definition) {\r\n\r\n  var isType = eventBo.$instanceOf(type);\r\n  var isDefinition = false;\r\n\r\n  var definitions = eventBo.eventDefinitions || [];\r\n  forEach(definitions, function(def) {\r\n    if (def.$type === definition) {\r\n      isDefinition = true;\r\n    }\r\n  });\r\n\r\n  return isType && isDefinition;\r\n}\r\n","import DirectEditingModule from 'diagram-js-direct-editing';\r\nimport ContextPadModule from 'diagram-js/lib/features/context-pad';\r\nimport SelectionModule from 'diagram-js/lib/features/selection';\r\nimport ConnectModule from 'diagram-js/lib/features/connect';\r\nimport CreateModule from 'diagram-js/lib/features/create';\r\nimport PopupMenuModule from '../popup-menu';\r\n\r\nimport ContextPadProvider from './ContextPadProvider';\r\n\r\nexport default {\r\n  __depends__: [\r\n    DirectEditingModule,\r\n    ContextPadModule,\r\n    SelectionModule,\r\n    ConnectModule,\r\n    CreateModule,\r\n    PopupMenuModule\r\n  ],\r\n  __init__: [ 'contextPadProvider' ],\r\n  contextPadProvider: [ 'type', ContextPadProvider ]\r\n};","import {\r\n  getBusinessObject,\r\n  is\r\n} from '../../util/ModelUtil';\r\n\r\nimport ModelCloneHelper from '../../util/model/ModelCloneHelper';\r\n\r\nimport {\r\n  getProperties,\r\n  IGNORED_PROPERTIES\r\n} from '../../util/model/ModelCloneUtils';\r\n\r\nimport {\r\n  filter,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nfunction setProperties(descriptor, data, properties) {\r\n  forEach(properties, function(property) {\r\n    if (data[property] !== undefined) {\r\n      descriptor[property] = data[property];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeProperties(element, properties) {\r\n  forEach(properties, function(prop) {\r\n    if (element[prop]) {\r\n      delete element[prop];\r\n    }\r\n  });\r\n}\r\n\r\nexport default function BpmnCopyPaste(\r\n    bpmnFactory, eventBus, copyPaste,\r\n    clipboard, canvas, bpmnRules) {\r\n\r\n  var helper = new ModelCloneHelper(eventBus, bpmnFactory);\r\n\r\n  copyPaste.registerDescriptor(function(element, descriptor) {\r\n    var businessObject = descriptor.oldBusinessObject = getBusinessObject(element);\r\n\r\n    var colors = {};\r\n\r\n    descriptor.type = element.type;\r\n\r\n    setProperties(descriptor, businessObject.di, [ 'isExpanded' ]);\r\n\r\n    setProperties(colors, businessObject.di, [ 'fill', 'stroke' ]);\r\n\r\n    descriptor.colors = colors;\r\n\r\n    if (element.type === 'label') {\r\n      return descriptor;\r\n    }\r\n\r\n    setProperties(descriptor, businessObject, [\r\n      'processRef',\r\n      'triggeredByEvent'\r\n    ]);\r\n\r\n    if (businessObject.default) {\r\n      descriptor.default = businessObject.default.id;\r\n    }\r\n\r\n    return descriptor;\r\n  });\r\n\r\n  eventBus.on('element.paste', function(context) {\r\n    var descriptor = context.descriptor,\r\n        createdElements = context.createdElements,\r\n        parent = descriptor.parent,\r\n        rootElement = canvas.getRootElement(),\r\n        oldBusinessObject = descriptor.oldBusinessObject,\r\n        newBusinessObject,\r\n        source,\r\n        target,\r\n        canConnect;\r\n\r\n    newBusinessObject = bpmnFactory.create(oldBusinessObject.$type);\r\n\r\n    var properties = getProperties(oldBusinessObject.$descriptor);\r\n\r\n    properties = filter(properties, function(property) {\r\n      return IGNORED_PROPERTIES.indexOf(property.replace(/bpmn:/, '')) === -1;\r\n    });\r\n\r\n    descriptor.businessObject = helper.clone(oldBusinessObject, newBusinessObject, properties);\r\n\r\n    if (descriptor.type === 'label') {\r\n      return;\r\n    }\r\n\r\n    if (is(parent, 'bpmn:Process')) {\r\n      descriptor.parent = is(rootElement, 'bpmn:Collaboration') ? rootElement : parent;\r\n    }\r\n\r\n    if (descriptor.type === 'bpmn:DataOutputAssociation' ||\r\n        descriptor.type === 'bpmn:DataInputAssociation' ||\r\n        descriptor.type === 'bpmn:MessageFlow') {\r\n      descriptor.parent = rootElement;\r\n    }\r\n\r\n    if (is(parent, 'bpmn:Lane')) {\r\n      descriptor.parent = parent.parent;\r\n    }\r\n\r\n    // make sure that the correct type of connection is created\r\n    if (descriptor.waypoints) {\r\n      source = createdElements[descriptor.source];\r\n      target = createdElements[descriptor.target];\r\n\r\n      if (source && target) {\r\n        source = source.element;\r\n        target = target.element;\r\n      }\r\n\r\n      canConnect = bpmnRules.canConnect(source, target);\r\n\r\n      if (canConnect) {\r\n        descriptor.type = canConnect.type;\r\n      }\r\n    }\r\n\r\n    // remove the id or else we cannot paste multiple times\r\n    delete newBusinessObject.id;\r\n\r\n    // assign an ID\r\n    bpmnFactory._ensureId(newBusinessObject);\r\n\r\n    if (descriptor.type === 'bpmn:Participant' && descriptor.processRef) {\r\n      descriptor.processRef = newBusinessObject.processRef = bpmnFactory.create('bpmn:Process');\r\n    }\r\n\r\n    setProperties(newBusinessObject, descriptor, [\r\n      'isExpanded',\r\n      'triggeredByEvent'\r\n    ]);\r\n\r\n    removeProperties(descriptor, [\r\n      'triggeredByEvent'\r\n    ]);\r\n  });\r\n\r\n}\r\n\r\n\r\nBpmnCopyPaste.$inject = [\r\n  'bpmnFactory',\r\n  'eventBus',\r\n  'copyPaste',\r\n  'clipboard',\r\n  'canvas',\r\n  'bpmnRules'\r\n];","import CopyPasteModule from 'diagram-js/lib/features/copy-paste';\r\n\r\nimport BpmnCopyPaste from './BpmnCopyPaste';\r\n\r\nexport default {\r\n  __depends__: [\r\n    CopyPasteModule\r\n  ],\r\n  __init__: [ 'bpmnCopyPaste' ],\r\n  bpmnCopyPaste: [ 'type', BpmnCopyPaste ]\r\n};\r\n","import {\r\n  filter\r\n} from 'min-dash';\r\n\r\nimport {\r\n  isAny\r\n} from '../modeling/util/ModelingUtil';\r\n\r\n\r\n/**\r\n * Registers element exclude filters for elements that\r\n * currently do not support distribution.\r\n */\r\nexport default function BpmnDistributeElements(distributeElements) {\r\n\r\n  distributeElements.registerFilter(function(elements) {\r\n    return filter(elements, function(element) {\r\n      var cannotDistribute = isAny(element, [\r\n        'bpmn:Association',\r\n        'bpmn:BoundaryEvent',\r\n        'bpmn:DataInputAssociation',\r\n        'bpmn:DataOutputAssociation',\r\n        'bpmn:Lane',\r\n        'bpmn:MessageFlow',\r\n        'bpmn:Participant',\r\n        'bpmn:SequenceFlow',\r\n        'bpmn:TextAnnotation'\r\n      ]);\r\n\r\n      return !(element.labelTarget || cannotDistribute);\r\n    });\r\n  });\r\n}\r\n\r\nBpmnDistributeElements.$inject = [ 'distributeElements' ];","import DistributeElementsModule from 'diagram-js/lib/features/distribute-elements';\r\n\r\nimport BpmnDistributeElements from './BpmnDistributeElements';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    DistributeElementsModule\r\n  ],\r\n  __init__: [ 'bpmnDistributeElements' ],\r\n  bpmnDistributeElements: [ 'type', BpmnDistributeElements ]\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport EditorActions from 'diagram-js/lib/features/editor-actions/EditorActions';\r\n\r\nimport { filter } from 'min-dash';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\nimport {\r\n  getBBox\r\n} from 'diagram-js/lib/util/Elements';\r\n\r\n\r\n/**\r\n * Registers and executes BPMN specific editor actions.\r\n *\r\n * @param {Injector} injector\r\n */\r\nexport default function BpmnEditorActions(injector) {\r\n  injector.invoke(EditorActions, this);\r\n}\r\n\r\ninherits(BpmnEditorActions, EditorActions);\r\n\r\nBpmnEditorActions.$inject = [\r\n  'injector'\r\n];\r\n\r\n/**\r\n * Register default actions.\r\n *\r\n * @param {Injector} injector\r\n */\r\nBpmnEditorActions.prototype._registerDefaultActions = function(injector) {\r\n\r\n  // (0) invoke super method\r\n\r\n  EditorActions.prototype._registerDefaultActions.call(this, injector);\r\n\r\n  // (1) retrieve optional components to integrate with\r\n\r\n  var canvas = injector.get('canvas', false);\r\n  var elementRegistry = injector.get('elementRegistry', false);\r\n  var selection = injector.get('selection', false);\r\n  var spaceTool = injector.get('spaceTool', false);\r\n  var lassoTool = injector.get('lassoTool', false);\r\n  var handTool = injector.get('handTool', false);\r\n  var globalConnect = injector.get('globalConnect', false);\r\n  var distributeElements = injector.get('distributeElements', false);\r\n  var alignElements = injector.get('alignElements', false);\r\n  var directEditing = injector.get('directEditing', false);\r\n  var searchPad = injector.get('searchPad', false);\r\n  var modeling = injector.get('modeling', false);\r\n\r\n  // (2) check components and register actions\r\n\r\n  if (canvas && elementRegistry && selection) {\r\n    this._registerAction('selectElements', function() {\r\n      // select all elements except for the invisible\r\n      // root element\r\n      var rootElement = canvas.getRootElement();\r\n\r\n      var elements = elementRegistry.filter(function(element) {\r\n        return element !== rootElement;\r\n      });\r\n\r\n      selection.select(elements);\r\n\r\n      return elements;\r\n    });\r\n  }\r\n\r\n  if (spaceTool) {\r\n    this._registerAction('spaceTool', function() {\r\n      spaceTool.toggle();\r\n    });\r\n  }\r\n\r\n  if (lassoTool) {\r\n    this._registerAction('lassoTool', function() {\r\n      lassoTool.toggle();\r\n    });\r\n  }\r\n\r\n  if (handTool) {\r\n    this._registerAction('handTool', function() {\r\n      handTool.toggle();\r\n    });\r\n  }\r\n\r\n  if (globalConnect) {\r\n    this._registerAction('globalConnectTool', function() {\r\n      globalConnect.toggle();\r\n    });\r\n  }\r\n\r\n  if (selection && distributeElements) {\r\n    this._registerAction('distributeElements', function(opts) {\r\n      var currentSelection = selection.get(),\r\n          type = opts.type;\r\n\r\n      if (currentSelection.length) {\r\n        distributeElements.trigger(currentSelection, type);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (selection && alignElements) {\r\n    this._registerAction('alignElements', function(opts) {\r\n      var currentSelection = selection.get(),\r\n          aligneableElements = [],\r\n          type = opts.type;\r\n\r\n      if (currentSelection.length) {\r\n        aligneableElements = filter(currentSelection, function(element) {\r\n          return !is(element, 'bpmn:Lane');\r\n        });\r\n\r\n        alignElements.trigger(aligneableElements, type);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (selection && modeling) {\r\n    this._registerAction('setColor', function(opts) {\r\n      var currentSelection = selection.get();\r\n\r\n      if (currentSelection.length) {\r\n        modeling.setColor(currentSelection, opts);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (selection && directEditing) {\r\n    this._registerAction('directEditing', function() {\r\n      var currentSelection = selection.get();\r\n\r\n      if (currentSelection.length) {\r\n        directEditing.activate(currentSelection[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (searchPad) {\r\n    this._registerAction('find', function() {\r\n      searchPad.toggle();\r\n    });\r\n  }\r\n\r\n  if (canvas && modeling) {\r\n    this._registerAction('moveToOrigin', function() {\r\n      var rootElement = canvas.getRootElement(),\r\n          boundingBox,\r\n          elements;\r\n\r\n      if (is(rootElement, 'bpmn:Collaboration')) {\r\n        elements = elementRegistry.filter(function(element) {\r\n          return is(element.parent, 'bpmn:Collaboration');\r\n        });\r\n      } else {\r\n        elements = elementRegistry.filter(function(element) {\r\n          return element !== rootElement && !is(element.parent, 'bpmn:SubProcess');\r\n        });\r\n      }\r\n\r\n      boundingBox = getBBox(elements);\r\n\r\n      modeling.moveElements(\r\n        elements,\r\n        { x: -boundingBox.x, y: -boundingBox.y },\r\n        rootElement\r\n      );\r\n    });\r\n  }\r\n\r\n};","import EditorActionsModule from 'diagram-js/lib/features/editor-actions';\r\n\r\nimport BpmnEditorActions from './BpmnEditorActions';\r\n\r\nexport default {\r\n  __depends__: [\r\n    EditorActionsModule\r\n  ],\r\n  editorActions: [ 'type', BpmnEditorActions ]\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport KeyboardBindings from 'diagram-js/lib/features/keyboard/KeyboardBindings';\r\n\r\n\r\n/**\r\n * BPMN 2.0 specific keyboard bindings.\r\n *\r\n * @param {Injector} injector\r\n */\r\nexport default function BpmnKeyboardBindings(injector) {\r\n  injector.invoke(KeyboardBindings, this);\r\n}\r\n\r\ninherits(BpmnKeyboardBindings, KeyboardBindings);\r\n\r\nBpmnKeyboardBindings.$inject = [\r\n  'injector'\r\n];\r\n\r\n\r\n/**\r\n * Register available keyboard bindings.\r\n *\r\n * @param {Keyboard} keyboard\r\n * @param {EditorActions} editorActions\r\n */\r\nBpmnKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {\r\n\r\n  // inherit default bindings\r\n  KeyboardBindings.prototype.registerBindings.call(this, keyboard, editorActions);\r\n\r\n  /**\r\n   * Add keyboard binding if respective editor action\r\n   * is registered.\r\n   *\r\n   * @param {String} action name\r\n   * @param {Function} fn that implements the key binding\r\n   */\r\n  function addListener(action, fn) {\r\n\r\n    if (editorActions.isRegistered(action)) {\r\n      keyboard.addListener(fn);\r\n    }\r\n  }\r\n\r\n  // select all elements\r\n  // CTRL + A\r\n  addListener('selectElements', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.isKey(['a', 'A'], event) && keyboard.isCmd(event)) {\r\n      editorActions.trigger('selectElements');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // search labels\r\n  // CTRL + F\r\n  addListener('find', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.isKey(['f', 'F'], event) && keyboard.isCmd(event)) {\r\n      editorActions.trigger('find');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // activate space tool\r\n  // S\r\n  addListener('spaceTool', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.hasModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey(['s', 'S'], event)) {\r\n      editorActions.trigger('spaceTool');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // activate lasso tool\r\n  // L\r\n  addListener('lassoTool', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.hasModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey(['l', 'L'], event)) {\r\n      editorActions.trigger('lassoTool');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // activate hand tool\r\n  // H\r\n  addListener('handTool', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.hasModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey(['h', 'H'], event)) {\r\n      editorActions.trigger('handTool');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // activate global connect tool\r\n  // C\r\n  addListener('globalConnectTool', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.hasModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey(['c', 'C'], event)) {\r\n      editorActions.trigger('globalConnectTool');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // activate direct editing\r\n  // E\r\n  addListener('directEditing', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (keyboard.hasModifier(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey(['e', 'E'], event)) {\r\n      editorActions.trigger('directEditing');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n};","import KeyboardModule from 'diagram-js/lib/features/keyboard';\r\n\r\nimport BpmnKeyboardBindings from './BpmnKeyboardBindings';\r\n\r\nexport default {\r\n  __depends__: [\r\n    KeyboardModule\r\n  ],\r\n  __init__: [ 'keyboardBindings' ],\r\n  keyboardBindings: [ 'type', BpmnKeyboardBindings ]\r\n};\r\n","import {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../util/ModelUtil';\r\n\r\nimport {\r\n  translate\r\n} from 'diagram-js/lib/util/SvgTransformUtil';\r\n\r\nvar MARKER_HIDDEN = 'djs-element-hidden',\r\n    MARKER_LABEL_HIDDEN = 'djs-label-hidden';\r\n\r\n\r\nexport default function LabelEditingPreview(\r\n    eventBus, canvas, elementRegistry,\r\n    pathMap) {\r\n\r\n  var self = this;\r\n\r\n  var defaultLayer = canvas.getDefaultLayer();\r\n\r\n  var element, absoluteElementBBox, gfx;\r\n\r\n  eventBus.on('directEditing.activate', function(context) {\r\n    var activeProvider = context.active;\r\n\r\n    element = activeProvider.element.label || activeProvider.element;\r\n\r\n    // text annotation\r\n    if (is(element, 'bpmn:TextAnnotation')) {\r\n      absoluteElementBBox = canvas.getAbsoluteBBox(element);\r\n\r\n      gfx = svgCreate('g');\r\n\r\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.0\r\n        }\r\n      });\r\n\r\n      var path = self.path = svgCreate('path');\r\n\r\n      svgAttr(path, {\r\n        d: textPathData,\r\n        strokeWidth: 2,\r\n        stroke: getStrokeColor(element)\r\n      });\r\n\r\n      svgAppend(gfx, path);\r\n\r\n      svgAppend(defaultLayer, gfx);\r\n\r\n      translate(gfx, element.x, element.y);\r\n    }\r\n\r\n    if (is(element, 'bpmn:TextAnnotation') ||\r\n        element.labelTarget) {\r\n      canvas.addMarker(element, MARKER_HIDDEN);\r\n    } else if (is(element, 'bpmn:Task') ||\r\n               is(element, 'bpmn:CallActivity') ||\r\n               is(element, 'bpmn:SubProcess') ||\r\n               is(element, 'bpmn:Participant')) {\r\n      canvas.addMarker(element, MARKER_LABEL_HIDDEN);\r\n    }\r\n  });\r\n\r\n  eventBus.on('directEditing.resize', function(context) {\r\n\r\n    // text annotation\r\n    if (is(element, 'bpmn:TextAnnotation')) {\r\n      var height = context.height,\r\n          dy = context.dy;\r\n\r\n      var newElementHeight = Math.max(element.height / absoluteElementBBox.height * (height + dy), 0);\r\n\r\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: newElementHeight,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.0\r\n        }\r\n      });\r\n\r\n      svgAttr(self.path, {\r\n        d: textPathData\r\n      });\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'directEditing.complete', 'directEditing.cancel' ], function(context) {\r\n    var activeProvider = context.active;\r\n\r\n    if (activeProvider) {\r\n      canvas.removeMarker(activeProvider.element.label || activeProvider.element, MARKER_HIDDEN);\r\n      canvas.removeMarker(element, MARKER_LABEL_HIDDEN);\r\n    }\r\n\r\n    element = undefined;\r\n    absoluteElementBBox = undefined;\r\n\r\n    if (gfx) {\r\n      svgRemove(gfx);\r\n\r\n      gfx = undefined;\r\n    }\r\n  });\r\n}\r\n\r\nLabelEditingPreview.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'elementRegistry',\r\n  'pathMap'\r\n];\r\n\r\n\r\n// helpers ///////////////////\r\n\r\nfunction getStrokeColor(element, defaultColor) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo.di.get('stroke') || defaultColor || 'black';\r\n}","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getLabel\r\n} from './LabelUtil';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\nimport { isAny } from '../modeling/util/ModelingUtil';\r\nimport { isExpanded } from '../../util/DiUtil';\r\n\r\nimport {\r\n  getExternalLabelMid,\r\n  isLabelExternal,\r\n  hasExternalLabel,\r\n  isLabel\r\n} from '../../util/LabelUtil';\r\n\r\n\r\nexport default function LabelEditingProvider(\r\n    eventBus, canvas, directEditing,\r\n    modeling, resizeHandles, textRenderer) {\r\n\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n  this._textRenderer = textRenderer;\r\n\r\n  directEditing.registerProvider(this);\r\n\r\n  // listen to dblclick on non-root elements\r\n  eventBus.on('element.dblclick', function(event) {\r\n    activateDirectEdit(event.element, true);\r\n  });\r\n\r\n  // complete on followup canvas operation\r\n  eventBus.on([\r\n    'element.mousedown',\r\n    'drag.init',\r\n    'canvas.viewbox.changing',\r\n    'autoPlace',\r\n    'popupMenu.open'\r\n  ], function(event) {\r\n\r\n    if (directEditing.isActive()) {\r\n      directEditing.complete();\r\n    }\r\n  });\r\n\r\n  // cancel on command stack changes\r\n  eventBus.on([ 'commandStack.changed' ], function(e) {\r\n    if (directEditing.isActive()) {\r\n      directEditing.cancel();\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on('directEditing.activate', function(event) {\r\n    resizeHandles.removeResizers();\r\n  });\r\n\r\n  eventBus.on('create.end', 500, function(event) {\r\n\r\n    var element = event.shape,\r\n        canExecute = event.context.canExecute,\r\n        isTouch = event.isTouch;\r\n\r\n    // TODO(nikku): we need to find a way to support the\r\n    // direct editing on mobile devices; right now this will\r\n    // break for desworkflowediting on mobile devices\r\n    // as it breaks the user interaction workflow\r\n\r\n    // TODO(nre): we should temporarily focus the edited element\r\n    // here and release the focused viewport after the direct edit\r\n    // operation is finished\r\n    if (isTouch) {\r\n      return;\r\n    }\r\n\r\n    if (!canExecute) {\r\n      return;\r\n    }\r\n\r\n    activateDirectEdit(element);\r\n  });\r\n\r\n  eventBus.on('autoPlace.end', 500, function(event) {\r\n    activateDirectEdit(event.shape);\r\n  });\r\n\r\n\r\n  function activateDirectEdit(element, force) {\r\n    if (force ||\r\n        isAny(element, [ 'bpmn:Task', 'bpmn:TextAnnotation' ]) ||\r\n        isCollapsedSubProcess(element)) {\r\n\r\n      directEditing.activate(element);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nLabelEditingProvider.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'directEditing',\r\n  'modeling',\r\n  'resizeHandles',\r\n  'textRenderer'\r\n];\r\n\r\n\r\n/**\r\n * Activate direct editing for activities and text annotations.\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Object} an object with properties bounds (position and size), text and options\r\n */\r\nLabelEditingProvider.prototype.activate = function(element) {\r\n\r\n  // text\r\n  var text = getLabel(element);\r\n\r\n  if (text === undefined) {\r\n    return;\r\n  }\r\n\r\n  var context = {\r\n    text: text\r\n  };\r\n\r\n  // bounds\r\n  var bounds = this.getEditingBBox(element);\r\n\r\n  assign(context, bounds);\r\n\r\n  var options = {};\r\n\r\n  // tasks\r\n  if (\r\n    isAny(element, [\r\n      'bpmn:Task',\r\n      'bpmn:Participant',\r\n      'bpmn:Lane',\r\n      'bpmn:CallActivity'\r\n    ]) ||\r\n    isCollapsedSubProcess(element)\r\n  ) {\r\n    assign(options, {\r\n      centerVertically: true\r\n    });\r\n  }\r\n\r\n  // external labels\r\n  if (isLabelExternal(element)) {\r\n    assign(options, {\r\n      autoResize: true\r\n    });\r\n  }\r\n\r\n  // text annotations\r\n  if (is(element, 'bpmn:TextAnnotation')) {\r\n    assign(options, {\r\n      resizable: true,\r\n      autoResize: true\r\n    });\r\n  }\r\n\r\n  assign(context, {\r\n    options: options\r\n  });\r\n\r\n  return context;\r\n};\r\n\r\n\r\n/**\r\n * Get the editing bounding box based on the element's size and position\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Object} an object containing information about position\r\n *                  and size (fixed or minimum and/or maximum)\r\n */\r\nLabelEditingProvider.prototype.getEditingBBox = function(element) {\r\n  var canvas = this._canvas;\r\n\r\n  var target = element.label || element;\r\n\r\n  var bbox = canvas.getAbsoluteBBox(target);\r\n\r\n  var mid = {\r\n    x: bbox.x + bbox.width / 2,\r\n    y: bbox.y + bbox.height / 2\r\n  };\r\n\r\n  // default position\r\n  var bounds = { x: bbox.x, y: bbox.y };\r\n\r\n  var zoom = canvas.zoom();\r\n\r\n  var defaultStyle = this._textRenderer.getDefaultStyle(),\r\n      externalStyle = this._textRenderer.getExternalStyle();\r\n\r\n  // take zoom into account\r\n  var externalFontSize = externalStyle.fontSize * zoom,\r\n      externalLineHeight = externalStyle.lineHeight,\r\n      defaultFontSize = defaultStyle.fontSize * zoom,\r\n      defaultLineHeight = defaultStyle.lineHeight;\r\n\r\n  var style = {\r\n    fontFamily: this._textRenderer.getDefaultStyle().fontFamily,\r\n    fontWeight: this._textRenderer.getDefaultStyle().fontWeight\r\n  };\r\n\r\n  // adjust for expanded pools AND lanes\r\n  if (is(element, 'bpmn:Lane') || isExpandedPool(element)) {\r\n\r\n    assign(bounds, {\r\n      width: bbox.height,\r\n      height: 30 * zoom,\r\n      x: bbox.x - bbox.height / 2 + (15 * zoom),\r\n      y: mid.y - (30 * zoom) / 2\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: defaultFontSize + 'px',\r\n      lineHeight: defaultLineHeight,\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px',\r\n      transform: 'rotate(-90deg)'\r\n    });\r\n  }\r\n\r\n\r\n  // internal labels for tasks and collapsed call activities,\r\n  // sub processes and participants\r\n  if (isAny(element, [ 'bpmn:Task', 'bpmn:CallActivity']) ||\r\n      isCollapsedPool(element) ||\r\n      isCollapsedSubProcess(element)) {\r\n\r\n    assign(bounds, {\r\n      width: bbox.width,\r\n      height: bbox.height\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: defaultFontSize + 'px',\r\n      lineHeight: defaultLineHeight,\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px'\r\n    });\r\n  }\r\n\r\n\r\n  // internal labels for expanded sub processes\r\n  if (isExpandedSubProcess(element)) {\r\n    assign(bounds, {\r\n      width: bbox.width,\r\n      x: bbox.x\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: defaultFontSize + 'px',\r\n      lineHeight: defaultLineHeight,\r\n      paddingTop: (7 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (5 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px'\r\n    });\r\n  }\r\n\r\n  var width = 90 * zoom,\r\n      paddingTop = 7 * zoom,\r\n      paddingBottom = 4 * zoom;\r\n\r\n  // external labels for events, data elements, gateways and connections\r\n  if (target.labelTarget) {\r\n    assign(bounds, {\r\n      width: width,\r\n      height: bbox.height + paddingTop + paddingBottom,\r\n      x: mid.x - width / 2,\r\n      y: bbox.y - paddingTop\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: externalFontSize + 'px',\r\n      lineHeight: externalLineHeight,\r\n      paddingTop: paddingTop + 'px',\r\n      paddingBottom: paddingBottom + 'px'\r\n    });\r\n  }\r\n\r\n  // external label not yet created\r\n  if (isLabelExternal(target)\r\n      && !hasExternalLabel(target)\r\n      && !isLabel(target)) {\r\n\r\n    var externalLabelMid = getExternalLabelMid(element);\r\n\r\n    var absoluteBBox = canvas.getAbsoluteBBox({\r\n      x: externalLabelMid.x,\r\n      y: externalLabelMid.y,\r\n      width: 0,\r\n      height: 0\r\n    });\r\n\r\n    var height = externalFontSize + paddingTop + paddingBottom;\r\n\r\n    assign(bounds, {\r\n      width: width,\r\n      height: height,\r\n      x: absoluteBBox.x - width / 2,\r\n      y: absoluteBBox.y - height / 2\r\n    });\r\n\r\n    assign(style, {\r\n      fontSize: externalFontSize + 'px',\r\n      lineHeight: externalLineHeight,\r\n      paddingTop: paddingTop + 'px',\r\n      paddingBottom: paddingBottom + 'px'\r\n    });\r\n  }\r\n\r\n  // text annotations\r\n  if (is(element, 'bpmn:TextAnnotation')) {\r\n    assign(bounds, {\r\n      width: bbox.width,\r\n      height: bbox.height,\r\n      minWidth: 30 * zoom,\r\n      minHeight: 10 * zoom\r\n    });\r\n\r\n    assign(style, {\r\n      textAlign: 'left',\r\n      paddingTop: (5 * zoom) + 'px',\r\n      paddingBottom: (7 * zoom) + 'px',\r\n      paddingLeft: (7 * zoom) + 'px',\r\n      paddingRight: (5 * zoom) + 'px',\r\n      fontSize: defaultFontSize + 'px',\r\n      lineHeight: defaultLineHeight\r\n    });\r\n  }\r\n\r\n  return { bounds: bounds, style: style };\r\n};\r\n\r\n\r\nLabelEditingProvider.prototype.update = function(\r\n    element, newLabel,\r\n    activeContextText, bounds) {\r\n\r\n  var newBounds,\r\n      bbox;\r\n\r\n  if (is(element, 'bpmn:TextAnnotation')) {\r\n\r\n    bbox = this._canvas.getAbsoluteBBox(element);\r\n\r\n    newBounds = {\r\n      x: element.x,\r\n      y: element.y,\r\n      width: element.width / bbox.width * bounds.width,\r\n      height: element.height / bbox.height * bounds.height\r\n    };\r\n  }\r\n\r\n  if (isEmptyText(newLabel)) {\r\n    newLabel = null;\r\n  }\r\n\r\n  this._modeling.updateLabel(element, newLabel, newBounds);\r\n};\r\n\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction isCollapsedSubProcess(element) {\r\n  return is(element, 'bpmn:SubProcess') && !isExpanded(element);\r\n}\r\n\r\nfunction isExpandedSubProcess(element) {\r\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\r\n}\r\n\r\nfunction isCollapsedPool(element) {\r\n  return is(element, 'bpmn:Participant') && !isExpanded(element);\r\n}\r\n\r\nfunction isExpandedPool(element) {\r\n  return is(element, 'bpmn:Participant') && isExpanded(element);\r\n}\r\n\r\nfunction isEmptyText(label) {\r\n  return !label || !label.trim();\r\n}","import { is } from '../../util/ModelUtil';\r\n\r\nfunction getLabelAttr(semantic) {\r\n  if (is(semantic, 'bpmn:FlowElement') ||\r\n      is(semantic, 'bpmn:Participant') ||\r\n      is(semantic, 'bpmn:Lane') ||\r\n      is(semantic, 'bpmn:SequenceFlow') ||\r\n      is(semantic, 'bpmn:MessageFlow')) {\r\n\r\n    return 'name';\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:TextAnnotation')) {\r\n    return 'text';\r\n  }\r\n}\r\n\r\nexport function getLabel(element) {\r\n  var semantic = element.businessObject,\r\n      attr = getLabelAttr(semantic);\r\n\r\n  if (attr) {\r\n    return semantic[attr] || '';\r\n  }\r\n}\r\n\r\n\r\nexport function setLabel(element, text, isExternal) {\r\n  var semantic = element.businessObject,\r\n      attr = getLabelAttr(semantic);\r\n\r\n  if (attr) {\r\n    semantic[attr] = text;\r\n  }\r\n\r\n  return element;\r\n}","import {\r\n  setLabel,\r\n  getLabel\r\n} from '../LabelUtil';\r\n\r\nimport {\r\n  getExternalLabelMid,\r\n  isLabelExternal,\r\n  hasExternalLabel,\r\n  isLabel\r\n} from '../../../util/LabelUtil';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nvar NULL_DIMENSIONS = {\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\n\r\n/**\r\n * A handler that updates the text of a BPMN element.\r\n */\r\nexport default function UpdateLabelHandler(modeling, textRenderer) {\r\n\r\n  /**\r\n   * Set the label and return the changed elements.\r\n   *\r\n   * Element parameter can be label itself or connection (i.e. sequence flow).\r\n   *\r\n   * @param {djs.model.Base} element\r\n   * @param {String} text\r\n   */\r\n  function setText(element, text) {\r\n\r\n    // external label if present\r\n    var label = element.label || element;\r\n\r\n    var labelTarget = element.labelTarget || element;\r\n\r\n    setLabel(label, text, labelTarget !== label);\r\n\r\n    return [ label, labelTarget ];\r\n  }\r\n\r\n  function preExecute(ctx) {\r\n    var element = ctx.element,\r\n        businessObject = element.businessObject,\r\n        newLabel = ctx.newLabel;\r\n\r\n    if (!isLabel(element)\r\n        && isLabelExternal(element)\r\n        && !hasExternalLabel(element)\r\n        && !isEmptyText(newLabel)) {\r\n\r\n      // create label\r\n      var paddingTop = 7;\r\n\r\n      var labelCenter = getExternalLabelMid(element);\r\n\r\n      labelCenter = {\r\n        x: labelCenter.x,\r\n        y: labelCenter.y + paddingTop\r\n      };\r\n\r\n      modeling.createLabel(element, labelCenter, {\r\n        id: businessObject.id + '_label',\r\n        businessObject: businessObject\r\n      });\r\n    }\r\n  }\r\n\r\n  function execute(ctx) {\r\n    ctx.oldLabel = getLabel(ctx.element);\r\n    return setText(ctx.element, ctx.newLabel);\r\n  }\r\n\r\n  function revert(ctx) {\r\n    return setText(ctx.element, ctx.oldLabel);\r\n  }\r\n\r\n  function postExecute(ctx) {\r\n    var element = ctx.element,\r\n        label = element.label || element,\r\n        newLabel = ctx.newLabel,\r\n        newBounds = ctx.newBounds,\r\n        hints = ctx.hints || {};\r\n\r\n    if (isLabel(label) && isEmptyText(newLabel)) {\r\n\r\n      if (hints.removeShape !== false) {\r\n        modeling.removeShape(label, { unsetLabel: false });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // ignore internal labels for elements except text annotations\r\n    if (!isLabelExternal(element) && !is(element, 'bpmn:TextAnnotation')) {\r\n      return;\r\n    }\r\n\r\n    var bo = getBusinessObject(label);\r\n\r\n    var text = bo.name || bo.text;\r\n\r\n    // don't resize without text\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    // resize element based on label _or_ pre-defined bounds\r\n    if (typeof newBounds === 'undefined') {\r\n      newBounds = textRenderer.getExternalLabelBounds(label, text);\r\n    }\r\n\r\n    // setting newBounds to false or _null_ will\r\n    // disable the postExecute resize operation\r\n    if (newBounds) {\r\n      modeling.resizeShape(label, newBounds, NULL_DIMENSIONS);\r\n    }\r\n  }\r\n\r\n  // API\r\n\r\n  this.preExecute = preExecute;\r\n  this.execute = execute;\r\n  this.revert = revert;\r\n  this.postExecute = postExecute;\r\n}\r\n\r\nUpdateLabelHandler.$inject = [\r\n  'modeling',\r\n  'textRenderer'\r\n];\r\n\r\n\r\n// helpers ///////////////////////\r\n\r\nfunction isEmptyText(label) {\r\n  return !label || !label.trim();\r\n}","import ChangeSupportModule from 'diagram-js/lib/features/change-support';\r\nimport ResizeModule from 'diagram-js/lib/features/resize';\r\nimport DirectEditingModule from 'diagram-js-direct-editing';\r\n\r\nimport LabelEditingProvider from './LabelEditingProvider';\r\nimport LabelEditingPreview from './LabelEditingPreview';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    ChangeSupportModule,\r\n    ResizeModule,\r\n    DirectEditingModule\r\n  ],\r\n  __init__: [\r\n    'labelEditingProvider',\r\n    'labelEditingPreview'\r\n  ],\r\n  labelEditingProvider: [ 'type', LabelEditingProvider ],\r\n  labelEditingPreview: [ 'type', LabelEditingPreview ]\r\n};\r\n","import {\r\n  map,\r\n  assign,\r\n  pick\r\n} from 'min-dash';\r\n\r\nimport {\r\n  isAny\r\n} from './util/ModelingUtil';\r\n\r\n\r\nexport default function BpmnFactory(moddle) {\r\n  this._model = moddle;\r\n}\r\n\r\nBpmnFactory.$inject = [ 'moddle' ];\r\n\r\n\r\nBpmnFactory.prototype._needsId = function(element) {\r\n  return isAny(element, [\r\n    'bpmn:RootElement',\r\n    'bpmn:FlowElement',\r\n    'bpmn:MessageFlow',\r\n    'bpmn:DataAssociation',\r\n    'bpmn:Artifact',\r\n    'bpmn:Participant',\r\n    'bpmn:Lane',\r\n    'bpmn:LaneSet',\r\n    'bpmn:Process',\r\n    'bpmn:Collaboration',\r\n    'bpmndi:BPMNShape',\r\n    'bpmndi:BPMNEdge',\r\n    'bpmndi:BPMNDiagram',\r\n    'bpmndi:BPMNPlane',\r\n    'bpmn:Property'\r\n  ]);\r\n};\r\n\r\nBpmnFactory.prototype._ensureId = function(element) {\r\n\r\n  // generate semantic ids for elements\r\n  // bpmn:SequenceFlow -> SequenceFlow_ID\r\n  var prefix = (element.$type || '').replace(/^[^:]*:/g, '') + '_';\r\n\r\n  if (!element.id && this._needsId(element)) {\r\n    element.id = this._model.ids.nextPrefixed(prefix, element);\r\n  }\r\n};\r\n\r\n\r\nBpmnFactory.prototype.create = function(type, attrs) {\r\n  var element = this._model.create(type, attrs || {});\r\n\r\n  this._ensureId(element);\r\n\r\n  return element;\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiLabel = function() {\r\n  return this.create('bpmndi:BPMNLabel', {\r\n    bounds: this.createDiBounds()\r\n  });\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiShape = function(semantic, bounds, attrs) {\r\n\r\n  return this.create('bpmndi:BPMNShape', assign({\r\n    bpmnElement: semantic,\r\n    bounds: this.createDiBounds(bounds)\r\n  }, attrs));\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiBounds = function(bounds) {\r\n  return this.create('dc:Bounds', bounds);\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiWaypoints = function(waypoints) {\r\n  var self = this;\r\n\r\n  return map(waypoints, function(pos) {\r\n    return self.createDiWaypoint(pos);\r\n  });\r\n};\r\n\r\nBpmnFactory.prototype.createDiWaypoint = function(point) {\r\n  return this.create('dc:Point', pick(point, [ 'x', 'y' ]));\r\n};\r\n\r\n\r\nBpmnFactory.prototype.createDiEdge = function(semantic, waypoints, attrs) {\r\n  return this.create('bpmndi:BPMNEdge', assign({\r\n    bpmnElement: semantic\r\n  }, attrs));\r\n};\r\n\r\nBpmnFactory.prototype.createDiPlane = function(semantic) {\r\n  return this.create('bpmndi:BPMNPlane', {\r\n    bpmnElement: semantic\r\n  });\r\n};","import inherits from 'inherits';\r\n\r\nimport {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport BaseLayouter from 'diagram-js/lib/layout/BaseLayouter';\r\n\r\nimport {\r\n  repairConnection,\r\n  withoutRedundantPoints\r\n} from 'diagram-js/lib/layout/ManhattanLayout';\r\n\r\nimport {\r\n  getMid,\r\n  getOrientation\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  isExpanded\r\n} from '../../util/DiUtil';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\n\r\nexport default function BpmnLayouter() {}\r\n\r\ninherits(BpmnLayouter, BaseLayouter);\r\n\r\n\r\nBpmnLayouter.prototype.layoutConnection = function(connection, hints) {\r\n  hints = hints || {};\r\n\r\n  var source = connection.source,\r\n      target = connection.target,\r\n      waypoints = connection.waypoints,\r\n      start = hints.connectionStart,\r\n      end = hints.connectionEnd;\r\n\r\n  var manhattanOptions,\r\n      updatedWaypoints;\r\n\r\n  if (!start) {\r\n    start = getConnectionDocking(waypoints && waypoints[0], source);\r\n  }\r\n\r\n  if (!end) {\r\n    end = getConnectionDocking(waypoints && waypoints[waypoints.length - 1], target);\r\n  }\r\n\r\n  // TODO(nikku): support vertical modeling\r\n  // and invert preferredLayouts accordingly\r\n\r\n  if (is(connection, 'bpmn:Association') ||\r\n      is(connection, 'bpmn:DataAssociation')) {\r\n\r\n    if (waypoints && !isCompensationAssociation(connection)) {\r\n      return [].concat([ start ], waypoints.slice(1, -1), [ end ]);\r\n    }\r\n  }\r\n\r\n  // manhattan layout sequence / message flows\r\n  if (is(connection, 'bpmn:MessageFlow')) {\r\n    manhattanOptions = getMessageFlowManhattanOptions(source, target);\r\n\r\n  } else\r\n\r\n\r\n  // layout all connection between flow elements h:h,\r\n  //\r\n  // except for\r\n  //\r\n  // (1) outgoing of BoundaryEvents -> layout based on attach orientation and target orientation\r\n  // (2) incoming / outgoing of Gateway -> v:h (outgoing), h:v (incoming)\r\n  // (3) loops from / to the same element\r\n  //\r\n  if (is(connection, 'bpmn:SequenceFlow') ||\r\n      isCompensationAssociation(connection)) {\r\n\r\n    if (source === target) {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'b:l' ]\r\n      };\r\n    } else\r\n\r\n    if (is(source, 'bpmn:BoundaryEvent')) {\r\n\r\n      manhattanOptions = {\r\n        preferredLayouts: getBoundaryEventPreferredLayouts(source, target)\r\n      };\r\n\r\n    } else\r\n\r\n    if (is(source, 'bpmn:Gateway')) {\r\n\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'v:h' ]\r\n      };\r\n    } else\r\n\r\n    if (is(target, 'bpmn:Gateway')) {\r\n\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'h:v' ]\r\n      };\r\n    }\r\n\r\n    else {\r\n      manhattanOptions = {\r\n        preferredLayouts: [ 'h:h' ]\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  if (manhattanOptions) {\r\n\r\n    manhattanOptions = assign(manhattanOptions, hints);\r\n\r\n    updatedWaypoints =\r\n      withoutRedundantPoints(\r\n        repairConnection(\r\n          source, target,\r\n          start, end,\r\n          waypoints,\r\n          manhattanOptions\r\n        )\r\n      );\r\n  }\r\n\r\n  return updatedWaypoints || [ start, end ];\r\n};\r\n\r\n\r\nfunction getAttachOrientation(attachedElement) {\r\n\r\n  var hostElement = attachedElement.host,\r\n      padding = -10;\r\n\r\n  return getOrientation(getMid(attachedElement), hostElement, padding);\r\n}\r\n\r\n\r\nfunction getMessageFlowManhattanOptions(source, target) {\r\n  return {\r\n    preferredLayouts: [ 'straight', 'v:v' ],\r\n    preserveDocking: getMessageFlowPreserveDocking(source, target)\r\n  };\r\n}\r\n\r\n\r\nfunction getMessageFlowPreserveDocking(source, target) {\r\n\r\n  // (1) docking element connected to participant has precedence\r\n\r\n  if (is(target, 'bpmn:Participant')) {\r\n    return 'source';\r\n  }\r\n\r\n  if (is(source, 'bpmn:Participant')) {\r\n    return 'target';\r\n  }\r\n\r\n  // (2) docking element connected to expanded sub-process has precedence\r\n\r\n  if (isExpandedSubProcess(target)) {\r\n    return 'source';\r\n  }\r\n\r\n  if (isExpandedSubProcess(source)) {\r\n    return 'target';\r\n  }\r\n\r\n  // (3) docking event has precedence\r\n\r\n  if (is(target, 'bpmn:Event')) {\r\n    return 'target';\r\n  }\r\n\r\n  if (is(source, 'bpmn:Event')) {\r\n    return 'source';\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n\r\nfunction getConnectionDocking(point, shape) {\r\n  return point ? (point.original || point) : getMid(shape);\r\n}\r\n\r\nfunction isCompensationAssociation(connection) {\r\n\r\n  var source = connection.source,\r\n      target = connection.target;\r\n\r\n  return is(target, 'bpmn:Activity') &&\r\n         is(source, 'bpmn:BoundaryEvent') &&\r\n         target.businessObject.isForCompensation;\r\n}\r\n\r\n\r\nfunction isExpandedSubProcess(element) {\r\n  return is(element, 'bpmn:SubProcess') && isExpanded(element);\r\n}\r\n\r\nfunction isSame(a, b) {\r\n  return a === b;\r\n}\r\n\r\nfunction isAnyOrientation(orientation, orientations) {\r\n  return orientations.indexOf(orientation) !== -1;\r\n}\r\n\r\nvar oppositeOrientationMapping = {\r\n  'top': 'bottom',\r\n  'top-right': 'bottom-left',\r\n  'top-left': 'bottom-right',\r\n  'right': 'left',\r\n  'bottom': 'top',\r\n  'bottom-right': 'top-left',\r\n  'bottom-left': 'top-right',\r\n  'left': 'right'\r\n};\r\n\r\nvar orientationDirectionMapping = {\r\n  top: 't',\r\n  right: 'r',\r\n  bottom: 'b',\r\n  left: 'l'\r\n};\r\n\r\nfunction getHorizontalOrientation(orientation) {\r\n  var matches = /right|left/.exec(orientation);\r\n\r\n  return matches && matches[0];\r\n}\r\n\r\nfunction getVerticalOrientation(orientation) {\r\n  var matches = /top|bottom/.exec(orientation);\r\n\r\n  return matches && matches[0];\r\n}\r\n\r\nfunction isOppositeOrientation(a, b) {\r\n  return oppositeOrientationMapping[a] === b;\r\n}\r\n\r\nfunction isOppositeHorizontalOrientation(a, b) {\r\n  var horizontalOrientation = getHorizontalOrientation(a);\r\n\r\n  var oppositeHorizontalOrientation = oppositeOrientationMapping[horizontalOrientation];\r\n\r\n  return b.indexOf(oppositeHorizontalOrientation) !== -1;\r\n}\r\n\r\nfunction isOppositeVerticalOrientation(a, b) {\r\n  var verticalOrientation = getVerticalOrientation(a);\r\n\r\n  var oppositeVerticalOrientation = oppositeOrientationMapping[verticalOrientation];\r\n\r\n  return b.indexOf(oppositeVerticalOrientation) !== -1;\r\n}\r\n\r\nfunction isHorizontalOrientation(orientation) {\r\n  return orientation === 'right' || orientation === 'left';\r\n}\r\n\r\nfunction getBoundaryEventPreferredLayouts(source, target) {\r\n  var sourceMid = getMid(source),\r\n      targetMid = getMid(target),\r\n      attachOrientation = getAttachOrientation(source),\r\n      sourceLayout,\r\n      targetlayout;\r\n\r\n  var isLoop = isSame(source.host, target);\r\n\r\n  var attachedToSide = isAnyOrientation(attachOrientation, [ 'top', 'right', 'bottom', 'left' ]);\r\n\r\n  var isHorizontalAttachOrientation = isHorizontalOrientation(attachOrientation);\r\n\r\n  var targetOrientation = getOrientation(targetMid, sourceMid, {\r\n    x: source.width / 2 + target.width / 2,\r\n    y: source.height / 2 + target.height / 2\r\n  });\r\n\r\n  // source layout\r\n\r\n  // attached to either top, right, bottom or left side\r\n  if (attachedToSide) {\r\n\r\n    sourceLayout = orientationDirectionMapping[\r\n      isHorizontalAttachOrientation ?\r\n        getHorizontalOrientation(attachOrientation) :\r\n        getVerticalOrientation(attachOrientation)\r\n    ];\r\n\r\n  } else\r\n\r\n  // attached to either top-right, top-left, bottom-right or bottom-left corner\r\n  {\r\n\r\n    // loop, same vertical or opposite horizontal orientation\r\n    if (isLoop ||\r\n      isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) ||\r\n      isOppositeOrientation(getHorizontalOrientation(attachOrientation), getHorizontalOrientation(targetOrientation))\r\n    ) {\r\n      sourceLayout = orientationDirectionMapping[getVerticalOrientation(attachOrientation)];\r\n    } else {\r\n      sourceLayout = orientationDirectionMapping[getHorizontalOrientation(attachOrientation)];\r\n    }\r\n\r\n  }\r\n\r\n  // target layout\r\n\r\n  // attached to either top, right, bottom or left side\r\n  if (attachedToSide) {\r\n\r\n    // loop or opposite horizontal/vertical orientation\r\n    if (\r\n      isLoop ||\r\n      (isHorizontalAttachOrientation ?\r\n        isOppositeHorizontalOrientation(attachOrientation, targetOrientation) :\r\n        isOppositeVerticalOrientation(attachOrientation, targetOrientation))\r\n    ) {\r\n      targetlayout = isHorizontalAttachOrientation ? 'h' : 'v';\r\n    } else {\r\n      targetlayout = isHorizontalAttachOrientation ? 'v' : 'h';\r\n    }\r\n\r\n  } else\r\n\r\n  // attached to either top-right, top-left, bottom-right or bottom-left corner\r\n  {\r\n\r\n    // orientation is 'right', 'left'\r\n    // or same vertical orientation but also 'right' or 'left'\r\n    if (\r\n      isHorizontalOrientation(targetOrientation) ||\r\n      (isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation)) &&\r\n        getHorizontalOrientation(targetOrientation))\r\n    ) {\r\n      targetlayout = 'h';\r\n    } else {\r\n      targetlayout = 'v';\r\n    }\r\n\r\n  }\r\n\r\n  return [ sourceLayout + ':' + targetlayout ];\r\n}","import {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport {\r\n  remove as collectionRemove,\r\n  add as collectionAdd\r\n} from 'diagram-js/lib/util/Collections';\r\n\r\nimport {\r\n  Label\r\n} from 'diagram-js/lib/model';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../util/ModelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\n/**\r\n * A handler responsible for updating the underlying BPMN 2.0 XML + DI\r\n * once changes on the diagram happen\r\n */\r\nexport default function BpmnUpdater(\r\n    eventBus, bpmnFactory, connectionDocking,\r\n    translate) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._bpmnFactory = bpmnFactory;\r\n  this._translate = translate;\r\n\r\n  var self = this;\r\n\r\n\r\n\r\n  // connection cropping //////////////////////\r\n\r\n  // crop connection ends during create/update\r\n  function cropConnection(e) {\r\n    var context = e.context,\r\n        connection;\r\n\r\n    if (!context.cropped) {\r\n      connection = context.connection;\r\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\r\n      context.cropped = true;\r\n    }\r\n  }\r\n\r\n  this.executed([\r\n    'connection.layout',\r\n    'connection.create',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], cropConnection);\r\n\r\n  this.reverted([ 'connection.layout' ], function(e) {\r\n    delete e.context.cropped;\r\n  });\r\n\r\n\r\n\r\n  // BPMN + DI update //////////////////////\r\n\r\n\r\n  // update parent\r\n  function updateParent(e) {\r\n    var context = e.context;\r\n\r\n    self.updateParent(context.shape || context.connection, context.oldParent);\r\n  }\r\n\r\n  function reverseUpdateParent(e) {\r\n    var context = e.context;\r\n\r\n    var element = context.shape || context.connection,\r\n        // oldParent is the (old) new parent, because we are undoing\r\n        oldParent = context.parent || context.newParent;\r\n\r\n    self.updateParent(element, oldParent);\r\n  }\r\n\r\n  this.executed([\r\n    'shape.move',\r\n    'shape.create',\r\n    'shape.delete',\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete'\r\n  ], ifBpmn(updateParent));\r\n\r\n  this.reverted([\r\n    'shape.move',\r\n    'shape.create',\r\n    'shape.delete',\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete'\r\n  ], ifBpmn(reverseUpdateParent));\r\n\r\n  /*\r\n   * ## Updating Parent\r\n   *\r\n   * When morphing a Process into a Collaboration or vice-versa,\r\n   * make sure that both the *semantic* and *di* parent of each element\r\n   * is updated.\r\n   *\r\n   */\r\n  function updateRoot(event) {\r\n    var context = event.context,\r\n        oldRoot = context.oldRoot,\r\n        children = oldRoot.children;\r\n\r\n    forEach(children, function(child) {\r\n      if (is(child, 'bpmn:BaseElement')) {\r\n        self.updateParent(child);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.executed([ 'canvas.updateRoot' ], updateRoot);\r\n  this.reverted([ 'canvas.updateRoot' ], updateRoot);\r\n\r\n\r\n  // update bounds\r\n  function updateBounds(e) {\r\n    var shape = e.context.shape;\r\n\r\n    if (!is(shape, 'bpmn:BaseElement')) {\r\n      return;\r\n    }\r\n\r\n    self.updateBounds(shape);\r\n  }\r\n\r\n  this.executed([ 'shape.move', 'shape.create', 'shape.resize' ], ifBpmn(function(event) {\r\n\r\n    // exclude labels because they're handled separately during shape.changed\r\n    if (event.context.shape.type === 'label') {\r\n      return;\r\n    }\r\n\r\n    updateBounds(event);\r\n  }));\r\n\r\n  this.reverted([ 'shape.move', 'shape.create', 'shape.resize' ], ifBpmn(function(event) {\r\n\r\n    // exclude labels because they're handled separately during shape.changed\r\n    if (event.context.shape.type === 'label') {\r\n      return;\r\n    }\r\n\r\n    updateBounds(event);\r\n  }));\r\n\r\n  // Handle labels separately. This is necessary, because the label bounds have to be updated\r\n  // every time its shape changes, not only on move, create and resize.\r\n  eventBus.on('shape.changed', function(event) {\r\n    if (event.element.type === 'label') {\r\n      updateBounds({ context: { shape: event.element } });\r\n    }\r\n  });\r\n\r\n  // attach / detach connection\r\n  function updateConnection(e) {\r\n    self.updateConnection(e.context);\r\n  }\r\n\r\n  this.executed([\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnection));\r\n\r\n  this.reverted([\r\n    'connection.create',\r\n    'connection.move',\r\n    'connection.delete',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnection));\r\n\r\n\r\n  // update waypoints\r\n  function updateConnectionWaypoints(e) {\r\n    self.updateConnectionWaypoints(e.context.connection);\r\n  }\r\n\r\n  this.executed([\r\n    'connection.layout',\r\n    'connection.move',\r\n    'connection.updateWaypoints',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnectionWaypoints));\r\n\r\n  this.reverted([\r\n    'connection.layout',\r\n    'connection.move',\r\n    'connection.updateWaypoints',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(updateConnectionWaypoints));\r\n\r\n\r\n  // update Default & Conditional flows\r\n  this.executed([\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(function(e) {\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        businessObject = getBusinessObject(connection),\r\n        oldSource = getBusinessObject(context.oldSource),\r\n        oldTarget = getBusinessObject(context.oldTarget),\r\n        newSource = getBusinessObject(connection.source),\r\n        newTarget = getBusinessObject(connection.target);\r\n\r\n    if (oldSource === newSource || oldTarget === newTarget) {\r\n      return;\r\n    }\r\n\r\n    // on reconnectStart -> default flow\r\n    if (oldSource && oldSource.default === businessObject) {\r\n      context.default = oldSource.default;\r\n      oldSource.default = undefined;\r\n    }\r\n\r\n    // on reconnectEnd -> default flow\r\n    if ((businessObject.sourceRef && businessObject.sourceRef.default) &&\r\n        !(is(newTarget, 'bpmn:Activity') ||\r\n          is(newTarget, 'bpmn:EndEvent') ||\r\n          is(newTarget, 'bpmn:Gateway') ||\r\n          is(newTarget, 'bpmn:IntermediateThrowEvent'))) {\r\n      context.default = businessObject.sourceRef.default;\r\n      businessObject.sourceRef.default = undefined;\r\n    }\r\n\r\n    // on reconnectStart -> conditional flow\r\n    if (oldSource && (businessObject.conditionExpression) &&\r\n      !(is(newSource, 'bpmn:Activity') ||\r\n        is(newSource, 'bpmn:Gateway'))) {\r\n      context.conditionExpression = businessObject.conditionExpression;\r\n      businessObject.conditionExpression = undefined;\r\n    }\r\n\r\n    // on reconnectEnd -> conditional flow\r\n    if (oldTarget && (businessObject.conditionExpression) &&\r\n        !(is(newTarget, 'bpmn:Activity') ||\r\n          is(newTarget, 'bpmn:EndEvent') ||\r\n          is(newTarget, 'bpmn:Gateway') ||\r\n          is(newTarget, 'bpmn:IntermediateThrowEvent'))) {\r\n      context.conditionExpression = businessObject.conditionExpression;\r\n      businessObject.conditionExpression = undefined;\r\n    }\r\n  }));\r\n\r\n  this.reverted([\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart'\r\n  ], ifBpmn(function(e) {\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        businessObject = getBusinessObject(connection),\r\n        newSource = getBusinessObject(connection.source);\r\n\r\n    // default flow\r\n    if (context.default) {\r\n      if (is(newSource, 'bpmn:ExclusiveGateway') || is(newSource, 'bpmn:InclusiveGateway') ||\r\n          is(newSource, 'bpmn:Activity')) {\r\n        newSource.default = context.default;\r\n      }\r\n    }\r\n\r\n    // conditional flow\r\n    if (context.conditionExpression && is(newSource, 'bpmn:Activity')) {\r\n      businessObject.conditionExpression = context.conditionExpression;\r\n    }\r\n  }));\r\n\r\n  // update attachments\r\n  function updateAttachment(e) {\r\n    self.updateAttachment(e.context);\r\n  }\r\n\r\n  this.executed([ 'element.updateAttachment' ], ifBpmn(updateAttachment));\r\n  this.reverted([ 'element.updateAttachment' ], ifBpmn(updateAttachment));\r\n}\r\n\r\ninherits(BpmnUpdater, CommandInterceptor);\r\n\r\nBpmnUpdater.$inject = [\r\n  'eventBus',\r\n  'bpmnFactory',\r\n  'connectionDocking',\r\n  'translate'\r\n];\r\n\r\n\r\n// implementation //////////////////////\r\n\r\nBpmnUpdater.prototype.updateAttachment = function(context) {\r\n\r\n  var shape = context.shape,\r\n      businessObject = shape.businessObject,\r\n      host = shape.host;\r\n\r\n  businessObject.attachedToRef = host && host.businessObject;\r\n};\r\n\r\nBpmnUpdater.prototype.updateParent = function(element, oldParent) {\r\n  // do not update BPMN 2.0 label parent\r\n  if (element instanceof Label) {\r\n    return;\r\n  }\r\n\r\n  // data stores in collaborations are handled seperately by DataStoreBehavior\r\n  if (is(element, 'bpmn:DataStoreReference') &&\r\n      element.parent &&\r\n      is(element.parent, 'bpmn:Collaboration')) {\r\n    return;\r\n  }\r\n\r\n  var parentShape = element.parent;\r\n\r\n  var businessObject = element.businessObject,\r\n      parentBusinessObject = parentShape && parentShape.businessObject,\r\n      parentDi = parentBusinessObject && parentBusinessObject.di;\r\n\r\n  if (is(element, 'bpmn:FlowNode')) {\r\n    this.updateFlowNodeRefs(businessObject, parentBusinessObject, oldParent && oldParent.businessObject);\r\n  }\r\n\r\n  if (is(element, 'bpmn:DataOutputAssociation')) {\r\n    if (element.source) {\r\n      parentBusinessObject = element.source.businessObject;\r\n    } else {\r\n      parentBusinessObject = null;\r\n    }\r\n  }\r\n\r\n  if (is(element, 'bpmn:DataInputAssociation')) {\r\n    if (element.target) {\r\n      parentBusinessObject = element.target.businessObject;\r\n    } else {\r\n      parentBusinessObject = null;\r\n    }\r\n  }\r\n\r\n  this.updateSemanticParent(businessObject, parentBusinessObject);\r\n\r\n  if (is(element, 'bpmn:DataObjectReference') && businessObject.dataObjectRef) {\r\n    this.updateSemanticParent(businessObject.dataObjectRef, parentBusinessObject);\r\n  }\r\n\r\n  this.updateDiParent(businessObject.di, parentDi);\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateBounds = function(shape) {\r\n\r\n  var di = shape.businessObject.di;\r\n\r\n  var target = (shape instanceof Label) ? this._getLabel(di) : di;\r\n\r\n  var bounds = target.bounds;\r\n\r\n  if (!bounds) {\r\n    bounds = this._bpmnFactory.createDiBounds();\r\n    target.set('bounds', bounds);\r\n  }\r\n\r\n  assign(bounds, {\r\n    x: shape.x,\r\n    y: shape.y,\r\n    width: shape.width,\r\n    height: shape.height\r\n  });\r\n};\r\n\r\nBpmnUpdater.prototype.updateFlowNodeRefs = function(businessObject, newContainment, oldContainment) {\r\n\r\n  if (oldContainment === newContainment) {\r\n    return;\r\n  }\r\n\r\n  var oldRefs, newRefs;\r\n\r\n  if (is (oldContainment, 'bpmn:Lane')) {\r\n    oldRefs = oldContainment.get('flowNodeRef');\r\n    collectionRemove(oldRefs, businessObject);\r\n  }\r\n\r\n  if (is(newContainment, 'bpmn:Lane')) {\r\n    newRefs = newContainment.get('flowNodeRef');\r\n    collectionAdd(newRefs, businessObject);\r\n  }\r\n};\r\n\r\n\r\n// update existing sourceElement and targetElement di information\r\nBpmnUpdater.prototype.updateDiConnection = function(di, newSource, newTarget) {\r\n\r\n  if (di.sourceElement && di.sourceElement.bpmnElement !== newSource) {\r\n    di.sourceElement = newSource && newSource.di;\r\n  }\r\n\r\n  if (di.targetElement && di.targetElement.bpmnElement !== newTarget) {\r\n    di.targetElement = newTarget && newTarget.di;\r\n  }\r\n\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateDiParent = function(di, parentDi) {\r\n\r\n  if (parentDi && !is(parentDi, 'bpmndi:BPMNPlane')) {\r\n    parentDi = parentDi.$parent;\r\n  }\r\n\r\n  if (di.$parent === parentDi) {\r\n    return;\r\n  }\r\n\r\n  var planeElements = (parentDi || di.$parent).get('planeElement');\r\n\r\n  if (parentDi) {\r\n    planeElements.push(di);\r\n    di.$parent = parentDi;\r\n  } else {\r\n    collectionRemove(planeElements, di);\r\n    di.$parent = null;\r\n  }\r\n};\r\n\r\nfunction getDefinitions(element) {\r\n  while (element && !is(element, 'bpmn:Definitions')) {\r\n    element = element.$parent;\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nBpmnUpdater.prototype.getLaneSet = function(container) {\r\n\r\n  var laneSet, laneSets;\r\n\r\n  // bpmn:Lane\r\n  if (is(container, 'bpmn:Lane')) {\r\n    laneSet = container.childLaneSet;\r\n\r\n    if (!laneSet) {\r\n      laneSet = this._bpmnFactory.create('bpmn:LaneSet');\r\n      container.childLaneSet = laneSet;\r\n      laneSet.$parent = container;\r\n    }\r\n\r\n    return laneSet;\r\n  }\r\n\r\n  // bpmn:Participant\r\n  if (is(container, 'bpmn:Participant')) {\r\n    container = container.processRef;\r\n  }\r\n\r\n  // bpmn:FlowElementsContainer\r\n  laneSets = container.get('laneSets');\r\n  laneSet = laneSets[0];\r\n\r\n  if (!laneSet) {\r\n    laneSet = this._bpmnFactory.create('bpmn:LaneSet');\r\n    laneSet.$parent = container;\r\n    laneSets.push(laneSet);\r\n  }\r\n\r\n  return laneSet;\r\n};\r\n\r\nBpmnUpdater.prototype.updateSemanticParent = function(businessObject, newParent, visualParent) {\r\n\r\n  var containment,\r\n      translate = this._translate;\r\n\r\n  if (businessObject.$parent === newParent) {\r\n    return;\r\n  }\r\n\r\n  if (is(businessObject, 'bpmn:Lane')) {\r\n\r\n    if (newParent) {\r\n      newParent = this.getLaneSet(newParent);\r\n    }\r\n\r\n    containment = 'lanes';\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:FlowElement')) {\r\n\r\n    if (newParent) {\r\n\r\n      if (is(newParent, 'bpmn:Participant')) {\r\n        newParent = newParent.processRef;\r\n      } else\r\n\r\n      if (is(newParent, 'bpmn:Lane')) {\r\n        do {\r\n          // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\r\n          newParent = newParent.$parent.$parent;\r\n        } while (is(newParent, 'bpmn:Lane'));\r\n\r\n      }\r\n    }\r\n\r\n    containment = 'flowElements';\r\n\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:Artifact')) {\r\n\r\n    while (newParent &&\r\n           !is(newParent, 'bpmn:Process') &&\r\n           !is(newParent, 'bpmn:SubProcess') &&\r\n           !is(newParent, 'bpmn:Collaboration')) {\r\n\r\n      if (is(newParent, 'bpmn:Participant')) {\r\n        newParent = newParent.processRef;\r\n        break;\r\n      } else {\r\n        newParent = newParent.$parent;\r\n      }\r\n    }\r\n\r\n    containment = 'artifacts';\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:MessageFlow')) {\r\n    containment = 'messageFlows';\r\n\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:Participant')) {\r\n    containment = 'participants';\r\n\r\n    // make sure the participants process is properly attached / detached\r\n    // from the XML document\r\n\r\n    var process = businessObject.processRef,\r\n        definitions;\r\n\r\n    if (process) {\r\n      definitions = getDefinitions(businessObject.$parent || newParent);\r\n\r\n      if (businessObject.$parent) {\r\n        collectionRemove(definitions.get('rootElements'), process);\r\n        process.$parent = null;\r\n      }\r\n\r\n      if (newParent) {\r\n        collectionAdd(definitions.get('rootElements'), process);\r\n        process.$parent = definitions;\r\n      }\r\n    }\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataOutputAssociation')) {\r\n    containment = 'dataOutputAssociations';\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataInputAssociation')) {\r\n    containment = 'dataInputAssociations';\r\n  }\r\n\r\n  if (!containment) {\r\n    throw new Error(translate(\r\n      'no parent for {element} in {parent}',\r\n      {\r\n        element: businessObject.id,\r\n        parent: newParent.id\r\n      }\r\n    ));\r\n  }\r\n\r\n  var children;\r\n\r\n  if (businessObject.$parent) {\r\n    // remove from old parent\r\n    children = businessObject.$parent.get(containment);\r\n    collectionRemove(children, businessObject);\r\n  }\r\n\r\n  if (!newParent) {\r\n    businessObject.$parent = null;\r\n  } else {\r\n    // add to new parent\r\n    children = newParent.get(containment);\r\n    children.push(businessObject);\r\n    businessObject.$parent = newParent;\r\n  }\r\n\r\n  if (visualParent) {\r\n    var diChildren = visualParent.get(containment);\r\n\r\n    collectionRemove(children, businessObject);\r\n\r\n    if (newParent) {\r\n\r\n      if (!diChildren) {\r\n        diChildren = [];\r\n        newParent.set(containment, diChildren);\r\n      }\r\n\r\n      diChildren.push(businessObject);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateConnectionWaypoints = function(connection) {\r\n  connection.businessObject.di.set('waypoint', this._bpmnFactory.createDiWaypoints(connection.waypoints));\r\n};\r\n\r\n\r\nBpmnUpdater.prototype.updateConnection = function(context) {\r\n\r\n  var connection = context.connection,\r\n      businessObject = getBusinessObject(connection),\r\n      newSource = getBusinessObject(connection.source),\r\n      newTarget = getBusinessObject(connection.target),\r\n      visualParent;\r\n\r\n  if (!is(businessObject, 'bpmn:DataAssociation')) {\r\n\r\n    var inverseSet = is(businessObject, 'bpmn:SequenceFlow');\r\n\r\n    if (businessObject.sourceRef !== newSource) {\r\n      if (inverseSet) {\r\n        collectionRemove(businessObject.sourceRef && businessObject.sourceRef.get('outgoing'), businessObject);\r\n\r\n        if (newSource && newSource.get('outgoing')) {\r\n          newSource.get('outgoing').push(businessObject);\r\n        }\r\n      }\r\n\r\n      businessObject.sourceRef = newSource;\r\n    }\r\n\r\n    if (businessObject.targetRef !== newTarget) {\r\n      if (inverseSet) {\r\n        collectionRemove(businessObject.targetRef && businessObject.targetRef.get('incoming'), businessObject);\r\n\r\n        if (newTarget && newTarget.get('incoming')) {\r\n          newTarget.get('incoming').push(businessObject);\r\n        }\r\n      }\r\n\r\n      businessObject.targetRef = newTarget;\r\n    }\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataInputAssociation')) {\r\n    // handle obnoxious isMsome sourceRef\r\n    businessObject.get('sourceRef')[0] = newSource;\r\n\r\n    visualParent = context.parent || context.newParent || newTarget;\r\n\r\n    this.updateSemanticParent(businessObject, newTarget, parent.businessObject);\r\n  } else\r\n\r\n  if (is(businessObject, 'bpmn:DataOutputAssociation')) {\r\n    visualParent = context.parent || context.newParent || newSource;\r\n\r\n    this.updateSemanticParent(businessObject, newSource, visualParent);\r\n\r\n    // targetRef = new target\r\n    businessObject.targetRef = newTarget;\r\n  }\r\n\r\n  this.updateConnectionWaypoints(connection);\r\n\r\n  this.updateDiConnection(businessObject.di, newSource, newTarget);\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nBpmnUpdater.prototype._getLabel = function(di) {\r\n  if (!di.label) {\r\n    di.label = this._bpmnFactory.createDiLabel();\r\n  }\r\n\r\n  return di.label;\r\n};\r\n\r\n\r\n/**\r\n * Make sure the event listener is only called\r\n * if the touched element is a BPMN element.\r\n *\r\n * @param  {Function} fn\r\n * @return {Function} guarded function\r\n */\r\nfunction ifBpmn(fn) {\r\n\r\n  return function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape || context.connection;\r\n\r\n    if (is(element, 'bpmn:BaseElement')) {\r\n      fn(event);\r\n    }\r\n  };\r\n}\r\n","import {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\nimport {\r\n  isExpanded\r\n} from '../../util/DiUtil';\r\n\r\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\r\n\r\nimport {\r\n  DEFAULT_LABEL_SIZE\r\n} from '../../util/LabelUtil';\r\n\r\n\r\n/**\r\n * A bpmn-aware factory for diagram-js shapes\r\n */\r\nexport default function ElementFactory(bpmnFactory, moddle, translate) {\r\n  BaseElementFactory.call(this);\r\n\r\n  this._bpmnFactory = bpmnFactory;\r\n  this._moddle = moddle;\r\n  this._translate = translate;\r\n}\r\n\r\ninherits(ElementFactory, BaseElementFactory);\r\n\r\nElementFactory.$inject = [\r\n  'bpmnFactory',\r\n  'moddle',\r\n  'translate'\r\n];\r\n\r\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\r\n\r\nElementFactory.prototype.create = function(elementType, attrs) {\r\n  // no special magic for labels,\r\n  // we assume their businessObjects have already been created\r\n  // and wired via attrs\r\n  if (elementType === 'label') {\r\n    return this.baseCreate(elementType, assign({ type: 'label' }, DEFAULT_LABEL_SIZE, attrs));\r\n  }\r\n\r\n  return this.createBpmnElement(elementType, attrs);\r\n};\r\n\r\nElementFactory.prototype.createBpmnElement = function(elementType, attrs) {\r\n  var size,\r\n      translate = this._translate;\r\n\r\n  attrs = attrs || {};\r\n\r\n  var businessObject = attrs.businessObject;\r\n\r\n  if (!businessObject) {\r\n    if (!attrs.type) {\r\n      throw new Error(translate('no shape type specified'));\r\n    }\r\n\r\n    businessObject = this._bpmnFactory.create(attrs.type);\r\n  }\r\n\r\n  if (!businessObject.di) {\r\n    if (elementType === 'root') {\r\n      businessObject.di = this._bpmnFactory.createDiPlane(businessObject, [], {\r\n        id: businessObject.id + '_di'\r\n      });\r\n    } else\r\n    if (elementType === 'connection') {\r\n      businessObject.di = this._bpmnFactory.createDiEdge(businessObject, [], {\r\n        id: businessObject.id + '_di'\r\n      });\r\n    } else {\r\n      businessObject.di = this._bpmnFactory.createDiShape(businessObject, {}, {\r\n        id: businessObject.id + '_di'\r\n      });\r\n    }\r\n  }\r\n\r\n  if (attrs.colors) {\r\n    assign(businessObject.di, attrs.colors);\r\n\r\n    delete attrs.colors;\r\n  }\r\n\r\n  applyAttributes(businessObject, attrs, [\r\n    'processRef',\r\n    'isInterrupting',\r\n    'associationDirection',\r\n    'isForCompensation'\r\n  ]);\r\n\r\n  if (attrs.isExpanded) {\r\n    applyAttribute(businessObject.di, attrs, 'isExpanded');\r\n  }\r\n\r\n  if (is(businessObject, 'bpmn:ExclusiveGateway')) {\r\n    businessObject.di.isMarkerVisible = true;\r\n  }\r\n\r\n  var eventDefinitions,\r\n      newEventDefinition;\r\n\r\n  if (attrs.eventDefinitionType) {\r\n    eventDefinitions = businessObject.get('eventDefinitions') || [];\r\n    newEventDefinition = this._moddle.create(attrs.eventDefinitionType);\r\n\r\n    if (attrs.eventDefinitionType === 'bpmn:ConditionalEventDefinition') {\r\n      newEventDefinition.condition = this._moddle.create('bpmn:FormalExpression');\r\n    }\r\n\r\n    eventDefinitions.push(newEventDefinition);\r\n\r\n    newEventDefinition.$parent = businessObject;\r\n    businessObject.eventDefinitions = eventDefinitions;\r\n\r\n    delete attrs.eventDefinitionType;\r\n  }\r\n\r\n  size = this._getDefaultSize(businessObject);\r\n\r\n  attrs = assign({\r\n    businessObject: businessObject,\r\n    id: businessObject.id\r\n  }, size, attrs);\r\n\r\n  return this.baseCreate(elementType, attrs);\r\n};\r\n\r\n\r\nElementFactory.prototype._getDefaultSize = function(semantic) {\r\n\r\n  if (is(semantic, 'bpmn:SubProcess')) {\r\n\r\n    if (isExpanded(semantic)) {\r\n      return { width: 350, height: 200 };\r\n    } else {\r\n      return { width: 100, height: 80 };\r\n    }\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Task')) {\r\n    return { width: 100, height: 80 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Gateway')) {\r\n    return { width: 50, height: 50 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Event')) {\r\n    return { width: 36, height: 36 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Participant')) {\r\n    if (!isExpanded(semantic)) {\r\n      return { width: 400, height: 100 };\r\n    } else {\r\n      return { width: 600, height: 250 };\r\n    }\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:Lane')) {\r\n    return { width: 400, height: 100 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:DataObjectReference')) {\r\n    return { width: 36, height: 50 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:DataStoreReference')) {\r\n    return { width: 50, height: 50 };\r\n  }\r\n\r\n  if (is(semantic, 'bpmn:TextAnnotation')) {\r\n    return { width: 100, height: 30 };\r\n  }\r\n\r\n  return { width: 100, height: 80 };\r\n};\r\n\r\n\r\nElementFactory.prototype.createParticipantShape = function(collapsed) {\r\n\r\n  var attrs = { type: 'bpmn:Participant' };\r\n\r\n  if (!collapsed) {\r\n    attrs.processRef = this._bpmnFactory.create('bpmn:Process');\r\n  }\r\n\r\n  return this.createShape(attrs);\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Apply attributes from a map to the given element,\r\n * remove attribute from the map on application.\r\n *\r\n * @param {Base} element\r\n * @param {Object} attrs (in/out map of attributes)\r\n * @param {Array<String>} attributeNames name of attributes to apply\r\n */\r\nfunction applyAttributes(element, attrs, attributeNames) {\r\n\r\n  forEach(attributeNames, function(property) {\r\n    if (attrs[property] !== undefined) {\r\n      applyAttribute(element, attrs, property);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Apply named property to element and drain it from the attrs\r\n * collection.\r\n *\r\n * @param {Base} element\r\n * @param {Object} attrs (in/out map of attributes)\r\n * @param {String} attributeName to apply\r\n */\r\nfunction applyAttribute(element, attrs, attributeName) {\r\n  element[attributeName] = attrs[attributeName];\r\n\r\n  delete attrs[attributeName];\r\n}","import inherits from 'inherits';\r\n\r\nimport BaseModeling from 'diagram-js/lib/features/modeling/Modeling';\r\n\r\nimport UpdatePropertiesHandler from './cmd/UpdatePropertiesHandler';\r\nimport UpdateCanvasRootHandler from './cmd/UpdateCanvasRootHandler';\r\nimport AddLaneHandler from './cmd/AddLaneHandler';\r\nimport SplitLaneHandler from './cmd/SplitLaneHandler';\r\nimport ResizeLaneHandler from './cmd/ResizeLaneHandler';\r\nimport UpdateFlowNodeRefsHandler from './cmd/UpdateFlowNodeRefsHandler';\r\nimport IdClaimHandler from './cmd/IdClaimHandler';\r\nimport SetColorHandler from './cmd/SetColorHandler';\r\n\r\nimport UpdateLabelHandler from '../label-editing/cmd/UpdateLabelHandler';\r\n\r\n\r\n/**\r\n * BPMN 2.0 modeling features activator\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementFactory} elementFactory\r\n * @param {CommandStack} commandStack\r\n * @param {BpmnRules} bpmnRules\r\n */\r\nexport default function Modeling(\r\n    eventBus, elementFactory, commandStack,\r\n    bpmnRules) {\r\n\r\n  BaseModeling.call(this, eventBus, elementFactory, commandStack);\r\n\r\n  this._bpmnRules = bpmnRules;\r\n}\r\n\r\ninherits(Modeling, BaseModeling);\r\n\r\nModeling.$inject = [\r\n  'eventBus',\r\n  'elementFactory',\r\n  'commandStack',\r\n  'bpmnRules'\r\n];\r\n\r\n\r\nModeling.prototype.getHandlers = function() {\r\n  var handlers = BaseModeling.prototype.getHandlers.call(this);\r\n\r\n  handlers['element.updateProperties'] = UpdatePropertiesHandler;\r\n  handlers['canvas.updateRoot'] = UpdateCanvasRootHandler;\r\n  handlers['lane.add'] = AddLaneHandler;\r\n  handlers['lane.resize'] = ResizeLaneHandler;\r\n  handlers['lane.split'] = SplitLaneHandler;\r\n  handlers['lane.updateRefs'] = UpdateFlowNodeRefsHandler;\r\n  handlers['id.updateClaim'] = IdClaimHandler;\r\n  handlers['element.setColor'] = SetColorHandler;\r\n  handlers['element.updateLabel'] = UpdateLabelHandler;\r\n\r\n  return handlers;\r\n};\r\n\r\n\r\nModeling.prototype.updateLabel = function(element, newLabel, newBounds, hints) {\r\n  this._commandStack.execute('element.updateLabel', {\r\n    element: element,\r\n    newLabel: newLabel,\r\n    newBounds: newBounds,\r\n    hints: hints || {}\r\n  });\r\n};\r\n\r\n\r\nModeling.prototype.connect = function(source, target, attrs, hints) {\r\n\r\n  var bpmnRules = this._bpmnRules;\r\n\r\n  if (!attrs) {\r\n    attrs = bpmnRules.canConnect(source, target);\r\n  }\r\n\r\n  if (!attrs) {\r\n    return;\r\n  }\r\n\r\n  return this.createConnection(source, target, attrs, source.parent, hints);\r\n};\r\n\r\n\r\nModeling.prototype.updateProperties = function(element, properties) {\r\n  this._commandStack.execute('element.updateProperties', {\r\n    element: element,\r\n    properties: properties\r\n  });\r\n};\r\n\r\nModeling.prototype.resizeLane = function(laneShape, newBounds, balanced) {\r\n  this._commandStack.execute('lane.resize', {\r\n    shape: laneShape,\r\n    newBounds: newBounds,\r\n    balanced: balanced\r\n  });\r\n};\r\n\r\nModeling.prototype.addLane = function(targetLaneShape, location) {\r\n  var context = {\r\n    shape: targetLaneShape,\r\n    location: location\r\n  };\r\n\r\n  this._commandStack.execute('lane.add', context);\r\n\r\n  return context.newLane;\r\n};\r\n\r\nModeling.prototype.splitLane = function(targetLane, count) {\r\n  this._commandStack.execute('lane.split', {\r\n    shape: targetLane,\r\n    count: count\r\n  });\r\n};\r\n\r\n/**\r\n * Transform the current diagram into a collaboration.\r\n *\r\n * @return {djs.model.Root} the new root element\r\n */\r\nModeling.prototype.makeCollaboration = function() {\r\n\r\n  var collaborationElement = this._create('root', {\r\n    type: 'bpmn:Collaboration'\r\n  });\r\n\r\n  var context = {\r\n    newRoot: collaborationElement\r\n  };\r\n\r\n  this._commandStack.execute('canvas.updateRoot', context);\r\n\r\n  return collaborationElement;\r\n};\r\n\r\nModeling.prototype.updateLaneRefs = function(flowNodeShapes, laneShapes) {\r\n\r\n  this._commandStack.execute('lane.updateRefs', {\r\n    flowNodeShapes: flowNodeShapes,\r\n    laneShapes: laneShapes\r\n  });\r\n};\r\n\r\n/**\r\n * Transform the current diagram into a process.\r\n *\r\n * @return {djs.model.Root} the new root element\r\n */\r\nModeling.prototype.makeProcess = function() {\r\n\r\n  var processElement = this._create('root', {\r\n    type: 'bpmn:Process'\r\n  });\r\n\r\n  var context = {\r\n    newRoot: processElement\r\n  };\r\n\r\n  this._commandStack.execute('canvas.updateRoot', context);\r\n};\r\n\r\n\r\nModeling.prototype.claimId = function(id, moddleElement) {\r\n  this._commandStack.execute('id.updateClaim', {\r\n    id: id,\r\n    element: moddleElement,\r\n    claiming: true\r\n  });\r\n};\r\n\r\n\r\nModeling.prototype.unclaimId = function(id, moddleElement) {\r\n  this._commandStack.execute('id.updateClaim', {\r\n    id: id,\r\n    element: moddleElement\r\n  });\r\n};\r\n\r\nModeling.prototype.setColor = function(elements, colors) {\r\n  if (!elements.length) {\r\n    elements = [ elements ];\r\n  }\r\n\r\n  this._commandStack.execute('element.setColor', {\r\n    elements: elements,\r\n    colors: colors\r\n  });\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport {\r\n  getOrientation,\r\n  getMid,\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  substract\r\n} from 'diagram-js/lib/util/Math';\r\n\r\nimport {\r\n  hasExternalLabel\r\n} from '../../../util/LabelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\n\r\n/**\r\n * A component that makes sure that external labels are added\r\n * together with respective elements and properly updated (DI wise)\r\n * during move.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n */\r\nexport default function AdaptiveLabelPositioningBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.postExecuted([\r\n    'connection.create',\r\n    'connection.layout',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart',\r\n    'connection.updateWaypoints'\r\n  ], function(event) {\r\n\r\n    var context = event.context,\r\n        connection = context.connection;\r\n\r\n    var source = connection.source,\r\n        target = connection.target;\r\n\r\n    checkLabelAdjustment(source);\r\n    checkLabelAdjustment(target);\r\n  });\r\n\r\n\r\n  this.postExecuted([\r\n    'label.create'\r\n  ], function(event) {\r\n    checkLabelAdjustment(event.context.shape.labelTarget);\r\n  });\r\n\r\n\r\n  function checkLabelAdjustment(element) {\r\n\r\n    // skip non-existing labels\r\n    if (!hasExternalLabel(element)) {\r\n      return;\r\n    }\r\n\r\n    var optimalPosition = getOptimalPosition(element);\r\n\r\n    // no optimal position found\r\n    if (!optimalPosition) {\r\n      return;\r\n    }\r\n\r\n    adjustLabelPosition(element, optimalPosition);\r\n  }\r\n\r\n  var ELEMENT_LABEL_DISTANCE = 10;\r\n\r\n  function adjustLabelPosition(element, orientation) {\r\n\r\n    var elementMid = getMid(element),\r\n        label = element.label,\r\n        labelMid = getMid(label);\r\n\r\n    var elementTrbl = asTRBL(element);\r\n\r\n    var newLabelMid;\r\n\r\n    switch (orientation) {\r\n    case 'top':\r\n      newLabelMid = {\r\n        x: elementMid.x,\r\n        y: elementTrbl.top - ELEMENT_LABEL_DISTANCE - label.height / 2\r\n      };\r\n\r\n      break;\r\n\r\n    case 'left':\r\n\r\n      newLabelMid = {\r\n        x: elementTrbl.left - ELEMENT_LABEL_DISTANCE - label.width / 2,\r\n        y: elementMid.y\r\n      };\r\n\r\n      break;\r\n\r\n    case 'bottom':\r\n\r\n      newLabelMid = {\r\n        x: elementMid.x,\r\n        y: elementTrbl.bottom + ELEMENT_LABEL_DISTANCE + label.height / 2\r\n      };\r\n\r\n      break;\r\n\r\n    case 'right':\r\n\r\n      newLabelMid = {\r\n        x: elementTrbl.right + ELEMENT_LABEL_DISTANCE + label.width / 2,\r\n        y: elementMid.y\r\n      };\r\n\r\n      break;\r\n    }\r\n\r\n\r\n    var delta = substract(newLabelMid, labelMid);\r\n\r\n    modeling.moveShape(label, delta);\r\n  }\r\n\r\n}\r\n\r\ninherits(AdaptiveLabelPositioningBehavior, CommandInterceptor);\r\n\r\nAdaptiveLabelPositioningBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n\r\n\r\n/**\r\n * Return the optimal label position around an element\r\n * or _undefined_, if none was found.\r\n *\r\n * @param  {Shape} element\r\n *\r\n * @return {String} positioning identifier\r\n */\r\nfunction getOptimalPosition(element) {\r\n\r\n  var labelMid = getMid(element.label);\r\n\r\n  var elementMid = getMid(element);\r\n\r\n  var labelOrientation = getApproximateOrientation(elementMid, labelMid);\r\n\r\n  if (!isAligned(labelOrientation)) {\r\n    return;\r\n  }\r\n\r\n  var takenAlignments = [].concat(\r\n    element.incoming.map(function(c) {\r\n      return c.waypoints[c.waypoints.length - 2 ];\r\n    }),\r\n    element.outgoing.map(function(c) {\r\n      return c.waypoints[1];\r\n    })\r\n  ).map(function(point) {\r\n    return getApproximateOrientation(elementMid, point);\r\n  });\r\n\r\n  var freeAlignments = ALIGNMENTS.filter(function(alignment) {\r\n\r\n    return takenAlignments.indexOf(alignment) === -1;\r\n  });\r\n\r\n  // NOTHING TO DO; label already aligned a.O.K.\r\n  if (freeAlignments.indexOf(labelOrientation) !== -1) {\r\n    return;\r\n  }\r\n\r\n  return freeAlignments[0];\r\n}\r\n\r\nvar ALIGNMENTS = [\r\n  'top',\r\n  'bottom',\r\n  'left',\r\n  'right'\r\n];\r\n\r\nfunction getApproximateOrientation(p0, p1) {\r\n  return getOrientation(p1, p0, 5);\r\n}\r\n\r\nfunction isAligned(orientation) {\r\n  return ALIGNMENTS.indexOf(orientation) !== -1;\r\n}\r\n","import inherits from 'inherits';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\n\r\nexport default function AppendBehavior(eventBus, elementFactory, bpmnRules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  // assign correct shape position unless already set\r\n\r\n  this.preExecute('shape.append', function(context) {\r\n\r\n    var source = context.source,\r\n        shape = context.shape;\r\n\r\n    if (!context.position) {\r\n\r\n      if (is(shape, 'bpmn:TextAnnotation')) {\r\n        context.position = {\r\n          x: source.x + source.width / 2 + 75,\r\n          y: source.y - (50) - shape.height / 2\r\n        };\r\n      } else {\r\n        context.position = {\r\n          x: source.x + source.width + 80 + shape.width / 2,\r\n          y: source.y + source.height / 2\r\n        };\r\n      }\r\n    }\r\n  }, true);\r\n}\r\n\r\ninherits(AppendBehavior, CommandInterceptor);\r\n\r\nAppendBehavior.$inject = [\r\n  'eventBus',\r\n  'elementFactory',\r\n  'bpmnRules'\r\n];","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  filter,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * BPMN specific boundary event behavior\r\n */\r\nexport default function BoundaryEventBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  function getBoundaryEvents(element) {\r\n    return filter(element.attachers, function(attacher) {\r\n      return is(attacher, 'bpmn:BoundaryEvent');\r\n    });\r\n  }\r\n\r\n  // remove after connecting to event-based gateway\r\n  this.postExecute('connection.create', function(event) {\r\n    var source = event.context.source,\r\n        target = event.context.target,\r\n        boundaryEvents = getBoundaryEvents(target);\r\n\r\n    if (\r\n      is(source, 'bpmn:EventBasedGateway') &&\r\n      is(target, 'bpmn:ReceiveTask') &&\r\n      boundaryEvents.length > 0\r\n    ) {\r\n      modeling.removeElements(boundaryEvents);\r\n    }\r\n\r\n  });\r\n\r\n  // remove after replacing connected gateway with event-based gateway\r\n  this.postExecute('connection.reconnectStart', function(event) {\r\n    var oldSource = event.context.oldSource,\r\n        newSource = event.context.newSource;\r\n\r\n    if (is(oldSource, 'bpmn:Gateway') &&\r\n        is(newSource, 'bpmn:EventBasedGateway')) {\r\n      forEach(newSource.outgoing, function(connection) {\r\n        var target = connection.target,\r\n            attachedboundaryEvents = getBoundaryEvents(target);\r\n\r\n        if (is(target, 'bpmn:ReceiveTask') &&\r\n            attachedboundaryEvents.length > 0) {\r\n          modeling.removeElements(attachedboundaryEvents);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nBoundaryEventBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n\r\ninherits(BoundaryEventBehavior, CommandInterceptor);\r\n","import inherits from 'inherits';\r\n\r\nimport {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\n\r\nexport default function CopyPasteBehavior(eventBus, modeling, canvas) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.preExecute('elements.paste', 1500, function(context) {\r\n    var topParent = context.topParent;\r\n\r\n    // always grab the latest root\r\n    if (!topParent.parent) {\r\n      context.topParent = canvas.getRootElement();\r\n    }\r\n\r\n    if (is(topParent, 'bpmn:Lane')) {\r\n      do {\r\n        // unwrap Lane -> LaneSet -> (Lane | FlowElementsContainer)\r\n        topParent = context.topParent = topParent.parent;\r\n\r\n      } while (is(topParent, 'bpmn:Lane') || !is(topParent, 'bpmn:Participant'));\r\n    }\r\n  }, true);\r\n\r\n  this.postExecute('elements.paste', function(context) {\r\n\r\n    var tree = context.tree,\r\n        createdElements = tree.createdElements;\r\n\r\n    forEach(createdElements, function(data) {\r\n      var element = data.element,\r\n          businessObject = element.businessObject,\r\n          descriptor = data.descriptor,\r\n          defaultFlow;\r\n\r\n      if ((is(businessObject, 'bpmn:ExclusiveGateway') || is(businessObject, 'bpmn:InclusiveGateway') ||\r\n           is(businessObject, 'bpmn:Activity')) && descriptor.default) {\r\n\r\n        defaultFlow = createdElements[descriptor.default];\r\n\r\n        // if the default flow wasn't created, means that it wasn't copied\r\n        if (defaultFlow) {\r\n          defaultFlow = defaultFlow.element;\r\n        } else {\r\n          defaultFlow = undefined;\r\n        }\r\n\r\n        delete element.default;\r\n\r\n        modeling.updateProperties(element, { default: defaultFlow });\r\n      }\r\n    });\r\n  }, true);\r\n}\r\n\r\n\r\nCopyPasteBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'canvas'\r\n];\r\n\r\ninherits(CopyPasteBehavior, CommandInterceptor);","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * BPMN specific create boundary event behavior\r\n */\r\nexport default function CreateBoundaryEventBehavior(\r\n    eventBus, modeling, elementFactory,\r\n    bpmnFactory) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * replace intermediate event with boundary event when\r\n   * attaching it to a shape\r\n   */\r\n\r\n  this.preExecute('shape.create', function(context) {\r\n    var shape = context.shape,\r\n        host = context.host,\r\n        businessObject,\r\n        boundaryEvent;\r\n\r\n    var attrs = {\r\n      cancelActivity: true\r\n    };\r\n\r\n    if (host && is(shape, 'bpmn:IntermediateThrowEvent')) {\r\n      attrs.attachedToRef = host.businessObject;\r\n\r\n      businessObject = bpmnFactory.create('bpmn:BoundaryEvent', attrs);\r\n\r\n      boundaryEvent = {\r\n        type: 'bpmn:BoundaryEvent',\r\n        businessObject: businessObject\r\n      };\r\n\r\n      context.shape = elementFactory.createShape(boundaryEvent);\r\n    }\r\n  }, true);\r\n}\r\n\r\nCreateBoundaryEventBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'elementFactory',\r\n  'bpmnFactory'\r\n];\r\n\r\ninherits(CreateBoundaryEventBehavior, CommandInterceptor);\r\n","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * BPMN specific create data object behavior\r\n */\r\nexport default function CreateDataObjectBehavior(eventBus, bpmnFactory, moddle) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.preExecute('shape.create', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:DataObjectReference') && shape.type !== 'label') {\r\n\r\n      // create a DataObject every time a DataObjectReference is created\r\n      var dataObject = bpmnFactory.create('bpmn:DataObject');\r\n\r\n      // set the reference to the DataObject\r\n      shape.businessObject.dataObjectRef = dataObject;\r\n    }\r\n  });\r\n\r\n}\r\n\r\nCreateDataObjectBehavior.$inject = [\r\n  'eventBus',\r\n  'bpmnFactory',\r\n  'moddle'\r\n];\r\n\r\ninherits(CreateDataObjectBehavior, CommandInterceptor);","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * BPMN specific create participant behavior\r\n */\r\nexport default function CreateParticipantBehavior(\r\n    eventBus, modeling, elementFactory,\r\n    bpmnFactory, canvas) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * morph process into collaboration before adding\r\n   * participant onto collaboration\r\n   */\r\n\r\n  this.preExecute('shape.create', function(context) {\r\n\r\n    var parent = context.parent,\r\n        shape = context.shape,\r\n        position = context.position;\r\n\r\n    var rootElement = canvas.getRootElement();\r\n\r\n    if (\r\n      is(parent, 'bpmn:Process') &&\r\n      is(shape, 'bpmn:Participant') &&\r\n      !is(rootElement, 'bpmn:Collaboration')\r\n    ) {\r\n\r\n      // this is going to detach the process root\r\n      // and set the returned collaboration element\r\n      // as the new root element\r\n      var collaborationElement = modeling.makeCollaboration();\r\n\r\n      // monkey patch the create context\r\n      // so that the participant is being dropped\r\n      // onto the new collaboration root instead\r\n      context.position = position;\r\n      context.parent = collaborationElement;\r\n\r\n      context.processRoot = parent;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.execute('shape.create', function(context) {\r\n\r\n    var processRoot = context.processRoot,\r\n        shape = context.shape;\r\n\r\n    if (processRoot) {\r\n      context.oldProcessRef = shape.businessObject.processRef;\r\n\r\n      // assign the participant processRef\r\n      shape.businessObject.processRef = processRoot.businessObject;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.revert('shape.create', function(context) {\r\n    var processRoot = context.processRoot,\r\n        shape = context.shape;\r\n\r\n    if (processRoot) {\r\n      // assign the participant processRef\r\n      shape.businessObject.processRef = context.oldProcessRef;\r\n    }\r\n  }, true);\r\n\r\n\r\n  this.postExecute('shape.create', function(context) {\r\n\r\n    var processRoot = context.processRoot,\r\n        shape = context.shape;\r\n\r\n    if (processRoot) {\r\n      // process root is already detached at this point\r\n      var processChildren = processRoot.children.slice();\r\n      modeling.moveElements(processChildren, { x: 0, y: 0 }, shape);\r\n    }\r\n\r\n  }, true);\r\n\r\n}\r\n\r\nCreateParticipantBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'elementFactory',\r\n  'bpmnFactory',\r\n  'canvas'\r\n];\r\n\r\ninherits(CreateParticipantBehavior, CommandInterceptor);","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from 'diagram-js/lib/util/Collections';\r\n\r\nimport {\r\n  find\r\n} from 'min-dash';\r\n\r\nimport {\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nvar TARGET_REF_PLACEHOLDER_NAME = '__targetRef_placeholder';\r\n\r\n\r\n/**\r\n * This behavior makes sure we always set a fake\r\n * DataInputAssociation#targetRef as demanded by the BPMN 2.0\r\n * XSD schema.\r\n *\r\n * The reference is set to a bpmn:Property{ name: '__targetRef_placeholder' }\r\n * which is created on the fly and cleaned up afterwards if not needed\r\n * anymore.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {BpmnFactory} bpmnFactory\r\n */\r\nexport default function DataInputAssociationBehavior(eventBus, bpmnFactory) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  this.executed([\r\n    'connection.create',\r\n    'connection.delete',\r\n    'connection.move',\r\n    'connection.reconnectEnd'\r\n  ], ifDataInputAssociation(fixTargetRef));\r\n\r\n  this.reverted([\r\n    'connection.create',\r\n    'connection.delete',\r\n    'connection.move',\r\n    'connection.reconnectEnd'\r\n  ], ifDataInputAssociation(fixTargetRef));\r\n\r\n\r\n  function usesTargetRef(element, targetRef, removedConnection) {\r\n\r\n    var inputAssociations = element.get('dataInputAssociations');\r\n\r\n    return find(inputAssociations, function(association) {\r\n      return association !== removedConnection &&\r\n             association.targetRef === targetRef;\r\n    });\r\n  }\r\n\r\n  function getTargetRef(element, create) {\r\n\r\n    var properties = element.get('properties');\r\n\r\n    var targetRefProp = find(properties, function(p) {\r\n      return p.name === TARGET_REF_PLACEHOLDER_NAME;\r\n    });\r\n\r\n    if (!targetRefProp && create) {\r\n      targetRefProp = bpmnFactory.create('bpmn:Property', {\r\n        name: TARGET_REF_PLACEHOLDER_NAME\r\n      });\r\n\r\n      collectionAdd(properties, targetRefProp);\r\n    }\r\n\r\n    return targetRefProp;\r\n  }\r\n\r\n  function cleanupTargetRef(element, connection) {\r\n\r\n    var targetRefProp = getTargetRef(element);\r\n\r\n    if (!targetRefProp) {\r\n      return;\r\n    }\r\n\r\n    if (!usesTargetRef(element, targetRefProp, connection)) {\r\n      collectionRemove(element.get('properties'), targetRefProp);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make sure targetRef is set to a valid property or\r\n   * `null` if the connection is detached.\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  function fixTargetRef(event) {\r\n\r\n    var context = event.context,\r\n        connection = context.connection,\r\n        connectionBo = connection.businessObject,\r\n        target = connection.target,\r\n        targetBo = target && target.businessObject,\r\n        newTarget = context.newTarget,\r\n        newTargetBo = newTarget && newTarget.businessObject,\r\n        oldTarget = context.oldTarget || context.target,\r\n        oldTargetBo = oldTarget && oldTarget.businessObject;\r\n\r\n    var dataAssociation = connection.businessObject,\r\n        targetRefProp;\r\n\r\n    if (oldTargetBo && oldTargetBo !== targetBo) {\r\n      cleanupTargetRef(oldTargetBo, connectionBo);\r\n    }\r\n\r\n    if (newTargetBo && newTargetBo !== targetBo) {\r\n      cleanupTargetRef(newTargetBo, connectionBo);\r\n    }\r\n\r\n    if (targetBo) {\r\n      targetRefProp = getTargetRef(targetBo, true);\r\n      dataAssociation.targetRef = targetRefProp;\r\n    } else {\r\n      dataAssociation.targetRef = null;\r\n    }\r\n  }\r\n}\r\n\r\nDataInputAssociationBehavior.$inject = [\r\n  'eventBus',\r\n  'bpmnFactory'\r\n];\r\n\r\ninherits(DataInputAssociationBehavior, CommandInterceptor);\r\n\r\n\r\n/**\r\n * Only call the given function when the event\r\n * touches a bpmn:DataInputAssociation.\r\n *\r\n * @param {Function} fn\r\n * @return {Function}\r\n */\r\nfunction ifDataInputAssociation(fn) {\r\n\r\n  return function(event) {\r\n    var context = event.context,\r\n        connection = context.connection;\r\n\r\n    if (is(connection, 'bpmn:DataInputAssociation')) {\r\n      return fn(event);\r\n    }\r\n  };\r\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport { isAny } from '../util/ModelingUtil';\r\n\r\nimport UpdateSemanticParentHandler from '../cmd/UpdateSemanticParentHandler';\r\n\r\n\r\n/**\r\n * BPMN specific data store behavior\r\n */\r\nexport default function DataStoreBehavior(\r\n    canvas, commandStack, elementRegistry,\r\n    eventBus) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  commandStack.registerHandler('dataStore.updateContainment', UpdateSemanticParentHandler);\r\n\r\n  function getFirstParticipant() {\r\n    return elementRegistry.filter(function(element) {\r\n      return is(element, 'bpmn:Participant');\r\n    })[0];\r\n  }\r\n\r\n  function getDataStores(element) {\r\n    return element.children.filter(function(child) {\r\n      return is(child, 'bpmn:DataStoreReference') && !child.labelTarget;\r\n    });\r\n  }\r\n\r\n  function updateDataStoreParent(dataStore, newDataStoreParent) {\r\n    var dataStoreBo = dataStore.businessObject || dataStore;\r\n\r\n    newDataStoreParent = newDataStoreParent || getFirstParticipant();\r\n\r\n    if (newDataStoreParent) {\r\n      var newDataStoreParentBo = newDataStoreParent.businessObject || newDataStoreParent;\r\n\r\n      commandStack.execute('dataStore.updateContainment', {\r\n        dataStoreBo: dataStoreBo,\r\n        newSemanticParent: newDataStoreParentBo.processRef || newDataStoreParentBo,\r\n        newDiParent: newDataStoreParentBo.di\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  // disable auto-resize for data stores\r\n  this.preExecute('shape.create', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label') {\r\n\r\n      if (!context.hints) {\r\n        context.hints = {};\r\n      }\r\n\r\n      // prevent auto resizing\r\n      context.hints.autoResize = false;\r\n    }\r\n  });\r\n\r\n\r\n  // disable auto-resize for data stores\r\n  this.preExecute('elements.move', function(event) {\r\n    var context = event.context,\r\n        shapes = context.shapes;\r\n\r\n    var dataStoreReferences = shapes.filter(function(shape) {\r\n      return is(shape, 'bpmn:DataStoreReference');\r\n    });\r\n\r\n    if (dataStoreReferences.length) {\r\n      if (!context.hints) {\r\n        context.hints = {};\r\n      }\r\n\r\n      // prevent auto resizing for data store references\r\n      context.hints.autoResize = shapes.filter(function(shape) {\r\n        return !is(shape, 'bpmn:DataStoreReference');\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  // update parent on data store created\r\n  this.postExecute('shape.create', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        parent = shape.parent;\r\n\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label' &&\r\n        is(parent, 'bpmn:Collaboration')) {\r\n\r\n      updateDataStoreParent(shape);\r\n    }\r\n  });\r\n\r\n\r\n  // update parent on data store moved\r\n  this.postExecute('shape.move', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        oldParent = context.oldParent,\r\n        parent = shape.parent;\r\n\r\n    if (is(oldParent, 'bpmn:Collaboration')) {\r\n\r\n      // do nothing if not necessary\r\n      return;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:DataStoreReference') &&\r\n        shape.type !== 'label' &&\r\n        is(parent, 'bpmn:Collaboration')) {\r\n\r\n      var participant = is(oldParent, 'bpmn:Participant') ?\r\n        oldParent :\r\n        getAncestor(oldParent, 'bpmn:Participant');\r\n\r\n      updateDataStoreParent(shape, participant);\r\n    }\r\n  });\r\n\r\n\r\n  // update data store parents on participant or subprocess deleted\r\n  this.postExecute('shape.delete', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    if (isAny(shape, [ 'bpmn:Participant', 'bpmn:SubProcess' ])\r\n        && is(rootElement, 'bpmn:Collaboration')) {\r\n      getDataStores(rootElement)\r\n        .filter(function(dataStore) {\r\n          return isDescendant(dataStore, shape);\r\n        })\r\n        .forEach(function(dataStore) {\r\n          updateDataStoreParent(dataStore);\r\n        });\r\n    }\r\n  });\r\n\r\n  // update data store parents on collaboration -> process\r\n  this.postExecute('canvas.updateRoot', function(event) {\r\n    var context = event.context,\r\n        oldRoot = context.oldRoot,\r\n        newRoot = context.newRoot;\r\n\r\n    var dataStores = getDataStores(oldRoot);\r\n\r\n    dataStores.forEach(function(dataStore) {\r\n\r\n      if (is(newRoot, 'bpmn:Process')) {\r\n        updateDataStoreParent(dataStore, newRoot);\r\n      }\r\n\r\n    });\r\n  });\r\n}\r\n\r\nDataStoreBehavior.$inject = [\r\n  'canvas',\r\n  'commandStack',\r\n  'elementRegistry',\r\n  'eventBus',\r\n];\r\n\r\ninherits(DataStoreBehavior, CommandInterceptor);\r\n\r\n\r\n// helpers //////////\r\n\r\nfunction isDescendant(descendant, ancestor) {\r\n  var descendantBo = descendant.businessObject || descendant,\r\n      ancestorBo = ancestor.businessObject || ancestor;\r\n\r\n  while (descendantBo.$parent) {\r\n    if (descendantBo.$parent === ancestorBo.processRef || ancestorBo) {\r\n      return true;\r\n    }\r\n\r\n    descendantBo = descendantBo.$parent;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getAncestor(element, type) {\r\n\r\n  while (element.parent) {\r\n    if (is(element.parent, type)) {\r\n      return element.parent;\r\n    }\r\n\r\n    element = element.parent;\r\n  }\r\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  getChildLanes\r\n} from '../util/LaneUtil';\r\n\r\nimport {\r\n  eachElement\r\n} from 'diagram-js/lib/util/Elements';\r\n\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\n/**\r\n * BPMN specific delete lane behavior\r\n */\r\nexport default function DeleteLaneBehavior(eventBus, modeling, spaceTool) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  function compensateLaneDelete(shape, oldParent) {\r\n\r\n    var siblings = getChildLanes(oldParent);\r\n\r\n    var topAffected = [];\r\n    var bottomAffected = [];\r\n\r\n    eachElement(siblings, function(element) {\r\n\r\n      if (element.y > shape.y) {\r\n        bottomAffected.push(element);\r\n      } else {\r\n        topAffected.push(element);\r\n      }\r\n\r\n      return element.children;\r\n    });\r\n\r\n    if (!siblings.length) {\r\n      return;\r\n    }\r\n\r\n    var offset;\r\n\r\n    if (bottomAffected.length && topAffected.length) {\r\n      offset = shape.height / 2;\r\n    } else {\r\n      offset = shape.height;\r\n    }\r\n\r\n    var topAdjustments,\r\n        bottomAdjustments;\r\n\r\n    if (topAffected.length) {\r\n      topAdjustments = spaceTool.calculateAdjustments(\r\n        topAffected, 'y', offset, shape.y - 10);\r\n\r\n      spaceTool.makeSpace(\r\n        topAdjustments.movingShapes,\r\n        topAdjustments.resizingShapes,\r\n        { x: 0, y: offset }, 's');\r\n    }\r\n\r\n    if (bottomAffected.length) {\r\n      bottomAdjustments = spaceTool.calculateAdjustments(\r\n        bottomAffected, 'y', -offset, shape.y + shape.height + 10);\r\n\r\n      spaceTool.makeSpace(\r\n        bottomAdjustments.movingShapes,\r\n        bottomAdjustments.resizingShapes,\r\n        { x: 0, y: -offset }, 'n');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Adjust sizes of other lanes after lane deletion\r\n   */\r\n  this.postExecuted('shape.delete', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        hints = context.hints,\r\n        shape = context.shape,\r\n        oldParent = context.oldParent;\r\n\r\n    // only compensate lane deletes\r\n    if (!is(shape, 'bpmn:Lane')) {\r\n      return;\r\n    }\r\n\r\n    // compensate root deletes only\r\n    if (hints && hints.nested) {\r\n      return;\r\n    }\r\n\r\n    compensateLaneDelete(shape, oldParent);\r\n  });\r\n}\r\n\r\nDeleteLaneBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'spaceTool'\r\n];\r\n\r\ninherits(DeleteLaneBehavior, CommandInterceptor);","import inherits from 'inherits';\r\n\r\nimport {\r\n  assign,\r\n  find,\r\n  filter\r\n} from 'min-dash';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  getApproxIntersection\r\n} from 'diagram-js/lib/util/LineIntersection';\r\n\r\n\r\nexport default function DropOnFlowBehavior(eventBus, bpmnRules, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Reconnect start / end of a connection after\r\n   * dropping an element on a flow.\r\n   */\r\n\r\n  function insertShape(shape, targetFlow, position) {\r\n    var waypoints = targetFlow.waypoints,\r\n        waypointsBefore,\r\n        waypointsAfter,\r\n        dockingPoint,\r\n        source,\r\n        target,\r\n        incomingConnection,\r\n        outgoingConnection,\r\n        oldOutgoing = shape.outgoing.slice(),\r\n        oldIncoming = shape.incoming.slice();\r\n\r\n    var intersection = getApproxIntersection(waypoints, position);\r\n\r\n    if (intersection) {\r\n      waypointsBefore = waypoints.slice(0, intersection.index);\r\n      waypointsAfter = waypoints.slice(intersection.index + (intersection.bendpoint ? 1 : 0));\r\n\r\n      // due to inaccuracy intersection might have been found\r\n      if (!waypointsBefore.length || !waypointsAfter.length) {\r\n        return;\r\n      }\r\n\r\n      dockingPoint = intersection.bendpoint ? waypoints[intersection.index] : position;\r\n\r\n      // if last waypointBefore is inside shape's bounds, ignore docking point\r\n      if (!isPointInsideBBox(shape, waypointsBefore[waypointsBefore.length-1])) {\r\n        waypointsBefore.push(copy(dockingPoint));\r\n      }\r\n\r\n      // if first waypointAfter is inside shape's bounds, ignore docking point\r\n      if (!isPointInsideBBox(shape, waypointsAfter[0])) {\r\n        waypointsAfter.unshift(copy(dockingPoint));\r\n      }\r\n    }\r\n\r\n    source = targetFlow.source;\r\n    target = targetFlow.target;\r\n\r\n    if (bpmnRules.canConnect(source, shape, targetFlow)) {\r\n      // reconnect source -> inserted shape\r\n      modeling.reconnectEnd(targetFlow, shape, waypointsBefore || position);\r\n\r\n      incomingConnection = targetFlow;\r\n    }\r\n\r\n    if (bpmnRules.canConnect(shape, target, targetFlow)) {\r\n\r\n      if (!incomingConnection) {\r\n        // reconnect inserted shape -> end\r\n        modeling.reconnectStart(targetFlow, shape, waypointsAfter || position);\r\n\r\n        outgoingConnection = targetFlow;\r\n      } else {\r\n        outgoingConnection = modeling.connect(\r\n          shape, target, { type: targetFlow.type, waypoints: waypointsAfter }\r\n        );\r\n      }\r\n    }\r\n\r\n    var duplicateConnections = [].concat(\r\n\r\n      incomingConnection && filter(oldIncoming, function(connection) {\r\n        return connection.source === incomingConnection.source;\r\n      }) || [],\r\n\r\n      outgoingConnection && filter(oldOutgoing, function(connection) {\r\n        return connection.source === outgoingConnection.source;\r\n      }) || []\r\n    );\r\n\r\n    if (duplicateConnections.length) {\r\n      modeling.removeElements(duplicateConnections);\r\n    }\r\n  }\r\n\r\n  this.preExecute('elements.move', function(context) {\r\n\r\n    var newParent = context.newParent,\r\n        shapes = context.shapes,\r\n        delta = context.delta,\r\n        shape = shapes[0];\r\n\r\n    if (!shape || !newParent) {\r\n      return;\r\n    }\r\n\r\n    // if the new parent is a connection,\r\n    // change it to the new parent's parent\r\n    if (newParent && newParent.waypoints) {\r\n      context.newParent = newParent = newParent.parent;\r\n    }\r\n\r\n    var shapeMid = getMid(shape);\r\n    var newShapeMid = {\r\n      x: shapeMid.x + delta.x,\r\n      y: shapeMid.y + delta.y\r\n    };\r\n\r\n    // find a connection which intersects with the\r\n    // element's mid point\r\n    var connection = find(newParent.children, function(element) {\r\n      var canInsert = bpmnRules.canInsert(shapes, element);\r\n\r\n      return canInsert && getApproxIntersection(element.waypoints, newShapeMid);\r\n    });\r\n\r\n    if (connection) {\r\n      context.targetFlow = connection;\r\n      context.position = newShapeMid;\r\n    }\r\n\r\n  }, true);\r\n\r\n  this.postExecuted('elements.move', function(context) {\r\n\r\n    var shapes = context.shapes,\r\n        targetFlow = context.targetFlow,\r\n        position = context.position;\r\n\r\n    if (targetFlow) {\r\n      insertShape(shapes[0], targetFlow, position);\r\n    }\r\n\r\n  }, true);\r\n\r\n  this.preExecute('shape.create', function(context) {\r\n\r\n    var parent = context.parent,\r\n        shape = context.shape;\r\n\r\n    if (bpmnRules.canInsert(shape, parent)) {\r\n      context.targetFlow = parent;\r\n      context.parent = parent.parent;\r\n    }\r\n  }, true);\r\n\r\n  this.postExecuted('shape.create', function(context) {\r\n\r\n    var shape = context.shape,\r\n        targetFlow = context.targetFlow,\r\n        position = context.position;\r\n\r\n    if (targetFlow) {\r\n      insertShape(shape, targetFlow, position);\r\n    }\r\n  }, true);\r\n}\r\n\r\ninherits(DropOnFlowBehavior, CommandInterceptor);\r\n\r\nDropOnFlowBehavior.$inject = [\r\n  'eventBus',\r\n  'bpmnRules',\r\n  'modeling'\r\n];\r\n\r\n\r\n// helpers /////////////////////\r\n\r\nfunction isPointInsideBBox(bbox, point) {\r\n  var x = point.x,\r\n      y = point.y;\r\n\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n}\r\n\r\nfunction copy(obj) {\r\n  return assign({}, obj);\r\n}\r\n\r\nfunction getMid(bounds) {\r\n\r\n  return {\r\n    x: Math.round(bounds.x + bounds.width / 2),\r\n    y: Math.round(bounds.y + bounds.height / 2)\r\n  };\r\n}\r\n\r\n","import {\r\n  getMid\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport lineIntersect from './util/LineIntersect';\r\n\r\n\r\n/**\r\n * Fix broken dockings after DI imports.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function ImportDockingFix(eventBus) {\r\n\r\n  function adjustDocking(startPoint, nextPoint, elementMid) {\r\n\r\n    var elementTop = {\r\n      x: elementMid.x,\r\n      y: elementMid.y - 50\r\n    };\r\n\r\n    var elementLeft = {\r\n      x: elementMid.x - 50,\r\n      y: elementMid.y\r\n    };\r\n\r\n    var verticalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementTop),\r\n        horizontalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementLeft);\r\n\r\n    // original is horizontal or vertical center cross intersection\r\n    var centerIntersect;\r\n\r\n    if (verticalIntersect && horizontalIntersect) {\r\n      if (getDistance(verticalIntersect, elementMid) > getDistance(horizontalIntersect, elementMid)) {\r\n        centerIntersect = horizontalIntersect;\r\n      } else {\r\n        centerIntersect = verticalIntersect;\r\n      }\r\n    } else {\r\n      centerIntersect = verticalIntersect || horizontalIntersect;\r\n    }\r\n\r\n    startPoint.original = centerIntersect;\r\n  }\r\n\r\n  function fixDockings(connection) {\r\n    var waypoints = connection.waypoints;\r\n\r\n    adjustDocking(\r\n      waypoints[0],\r\n      waypoints[1],\r\n      getMid(connection.source)\r\n    );\r\n\r\n    adjustDocking(\r\n      waypoints[waypoints.length - 1],\r\n      waypoints[waypoints.length - 2],\r\n      getMid(connection.target)\r\n    );\r\n  }\r\n\r\n  eventBus.on('bpmnElement.added', function(e) {\r\n\r\n    var element = e.element;\r\n\r\n    if (element.waypoints) {\r\n      fixDockings(element);\r\n    }\r\n  });\r\n}\r\n\r\nImportDockingFix.$inject = [\r\n  'eventBus'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction getDistance(p1, p2) {\r\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  getBusinessObject\r\n} from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  isAny\r\n} from '../util/ModelingUtil';\r\n\r\n/**\r\n * A component that makes sure that each created or updated\r\n * Pool and Lane is assigned an isHorizontal property set to true.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function IsHorizontalFix(eventBus) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  var elementTypesToUpdate = [\r\n    'bpmn:Participant',\r\n    'bpmn:Lane'\r\n  ];\r\n\r\n  this.executed([ 'shape.move', 'shape.create', 'shape.resize' ], function(event) {\r\n    var bo = getBusinessObject(event.context.shape);\r\n\r\n    if (isAny(bo, elementTypesToUpdate) && !bo.di.get('isHorizontal')) {\r\n      // set attribute directly to avoid modeling#updateProperty side effects\r\n      bo.di.set('isHorizontal', true);\r\n    }\r\n  });\r\n\r\n}\r\n\r\nIsHorizontalFix.$inject = [ 'eventBus' ];\r\n\r\ninherits(IsHorizontalFix, CommandInterceptor);\r\n","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport {\r\n  is,\r\n  getBusinessObject\r\n} from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  isLabelExternal,\r\n  getExternalLabelMid,\r\n} from '../../../util/LabelUtil';\r\n\r\nimport {\r\n  getLabelAdjustment\r\n} from './util/LabelLayoutUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nvar DEFAULT_LABEL_DIMENSIONS = {\r\n  width: 90,\r\n  height: 20\r\n};\r\n\r\nvar NAME_PROPERTY = 'name';\r\nvar TEXT_PROPERTY = 'text';\r\n\r\n/**\r\n * A component that makes sure that external labels are added\r\n * together with respective elements and properly updated (DI wise)\r\n * during move.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n * @param {BpmnFactory} bpmnFactory\r\n * @param {TextRenderer} textRenderer\r\n */\r\nexport default function LabelBehavior(\r\n    eventBus, modeling, bpmnFactory,\r\n    textRenderer) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  // update label if name property was updated\r\n  this.postExecute('element.updateProperties', function(e) {\r\n    var context = e.context,\r\n        element = context.element,\r\n        properties = context.properties;\r\n\r\n    if (NAME_PROPERTY in properties) {\r\n      modeling.updateLabel(element, properties[NAME_PROPERTY]);\r\n    }\r\n\r\n    if (TEXT_PROPERTY in properties\r\n        && is(element, 'bpmn:TextAnnotation')) {\r\n\r\n      var newBounds = textRenderer.getTextAnnotationBounds(\r\n        {\r\n          x: element.x,\r\n          y: element.y,\r\n          width: element.width,\r\n          height: element.height\r\n        },\r\n        properties[TEXT_PROPERTY] || ''\r\n      );\r\n\r\n      modeling.updateLabel(element, properties.text, newBounds);\r\n    }\r\n  });\r\n\r\n  // create label shape after shape/connection was created\r\n  this.postExecute([ 'shape.create', 'connection.create' ], function(e) {\r\n    var context = e.context;\r\n\r\n    var element = context.shape || context.connection,\r\n        businessObject = element.businessObject;\r\n\r\n    if (!isLabelExternal(element)) {\r\n      return;\r\n    }\r\n\r\n    // only create label if name\r\n    if (!businessObject.name) {\r\n      return;\r\n    }\r\n\r\n    var labelCenter = getExternalLabelMid(element);\r\n\r\n    // we don't care about x and y\r\n    var labelDimensions = textRenderer.getExternalLabelBounds(\r\n      DEFAULT_LABEL_DIMENSIONS,\r\n      businessObject.name || ''\r\n    );\r\n\r\n    modeling.createLabel(element, labelCenter, {\r\n      id: businessObject.id + '_label',\r\n      businessObject: businessObject,\r\n      width: labelDimensions.width,\r\n      height: labelDimensions.height\r\n    });\r\n  });\r\n\r\n  // update label after label shape was deleted\r\n  this.postExecute('shape.delete', function(event) {\r\n    var context = event.context,\r\n        labelTarget = context.labelTarget,\r\n        hints = context.hints || {};\r\n\r\n    // check if label\r\n    if (labelTarget && hints.unsetLabel !== false) {\r\n      modeling.updateLabel(labelTarget, null, null, { removeShape: false });\r\n    }\r\n  });\r\n\r\n  // update di information on label creation\r\n  this.postExecute([ 'label.create' ], function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape,\r\n        businessObject,\r\n        di;\r\n\r\n    // we want to trigger on real labels only\r\n    if (!element.labelTarget) {\r\n      return;\r\n    }\r\n\r\n    // we want to trigger on BPMN elements only\r\n    if (!is(element.labelTarget || element, 'bpmn:BaseElement')) {\r\n      return;\r\n    }\r\n\r\n    businessObject = element.businessObject,\r\n    di = businessObject.di;\r\n\r\n\r\n    if (!di.label) {\r\n      di.label = bpmnFactory.create('bpmndi:BPMNLabel', {\r\n        bounds: bpmnFactory.create('dc:Bounds')\r\n      });\r\n    }\r\n\r\n    assign(di.label.bounds, {\r\n      x: element.x,\r\n      y: element.y,\r\n      width: element.width,\r\n      height: element.height\r\n    });\r\n  });\r\n\r\n  function getVisibleLabelAdjustment(event) {\r\n\r\n    var command = event.command,\r\n        context = event.context,\r\n        connection = context.connection,\r\n        label = connection.label,\r\n        hints = assign({}, context.hints),\r\n        newWaypoints = context.newWaypoints || connection.waypoints,\r\n        oldWaypoints = context.oldWaypoints;\r\n\r\n\r\n    if (typeof hints.startChanged === 'undefined') {\r\n      hints.startChanged = (command === 'connection.reconnectStart');\r\n    }\r\n\r\n    if (typeof hints.endChanged === 'undefined') {\r\n      hints.endChanged = (command === 'connection.reconnectEnd');\r\n    }\r\n\r\n    return getLabelAdjustment(label, newWaypoints, oldWaypoints, hints);\r\n  }\r\n\r\n  this.postExecute([\r\n    'connection.layout',\r\n    'connection.reconnectEnd',\r\n    'connection.reconnectStart',\r\n    'connection.updateWaypoints'\r\n  ], function(event) {\r\n\r\n    var label = event.context.connection.label,\r\n        labelAdjustment;\r\n\r\n    if (!label) {\r\n      return;\r\n    }\r\n\r\n    labelAdjustment = getVisibleLabelAdjustment(event);\r\n\r\n    modeling.moveShape(label, labelAdjustment);\r\n  });\r\n\r\n\r\n  // keep label position on shape replace\r\n  this.postExecute([ 'shape.replace' ], function(event) {\r\n    var context = event.context,\r\n        newShape = context.newShape,\r\n        oldShape = context.oldShape;\r\n\r\n    var businessObject = getBusinessObject(newShape);\r\n\r\n    if (businessObject\r\n      && isLabelExternal(businessObject)\r\n      && oldShape.label\r\n      && newShape.label) {\r\n      newShape.label.x = oldShape.label.x;\r\n      newShape.label.y = oldShape.label.y;\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(LabelBehavior, CommandInterceptor);\r\n\r\nLabelBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'bpmnFactory',\r\n  'textRenderer'\r\n];","import { is } from '../../../util/ModelUtil';\r\n\r\nvar COLLAB_ERR_MSG = 'flow elements must be children of pools/participants',\r\n    PROCESS_ERR_MSG = 'participants cannot be pasted onto a non-empty process diagram';\r\n\r\n\r\nexport default function ModelingFeedback(eventBus, tooltips, translate) {\r\n\r\n  function showError(position, message, timeout) {\r\n    tooltips.add({\r\n      position: {\r\n        x: position.x + 5,\r\n        y: position.y + 5\r\n      },\r\n      type: 'error',\r\n      timeout: timeout || 2000,\r\n      html: '<div>' + message + '</div>'\r\n    });\r\n  }\r\n\r\n  eventBus.on([ 'shape.move.rejected', 'create.rejected' ], function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        target = context.target;\r\n\r\n    if (is(target, 'bpmn:Collaboration') && is(shape, 'bpmn:FlowNode')) {\r\n      showError(event, translate(COLLAB_ERR_MSG));\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'elements.paste.rejected' ], function(event) {\r\n    var context = event.context,\r\n        position = context.position,\r\n        target = context.target;\r\n\r\n    if (is(target, 'bpmn:Collaboration')) {\r\n      showError(position, translate(COLLAB_ERR_MSG));\r\n    }\r\n\r\n    if (is(target, 'bpmn:Process')) {\r\n      showError(position, translate(PROCESS_ERR_MSG), 3000);\r\n    }\r\n  });\r\n}\r\n\r\nModelingFeedback.$inject = [\r\n  'eventBus',\r\n  'tooltips',\r\n  'translate'\r\n];\r\n","import inherits from 'inherits';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport lineIntersect from './util/LineIntersect';\r\n\r\n\r\nexport default function RemoveElementBehavior(eventBus, bpmnRules, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Combine sequence flows when deleting an element\r\n   * if there is one incoming and one outgoing\r\n   * sequence flow\r\n   */\r\n  this.preExecute('shape.delete', function(e) {\r\n\r\n    var shape = e.context.shape;\r\n\r\n    // only handle [a] -> [shape] -> [b] patterns\r\n    if (shape.incoming.length !== 1 || shape.outgoing.length !== 1) {\r\n      return;\r\n    }\r\n\r\n    var inConnection = shape.incoming[0],\r\n        outConnection = shape.outgoing[0];\r\n\r\n    // only handle sequence flows\r\n    if (!is(inConnection, 'bpmn:SequenceFlow') || !is(outConnection, 'bpmn:SequenceFlow')) {\r\n      return;\r\n    }\r\n\r\n    if (bpmnRules.canConnect(inConnection.source, outConnection.target, inConnection)) {\r\n\r\n      // compute new, combined waypoints\r\n      var newWaypoints = getNewWaypoints(inConnection.waypoints, outConnection.waypoints);\r\n\r\n      modeling.reconnectEnd(inConnection, outConnection.target, newWaypoints);\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(RemoveElementBehavior, CommandInterceptor);\r\n\r\nRemoveElementBehavior.$inject = [\r\n  'eventBus',\r\n  'bpmnRules',\r\n  'modeling'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction getDocking(point) {\r\n  return point.original || point;\r\n}\r\n\r\n\r\nfunction getNewWaypoints(inWaypoints, outWaypoints) {\r\n\r\n  var intersection = lineIntersect(\r\n    getDocking(inWaypoints[inWaypoints.length - 2]),\r\n    getDocking(inWaypoints[inWaypoints.length - 1]),\r\n    getDocking(outWaypoints[1]),\r\n    getDocking(outWaypoints[0]));\r\n\r\n  if (intersection) {\r\n    return [].concat(\r\n      inWaypoints.slice(0, inWaypoints.length - 1),\r\n      [ intersection ],\r\n      outWaypoints.slice(1));\r\n  } else {\r\n    return [\r\n      getDocking(inWaypoints[0]),\r\n      getDocking(outWaypoints[outWaypoints.length - 1])\r\n    ];\r\n  }\r\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * BPMN specific remove behavior\r\n */\r\nexport default function RemoveParticipantBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  /**\r\n   * morph collaboration diagram into process diagram\r\n   * after the last participant has been removed\r\n   */\r\n\r\n  this.preExecute('shape.delete', function(context) {\r\n\r\n    var shape = context.shape,\r\n        parent = shape.parent;\r\n\r\n    // activate the behavior if the shape to be removed\r\n    // is a participant\r\n    if (is(shape, 'bpmn:Participant')) {\r\n      context.collaborationRoot = parent;\r\n    }\r\n  }, true);\r\n\r\n  this.postExecute('shape.delete', function(context) {\r\n\r\n    var collaborationRoot = context.collaborationRoot;\r\n\r\n    if (collaborationRoot && !collaborationRoot.businessObject.participants.length) {\r\n      // replace empty collaboration with process diagram\r\n      modeling.makeProcess();\r\n    }\r\n  }, true);\r\n\r\n}\r\n\r\nRemoveParticipantBehavior.$inject = [ 'eventBus', 'modeling' ];\r\n\r\ninherits(RemoveParticipantBehavior, CommandInterceptor);","import {\r\n  forEach,\r\n  find,\r\n  matchPattern\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\nexport default function ReplaceConnectionBehavior(eventBus, modeling, bpmnRules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  function fixConnection(connection) {\r\n\r\n    var source = connection.source,\r\n        target = connection.target,\r\n        parent = connection.parent;\r\n\r\n    // do not do anything if connection\r\n    // is already deleted (may happen due to other\r\n    // behaviors plugged-in before)\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    var replacementType,\r\n        remove;\r\n\r\n    /**\r\n     * Check if incoming or outgoing connections\r\n     * can stay or could be substituted with an\r\n     * appropriate replacement.\r\n     *\r\n     * This holds true for SequenceFlow <> MessageFlow.\r\n     */\r\n\r\n    if (is(connection, 'bpmn:SequenceFlow')) {\r\n      if (!bpmnRules.canConnectSequenceFlow(source, target)) {\r\n        remove = true;\r\n      }\r\n\r\n      if (bpmnRules.canConnectMessageFlow(source, target)) {\r\n        replacementType = 'bpmn:MessageFlow';\r\n      }\r\n    }\r\n\r\n    // transform message flows into sequence flows, if possible\r\n\r\n    if (is(connection, 'bpmn:MessageFlow')) {\r\n\r\n      if (!bpmnRules.canConnectMessageFlow(source, target)) {\r\n        remove = true;\r\n      }\r\n\r\n      if (bpmnRules.canConnectSequenceFlow(source, target)) {\r\n        replacementType = 'bpmn:SequenceFlow';\r\n      }\r\n    }\r\n\r\n    if (is(connection, 'bpmn:Association') && !bpmnRules.canConnectAssociation(source, target)) {\r\n      remove = true;\r\n    }\r\n\r\n\r\n    // remove invalid connection,\r\n    // unless it has been removed already\r\n    if (remove) {\r\n      modeling.removeConnection(connection);\r\n    }\r\n\r\n    // replace SequenceFlow <> MessageFlow\r\n\r\n    if (replacementType) {\r\n      modeling.connect(source, target, {\r\n        type: replacementType,\r\n        waypoints: connection.waypoints.slice()\r\n      });\r\n    }\r\n  }\r\n\r\n  this.postExecuted('elements.move', function(context) {\r\n\r\n    var closure = context.closure,\r\n        allConnections = closure.allConnections;\r\n\r\n    forEach(allConnections, fixConnection);\r\n  }, true);\r\n\r\n  this.postExecuted([\r\n    'connection.reconnectStart',\r\n    'connection.reconnectEnd'\r\n  ], function(event) {\r\n\r\n    var connection = event.context.connection;\r\n\r\n    fixConnection(connection);\r\n  });\r\n\r\n  this.postExecuted('element.updateProperties', function(event) {\r\n    var context = event.context,\r\n        properties = context.properties,\r\n        element = context.element,\r\n        businessObject = element.businessObject,\r\n        connection;\r\n\r\n    // remove condition expression when morphing to default flow\r\n    if (properties.default) {\r\n      connection = find(\r\n        element.outgoing,\r\n        matchPattern({ id: element.businessObject.default.id })\r\n      );\r\n\r\n      if (connection) {\r\n        modeling.updateProperties(connection, { conditionExpression: undefined });\r\n      }\r\n    }\r\n\r\n    // remove default property from source when morphing to conditional flow\r\n    if (properties.conditionExpression && businessObject.sourceRef.default === businessObject) {\r\n      modeling.updateProperties(element.source, { default: undefined });\r\n    }\r\n  });\r\n}\r\n\r\ninherits(ReplaceConnectionBehavior, CommandInterceptor);\r\n\r\nReplaceConnectionBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'bpmnRules'\r\n];\r\n","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  isEventSubProcess\r\n} from '../../../util/DiUtil';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * Defines the behaviour of what happens to the elements inside a container\r\n * that morphs into another BPMN element\r\n */\r\nexport default function ReplaceElementBehaviour(\r\n    eventBus, bpmnReplace, bpmnRules,\r\n    elementRegistry, selection, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._bpmnReplace = bpmnReplace;\r\n  this._elementRegistry = elementRegistry;\r\n  this._selection = selection;\r\n  this._modeling = modeling;\r\n\r\n  this.postExecuted([ 'elements.move' ], 500, function(event) {\r\n\r\n    var context = event.context,\r\n        target = context.newParent,\r\n        newHost = context.newHost,\r\n        elements = [];\r\n\r\n    forEach(context.closure.topLevel, function(topLevelElements) {\r\n      if (isEventSubProcess(topLevelElements)) {\r\n        elements = elements.concat(topLevelElements.children);\r\n      } else {\r\n        elements = elements.concat(topLevelElements);\r\n      }\r\n    });\r\n\r\n    // Change target to host when the moving element is a `bpmn:BoundaryEvent`\r\n    if (elements.length === 1 && newHost) {\r\n      target = newHost;\r\n    }\r\n\r\n    var canReplace = bpmnRules.canReplace(elements, target);\r\n\r\n    if (canReplace) {\r\n      this.replaceElements(elements, canReplace.replacements, newHost);\r\n    }\r\n  }, this);\r\n\r\n  // update attachments if the host is replaced\r\n  this.postExecute([ 'shape.replace' ], 1500, function(e) {\r\n\r\n    var context = e.context,\r\n        oldShape = context.oldShape,\r\n        newShape = context.newShape,\r\n        attachers = oldShape.attachers,\r\n        canReplace;\r\n\r\n    if (attachers && attachers.length) {\r\n      canReplace = bpmnRules.canReplace(attachers, newShape);\r\n\r\n      this.replaceElements(attachers, canReplace.replacements);\r\n    }\r\n\r\n  }, this);\r\n\r\n  this.postExecuted([ 'shape.replace' ], 1500, function(e) {\r\n    var context = e.context,\r\n        oldShape = context.oldShape,\r\n        newShape = context.newShape;\r\n\r\n    modeling.unclaimId(oldShape.businessObject.id, oldShape.businessObject);\r\n    modeling.updateProperties(newShape, { id: oldShape.id });\r\n  });\r\n}\r\n\r\ninherits(ReplaceElementBehaviour, CommandInterceptor);\r\n\r\n\r\nReplaceElementBehaviour.prototype.replaceElements = function(elements, newElements, newHost) {\r\n  var elementRegistry = this._elementRegistry,\r\n      bpmnReplace = this._bpmnReplace,\r\n      selection = this._selection,\r\n      modeling = this._modeling;\r\n\r\n  forEach(newElements, function(replacement) {\r\n\r\n    var newElement = {\r\n      type: replacement.newElementType\r\n    };\r\n\r\n    var oldElement = elementRegistry.get(replacement.oldElementId);\r\n\r\n    if (newHost && is(oldElement, 'bpmn:BoundaryEvent')) {\r\n      modeling.updateAttachment(oldElement, null);\r\n    }\r\n\r\n    var idx = elements.indexOf(oldElement);\r\n\r\n    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });\r\n\r\n    if (newHost && is(elements[idx], 'bpmn:BoundaryEvent')) {\r\n      modeling.updateAttachment(elements[idx], newHost);\r\n    }\r\n  });\r\n\r\n  if (newElements) {\r\n    selection.select(elements);\r\n  }\r\n};\r\n\r\nReplaceElementBehaviour.$inject = [\r\n  'eventBus',\r\n  'bpmnReplace',\r\n  'bpmnRules',\r\n  'elementRegistry',\r\n  'selection',\r\n  'modeling'\r\n];\r\n","import { is } from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  roundBounds\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  hasPrimaryModifier\r\n} from 'diagram-js/lib/util/Mouse';\r\n\r\nvar SLIGHTLY_HIGHER_PRIORITY = 1001;\r\n\r\n\r\n/**\r\n * Invoke {@link Modeling#resizeLane} instead of\r\n * {@link Modeling#resizeShape} when resizing a Lane\r\n * or Participant shape.\r\n */\r\nexport default function ResizeLaneBehavior(eventBus, modeling) {\r\n\r\n  eventBus.on('resize.start', SLIGHTLY_HIGHER_PRIORITY + 500, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n\r\n      // should we resize the opposite lane(s) in\r\n      // order to compensate for the resize operation?\r\n      context.balanced = !hasPrimaryModifier(event);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Intercept resize end and call resize lane function instead.\r\n   */\r\n  eventBus.on('resize.end', SLIGHTLY_HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        canExecute = context.canExecute,\r\n        newBounds = context.newBounds;\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n\r\n      if (canExecute) {\r\n        // ensure we have actual pixel values for new bounds\r\n        // (important when zoom level was > 1 during move)\r\n        newBounds = roundBounds(newBounds);\r\n\r\n        // perform the actual resize\r\n        modeling.resizeLane(shape, newBounds, context.balanced);\r\n      }\r\n\r\n      // stop propagation\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nResizeLaneBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  computeChildrenBBox\r\n} from 'diagram-js/lib/features/resize/ResizeUtil';\r\n\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\nexport default function ToggleElementCollapseBehaviour(\r\n    eventBus, elementFactory, modeling,\r\n    resize) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  function hideEmptyLables(children) {\r\n    if (children.length) {\r\n      children.forEach(function(child) {\r\n        if (child.type === 'label' && !child.businessObject.name) {\r\n          child.hidden = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function expandedBounds(shape, defaultSize) {\r\n    var children = shape.children,\r\n        newBounds = defaultSize,\r\n        visibleElements,\r\n        visibleBBox;\r\n\r\n    visibleElements = filterVisible(children).concat([ shape ]);\r\n\r\n    visibleBBox = computeChildrenBBox(visibleElements);\r\n\r\n    if (visibleBBox) {\r\n      // center to visibleBBox with max(defaultSize, childrenBounds)\r\n      newBounds.width = Math.max(visibleBBox.width, newBounds.width);\r\n      newBounds.height = Math.max(visibleBBox.height, newBounds.height);\r\n\r\n      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;\r\n      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;\r\n    } else {\r\n      // center to collapsed shape with defaultSize\r\n      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;\r\n      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;\r\n    }\r\n\r\n    return newBounds;\r\n  }\r\n\r\n  function collapsedBounds(shape, defaultSize) {\r\n\r\n    return {\r\n      x: shape.x + (shape.width - defaultSize.width) / 2,\r\n      y: shape.y + (shape.height - defaultSize.height) / 2,\r\n      width: defaultSize.width,\r\n      height: defaultSize.height\r\n    };\r\n  }\r\n\r\n  this.executed([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shape = context.shape;\r\n\r\n    if (!is(shape, 'bpmn:SubProcess')) {\r\n      return;\r\n    }\r\n\r\n    if (!shape.collapsed) {\r\n      // all children got made visible through djs, hide empty labels\r\n      hideEmptyLables(shape.children);\r\n\r\n      // remove collapsed marker\r\n      getBusinessObject(shape).di.isExpanded = true;\r\n    } else {\r\n      // place collapsed marker\r\n      getBusinessObject(shape).di.isExpanded = false;\r\n    }\r\n  });\r\n\r\n  this.reverted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context;\r\n    var shape = context.shape;\r\n\r\n\r\n    // revert removing/placing collapsed marker\r\n    if (!shape.collapsed) {\r\n      getBusinessObject(shape).di.isExpanded = true;\r\n\r\n    } else {\r\n      getBusinessObject(shape).di.isExpanded = false;\r\n    }\r\n  });\r\n\r\n  this.postExecuted([ 'shape.toggleCollapse' ], LOW_PRIORITY, function(e) {\r\n    var shape = e.context.shape,\r\n        defaultSize = elementFactory._getDefaultSize(shape),\r\n        newBounds;\r\n\r\n    if (shape.collapsed) {\r\n\r\n      // resize to default size of collapsed shapes\r\n      newBounds = collapsedBounds(shape, defaultSize);\r\n    } else {\r\n\r\n      // resize to bounds of max(visible children, defaultSize)\r\n      newBounds = expandedBounds(shape, defaultSize);\r\n    }\r\n\r\n    modeling.resizeShape(shape, newBounds);\r\n  });\r\n\r\n}\r\n\r\n\r\ninherits(ToggleElementCollapseBehaviour, CommandInterceptor);\r\n\r\nToggleElementCollapseBehaviour.$inject = [\r\n  'eventBus',\r\n  'elementFactory',\r\n  'modeling'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction filterVisible(elements) {\r\n  return elements.filter(function(e) {\r\n    return !e.hidden;\r\n  });\r\n}","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\n\r\n/**\r\n * Unclaims model IDs on element deletion.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n */\r\nexport default function UnclaimIdBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.preExecute('elements.delete', function(event) {\r\n    var context = event.context,\r\n        elements = context.elements;\r\n\r\n    forEach(elements, function(element) {\r\n      modeling.unclaimId(element.businessObject.id, element.businessObject);\r\n    });\r\n\r\n  });\r\n}\r\n\r\ninherits(UnclaimIdBehavior, CommandInterceptor);\r\n\r\nUnclaimIdBehavior.$inject = [ 'eventBus', 'modeling' ];","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  getBusinessObject,\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * A behavior that unsets the Default property of\r\n * sequence flow source on element delete, if the\r\n * removed element is the Gateway or Task's default flow.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n */\r\nexport default function DeleteSequenceFlowBehavior(eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  this.preExecute('connection.delete', function(event) {\r\n    var context = event.context,\r\n        connection = context.connection,\r\n        source = connection.source;\r\n\r\n    if (isDefaultFlow(connection, source)) {\r\n      modeling.updateProperties(source, {\r\n        'default': null\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\ninherits(DeleteSequenceFlowBehavior, CommandInterceptor);\r\n\r\nDeleteSequenceFlowBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction isDefaultFlow(connection, source) {\r\n\r\n  if (!is(connection, 'bpmn:SequenceFlow')) {\r\n    return false;\r\n  }\r\n\r\n  var sourceBo = getBusinessObject(source),\r\n      sequenceFlow = getBusinessObject(connection);\r\n\r\n  return sourceBo.get('default') === sequenceFlow;\r\n}","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nvar LOW_PRIORITY = 500,\r\n    HIGH_PRIORITY = 5000;\r\n\r\n\r\n/**\r\n * BPMN specific delete lane behavior\r\n */\r\nexport default function UpdateFlowNodeRefsBehavior(eventBus, modeling, translate) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Ok, this is it:\r\n   *\r\n   * We have to update the Lane#flowNodeRefs _and_\r\n   * FlowNode#lanes with every FlowNode move/resize and\r\n   * Lane move/resize.\r\n   *\r\n   * We want to group that stuff to recompute containments\r\n   * as efficient as possible.\r\n   *\r\n   * Yea!\r\n   */\r\n\r\n  // the update context\r\n  var context;\r\n\r\n\r\n  function initContext() {\r\n    context = context || new UpdateContext();\r\n    context.enter();\r\n\r\n    return context;\r\n  }\r\n\r\n  function getContext() {\r\n    if (!context) {\r\n      throw new Error(translate('out of bounds release'));\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  function releaseContext() {\r\n\r\n    if (!context) {\r\n      throw new Error(translate('out of bounds release'));\r\n    }\r\n\r\n    var triggerUpdate = context.leave();\r\n\r\n    if (triggerUpdate) {\r\n      modeling.updateLaneRefs(context.flowNodes, context.lanes);\r\n\r\n      context = null;\r\n    }\r\n\r\n    return triggerUpdate;\r\n  }\r\n\r\n\r\n  var laneRefUpdateEvents = [\r\n    'spaceTool',\r\n    'lane.add',\r\n    'lane.resize',\r\n    'lane.split',\r\n    'elements.move',\r\n    'elements.delete',\r\n    'shape.create',\r\n    'shape.delete',\r\n    'shape.move',\r\n    'shape.resize'\r\n  ];\r\n\r\n\r\n  // listen to a lot of stuff to group lane updates\r\n\r\n  this.preExecute(laneRefUpdateEvents, HIGH_PRIORITY, function(event) {\r\n    initContext();\r\n  });\r\n\r\n  this.postExecuted(laneRefUpdateEvents, LOW_PRIORITY, function(event) {\r\n    releaseContext();\r\n  });\r\n\r\n\r\n  // Mark flow nodes + lanes that need an update\r\n\r\n  this.preExecute([\r\n    'shape.create',\r\n    'shape.move',\r\n    'shape.delete',\r\n    'shape.resize'\r\n  ], function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    var updateContext = getContext();\r\n\r\n    // no need to update labels\r\n    if (shape.labelTarget) {\r\n      return;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Lane')) {\r\n      updateContext.addLane(shape);\r\n    }\r\n\r\n    if (is(shape, 'bpmn:FlowNode')) {\r\n      updateContext.addFlowNode(shape);\r\n    }\r\n  });\r\n}\r\n\r\nUpdateFlowNodeRefsBehavior.$inject = [\r\n  'eventBus',\r\n  'modeling' ,\r\n  'translate'\r\n];\r\n\r\ninherits(UpdateFlowNodeRefsBehavior, CommandInterceptor);\r\n\r\n\r\nfunction UpdateContext() {\r\n\r\n  this.flowNodes = [];\r\n  this.lanes = [];\r\n\r\n  this.counter = 0;\r\n\r\n  this.addLane = function(lane) {\r\n    this.lanes.push(lane);\r\n  };\r\n\r\n  this.addFlowNode = function(flowNode) {\r\n    this.flowNodes.push(flowNode);\r\n  };\r\n\r\n  this.enter = function() {\r\n    this.counter++;\r\n  };\r\n\r\n  this.leave = function() {\r\n    this.counter--;\r\n\r\n    return !this.counter;\r\n  };\r\n}","import AdaptiveLabelPositioningBehavior from './AdaptiveLabelPositioningBehavior';\r\nimport AppendBehavior from './AppendBehavior';\r\nimport BoundaryEventBehavior from './BoundaryEventBehavior';\r\nimport CopyPasteBehavior from './CopyPasteBehavior';\r\nimport CreateBoundaryEventBehavior from './CreateBoundaryEventBehavior';\r\nimport CreateDataObjectBehavior from './CreateDataObjectBehavior';\r\nimport CreateParticipantBehavior from './CreateParticipantBehavior';\r\nimport DataInputAssociationBehavior from './DataInputAssociationBehavior';\r\nimport DataStoreBehavior from './DataStoreBehavior';\r\nimport DeleteLaneBehavior from './DeleteLaneBehavior';\r\nimport DropOnFlowBehavior from './DropOnFlowBehavior';\r\nimport ImportDockingFix from './ImportDockingFix';\r\nimport IsHorizontalFix from './IsHorizontalFix';\r\nimport LabelBehavior from './LabelBehavior';\r\nimport ModelingFeedback from './ModelingFeedback';\r\nimport ReplaceConnectionBehavior from './ReplaceConnectionBehavior';\r\nimport RemoveParticipantBehavior from './RemoveParticipantBehavior';\r\nimport ReplaceElementBehaviour from './ReplaceElementBehaviour';\r\nimport ResizeLaneBehavior from './ResizeLaneBehavior';\r\nimport RemoveElementBehavior from './RemoveElementBehavior';\r\nimport ToggleElementCollapseBehaviour from './ToggleElementCollapseBehaviour';\r\nimport UnclaimIdBehavior from './UnclaimIdBehavior';\r\nimport UpdateFlowNodeRefsBehavior from './UpdateFlowNodeRefsBehavior';\r\nimport UnsetDefaultFlowBehavior from './UnsetDefaultFlowBehavior';\r\n\r\nexport default {\r\n  __init__: [\r\n    'adaptiveLabelPositioningBehavior',\r\n    'appendBehavior',\r\n    'boundaryEventBehavior',\r\n    'copyPasteBehavior',\r\n    'createBoundaryEventBehavior',\r\n    'createDataObjectBehavior',\r\n    'dataStoreBehavior',\r\n    'createParticipantBehavior',\r\n    'dataInputAssociationBehavior',\r\n    'deleteLaneBehavior',\r\n    'dropOnFlowBehavior',\r\n    'importDockingFix',\r\n    'isHorizontalFix',\r\n    'labelBehavior',\r\n    'modelingFeedback',\r\n    'removeElementBehavior',\r\n    'removeParticipantBehavior',\r\n    'replaceConnectionBehavior',\r\n    'replaceElementBehaviour',\r\n    'resizeLaneBehavior',\r\n    'toggleElementCollapseBehaviour',\r\n    'unclaimIdBehavior',\r\n    'unsetDefaultFlowBehavior',\r\n    'updateFlowNodeRefsBehavior'\r\n  ],\r\n  adaptiveLabelPositioningBehavior: [ 'type', AdaptiveLabelPositioningBehavior ],\r\n  appendBehavior: [ 'type', AppendBehavior ],\r\n  boundaryEventBehavior: [ 'type', BoundaryEventBehavior ],\r\n  copyPasteBehavior: [ 'type', CopyPasteBehavior ],\r\n  createBoundaryEventBehavior: [ 'type', CreateBoundaryEventBehavior ],\r\n  createDataObjectBehavior: [ 'type', CreateDataObjectBehavior ],\r\n  createParticipantBehavior: [ 'type', CreateParticipantBehavior ],\r\n  dataInputAssociationBehavior: [ 'type', DataInputAssociationBehavior ],\r\n  dataStoreBehavior: [ 'type', DataStoreBehavior ],\r\n  deleteLaneBehavior: [ 'type', DeleteLaneBehavior ],\r\n  dropOnFlowBehavior: [ 'type', DropOnFlowBehavior ],\r\n  importDockingFix: [ 'type', ImportDockingFix ],\r\n  isHorizontalFix: [ 'type', IsHorizontalFix ],\r\n  labelBehavior: [ 'type', LabelBehavior ],\r\n  modelingFeedback: [ 'type', ModelingFeedback ],\r\n  replaceConnectionBehavior: [ 'type', ReplaceConnectionBehavior ],\r\n  removeParticipantBehavior: [ 'type', RemoveParticipantBehavior ],\r\n  replaceElementBehaviour: [ 'type', ReplaceElementBehaviour ],\r\n  resizeLaneBehavior: [ 'type', ResizeLaneBehavior ],\r\n  removeElementBehavior: [ 'type', RemoveElementBehavior ],\r\n  toggleElementCollapseBehaviour : [ 'type', ToggleElementCollapseBehaviour ],\r\n  unclaimIdBehavior: [ 'type', UnclaimIdBehavior ],\r\n  updateFlowNodeRefsBehavior: [ 'type', UpdateFlowNodeRefsBehavior ],\r\n  unsetDefaultFlowBehavior: [ 'type', UnsetDefaultFlowBehavior ]\r\n};\r\n","/**\r\n * Returns the length of a vector\r\n *\r\n * @param {Vector}\r\n * @return {Float}\r\n */\r\nexport function vectorLength(v) {\r\n  return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\r\n}\r\n\r\n\r\n/**\r\n * Calculates the angle between a line a the yAxis\r\n *\r\n * @param {Array}\r\n * @return {Float}\r\n */\r\nexport function getAngle(line) {\r\n  // return value is between 0, 180 and -180, -0\r\n  // @janstuemmel: maybe replace return a/b with b/a\r\n  return Math.atan((line[1].y - line[0].y) / (line[1].x - line[0].x));\r\n}\r\n\r\n\r\n/**\r\n * Rotates a vector by a given angle\r\n *\r\n * @param {Vector}\r\n * @param {Float} Angle in radians\r\n * @return {Vector}\r\n */\r\nexport function rotateVector(vector, angle) {\r\n  return (!angle) ? vector : {\r\n    x: Math.cos(angle) * vector.x - Math.sin(angle) * vector.y,\r\n    y: Math.sin(angle) * vector.x + Math.cos(angle) * vector.y\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Solves a 2D equation system\r\n * a + r*b = c, where a,b,c are 2D vectors\r\n *\r\n * @param {Vector}\r\n * @param {Vector}\r\n * @param {Vector}\r\n * @return {Float}\r\n */\r\nfunction solveLambaSystem(a, b, c) {\r\n\r\n  // the 2d system\r\n  var system = [\r\n    { n: a[0] - c[0], lambda: b[0] },\r\n    { n: a[1] - c[1], lambda: b[1] }\r\n  ];\r\n\r\n  // solve\r\n  var n = system[0].n * b[0] + system[1].n * b[1],\r\n      l = system[0].lambda * b[0] + system[1].lambda * b[1];\r\n\r\n  return -n/l;\r\n}\r\n\r\n\r\n/**\r\n * Position of perpendicular foot\r\n *\r\n * @param {Point}\r\n * @param [ {Point}, {Point} ] line defined throug two points\r\n * @return {Point} the perpendicular foot position\r\n */\r\nexport function perpendicularFoot(point, line) {\r\n\r\n  var a = line[0], b = line[1];\r\n\r\n  // relative position of b from a\r\n  var bd = { x: b.x - a.x, y: b.y - a.y };\r\n\r\n  // solve equation system to the parametrized vectors param real value\r\n  var r = solveLambaSystem([ a.x, a.y ], [ bd.x, bd.y ], [ point.x, point.y ]);\r\n\r\n  return { x: a.x + r*bd.x, y: a.y + r*bd.y };\r\n}\r\n\r\n\r\n/**\r\n * Calculates the distance between a point and a line\r\n *\r\n * @param {Point}\r\n * @param [ {Point}, {Point} ] line defined throug two points\r\n * @return {Float} distance\r\n */\r\nexport function getDistancePointLine(point, line) {\r\n\r\n  var pfPoint = perpendicularFoot(point, line);\r\n\r\n  // distance vector\r\n  var connectionVector = {\r\n    x: pfPoint.x - point.x,\r\n    y: pfPoint.y - point.y\r\n  };\r\n\r\n  return vectorLength(connectionVector);\r\n}\r\n\r\n\r\n/**\r\n * Calculates the distance between two points\r\n *\r\n * @param {Point}\r\n * @param {Point}\r\n * @return {Float} distance\r\n */\r\nexport function getDistancePointPoint(point1, point2) {\r\n\r\n  return vectorLength({\r\n    x: point1.x - point2.x,\r\n    y: point1.y - point2.y\r\n  });\r\n}","import {\r\n  getDistancePointPoint,\r\n  rotateVector,\r\n  getAngle\r\n} from './GeometricUtil';\r\n\r\nimport {\r\n  getAttachment\r\n} from './LineAttachmentUtil';\r\n\r\nimport {\r\n  roundPoint\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\n\r\nexport function findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints) {\r\n\r\n  var index = attachment.segmentIndex;\r\n\r\n  var offset = newWaypoints.length - oldWaypoints.length;\r\n\r\n  // segmentMove happend\r\n  if (hints.segmentMove) {\r\n\r\n    var oldSegmentStartIndex = hints.segmentMove.segmentStartIndex,\r\n        newSegmentStartIndex = hints.segmentMove.newSegmentStartIndex;\r\n\r\n    // if label was on moved segment return new segment index\r\n    if (index === oldSegmentStartIndex) {\r\n      return newSegmentStartIndex;\r\n    }\r\n\r\n    // label is after new segment index\r\n    if (index >= newSegmentStartIndex) {\r\n      return (index+offset < newSegmentStartIndex) ? newSegmentStartIndex : index+offset;\r\n    }\r\n\r\n    // if label is before new segment index\r\n    return index;\r\n  }\r\n\r\n  // bendpointMove happend\r\n  if (hints.bendpointMove) {\r\n\r\n    var insert = hints.bendpointMove.insert,\r\n        bendpointIndex = hints.bendpointMove.bendpointIndex,\r\n        newIndex;\r\n\r\n    // waypoints length didnt change\r\n    if (offset === 0) {\r\n      return index;\r\n    }\r\n\r\n    // label behind new/removed bendpoint\r\n    if (index >= bendpointIndex) {\r\n      newIndex = insert ? index + 1 : index - 1;\r\n    }\r\n\r\n    // label before new/removed bendpoint\r\n    if (index < bendpointIndex) {\r\n\r\n      newIndex = index;\r\n\r\n      // decide label should take right or left segment\r\n      if (insert && attachment.type !== 'bendpoint' && bendpointIndex-1 === index) {\r\n\r\n        var rel = relativePositionMidWaypoint(newWaypoints, bendpointIndex);\r\n\r\n        if (rel < attachment.relativeLocation) {\r\n          newIndex++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return newIndex;\r\n  }\r\n\r\n  // start/end changed\r\n  if (offset === 0) {\r\n    return index;\r\n  }\r\n\r\n  if (hints.connectionStart) {\r\n    return (index === 0) ? 0 : null;\r\n  }\r\n\r\n  if (hints.connectionEnd) {\r\n    return (index === oldWaypoints.length - 2) ? newWaypoints.length - 2 : null;\r\n  }\r\n\r\n  // if nothing fits, return null\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * Calculate the required adjustment (move delta) for the given label\r\n * after the connection waypoints got updated.\r\n *\r\n * @param {djs.model.Label} label\r\n * @param {Array<Point>} newWaypoints\r\n * @param {Array<Point>} oldWaypoints\r\n * @param {Object} hints\r\n *\r\n * @return {Point} delta\r\n */\r\nexport function getLabelAdjustment(label, newWaypoints, oldWaypoints, hints) {\r\n\r\n  var x = 0,\r\n      y = 0;\r\n\r\n  var labelPosition = getLabelMid(label);\r\n\r\n  // get closest attachment\r\n  var attachment = getAttachment(labelPosition, oldWaypoints),\r\n      oldLabelLineIndex = attachment.segmentIndex,\r\n      newLabelLineIndex = findNewLabelLineStartIndex(oldWaypoints, newWaypoints, attachment, hints);\r\n\r\n  if (newLabelLineIndex === null) {\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  // should never happen\r\n  // TODO(@janstuemmel): throw an error here when connectionSegmentMove is refactored\r\n  if (newLabelLineIndex < 0 ||\r\n      newLabelLineIndex > newWaypoints.length - 2) {\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  var oldLabelLine = getLine(oldWaypoints, oldLabelLineIndex),\r\n      newLabelLine = getLine(newWaypoints, newLabelLineIndex),\r\n      oldFoot = attachment.position;\r\n\r\n  var relativeFootPosition = getRelativeFootPosition(oldLabelLine, oldFoot),\r\n      angleDelta = getAngleDelta(oldLabelLine, newLabelLine);\r\n\r\n  // special rule if label on bendpoint\r\n  if (attachment.type === 'bendpoint') {\r\n\r\n    var offset = newWaypoints.length - oldWaypoints.length,\r\n        oldBendpointIndex = attachment.bendpointIndex,\r\n        oldBendpoint = oldWaypoints[oldBendpointIndex];\r\n\r\n    // bendpoint position hasnt changed, return same position\r\n    if (newWaypoints.indexOf(oldBendpoint) !== -1) {\r\n      return { x: x, y: y };\r\n    }\r\n\r\n    // new bendpoint and old bendpoint have same index, then just return the offset\r\n    if (offset === 0) {\r\n      var newBendpoint = newWaypoints[oldBendpointIndex];\r\n\r\n      return {\r\n        x: newBendpoint.x - attachment.position.x,\r\n        y: newBendpoint.y - attachment.position.y\r\n      };\r\n    }\r\n\r\n    // if bendpoints get removed\r\n    if (offset < 0 && oldBendpointIndex !== 0 && oldBendpointIndex < oldWaypoints.length - 1) {\r\n      relativeFootPosition = relativePositionMidWaypoint(oldWaypoints, oldBendpointIndex);\r\n    }\r\n  }\r\n\r\n  var newFoot = {\r\n    x: (newLabelLine[1].x - newLabelLine[0].x) * relativeFootPosition + newLabelLine[0].x,\r\n    y: (newLabelLine[1].y - newLabelLine[0].y) * relativeFootPosition + newLabelLine[0].y\r\n  };\r\n\r\n  // the rotated vector to label\r\n  var newLabelVector = rotateVector({\r\n    x: labelPosition.x - oldFoot.x,\r\n    y: labelPosition.y - oldFoot.y\r\n  }, angleDelta);\r\n\r\n  // the new relative position\r\n  x = newFoot.x + newLabelVector.x - labelPosition.x;\r\n  y = newFoot.y + newLabelVector.y - labelPosition.y;\r\n\r\n  return roundPoint({\r\n    x: x,\r\n    y: y\r\n  });\r\n}\r\n\r\n\r\n// HELPERS //////////////////////\r\n\r\nfunction relativePositionMidWaypoint(waypoints, idx) {\r\n\r\n  var distanceSegment1 = getDistancePointPoint(waypoints[idx-1], waypoints[idx]),\r\n      distanceSegment2 = getDistancePointPoint(waypoints[idx], waypoints[idx+1]);\r\n\r\n  var relativePosition = distanceSegment1 / (distanceSegment1 + distanceSegment2);\r\n\r\n  return relativePosition;\r\n}\r\n\r\nfunction getLabelMid(label) {\r\n  return {\r\n    x: label.x + label.width / 2,\r\n    y: label.y + label.height / 2\r\n  };\r\n}\r\n\r\nfunction getAngleDelta(l1, l2) {\r\n  var a1 = getAngle(l1),\r\n      a2 = getAngle(l2);\r\n  return a2 - a1;\r\n}\r\n\r\nfunction getLine(waypoints, idx) {\r\n  return [ waypoints[idx], waypoints[idx+1] ];\r\n}\r\n\r\nfunction getRelativeFootPosition(line, foot) {\r\n\r\n  var length = getDistancePointPoint(line[0], line[1]),\r\n      lengthToFoot = getDistancePointPoint(line[0], foot);\r\n\r\n  return length === 0 ? 0 : lengthToFoot / length;\r\n}\r\n","var sqrt = Math.sqrt,\r\n    min = Math.min,\r\n    max = Math.max,\r\n    abs = Math.abs;\r\n\r\n/**\r\n * Calculate the square (power to two) of a number.\r\n *\r\n * @param {Number} n\r\n *\r\n * @return {Number}\r\n */\r\nfunction sq(n) {\r\n  return Math.pow(n, 2);\r\n}\r\n\r\n/**\r\n * Get distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n *\r\n * @return {Number}\r\n */\r\nfunction getDistance(p1, p2) {\r\n  return sqrt(sq(p1.x - p2.x) + sq(p1.y - p2.y));\r\n}\r\n\r\n/**\r\n * Return the attachment of the given point on the specified line.\r\n *\r\n * The attachment is either a bendpoint (attached to the given point)\r\n * or segment (attached to a location on a line segment) attachment:\r\n *\r\n * ```javascript\r\n * var pointAttachment = {\r\n *   type: 'bendpoint',\r\n *   bendpointIndex: 3,\r\n *   position: { x: 10, y: 10 } // the attach point on the line\r\n * };\r\n *\r\n * var segmentAttachment = {\r\n *   type: 'segment',\r\n *   segmentIndex: 2,\r\n *   relativeLocation: 0.31, // attach point location between 0 (at start) and 1 (at end)\r\n *   position: { x: 10, y: 10 } // the attach point on the line\r\n * };\r\n * ```\r\n *\r\n * @param {Point} point\r\n * @param {Array<Point>} line\r\n *\r\n * @return {Object} attachment\r\n */\r\nexport function getAttachment(point, line) {\r\n\r\n  var idx = 0,\r\n      segmentStart,\r\n      segmentEnd,\r\n      segmentStartDistance,\r\n      segmentEndDistance,\r\n      attachmentPosition,\r\n      minDistance,\r\n      intersections,\r\n      attachment,\r\n      attachmentDistance,\r\n      closestAttachmentDistance,\r\n      closestAttachment;\r\n\r\n  for (idx = 0; idx < line.length - 1; idx++) {\r\n\r\n    segmentStart = line[idx];\r\n    segmentEnd = line[idx + 1];\r\n\r\n    if (pointsEqual(segmentStart, segmentEnd)) {\r\n      intersections = [ segmentStart ];\r\n    } else {\r\n      segmentStartDistance = getDistance(point, segmentStart);\r\n      segmentEndDistance = getDistance(point, segmentEnd);\r\n\r\n      minDistance = min(segmentStartDistance, segmentEndDistance);\r\n\r\n      intersections = getCircleSegmentIntersections(segmentStart, segmentEnd, point, minDistance);\r\n    }\r\n\r\n    if (intersections.length < 1) {\r\n      throw new Error('expected between [1, 2] circle -> line intersections');\r\n    }\r\n\r\n    // one intersection -> bendpoint attachment\r\n    if (intersections.length === 1) {\r\n      attachment = {\r\n        type: 'bendpoint',\r\n        position: intersections[0],\r\n        segmentIndex: idx,\r\n        bendpointIndex: pointsEqual(segmentStart, intersections[0]) ? idx : idx + 1\r\n      };\r\n    }\r\n\r\n    // two intersections -> segment attachment\r\n    if (intersections.length === 2) {\r\n\r\n      attachmentPosition = mid(intersections[0], intersections[1]);\r\n\r\n      attachment = {\r\n        type: 'segment',\r\n        position: attachmentPosition,\r\n        segmentIndex: idx,\r\n        relativeLocation: getDistance(segmentStart, attachmentPosition) / getDistance(segmentStart, segmentEnd)\r\n      };\r\n    }\r\n\r\n    attachmentDistance = getDistance(attachment.position, point);\r\n\r\n    if (!closestAttachment || closestAttachmentDistance > attachmentDistance) {\r\n      closestAttachment = attachment;\r\n      closestAttachmentDistance = attachmentDistance;\r\n    }\r\n  }\r\n\r\n  return closestAttachment;\r\n}\r\n\r\n/**\r\n * Gets the intersection between a circle and a line segment.\r\n *\r\n * @param {Point} s1 segment start\r\n * @param {Point} s2 segment end\r\n * @param {Point} cc circle center\r\n * @param {Number} cr circle radius\r\n *\r\n * @return {Array<Point>} intersections\r\n */\r\nfunction getCircleSegmentIntersections(s1, s2, cc, cr) {\r\n\r\n  var baX = s2.x - s1.x;\r\n  var baY = s2.y - s1.y;\r\n  var caX = cc.x - s1.x;\r\n  var caY = cc.y - s1.y;\r\n\r\n  var a = baX * baX + baY * baY;\r\n  var bBy2 = baX * caX + baY * caY;\r\n  var c = caX * caX + caY * caY - cr * cr;\r\n\r\n  var pBy2 = bBy2 / a;\r\n  var q = c / a;\r\n\r\n  var disc = pBy2 * pBy2 - q;\r\n\r\n  // check against negative value to work around\r\n  // negative, very close to zero results (-4e-15)\r\n  // being produced in some environments\r\n  if (disc < 0 && disc > -0.000001) {\r\n    disc = 0;\r\n  }\r\n\r\n  if (disc < 0) {\r\n    return [];\r\n  }\r\n\r\n  // if disc == 0 ... dealt with later\r\n  var tmpSqrt = sqrt(disc);\r\n  var abScalingFactor1 = -pBy2 + tmpSqrt;\r\n  var abScalingFactor2 = -pBy2 - tmpSqrt;\r\n\r\n  var i1 = {\r\n    x: s1.x - baX * abScalingFactor1,\r\n    y: s1.y - baY * abScalingFactor1\r\n  };\r\n\r\n  if (disc === 0) { // abScalingFactor1 == abScalingFactor2\r\n    return [ i1 ];\r\n  }\r\n\r\n  var i2 = {\r\n    x: s1.x - baX * abScalingFactor2,\r\n    y: s1.y - baY * abScalingFactor2\r\n  };\r\n\r\n  // return only points on line segment\r\n  return [ i1, i2 ].filter(function(p) {\r\n    return isPointInSegment(p, s1, s2);\r\n  });\r\n}\r\n\r\n\r\nfunction isPointInSegment(p, segmentStart, segmentEnd) {\r\n  return (\r\n    fenced(p.x, segmentStart.x, segmentEnd.x) &&\r\n    fenced(p.y, segmentStart.y, segmentEnd.y)\r\n  );\r\n}\r\n\r\nfunction fenced(n, rangeStart, rangeEnd) {\r\n\r\n  // use matching threshold to work around\r\n  // precisison errors in intersection computation\r\n\r\n  return (\r\n    n >= min(rangeStart, rangeEnd) - EQUAL_THRESHOLD &&\r\n    n <= max(rangeStart, rangeEnd) + EQUAL_THRESHOLD\r\n  );\r\n}\r\n\r\n/**\r\n * Calculate mid of two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n *\r\n * @return {Point}\r\n */\r\nfunction mid(p1, p2) {\r\n\r\n  return {\r\n    x: (p1.x + p2.x) / 2,\r\n    y: (p1.y + p2.y) / 2\r\n  };\r\n}\r\n\r\nvar EQUAL_THRESHOLD = 0.1;\r\n\r\nfunction pointsEqual(p1, p2) {\r\n\r\n  return (\r\n    abs(p1.x - p2.x) <= EQUAL_THRESHOLD &&\r\n    abs(p1.y - p2.y) <= EQUAL_THRESHOLD\r\n  );\r\n}\r\n","/**\r\n * Returns the intersection between two line segments a and b.\r\n *\r\n * @param {Point} l1s\r\n * @param {Point} l1e\r\n * @param {Point} l2s\r\n * @param {Point} l2e\r\n *\r\n * @return {Point}\r\n */\r\nexport default function lineIntersect(l1s, l1e, l2s, l2e) {\r\n  // if the lines intersect, the result contains the x and y of the\r\n  // intersection (treating the lines as infinite) and booleans for\r\n  // whether line segment 1 or line segment 2 contain the point\r\n  var denominator, a, b, c, numerator;\r\n\r\n  denominator = ((l2e.y - l2s.y) * (l1e.x - l1s.x)) - ((l2e.x - l2s.x) * (l1e.y - l1s.y));\r\n\r\n  if (denominator == 0) {\r\n    return null;\r\n  }\r\n\r\n  a = l1s.y - l2s.y;\r\n  b = l1s.x - l2s.x;\r\n  numerator = ((l2e.x - l2s.x) * a) - ((l2e.y - l2s.y) * b);\r\n\r\n  c = numerator / denominator;\r\n\r\n  // if we cast these lines infinitely in\r\n  // both directions, they intersect here\r\n  return {\r\n    x: Math.round(l1s.x + (c * (l1e.x - l1s.x))),\r\n    y: Math.round(l1s.y + (c * (l1e.y - l1s.y)))\r\n  };\r\n}","import {\r\n  filter\r\n} from 'min-dash';\r\n\r\nimport {\r\n  eachElement\r\n} from 'diagram-js/lib/util/Elements';\r\n\r\nimport {\r\n  getLanesRoot,\r\n  getChildLanes,\r\n  LANE_INDENTATION\r\n} from '../util/LaneUtil';\r\n\r\n\r\n/**\r\n * A handler that allows us to add a new lane\r\n * above or below an existing one.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nexport default function AddLaneHandler(modeling, spaceTool) {\r\n  this._modeling = modeling;\r\n  this._spaceTool = spaceTool;\r\n}\r\n\r\nAddLaneHandler.$inject = [\r\n  'modeling',\r\n  'spaceTool'\r\n];\r\n\r\n\r\nAddLaneHandler.prototype.preExecute = function(context) {\r\n\r\n  var spaceTool = this._spaceTool,\r\n      modeling = this._modeling;\r\n\r\n  var shape = context.shape,\r\n      location = context.location;\r\n\r\n  var lanesRoot = getLanesRoot(shape);\r\n\r\n  var isRoot = lanesRoot === shape,\r\n      laneParent = isRoot ? shape : shape.parent;\r\n\r\n  var existingChildLanes = getChildLanes(laneParent);\r\n\r\n  // (0) add a lane if we currently got none and are adding to root\r\n  if (!existingChildLanes.length) {\r\n    modeling.createShape({ type: 'bpmn:Lane' }, {\r\n      x: shape.x + LANE_INDENTATION,\r\n      y: shape.y,\r\n      width: shape.width - LANE_INDENTATION,\r\n      height: shape.height\r\n    }, laneParent);\r\n  }\r\n\r\n  // (1) collect affected elements to create necessary space\r\n  var allAffected = [];\r\n\r\n  eachElement(lanesRoot, function(element) {\r\n    allAffected.push(element);\r\n\r\n    if (element === shape) {\r\n      return [];\r\n    }\r\n\r\n    return filter(element.children, function(c) {\r\n      return c !== shape;\r\n    });\r\n  });\r\n\r\n  var offset = location === 'top' ? -120 : 120,\r\n      lanePosition = location === 'top' ? shape.y : shape.y + shape.height,\r\n      spacePos = lanePosition + (location === 'top' ? 10 : -10),\r\n      direction = location === 'top' ? 'n' : 's';\r\n\r\n  var adjustments = spaceTool.calculateAdjustments(allAffected, 'y', offset, spacePos);\r\n\r\n  spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: 0, y: offset }, direction);\r\n\r\n  // (2) create new lane at open space\r\n  context.newLane = modeling.createShape({ type: 'bpmn:Lane' }, {\r\n    x: shape.x + (isRoot ? LANE_INDENTATION : 0),\r\n    y: lanePosition - (location === 'top' ? 120 : 0),\r\n    width: shape.width - (isRoot ? LANE_INDENTATION : 0),\r\n    height: 120\r\n  }, laneParent);\r\n};\r\n","export default function IdClaimHandler(moddle) {\r\n  this._moddle = moddle;\r\n}\r\n\r\nIdClaimHandler.$inject = [ 'moddle' ];\r\n\r\n\r\nIdClaimHandler.prototype.execute = function(context) {\r\n  var ids = this._moddle.ids,\r\n      id = context.id,\r\n      element = context.element,\r\n      claiming = context.claiming;\r\n\r\n  if (claiming) {\r\n    ids.claim(id, element);\r\n  } else {\r\n    ids.unclaim(id);\r\n  }\r\n};\r\n\r\n/**\r\n * Command revert implementation.\r\n */\r\nIdClaimHandler.prototype.revert = function(context) {\r\n  var ids = this._moddle.ids,\r\n      id = context.id,\r\n      element = context.element,\r\n      claiming = context.claiming;\r\n\r\n  if (claiming) {\r\n    ids.unclaim(id);\r\n  } else {\r\n    ids.claim(id, element);\r\n  }\r\n};\r\n\r\n","import { is } from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  getLanesRoot,\r\n  computeLanesResize\r\n} from '../util/LaneUtil';\r\n\r\nimport {\r\n  eachElement\r\n} from 'diagram-js/lib/util/Elements';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  substractTRBL\r\n} from 'diagram-js/lib/features/resize/ResizeUtil';\r\n\r\n\r\n/**\r\n * A handler that resizes a lane.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nexport default function ResizeLaneHandler(modeling, spaceTool) {\r\n  this._modeling = modeling;\r\n  this._spaceTool = spaceTool;\r\n}\r\n\r\nResizeLaneHandler.$inject = [\r\n  'modeling',\r\n  'spaceTool'\r\n];\r\n\r\n\r\nResizeLaneHandler.prototype.preExecute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      newBounds = context.newBounds,\r\n      balanced = context.balanced;\r\n\r\n  if (balanced !== false) {\r\n    this.resizeBalanced(shape, newBounds);\r\n  } else {\r\n    this.resizeSpace(shape, newBounds);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Resize balanced, adjusting next / previous lane sizes.\r\n *\r\n * @param {djs.model.Shape} shape\r\n * @param {Bounds} newBounds\r\n */\r\nResizeLaneHandler.prototype.resizeBalanced = function(shape, newBounds) {\r\n\r\n  var modeling = this._modeling;\r\n\r\n  var resizeNeeded = computeLanesResize(shape, newBounds);\r\n\r\n  // resize the lane\r\n  modeling.resizeShape(shape, newBounds);\r\n\r\n  // resize other lanes as needed\r\n  resizeNeeded.forEach(function(r) {\r\n    modeling.resizeShape(r.shape, r.newBounds);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Resize, making actual space and moving below / above elements.\r\n *\r\n * @param {djs.model.Shape} shape\r\n * @param {Bounds} newBounds\r\n */\r\nResizeLaneHandler.prototype.resizeSpace = function(shape, newBounds) {\r\n  var spaceTool = this._spaceTool;\r\n\r\n  var shapeTrbl = asTRBL(shape),\r\n      newTrbl = asTRBL(newBounds);\r\n\r\n  var trblDiff = substractTRBL(newTrbl, shapeTrbl);\r\n\r\n  var lanesRoot = getLanesRoot(shape);\r\n\r\n  var allAffected = [],\r\n      allLanes = [];\r\n\r\n  eachElement(lanesRoot, function(element) {\r\n    allAffected.push(element);\r\n\r\n    if (is(element, 'bpmn:Lane') || is(element, 'bpmn:Participant')) {\r\n      allLanes.push(element);\r\n    }\r\n\r\n    return element.children;\r\n  });\r\n\r\n  var change,\r\n      spacePos,\r\n      direction,\r\n      offset,\r\n      adjustments;\r\n\r\n  if (trblDiff.bottom || trblDiff.top) {\r\n\r\n    change = trblDiff.bottom || trblDiff.top;\r\n    spacePos = shape.y + (trblDiff.bottom ? shape.height : 0) + (trblDiff.bottom ? -10 : 10);\r\n    direction = trblDiff.bottom ? 's' : 'n';\r\n\r\n    offset = trblDiff.top > 0 || trblDiff.bottom < 0 ? -change : change;\r\n\r\n    adjustments = spaceTool.calculateAdjustments(allAffected, 'y', offset, spacePos);\r\n\r\n    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: 0, y: change }, direction);\r\n  }\r\n\r\n\r\n  if (trblDiff.left || trblDiff.right) {\r\n\r\n    change = trblDiff.right || trblDiff.left;\r\n    spacePos = shape.x + (trblDiff.right ? shape.width : 0) + (trblDiff.right ? -10 : 100);\r\n    direction = trblDiff.right ? 'e' : 'w';\r\n\r\n    offset = trblDiff.left > 0 || trblDiff.right < 0 ? -change : change;\r\n\r\n    adjustments = spaceTool.calculateAdjustments(allLanes, 'x', offset, spacePos);\r\n\r\n    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: change, y: 0 }, direction);\r\n  }\r\n};","import {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\nvar DEFAULT_COLORS = {\r\n  fill: undefined,\r\n  stroke: undefined\r\n};\r\n\r\n\r\nexport default function SetColorHandler(commandStack) {\r\n  this._commandStack = commandStack;\r\n}\r\n\r\nSetColorHandler.$inject = [\r\n  'commandStack'\r\n];\r\n\r\n\r\nSetColorHandler.prototype.postExecute = function(context) {\r\n  var elements = context.elements,\r\n      colors = context.colors || DEFAULT_COLORS;\r\n\r\n  var self = this;\r\n\r\n  var di = {};\r\n\r\n  if ('fill' in colors) {\r\n    assign(di, { fill: colors.fill });\r\n  }\r\n\r\n  if ('stroke' in colors) {\r\n    assign(di, { stroke: colors.stroke });\r\n  }\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    self._commandStack.execute('element.updateProperties', {\r\n      element: element,\r\n      properties: {\r\n        di: di\r\n      }\r\n    });\r\n  });\r\n\r\n};","import {\r\n  getChildLanes,\r\n  LANE_INDENTATION\r\n} from '../util/LaneUtil';\r\n\r\n\r\n/**\r\n * A handler that splits a lane into a number of sub-lanes,\r\n * creating new sub lanes, if neccessary.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nexport default function SplitLaneHandler(modeling, translate) {\r\n  this._modeling = modeling;\r\n  this._translate = translate;\r\n}\r\n\r\nSplitLaneHandler.$inject = [\r\n  'modeling',\r\n  'translate'\r\n];\r\n\r\n\r\nSplitLaneHandler.prototype.preExecute = function(context) {\r\n\r\n  var modeling = this._modeling,\r\n      translate = this._translate;\r\n\r\n  var shape = context.shape,\r\n      newLanesCount = context.count;\r\n\r\n  var childLanes = getChildLanes(shape),\r\n      existingLanesCount = childLanes.length;\r\n\r\n  if (existingLanesCount > newLanesCount) {\r\n    throw new Error(translate('more than {count} child lanes', { count: newLanesCount }));\r\n  }\r\n\r\n  var newLanesHeight = Math.round(shape.height / newLanesCount);\r\n\r\n  // Iterate from top to bottom in child lane order,\r\n  // resizing existing lanes and creating new ones\r\n  // so that they split the parent proportionally.\r\n  //\r\n  // Due to rounding related errors, the bottom lane\r\n  // needs to take up all the remaining space.\r\n  var laneY,\r\n      laneHeight,\r\n      laneBounds,\r\n      newLaneAttrs,\r\n      idx;\r\n\r\n  for (idx = 0; idx < newLanesCount; idx++) {\r\n\r\n    laneY = shape.y + idx * newLanesHeight;\r\n\r\n    // if bottom lane\r\n    if (idx === newLanesCount - 1) {\r\n      laneHeight = shape.height - (newLanesHeight * idx);\r\n    } else {\r\n      laneHeight = newLanesHeight;\r\n    }\r\n\r\n    laneBounds = {\r\n      x: shape.x + LANE_INDENTATION,\r\n      y: laneY,\r\n      width: shape.width - LANE_INDENTATION,\r\n      height: laneHeight\r\n    };\r\n\r\n    if (idx < existingLanesCount) {\r\n      // resize existing lane\r\n      modeling.resizeShape(childLanes[idx], laneBounds);\r\n    } else {\r\n      // create a new lane at position\r\n      newLaneAttrs = {\r\n        type: 'bpmn:Lane'\r\n      };\r\n\r\n      modeling.createShape(newLaneAttrs, laneBounds, shape);\r\n    }\r\n  }\r\n};\r\n","import {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from 'diagram-js/lib/util/Collections';\r\n\r\n\r\nexport default function UpdateCanvasRootHandler(canvas, modeling) {\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n}\r\n\r\nUpdateCanvasRootHandler.$inject = [\r\n  'canvas',\r\n  'modeling'\r\n];\r\n\r\n\r\nUpdateCanvasRootHandler.prototype.execute = function(context) {\r\n\r\n  var canvas = this._canvas;\r\n\r\n  var newRoot = context.newRoot,\r\n      newRootBusinessObject = newRoot.businessObject,\r\n      oldRoot = canvas.getRootElement(),\r\n      oldRootBusinessObject = oldRoot.businessObject,\r\n      bpmnDefinitions = oldRootBusinessObject.$parent,\r\n      diPlane = oldRootBusinessObject.di;\r\n\r\n  // (1) replace process old <> new root\r\n  canvas.setRootElement(newRoot, true);\r\n\r\n  // (2) update root elements\r\n  collectionAdd(bpmnDefinitions.rootElements, newRootBusinessObject);\r\n  newRootBusinessObject.$parent = bpmnDefinitions;\r\n\r\n  collectionRemove(bpmnDefinitions.rootElements, oldRootBusinessObject);\r\n  oldRootBusinessObject.$parent = null;\r\n\r\n  // (3) wire di\r\n  oldRootBusinessObject.di = null;\r\n\r\n  diPlane.bpmnElement = newRootBusinessObject;\r\n  newRootBusinessObject.di = diPlane;\r\n\r\n  context.oldRoot = oldRoot;\r\n\r\n  // TODO(nikku): return changed elements?\r\n  // return [ newRoot, oldRoot ];\r\n};\r\n\r\n\r\nUpdateCanvasRootHandler.prototype.revert = function(context) {\r\n\r\n  var canvas = this._canvas;\r\n\r\n  var newRoot = context.newRoot,\r\n      newRootBusinessObject = newRoot.businessObject,\r\n      oldRoot = context.oldRoot,\r\n      oldRootBusinessObject = oldRoot.businessObject,\r\n      bpmnDefinitions = newRootBusinessObject.$parent,\r\n      diPlane = newRootBusinessObject.di;\r\n\r\n  // (1) replace process old <> new root\r\n  canvas.setRootElement(oldRoot, true);\r\n\r\n  // (2) update root elements\r\n  collectionRemove(bpmnDefinitions.rootElements, newRootBusinessObject);\r\n  newRootBusinessObject.$parent = null;\r\n\r\n  collectionAdd(bpmnDefinitions.rootElements, oldRootBusinessObject);\r\n  oldRootBusinessObject.$parent = bpmnDefinitions;\r\n\r\n  // (3) wire di\r\n  newRootBusinessObject.di = null;\r\n\r\n  diPlane.bpmnElement = oldRootBusinessObject;\r\n  oldRootBusinessObject.di = diPlane;\r\n\r\n  // TODO(nikku): return changed elements?\r\n  // return [ newRoot, oldRoot ];\r\n};","import {\r\n  collectLanes,\r\n  getLanesRoot\r\n} from '../util/LaneUtil';\r\n\r\nimport {\r\n  is\r\n} from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from 'diagram-js/lib/util/Collections';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nvar FLOW_NODE_REFS_ATTR = 'flowNodeRef',\r\n    LANES_ATTR = 'lanes';\r\n\r\n\r\n/**\r\n * A handler that updates lane refs on changed elements\r\n */\r\nexport default function UpdateFlowNodeRefsHandler(elementRegistry) {\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nUpdateFlowNodeRefsHandler.$inject = [\r\n  'elementRegistry'\r\n];\r\n\r\n\r\nUpdateFlowNodeRefsHandler.prototype.computeUpdates = function(flowNodeShapes, laneShapes) {\r\n\r\n  var handledNodes = {};\r\n\r\n  var updates = [];\r\n\r\n  var participantCache = {};\r\n\r\n  var allFlowNodeShapes = [];\r\n\r\n  function isInLaneShape(element, laneShape) {\r\n\r\n    var laneTrbl = asTRBL(laneShape);\r\n\r\n    var elementMid = {\r\n      x: element.x + element.width / 2,\r\n      y: element.y + element.height / 2\r\n    };\r\n\r\n    return elementMid.x > laneTrbl.left &&\r\n           elementMid.x < laneTrbl.right &&\r\n           elementMid.y > laneTrbl.top &&\r\n           elementMid.y < laneTrbl.bottom;\r\n  }\r\n\r\n  function addFlowNodeShape(flowNodeShape) {\r\n    if (!handledNodes[flowNodeShape.id]) {\r\n      allFlowNodeShapes.push(flowNodeShape);\r\n      handledNodes[flowNodeShape.id] = flowNodeShape;\r\n    }\r\n  }\r\n\r\n  function getAllLaneShapes(flowNodeShape) {\r\n\r\n    var root = getLanesRoot(flowNodeShape);\r\n\r\n    if (!participantCache[root.id]) {\r\n      participantCache[root.id] = collectLanes(root);\r\n    }\r\n\r\n    return participantCache[root.id];\r\n  }\r\n\r\n  function getNewLanes(flowNodeShape) {\r\n    if (!flowNodeShape.parent) {\r\n      return [];\r\n    }\r\n\r\n    var allLaneShapes = getAllLaneShapes(flowNodeShape);\r\n\r\n    return allLaneShapes.filter(function(l) {\r\n      return isInLaneShape(flowNodeShape, l);\r\n    }).map(function(shape) {\r\n      return shape.businessObject;\r\n    });\r\n  }\r\n\r\n  laneShapes.forEach(function(laneShape) {\r\n    var root = getLanesRoot(laneShape);\r\n\r\n    if (!root || handledNodes[root.id]) {\r\n      return;\r\n    }\r\n\r\n    var children = root.children.filter(function(c) {\r\n      return is(c, 'bpmn:FlowNode');\r\n    });\r\n\r\n    children.forEach(addFlowNodeShape);\r\n\r\n    handledNodes[root.id] = root;\r\n  });\r\n\r\n  flowNodeShapes.forEach(addFlowNodeShape);\r\n\r\n\r\n  allFlowNodeShapes.forEach(function(flowNodeShape) {\r\n\r\n    var flowNode = flowNodeShape.businessObject;\r\n\r\n    var lanes = flowNode.get(LANES_ATTR),\r\n        remove = lanes.slice(),\r\n        add = getNewLanes(flowNodeShape);\r\n\r\n    updates.push({ flowNode: flowNode, remove: remove, add: add });\r\n  });\r\n\r\n  laneShapes.forEach(function(laneShape) {\r\n\r\n    var lane = laneShape.businessObject;\r\n\r\n    // lane got removed XX-)\r\n    if (!laneShape.parent) {\r\n      lane.get(FLOW_NODE_REFS_ATTR).forEach(function(flowNode) {\r\n        updates.push({ flowNode: flowNode, remove: [ lane ], add: [] });\r\n      });\r\n    }\r\n  });\r\n\r\n  return updates;\r\n};\r\n\r\nUpdateFlowNodeRefsHandler.prototype.execute = function(context) {\r\n\r\n  var updates = context.updates;\r\n\r\n  if (!updates) {\r\n    updates = context.updates = this.computeUpdates(context.flowNodeShapes, context.laneShapes);\r\n  }\r\n\r\n\r\n  updates.forEach(function(update) {\r\n\r\n    var flowNode = update.flowNode,\r\n        lanes = flowNode.get(LANES_ATTR);\r\n\r\n    // unwire old\r\n    update.remove.forEach(function(oldLane) {\r\n      collectionRemove(lanes, oldLane);\r\n      collectionRemove(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n\r\n    // wire new\r\n    update.add.forEach(function(newLane) {\r\n      collectionAdd(lanes, newLane);\r\n      collectionAdd(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n  });\r\n\r\n  // TODO(nikku): return changed elements\r\n  // return [ ... ];\r\n};\r\n\r\n\r\nUpdateFlowNodeRefsHandler.prototype.revert = function(context) {\r\n\r\n  var updates = context.updates;\r\n\r\n  updates.forEach(function(update) {\r\n\r\n    var flowNode = update.flowNode,\r\n        lanes = flowNode.get(LANES_ATTR);\r\n\r\n    // unwire new\r\n    update.add.forEach(function(newLane) {\r\n      collectionRemove(lanes, newLane);\r\n      collectionRemove(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n\r\n    // wire old\r\n    update.remove.forEach(function(oldLane) {\r\n      collectionAdd(lanes, oldLane);\r\n      collectionAdd(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);\r\n    });\r\n  });\r\n\r\n  // TODO(nikku): return changed elements\r\n  // return [ ... ];\r\n};","import {\r\n  reduce,\r\n  keys,\r\n  forEach,\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getBusinessObject\r\n} from '../../../util/ModelUtil';\r\n\r\nvar DEFAULT_FLOW = 'default',\r\n    ID = 'id',\r\n    DI = 'di';\r\n\r\nvar NULL_DIMENSIONS = {\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\n/**\r\n * A handler that implements a BPMN 2.0 property update.\r\n *\r\n * This should be used to set simple properties on elements with\r\n * an underlying BPMN business object.\r\n *\r\n * Use respective diagram-js provided handlers if you would\r\n * like to perform automated modeling.\r\n */\r\nexport default function UpdatePropertiesHandler(\r\n    elementRegistry, moddle, translate,\r\n    modeling, textRenderer) {\r\n\r\n  this._elementRegistry = elementRegistry;\r\n  this._moddle = moddle;\r\n  this._translate = translate;\r\n  this._modeling = modeling;\r\n  this._textRenderer = textRenderer;\r\n}\r\n\r\nUpdatePropertiesHandler.$inject = [\r\n  'elementRegistry',\r\n  'moddle',\r\n  'translate',\r\n  'modeling',\r\n  'textRenderer'\r\n];\r\n\r\n\r\n// api //////////////////////\r\n\r\n/**\r\n * Updates a BPMN element with a list of new properties\r\n *\r\n * @param {Object} context\r\n * @param {djs.model.Base} context.element the element to update\r\n * @param {Object} context.properties a list of properties to set on the element's\r\n *                                    businessObject (the BPMN model element)\r\n *\r\n * @return {Array<djs.model.Base>} the updated element\r\n */\r\nUpdatePropertiesHandler.prototype.execute = function(context) {\r\n\r\n  var element = context.element,\r\n      changed = [ element ],\r\n      translate = this._translate;\r\n\r\n  if (!element) {\r\n    throw new Error(translate('element required'));\r\n  }\r\n\r\n  var elementRegistry = this._elementRegistry,\r\n      ids = this._moddle.ids;\r\n\r\n  var businessObject = element.businessObject,\r\n      properties = unwrapBusinessObjects(context.properties),\r\n      oldProperties = context.oldProperties || getProperties(businessObject, properties);\r\n\r\n  if (isIdChange(properties, businessObject)) {\r\n    ids.unclaim(businessObject[ID]);\r\n\r\n    elementRegistry.updateId(element, properties[ID]);\r\n\r\n    ids.claim(properties[ID], businessObject);\r\n  }\r\n\r\n  // correctly indicate visual changes on default flow updates\r\n  if (DEFAULT_FLOW in properties) {\r\n\r\n    if (properties[DEFAULT_FLOW]) {\r\n      changed.push(elementRegistry.get(properties[DEFAULT_FLOW].id));\r\n    }\r\n\r\n    if (businessObject[DEFAULT_FLOW]) {\r\n      changed.push(elementRegistry.get(businessObject[DEFAULT_FLOW].id));\r\n    }\r\n  }\r\n\r\n  // update properties\r\n  setProperties(businessObject, properties);\r\n\r\n  // store old values\r\n  context.oldProperties = oldProperties;\r\n  context.changed = changed;\r\n\r\n  // indicate changed on objects affected by the update\r\n  return changed;\r\n};\r\n\r\n\r\nUpdatePropertiesHandler.prototype.postExecute = function(context) {\r\n  var element = context.element,\r\n      label = element.label;\r\n\r\n  var text = label && getBusinessObject(label).name;\r\n\r\n  if (!text) {\r\n    return;\r\n  }\r\n\r\n  // get layouted text bounds and resize external\r\n  // external label accordingly\r\n  var newLabelBounds = this._textRenderer.getExternalLabelBounds(label, text);\r\n\r\n  this._modeling.resizeShape(label, newLabelBounds, NULL_DIMENSIONS);\r\n};\r\n\r\n/**\r\n * Reverts the update on a BPMN elements properties.\r\n *\r\n * @param  {Object} context\r\n *\r\n * @return {djs.model.Base} the updated element\r\n */\r\nUpdatePropertiesHandler.prototype.revert = function(context) {\r\n\r\n  var element = context.element,\r\n      properties = context.properties,\r\n      oldProperties = context.oldProperties,\r\n      businessObject = element.businessObject,\r\n      elementRegistry = this._elementRegistry,\r\n      ids = this._moddle.ids;\r\n\r\n  // update properties\r\n  setProperties(businessObject, oldProperties);\r\n\r\n  if (isIdChange(properties, businessObject)) {\r\n    ids.unclaim(properties[ID]);\r\n\r\n    elementRegistry.updateId(element, oldProperties[ID]);\r\n\r\n    ids.claim(oldProperties[ID], businessObject);\r\n  }\r\n\r\n  return context.changed;\r\n};\r\n\r\n\r\nfunction isIdChange(properties, businessObject) {\r\n  return ID in properties && properties[ID] !== businessObject[ID];\r\n}\r\n\r\n\r\nfunction getProperties(businessObject, properties) {\r\n  var propertyNames = keys(properties);\r\n\r\n  return reduce(propertyNames, function(result, key) {\r\n\r\n    // handle DI seperately\r\n    if (key !== DI) {\r\n      result[key] = businessObject.get(key);\r\n    } else {\r\n      result[key] = getDiProperties(businessObject.di, keys(properties.di));\r\n    }\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\n\r\nfunction getDiProperties(di, propertyNames) {\r\n  return reduce(propertyNames, function(result, key) {\r\n    result[key] = di.get(key);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\n\r\nfunction setProperties(businessObject, properties) {\r\n  forEach(properties, function(value, key) {\r\n\r\n    if (key !== DI) {\r\n      businessObject.set(key, value);\r\n    } else {\r\n      // only update, if businessObject.di exists\r\n      if (businessObject.di) {\r\n        setDiProperties(businessObject.di, value);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction setDiProperties(di, properties) {\r\n  forEach(properties, function(value, key) {\r\n    di.set(key, value);\r\n  });\r\n}\r\n\r\n\r\nvar referencePropertyNames = [ 'default' ];\r\n\r\n/**\r\n * Make sure we unwrap the actual business object\r\n * behind diagram element that may have been\r\n * passed as arguments.\r\n *\r\n * @param  {Object} properties\r\n *\r\n * @return {Object} unwrappedProps\r\n */\r\nfunction unwrapBusinessObjects(properties) {\r\n\r\n  var unwrappedProps = assign({}, properties);\r\n\r\n  referencePropertyNames.forEach(function(name) {\r\n    if (name in properties) {\r\n      unwrappedProps[name] = getBusinessObject(unwrappedProps[name]);\r\n    }\r\n  });\r\n\r\n  return unwrappedProps;\r\n}","export default function UpdateSemanticParentHandler(bpmnUpdater) {\r\n  this._bpmnUpdater = bpmnUpdater;\r\n}\r\n\r\nUpdateSemanticParentHandler.$inject = [ 'bpmnUpdater' ];\r\n\r\n\r\nUpdateSemanticParentHandler.prototype.execute = function(context) {\r\n  var dataStoreBo = context.dataStoreBo,\r\n      newSemanticParent = context.newSemanticParent,\r\n      newDiParent = context.newDiParent;\r\n\r\n  context.oldSemanticParent = dataStoreBo.$parent;\r\n  context.oldDiParent = dataStoreBo.di.$parent;\r\n\r\n  // update semantic parent\r\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, newSemanticParent);\r\n\r\n  // update DI parent\r\n  this._bpmnUpdater.updateDiParent(dataStoreBo.di, newDiParent);\r\n};\r\n\r\nUpdateSemanticParentHandler.prototype.revert = function(context) {\r\n  var dataStoreBo = context.dataStoreBo,\r\n      oldSemanticParent = context.oldSemanticParent,\r\n      oldDiParent = context.oldDiParent;\r\n\r\n  // update semantic parent\r\n  this._bpmnUpdater.updateSemanticParent(dataStoreBo, oldSemanticParent);\r\n\r\n  // update DI parent\r\n  this._bpmnUpdater.updateDiParent(dataStoreBo.di, oldDiParent);\r\n};\r\n\r\n","import BehaviorModule from './behavior';\r\nimport RulesModule from '../rules';\r\nimport OrderingModule from '../ordering';\r\nimport ReplaceModule from '../replace';\r\n\r\nimport CommandModule from 'diagram-js/lib/command';\r\nimport TooltipsModule from 'diagram-js/lib/features/tooltips';\r\nimport LabelSupportModule from 'diagram-js/lib/features/label-support';\r\nimport AttachSupportModule from 'diagram-js/lib/features/attach-support';\r\nimport SelectionModule from 'diagram-js/lib/features/selection';\r\nimport ChangeSupportModule from 'diagram-js/lib/features/change-support';\r\nimport SpaceToolModule from 'diagram-js/lib/features/space-tool';\r\n\r\nimport BpmnFactory from './BpmnFactory';\r\nimport BpmnUpdater from './BpmnUpdater';\r\nimport ElementFactory from './ElementFactory';\r\nimport Modeling from './Modeling';\r\nimport BpmnLayouter from './BpmnLayouter';\r\nimport CroppingConnectionDocking from 'diagram-js/lib/layout/CroppingConnectionDocking';\r\n\r\n\r\nexport default {\r\n  __init__: [\r\n    'modeling',\r\n    'bpmnUpdater'\r\n  ],\r\n  __depends__: [\r\n    BehaviorModule,\r\n    RulesModule,\r\n    OrderingModule,\r\n    ReplaceModule,\r\n    CommandModule,\r\n    TooltipsModule,\r\n    LabelSupportModule,\r\n    AttachSupportModule,\r\n    SelectionModule,\r\n    ChangeSupportModule,\r\n    SpaceToolModule\r\n  ],\r\n  bpmnFactory: [ 'type', BpmnFactory ],\r\n  bpmnUpdater: [ 'type', BpmnUpdater ],\r\n  elementFactory: [ 'type', ElementFactory ],\r\n  modeling: [ 'type', Modeling ],\r\n  layouter: [ 'type', BpmnLayouter ],\r\n  connectionDocking: [ 'type', CroppingConnectionDocking ]\r\n};","import { is } from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  getParent\r\n} from './ModelingUtil';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  substractTRBL,\r\n  resizeTRBL\r\n} from 'diagram-js/lib/features/resize/ResizeUtil';\r\n\r\nvar abs = Math.abs;\r\n\r\n\r\nfunction getTRBLResize(oldBounds, newBounds) {\r\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\r\n}\r\n\r\n\r\nvar LANE_PARENTS = [\r\n  'bpmn:Participant',\r\n  'bpmn:Process',\r\n  'bpmn:SubProcess'\r\n];\r\n\r\nexport var LANE_INDENTATION = 30;\r\n\r\n\r\n/**\r\n * Collect all lane shapes in the given paren\r\n *\r\n * @param  {djs.model.Shape} shape\r\n * @param  {Array<djs.model.Base>} [collectedShapes]\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nexport function collectLanes(shape, collectedShapes) {\r\n\r\n  collectedShapes = collectedShapes || [];\r\n\r\n  shape.children.filter(function(s) {\r\n    if (is(s, 'bpmn:Lane')) {\r\n      collectLanes(s, collectedShapes);\r\n\r\n      collectedShapes.push(s);\r\n    }\r\n  });\r\n\r\n  return collectedShapes;\r\n}\r\n\r\n\r\n/**\r\n * Return the lane children of the given element.\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {Array<djs.model.Shape>}\r\n */\r\nexport function getChildLanes(shape) {\r\n  return shape.children.filter(function(c) {\r\n    return is(c, 'bpmn:Lane');\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Return the root element containing the given lane shape\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {djs.model.Shape}\r\n */\r\nexport function getLanesRoot(shape) {\r\n  return getParent(shape, LANE_PARENTS) || shape;\r\n}\r\n\r\n\r\n/**\r\n * Compute the required resize operations for lanes\r\n * adjacent to the given shape, assuming it will be\r\n * resized to the given new bounds.\r\n *\r\n * @param {djs.model.Shape} shape\r\n * @param {Bounds} newBounds\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function computeLanesResize(shape, newBounds) {\r\n\r\n  var rootElement = getLanesRoot(shape);\r\n\r\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [ rootElement ];\r\n\r\n  var allLanes = collectLanes(rootElement, initialShapes),\r\n      shapeTrbl = asTRBL(shape),\r\n      shapeNewTrbl = asTRBL(newBounds),\r\n      trblResize = getTRBLResize(shape, newBounds),\r\n      resizeNeeded = [];\r\n\r\n  allLanes.forEach(function(other) {\r\n\r\n    if (other === shape) {\r\n      return;\r\n    }\r\n\r\n    var topResize = 0,\r\n        rightResize = trblResize.right,\r\n        bottomResize = 0,\r\n        leftResize = trblResize.left;\r\n\r\n    var otherTrbl = asTRBL(other);\r\n\r\n    if (trblResize.top) {\r\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\r\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\r\n      }\r\n\r\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\r\n        topResize = shapeNewTrbl.top - otherTrbl.top;\r\n      }\r\n    }\r\n\r\n    if (trblResize.bottom) {\r\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\r\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\r\n      }\r\n\r\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\r\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\r\n      }\r\n    }\r\n\r\n    if (topResize || rightResize || bottomResize || leftResize) {\r\n\r\n      resizeNeeded.push({\r\n        shape: other,\r\n        newBounds: resizeTRBL(other, {\r\n          top: topResize,\r\n          right: rightResize,\r\n          bottom: bottomResize,\r\n          left: leftResize\r\n        })\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return resizeNeeded;\r\n}","import {\r\n  some\r\n} from 'min-dash';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\n\r\n/**\r\n * Return true if element has any of the given types.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {Array<String>} types\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function isAny(element, types) {\r\n  return some(types, function(t) {\r\n    return is(element, t);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Return the parent of the element with any of the given types.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {String|Array<String>} anyType\r\n *\r\n * @return {djs.model.Base}\r\n */\r\nexport function getParent(element, anyType) {\r\n\r\n  if (typeof anyType === 'string') {\r\n    anyType = [ anyType ];\r\n  }\r\n\r\n  while ((element = element.parent)) {\r\n    if (isAny(element, anyType)) {\r\n      return element;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}","import inherits from 'inherits';\r\n\r\nimport OrderingProvider from 'diagram-js/lib/features/ordering/OrderingProvider';\r\n\r\nimport {\r\n  isAny\r\n} from '../modeling/util/ModelingUtil';\r\n\r\nimport {\r\n  findIndex,\r\n  find\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * a simple ordering provider that makes sure:\r\n *\r\n * (0) labels are rendered always on top\r\n * (1) elements are ordered by a {level} property\r\n */\r\nexport default function BpmnOrderingProvider(eventBus, canvas, translate) {\r\n\r\n  OrderingProvider.call(this, eventBus);\r\n\r\n  var orders = [\r\n    { type: 'bpmn:SubProcess', order: { level: 6 } },\r\n    {\r\n      type: 'bpmn:SequenceFlow',\r\n      order: {\r\n        level: 3,\r\n        containers: [\r\n          'bpmn:Participant',\r\n          'bpmn:FlowElementsContainer'\r\n        ]\r\n      }\r\n    },\r\n    // handle DataAssociation(s) like message flows and render them always on top\r\n    {\r\n      type: 'bpmn:DataAssociation',\r\n      order: {\r\n        level: 9,\r\n        containers: [\r\n          'bpmn:Collaboration',\r\n          'bpmn:Process'\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      type: 'bpmn:MessageFlow', order: {\r\n        level: 9,\r\n        containers: [ 'bpmn:Collaboration' ]\r\n      }\r\n    },\r\n    {\r\n      type: 'bpmn:Association',\r\n      order: {\r\n        level: 6,\r\n        containers: [\r\n          'bpmn:Participant',\r\n          'bpmn:FlowElementsContainer',\r\n          'bpmn:Collaboration'\r\n        ]\r\n      }\r\n    },\r\n    { type: 'bpmn:BoundaryEvent', order: { level: 8 } },\r\n    { type: 'bpmn:FlowElement', order: { level: 5 } },\r\n    { type: 'bpmn:Participant', order: { level: -2 } },\r\n    { type: 'bpmn:Lane', order: { level: -1 } }\r\n  ];\r\n\r\n  function computeOrder(element) {\r\n    if (element.labelTarget) {\r\n      return { level: 10 };\r\n    }\r\n\r\n    var entry = find(orders, function(o) {\r\n      return isAny(element, [ o.type ]);\r\n    });\r\n\r\n    return entry && entry.order || { level: 1 };\r\n  }\r\n\r\n  function getOrder(element) {\r\n\r\n    var order = element.order;\r\n\r\n    if (!order) {\r\n      element.order = order = computeOrder(element);\r\n    }\r\n\r\n    return order;\r\n  }\r\n\r\n  function findActualParent(element, newParent, containers) {\r\n\r\n    var actualParent = newParent;\r\n\r\n    while (actualParent) {\r\n\r\n      if (isAny(actualParent, containers)) {\r\n        break;\r\n      }\r\n\r\n      actualParent = actualParent.parent;\r\n    }\r\n\r\n    if (!actualParent) {\r\n      throw new Error(translate('no parent for {element} in {parent}', {\r\n        element: element.id,\r\n        parent: newParent.id\r\n      }));\r\n    }\r\n\r\n    return actualParent;\r\n  }\r\n\r\n  this.getOrdering = function(element, newParent) {\r\n\r\n    // render labels always on top\r\n    if (element.labelTarget) {\r\n      return {\r\n        parent: canvas.getRootElement(),\r\n        index: -1\r\n      };\r\n    }\r\n\r\n    var elementOrder = getOrder(element);\r\n\r\n\r\n    if (elementOrder.containers) {\r\n      newParent = findActualParent(element, newParent, elementOrder.containers);\r\n    }\r\n\r\n\r\n    var currentIndex = newParent.children.indexOf(element);\r\n\r\n    var insertIndex = findIndex(newParent.children, function(child) {\r\n\r\n      // do not compare with labels, they are created\r\n      // in the wrong order (right after elements) during import and\r\n      // mess up the positioning.\r\n      if (!element.labelTarget && child.labelTarget) {\r\n        return false;\r\n      }\r\n\r\n      return elementOrder.level < getOrder(child).level;\r\n    });\r\n\r\n\r\n    // if the element is already in the child list at\r\n    // a smaller index, we need to adjust the inser index.\r\n    // this takes into account that the element is being removed\r\n    // before being re-inserted\r\n    if (insertIndex !== -1) {\r\n      if (currentIndex !== -1 && currentIndex < insertIndex) {\r\n        insertIndex -= 1;\r\n      }\r\n    }\r\n\r\n    return {\r\n      index: insertIndex,\r\n      parent: newParent\r\n    };\r\n  };\r\n}\r\n\r\nBpmnOrderingProvider.$inject = [ 'eventBus', 'canvas', 'translate' ];\r\n\r\ninherits(BpmnOrderingProvider, OrderingProvider);","import translate from 'diagram-js/lib/i18n/translate';\r\n\r\nimport BpmnOrderingProvider from './BpmnOrderingProvider';\r\n\r\nexport default {\r\n  __depends__: [\r\n    translate\r\n  ],\r\n  __init__: [ 'bpmnOrderingProvider' ],\r\n  bpmnOrderingProvider: [ 'type', BpmnOrderingProvider ]\r\n};","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * A palette provider for BPMN 2.0 elements.\r\n */\r\nexport default function PaletteProvider(\r\n    palette, create, elementFactory,\r\n    spaceTool, lassoTool, handTool,\r\n    globalConnect, translate) {\r\n\r\n  this._palette = palette;\r\n  this._create = create;\r\n  this._elementFactory = elementFactory;\r\n  this._spaceTool = spaceTool;\r\n  this._lassoTool = lassoTool;\r\n  this._handTool = handTool;\r\n  this._globalConnect = globalConnect;\r\n  this._translate = translate;\r\n\r\n  palette.registerProvider(this);\r\n}\r\n\r\nPaletteProvider.$inject = [\r\n  'palette',\r\n  'create',\r\n  'elementFactory',\r\n  'spaceTool',\r\n  'lassoTool',\r\n  'handTool',\r\n  'globalConnect',\r\n  'translate'\r\n];\r\n\r\n\r\nPaletteProvider.prototype.getPaletteEntries = function(element) {\r\n\r\n  var actions = {},\r\n      create = this._create,\r\n      elementFactory = this._elementFactory,\r\n      spaceTool = this._spaceTool,\r\n      lassoTool = this._lassoTool,\r\n      handTool = this._handTool,\r\n      globalConnect = this._globalConnect,\r\n      translate = this._translate;\r\n\r\n  function createAction(type, group, className, title, options) {\r\n\r\n    function createListener(event) {\r\n      var shape = elementFactory.createShape(assign({ type: type }, options));\r\n\r\n      if (options) {\r\n        shape.businessObject.di.isExpanded = options.isExpanded;\r\n      }\r\n\r\n      create.start(event, shape);\r\n    }\r\n\r\n    var shortType = type.replace(/^bpmn:/, '');\r\n\r\n    return {\r\n      group: group,\r\n      className: className,\r\n      title: title || translate('Create {type}', { type: shortType }),\r\n      action: {\r\n        dragstart: createListener,\r\n        click: createListener\r\n      }\r\n    };\r\n  }\r\n\r\n  function createParticipant(event, collapsed) {\r\n    create.start(event, elementFactory.createParticipantShape(collapsed));\r\n  }\r\n\r\n  assign(actions, {\r\n    'hand-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-hand-tool',\r\n      title: translate('Activate the hand tool'),\r\n      action: {\r\n        click: function(event) {\r\n          handTool.activateHand(event);\r\n        }\r\n      }\r\n    },\r\n    'lasso-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-lasso-tool',\r\n      title: translate('Activate the lasso tool'),\r\n      action: {\r\n        click: function(event) {\r\n          lassoTool.activateSelection(event);\r\n        }\r\n      }\r\n    },\r\n    'space-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-space-tool',\r\n      title: translate('Activate the create/remove space tool'),\r\n      action: {\r\n        click: function(event) {\r\n          spaceTool.activateSelection(event);\r\n        }\r\n      }\r\n    },\r\n    'global-connect-tool': {\r\n      group: 'tools',\r\n      className: 'bpmn-icon-connection-multi',\r\n      title: translate('Activate the global connect tool'),\r\n      action: {\r\n        click: function(event) {\r\n          globalConnect.toggle(event);\r\n        }\r\n      }\r\n    },\r\n    'tool-separator': {\r\n      group: 'tools',\r\n      separator: true\r\n    },\r\n    'create.start-event': createAction(\r\n      'bpmn:StartEvent', 'event', 'bpmn-icon-start-event-none'\r\n    ),\r\n    'create.intermediate-event': createAction(\r\n      'bpmn:IntermediateThrowEvent', 'event', 'bpmn-icon-intermediate-event-none',\r\n      translate('Create Intermediate/Boundary Event')\r\n    ),\r\n    'create.end-event': createAction(\r\n      'bpmn:EndEvent', 'event', 'bpmn-icon-end-event-none'\r\n    ),\r\n    'create.exclusive-gateway': createAction(\r\n      'bpmn:ExclusiveGateway', 'gateway', 'bpmn-icon-gateway-none',\r\n      translate('Create Gateway')\r\n    ),\r\n    'create.task': createAction(\r\n      'bpmn:Task', 'activity', 'bpmn-icon-task'\r\n    ),\r\n    'create.data-object': createAction(\r\n      'bpmn:DataObjectReference', 'data-object', 'bpmn-icon-data-object'\r\n    ),\r\n    'create.data-store': createAction(\r\n      'bpmn:DataStoreReference', 'data-store', 'bpmn-icon-data-store'\r\n    ),\r\n    'create.subprocess-expanded': createAction(\r\n      'bpmn:SubProcess', 'activity', 'bpmn-icon-subprocess-expanded',\r\n      translate('Create expanded SubProcess'),\r\n      { isExpanded: true }\r\n    ),\r\n    'create.participant-expanded': {\r\n      group: 'collaboration',\r\n      className: 'bpmn-icon-participant',\r\n      title: translate('Create Pool/Participant'),\r\n      action: {\r\n        dragstart: createParticipant,\r\n        click: createParticipant\r\n      }\r\n    }\r\n  });\r\n\r\n  return actions;\r\n};\r\n","import PaletteModule from 'diagram-js/lib/features/palette';\r\nimport CreateModule from 'diagram-js/lib/features/create';\r\nimport SpaceToolModule from 'diagram-js/lib/features/space-tool';\r\nimport LassoToolModule from 'diagram-js/lib/features/lasso-tool';\r\nimport HandToolModule from 'diagram-js/lib/features/hand-tool';\r\nimport GlobalConnectModule from 'diagram-js/lib/features/global-connect';\r\nimport translate from 'diagram-js/lib/i18n/translate';\r\n\r\nimport PaletteProvider from './PaletteProvider';\r\n\r\nexport default {\r\n  __depends__: [\r\n    PaletteModule,\r\n    CreateModule,\r\n    SpaceToolModule,\r\n    LassoToolModule,\r\n    HandToolModule,\r\n    GlobalConnectModule,\r\n    translate\r\n  ],\r\n  __init__: [ 'paletteProvider' ],\r\n  paletteProvider: [ 'type', PaletteProvider ]\r\n};\r\n","import {\r\n  getBusinessObject,\r\n  is\r\n} from '../../util/ModelUtil';\r\n\r\nimport {\r\n  isEventSubProcess,\r\n  isExpanded\r\n} from '../../util/DiUtil';\r\n\r\nimport {\r\n  isDifferentType\r\n} from './util/TypeUtil';\r\n\r\nimport {\r\n  forEach,\r\n  filter\r\n} from 'min-dash';\r\n\r\nimport * as replaceOptions from '../replace/ReplaceOptions';\r\n\r\n\r\n/**\r\n * This module is an element agnostic replace menu provider for the popup menu.\r\n */\r\nexport default function ReplaceMenuProvider(\r\n    popupMenu, modeling, moddle,\r\n    bpmnReplace, rules, translate) {\r\n\r\n  this._popupMenu = popupMenu;\r\n  this._modeling = modeling;\r\n  this._moddle = moddle;\r\n  this._bpmnReplace = bpmnReplace;\r\n  this._rules = rules;\r\n  this._translate = translate;\r\n\r\n  this.register();\r\n}\r\n\r\nReplaceMenuProvider.$inject = [\r\n  'popupMenu',\r\n  'modeling',\r\n  'moddle',\r\n  'bpmnReplace',\r\n  'rules',\r\n  'translate'\r\n];\r\n\r\n\r\n/**\r\n * Register replace menu provider in the popup menu\r\n */\r\nReplaceMenuProvider.prototype.register = function() {\r\n  this._popupMenu.registerProvider('bpmn-replace', this);\r\n};\r\n\r\n\r\n/**\r\n * Get all entries from replaceOptions for the given element and apply filters\r\n * on them. Get for example only elements, which are different from the current one.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {Array<Object>} a list of menu entry items\r\n */\r\nReplaceMenuProvider.prototype.getEntries = function(element) {\r\n\r\n  var businessObject = element.businessObject;\r\n\r\n  var rules = this._rules;\r\n\r\n  var entries;\r\n\r\n  if (!rules.allowed('shape.replace', { element: element })) {\r\n    return [];\r\n  }\r\n\r\n  var differentType = isDifferentType(element);\r\n\r\n  // start events outside event sub processes\r\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent)) {\r\n\r\n    entries = filter(replaceOptions.START_EVENT, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // expanded/collapsed pools\r\n  if (is(businessObject, 'bpmn:Participant')) {\r\n\r\n    entries = filter(replaceOptions.PARTICIPANT, function(entry) {\r\n      return isExpanded(businessObject) !== entry.target.isExpanded;\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // start events inside event sub processes\r\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\r\n\r\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT, function(entry) {\r\n\r\n      var target = entry.target;\r\n\r\n      var isInterrupting = target.isInterrupting !== false;\r\n\r\n      var isInterruptingEqual = getBusinessObject(element).isInterrupting === isInterrupting;\r\n\r\n      // filters elements which types and event definition are equal but have have different interrupting types\r\n      return differentType(entry) || !differentType(entry) && !isInterruptingEqual;\r\n\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // end events\r\n  if (is(businessObject, 'bpmn:EndEvent')) {\r\n\r\n    entries = filter(replaceOptions.END_EVENT, function(entry) {\r\n      var target = entry.target;\r\n\r\n      // hide cancel end events outside transactions\r\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\r\n        return false;\r\n      }\r\n\r\n      return differentType(entry);\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // boundary events\r\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\r\n\r\n    entries = filter(replaceOptions.BOUNDARY_EVENT, function(entry) {\r\n\r\n      var target = entry.target;\r\n\r\n      if (target.eventDefinition == 'bpmn:CancelEventDefinition' &&\r\n         !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\r\n        return false;\r\n      }\r\n      var cancelActivity = target.cancelActivity !== false;\r\n\r\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\r\n\r\n      return differentType(entry) || !differentType(entry) && !isCancelActivityEqual;\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // intermediate events\r\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') ||\r\n      is(businessObject, 'bpmn:IntermediateThrowEvent')) {\r\n\r\n    entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // gateways\r\n  if (is(businessObject, 'bpmn:Gateway')) {\r\n\r\n    entries = filter(replaceOptions.GATEWAY, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // transactions\r\n  if (is(businessObject, 'bpmn:Transaction')) {\r\n\r\n    entries = filter(replaceOptions.TRANSACTION, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // expanded event sub processes\r\n  if (isEventSubProcess(businessObject) && isExpanded(businessObject)) {\r\n\r\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // expanded sub processes\r\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(businessObject)) {\r\n\r\n    entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // collapsed ad hoc sub processes\r\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && !isExpanded(businessObject)) {\r\n\r\n    entries = filter(replaceOptions.TASK, function(entry) {\r\n\r\n      var target = entry.target;\r\n\r\n      var isTargetSubProcess = target.type === 'bpmn:SubProcess';\r\n\r\n      var isTargetExpanded = target.isExpanded === true;\r\n\r\n      return isDifferentType(element, target) && (!isTargetSubProcess || isTargetExpanded);\r\n    });\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  // sequence flows\r\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\r\n    return this._createSequenceFlowEntries(element, replaceOptions.SEQUENCE_FLOW);\r\n  }\r\n\r\n  // flow nodes\r\n  if (is(businessObject, 'bpmn:FlowNode')) {\r\n    entries = filter(replaceOptions.TASK, differentType);\r\n\r\n    // collapsed SubProcess can not be replaced with itself\r\n    if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(businessObject)) {\r\n      entries = filter(entries, function(entry) {\r\n        return entry.label !== 'Sub Process (collapsed)';\r\n      });\r\n    }\r\n\r\n    return this._createEntries(element, entries);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n\r\n/**\r\n * Get a list of header items for the given element. This includes buttons\r\n * for multi instance markers and for the ad hoc marker.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {Array<Object>} a list of menu entry items\r\n */\r\nReplaceMenuProvider.prototype.getHeaderEntries = function(element) {\r\n\r\n  var headerEntries = [];\r\n\r\n  if (is(element, 'bpmn:Activity') && !isEventSubProcess(element)) {\r\n    headerEntries = headerEntries.concat(this._getLoopEntries(element));\r\n  }\r\n\r\n  if (is(element, 'bpmn:SubProcess') &&\r\n      !is(element, 'bpmn:Transaction') &&\r\n      !isEventSubProcess(element)) {\r\n    headerEntries.push(this._getAdHocEntry(element));\r\n  }\r\n\r\n  return headerEntries;\r\n};\r\n\r\n\r\n/**\r\n * Creates an array of menu entry objects for a given element and filters the replaceOptions\r\n * according to a filter function.\r\n *\r\n * @param  {djs.model.Base} element\r\n * @param  {Object} replaceOptions\r\n *\r\n * @return {Array<Object>} a list of menu items\r\n */\r\nReplaceMenuProvider.prototype._createEntries = function(element, replaceOptions) {\r\n  var menuEntries = [];\r\n\r\n  var self = this;\r\n\r\n  forEach(replaceOptions, function(definition) {\r\n    var entry = self._createMenuEntry(definition, element);\r\n\r\n    menuEntries.push(entry);\r\n  });\r\n\r\n  return menuEntries;\r\n};\r\n\r\n/**\r\n * Creates an array of menu entry objects for a given sequence flow.\r\n *\r\n * @param  {djs.model.Base} element\r\n * @param  {Object} replaceOptions\r\n\r\n * @return {Array<Object>} a list of menu items\r\n */\r\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function(element, replaceOptions) {\r\n\r\n  var businessObject = getBusinessObject(element);\r\n\r\n  var menuEntries = [];\r\n\r\n  var modeling = this._modeling,\r\n      moddle = this._moddle;\r\n\r\n  var self = this;\r\n\r\n  forEach(replaceOptions, function(entry) {\r\n\r\n    switch (entry.actionName) {\r\n    case 'replace-with-default-flow':\r\n      if (businessObject.sourceRef.default !== businessObject &&\r\n            (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\r\n             is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\r\n             is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\r\n             is(businessObject.sourceRef, 'bpmn:Activity'))) {\r\n\r\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          modeling.updateProperties(element.source, { default: businessObject });\r\n        }));\r\n      }\r\n      break;\r\n    case 'replace-with-conditional-flow':\r\n      if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\r\n\r\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          var conditionExpression = moddle.create('bpmn:FormalExpression', { body: '' });\r\n\r\n          modeling.updateProperties(element, { conditionExpression: conditionExpression });\r\n        }));\r\n      }\r\n      break;\r\n    default:\r\n      // default flows\r\n      if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\r\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          modeling.updateProperties(element, { conditionExpression: undefined });\r\n        }));\r\n      }\r\n      // conditional flows\r\n      if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\r\n           is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\r\n           is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\r\n           is(businessObject.sourceRef, 'bpmn:Activity')) &&\r\n           businessObject.sourceRef.default === businessObject) {\r\n\r\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\r\n          modeling.updateProperties(element.source, { default: undefined });\r\n        }));\r\n      }\r\n    }\r\n  });\r\n\r\n  return menuEntries;\r\n};\r\n\r\n\r\n/**\r\n * Creates and returns a single menu entry item.\r\n *\r\n * @param  {Object} definition a single replace options definition object\r\n * @param  {djs.model.Base} element\r\n * @param  {Function} [action] an action callback function which gets called when\r\n *                             the menu entry is being triggered.\r\n *\r\n * @return {Object} menu entry item\r\n */\r\nReplaceMenuProvider.prototype._createMenuEntry = function(definition, element, action) {\r\n  var translate = this._translate;\r\n  var replaceElement = this._bpmnReplace.replaceElement;\r\n\r\n  var replaceAction = function() {\r\n    return replaceElement(element, definition.target);\r\n  };\r\n\r\n  action = action || replaceAction;\r\n\r\n  var menuEntry = {\r\n    label: translate(definition.label),\r\n    className: definition.className,\r\n    id: definition.actionName,\r\n    action: action\r\n  };\r\n\r\n  return menuEntry;\r\n};\r\n\r\n/**\r\n * Get a list of menu items containing buttons for multi instance markers\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Array<Object>} a list of menu items\r\n */\r\nReplaceMenuProvider.prototype._getLoopEntries = function(element) {\r\n\r\n  var self = this;\r\n  var translate = this._translate;\r\n\r\n  function toggleLoopEntry(event, entry) {\r\n    var loopCharacteristics;\r\n\r\n    if (entry.active) {\r\n      loopCharacteristics = undefined;\r\n    } else {\r\n      loopCharacteristics = self._moddle.create(entry.options.loopCharacteristics);\r\n\r\n      if (entry.options.isSequential) {\r\n        loopCharacteristics.isSequential = entry.options.isSequential;\r\n      }\r\n    }\r\n    self._modeling.updateProperties(element, { loopCharacteristics: loopCharacteristics });\r\n  }\r\n\r\n  var businessObject = getBusinessObject(element),\r\n      loopCharacteristics = businessObject.loopCharacteristics;\r\n\r\n  var isSequential,\r\n      isLoop,\r\n      isParallel;\r\n\r\n  if (loopCharacteristics) {\r\n    isSequential = loopCharacteristics.isSequential;\r\n    isLoop = loopCharacteristics.isSequential === undefined;\r\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\r\n  }\r\n\r\n\r\n  var loopEntries = [\r\n    {\r\n      id: 'toggle-parallel-mi',\r\n      className: 'bpmn-icon-parallel-mi-marker',\r\n      title: translate('Parallel Multi Instance'),\r\n      active: isParallel,\r\n      action: toggleLoopEntry,\r\n      options: {\r\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\r\n        isSequential: false\r\n      }\r\n    },\r\n    {\r\n      id: 'toggle-sequential-mi',\r\n      className: 'bpmn-icon-sequential-mi-marker',\r\n      title: translate('Sequential Multi Instance'),\r\n      active: isSequential,\r\n      action: toggleLoopEntry,\r\n      options: {\r\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\r\n        isSequential: true\r\n      }\r\n    },\r\n    {\r\n      id: 'toggle-loop',\r\n      className: 'bpmn-icon-loop-marker',\r\n      title: translate('Loop'),\r\n      active: isLoop,\r\n      action: toggleLoopEntry,\r\n      options: {\r\n        loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\r\n      }\r\n    }\r\n  ];\r\n  return loopEntries;\r\n};\r\n\r\n\r\n/**\r\n * Get the menu items containing a button for the ad hoc marker\r\n *\r\n * @param  {djs.model.Base} element\r\n *\r\n * @return {Object} a menu item\r\n */\r\nReplaceMenuProvider.prototype._getAdHocEntry = function(element) {\r\n  var translate = this._translate;\r\n  var businessObject = getBusinessObject(element);\r\n\r\n  var isAdHoc = is(businessObject, 'bpmn:AdHocSubProcess');\r\n\r\n  var replaceElement = this._bpmnReplace.replaceElement;\r\n\r\n  var adHocEntry = {\r\n    id: 'toggle-adhoc',\r\n    className: 'bpmn-icon-ad-hoc-marker',\r\n    title: translate('Ad-hoc'),\r\n    active: isAdHoc,\r\n    action: function(event, entry) {\r\n      if (isAdHoc) {\r\n        return replaceElement(element, { type: 'bpmn:SubProcess' });\r\n      } else {\r\n        return replaceElement(element, { type: 'bpmn:AdHocSubProcess' });\r\n      }\r\n    }\r\n  };\r\n\r\n  return adHocEntry;\r\n};\r\n","import PopupMenuModule from 'diagram-js/lib/features/popup-menu';\r\nimport ReplaceModule from '../replace';\r\n\r\nimport ReplaceMenuProvider from './ReplaceMenuProvider';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    PopupMenuModule,\r\n    ReplaceModule\r\n  ],\r\n  __init__: [ 'replaceMenuProvider' ],\r\n  replaceMenuProvider: [ 'type', ReplaceMenuProvider ]\r\n};","import {\r\n  getBusinessObject\r\n} from '../../../util/ModelUtil';\r\n\r\nimport {\r\n  isExpanded\r\n} from '../../../util/DiUtil';\r\n\r\n\r\n/**\r\n * Returns true, if an element is from a different type\r\n * than a target definition. Takes into account the type,\r\n * event definition type and triggeredByEvent property.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function isDifferentType(element) {\r\n\r\n  return function(entry) {\r\n    var target = entry.target;\r\n\r\n    var businessObject = getBusinessObject(element),\r\n        eventDefinition = businessObject.eventDefinitions && businessObject.eventDefinitions[0];\r\n\r\n    var isTypeEqual = businessObject.$type === target.type;\r\n\r\n    var isEventDefinitionEqual = (\r\n      (eventDefinition && eventDefinition.$type) === target.eventDefinitionType\r\n    );\r\n\r\n    var isTriggeredByEventEqual = (\r\n      businessObject.triggeredByEvent === target.triggeredByEvent\r\n    );\r\n\r\n    var isExpandedEqual = (\r\n      target.isExpanded === undefined ||\r\n      target.isExpanded === isExpanded(businessObject)\r\n    );\r\n\r\n    return !isTypeEqual || !isEventDefinitionEqual || !isTriggeredByEventEqual || !isExpandedEqual;\r\n  };\r\n}","import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport cssEscape from 'css.escape';\r\n\r\nimport {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\nimport {\r\n  attr as svgAttr\r\n} from 'tiny-svg';\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\n\r\nexport default function BpmnReplacePreview(\r\n    eventBus, elementRegistry, elementFactory,\r\n    canvas, previewSupport) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  /**\r\n   * Replace the visuals of all elements in the context which can be replaced\r\n   *\r\n   * @param  {Object} context\r\n   */\r\n  function replaceVisual(context) {\r\n\r\n    var replacements = context.canExecute.replacements;\r\n\r\n    forEach(replacements, function(replacement) {\r\n\r\n      var id = replacement.oldElementId;\r\n\r\n      var newElement = {\r\n        type: replacement.newElementType\r\n      };\r\n\r\n      // if the visual of the element is already replaced\r\n      if (context.visualReplacements[id]) {\r\n        return;\r\n      }\r\n\r\n      var element = elementRegistry.get(id);\r\n\r\n      assign(newElement, { x: element.x, y: element.y });\r\n\r\n      // create a temporary shape\r\n      var tempShape = elementFactory.createShape(newElement);\r\n\r\n      canvas.addShape(tempShape, element.parent);\r\n\r\n      // select the original SVG element related to the element and hide it\r\n      var gfx = domQuery('[data-element-id=\"' + cssEscape(element.id) + '\"]', context.dragGroup);\r\n\r\n      if (gfx) {\r\n        svgAttr(gfx, { display: 'none' });\r\n      }\r\n\r\n      // clone the gfx of the temporary shape and add it to the drag group\r\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\r\n\r\n      context.visualReplacements[id] = dragger;\r\n\r\n      canvas.removeShape(tempShape);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restore the original visuals of the previously replaced elements\r\n   *\r\n   * @param  {Object} context\r\n   */\r\n  function restoreVisual(context) {\r\n\r\n    var visualReplacements = context.visualReplacements;\r\n\r\n    forEach(visualReplacements, function(dragger, id) {\r\n\r\n      var originalGfx = domQuery('[data-element-id=\"' + cssEscape(id) + '\"]', context.dragGroup);\r\n\r\n      if (originalGfx) {\r\n        svgAttr(originalGfx, { display: 'inline' });\r\n      }\r\n\r\n      dragger.remove();\r\n\r\n      if (visualReplacements[id]) {\r\n        delete visualReplacements[id];\r\n      }\r\n    });\r\n  }\r\n\r\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        canExecute = context.canExecute;\r\n\r\n    if (!context.visualReplacements) {\r\n      context.visualReplacements = {};\r\n    }\r\n\r\n    if (canExecute.replacements) {\r\n      replaceVisual(context);\r\n    } else {\r\n      restoreVisual(context);\r\n    }\r\n  });\r\n}\r\n\r\nBpmnReplacePreview.$inject = [\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'elementFactory',\r\n  'canvas',\r\n  'previewSupport'\r\n];\r\n\r\ninherits(BpmnReplacePreview, CommandInterceptor);","import PreviewSupportModule from 'diagram-js/lib/features/preview-support';\r\n\r\nimport BpmnReplacePreview from './BpmnReplacePreview';\r\n\r\nexport default {\r\n  __depends__: [\r\n    PreviewSupportModule\r\n  ],\r\n  __init__: [ 'bpmnReplacePreview' ],\r\n  bpmnReplacePreview: [ 'type', BpmnReplacePreview ]\r\n};\r\n","import {\r\n  pick,\r\n  assign,\r\n  filter,\r\n  has\r\n} from 'min-dash';\r\n\r\nimport {\r\n  is,\r\n  getBusinessObject\r\n} from '../../util/ModelUtil';\r\n\r\nimport {\r\n  isAny\r\n} from '../modeling/util/ModelingUtil';\r\n\r\nimport {\r\n  isExpanded,\r\n  isEventSubProcess\r\n} from '../../util/DiUtil';\r\n\r\nimport {\r\n  getProperties,\r\n  IGNORED_PROPERTIES\r\n} from '../../util/model/ModelCloneUtils';\r\n\r\nimport ModelCloneHelper from '../../util/model/ModelCloneHelper';\r\n\r\nvar CUSTOM_PROPERTIES = [\r\n  'cancelActivity',\r\n  'instantiate',\r\n  'eventGatewayType',\r\n  'triggeredByEvent',\r\n  'isInterrupting'\r\n];\r\n\r\n\r\nfunction toggeling(element, target) {\r\n\r\n  var oldCollapsed = (\r\n    element && has(element, 'collapsed') ? element.collapsed : !isExpanded(element)\r\n  );\r\n\r\n  var targetCollapsed;\r\n\r\n  if (target && (has(target, 'collapsed') || has(target, 'isExpanded'))) {\r\n    // property is explicitly set so use it\r\n    targetCollapsed = (\r\n      has(target, 'collapsed') ? target.collapsed : !target.isExpanded\r\n    );\r\n  } else {\r\n    // keep old state\r\n    targetCollapsed = oldCollapsed;\r\n  }\r\n\r\n  if (oldCollapsed !== targetCollapsed) {\r\n    element.collapsed = oldCollapsed;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n/**\r\n * This module takes care of replacing BPMN elements\r\n */\r\nexport default function BpmnReplace(\r\n    bpmnFactory, replace, selection,\r\n    modeling, eventBus) {\r\n\r\n  var helper = new ModelCloneHelper(eventBus, bpmnFactory);\r\n\r\n  /**\r\n   * Prepares a new business object for the replacement element\r\n   * and triggers the replace operation.\r\n   *\r\n   * @param  {djs.model.Base} element\r\n   * @param  {Object} target\r\n   * @param  {Object} [hints]\r\n   *\r\n   * @return {djs.model.Base} the newly created element\r\n   */\r\n  function replaceElement(element, target, hints) {\r\n\r\n    hints = hints || {};\r\n\r\n    var type = target.type,\r\n        oldBusinessObject = element.businessObject;\r\n\r\n    if (isSubProcess(oldBusinessObject)) {\r\n      if (type === 'bpmn:SubProcess') {\r\n        if (toggeling(element, target)) {\r\n          // expanding or collapsing process\r\n          modeling.toggleCollapse(element);\r\n\r\n          return element;\r\n        }\r\n      }\r\n    }\r\n\r\n    var newBusinessObject = bpmnFactory.create(type);\r\n\r\n    var newElement = {\r\n      type: type,\r\n      businessObject: newBusinessObject\r\n    };\r\n\r\n    var elementProps = getProperties(oldBusinessObject.$descriptor),\r\n        newElementProps = getProperties(newBusinessObject.$descriptor, true),\r\n        copyProps = intersection(elementProps, newElementProps);\r\n\r\n    // initialize special properties defined in target definition\r\n    assign(newBusinessObject, pick(target, CUSTOM_PROPERTIES));\r\n\r\n    var properties = filter(copyProps, function(property) {\r\n      var propName = property.replace(/bpmn:/, '');\r\n\r\n      // copying event definitions, unless we replace\r\n      if (propName === 'eventDefinitions') {\r\n        return hasEventDefinition(element, target.eventDefinitionType);\r\n      }\r\n\r\n      // retain loop characteristics if the target element\r\n      // is not an event sub process\r\n      if (propName === 'loopCharacteristics') {\r\n        return !isEventSubProcess(newBusinessObject);\r\n      }\r\n\r\n      // so the applied properties from 'target' don't get lost\r\n      if (property in newBusinessObject) {\r\n        return false;\r\n      }\r\n\r\n      if (propName === 'processRef' && target.isExpanded === false) {\r\n        return false;\r\n      }\r\n\r\n      if (propName === 'triggeredByEvent') {\r\n        return false;\r\n      }\r\n\r\n      return IGNORED_PROPERTIES.indexOf(propName) === -1;\r\n    });\r\n\r\n    newBusinessObject = helper.clone(oldBusinessObject, newBusinessObject, properties);\r\n\r\n    // initialize custom BPMN extensions\r\n    if (target.eventDefinitionType) {\r\n\r\n      // only initialize with new eventDefinition\r\n      // if we did not set an event definition yet,\r\n      // i.e. because we cloned it\r\n      if (!hasEventDefinition(newBusinessObject, target.eventDefinitionType)) {\r\n        newElement.eventDefinitionType = target.eventDefinitionType;\r\n      }\r\n    }\r\n\r\n    if (is(oldBusinessObject, 'bpmn:Activity')) {\r\n\r\n      if (isSubProcess(oldBusinessObject)) {\r\n        // no toggeling, so keep old state\r\n        newElement.isExpanded = isExpanded(oldBusinessObject);\r\n      }\r\n      // else if property is explicitly set, use it\r\n      else if (target && has(target, 'isExpanded')) {\r\n        newElement.isExpanded = target.isExpanded;\r\n      }\r\n\r\n      // TODO: need also to respect min/max Size\r\n      // copy size, from an expanded subprocess to an expanded alternative subprocess\r\n      // except bpmn:Task, because Task is always expanded\r\n      if ((isExpanded(oldBusinessObject) && !is(oldBusinessObject, 'bpmn:Task')) && newElement.isExpanded) {\r\n        newElement.width = element.width;\r\n        newElement.height = element.height;\r\n      }\r\n    }\r\n\r\n    // remove children if not expanding sub process\r\n    if (isSubProcess(oldBusinessObject) && !isSubProcess(newBusinessObject)) {\r\n      hints.moveChildren = false;\r\n    }\r\n\r\n    // transform collapsed/expanded pools\r\n    if (is(oldBusinessObject, 'bpmn:Participant')) {\r\n\r\n      // create expanded pool\r\n      if (target.isExpanded === true) {\r\n        newBusinessObject.processRef = bpmnFactory.create('bpmn:Process');\r\n      } else {\r\n        // remove children when transforming to collapsed pool\r\n        hints.moveChildren = false;\r\n      }\r\n\r\n      // apply same size\r\n      newElement.width = element.width;\r\n      newElement.height = element.height;\r\n    }\r\n\r\n    newBusinessObject.name = oldBusinessObject.name;\r\n\r\n    // retain default flow's reference between inclusive <-> exclusive gateways and activities\r\n    if (\r\n      isAny(oldBusinessObject, [\r\n        'bpmn:ExclusiveGateway',\r\n        'bpmn:InclusiveGateway',\r\n        'bpmn:Activity'\r\n      ]) &&\r\n      isAny(newBusinessObject, [\r\n        'bpmn:ExclusiveGateway',\r\n        'bpmn:InclusiveGateway',\r\n        'bpmn:Activity'\r\n      ])\r\n    ) {\r\n      newBusinessObject.default = oldBusinessObject.default;\r\n    }\r\n\r\n    if ('fill' in oldBusinessObject.di || 'stroke' in oldBusinessObject.di) {\r\n      assign(newElement, { colors: pick(oldBusinessObject.di, [ 'fill', 'stroke' ]) });\r\n    }\r\n\r\n    newElement = replace.replaceElement(element, newElement, hints);\r\n\r\n    if (hints.select !== false) {\r\n      selection.select(newElement);\r\n    }\r\n\r\n    return newElement;\r\n  }\r\n\r\n  this.replaceElement = replaceElement;\r\n}\r\n\r\nBpmnReplace.$inject = [\r\n  'bpmnFactory',\r\n  'replace',\r\n  'selection',\r\n  'modeling',\r\n  'eventBus'\r\n];\r\n\r\n\r\nfunction isSubProcess(bo) {\r\n  return is(bo, 'bpmn:SubProcess');\r\n}\r\n\r\nfunction hasEventDefinition(element, type) {\r\n\r\n  var bo = getBusinessObject(element);\r\n\r\n  return type && bo.get('eventDefinitions').some(function(definition) {\r\n    return is(definition, type);\r\n  });\r\n}\r\n\r\n/**\r\n * Compute intersection between two arrays.\r\n */\r\nfunction intersection(a1, a2) {\r\n  return a1.filter(function(el) {\r\n    return a2.indexOf(el) !== -1;\r\n  });\r\n}","export var START_EVENT = [\r\n  {\r\n    label: 'Start Event',\r\n    actionName: 'replace-with-none-start',\r\n    className: 'bpmn-icon-start-event-none',\r\n    target: {\r\n      type: 'bpmn:StartEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Intermediate Throw Event',\r\n    actionName: 'replace-with-none-intermediate-throwing',\r\n    className: 'bpmn-icon-intermediate-event-none',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'End Event',\r\n    actionName: 'replace-with-none-end',\r\n    className: 'bpmn-icon-end-event-none',\r\n    target: {\r\n      type: 'bpmn:EndEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Start Event',\r\n    actionName: 'replace-with-message-start',\r\n    className: 'bpmn-icon-start-event-message',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Start Event',\r\n    actionName: 'replace-with-timer-start',\r\n    className: 'bpmn-icon-start-event-timer',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Start Event',\r\n    actionName: 'replace-with-conditional-start',\r\n    className: 'bpmn-icon-start-event-condition',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Start Event',\r\n    actionName: 'replace-with-signal-start',\r\n    className: 'bpmn-icon-start-event-signal',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  }\r\n];\r\n\r\nexport var INTERMEDIATE_EVENT = [\r\n  {\r\n    label: 'Start Event',\r\n    actionName: 'replace-with-none-start',\r\n    className: 'bpmn-icon-start-event-none',\r\n    target: {\r\n      type: 'bpmn:StartEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Intermediate Throw Event',\r\n    actionName: 'replace-with-none-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-none',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'End Event',\r\n    actionName: 'replace-with-none-end',\r\n    className: 'bpmn-icon-end-event-none',\r\n    target: {\r\n      type: 'bpmn:EndEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Intermediate Catch Event',\r\n    actionName: 'replace-with-message-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-message',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Intermediate Throw Event',\r\n    actionName: 'replace-with-message-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-message',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Intermediate Catch Event',\r\n    actionName: 'replace-with-timer-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-timer',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Intermediate Throw Event',\r\n    actionName: 'replace-with-escalation-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-escalation',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Intermediate Catch Event',\r\n    actionName: 'replace-with-conditional-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-condition',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Link Intermediate Catch Event',\r\n    actionName: 'replace-with-link-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-link',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:LinkEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Link Intermediate Throw Event',\r\n    actionName: 'replace-with-link-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-link',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:LinkEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation Intermediate Throw Event',\r\n    actionName: 'replace-with-compensation-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-compensation',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Intermediate Catch Event',\r\n    actionName: 'replace-with-signal-intermediate-catch',\r\n    className: 'bpmn-icon-intermediate-event-catch-signal',\r\n    target: {\r\n      type: 'bpmn:IntermediateCatchEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Intermediate Throw Event',\r\n    actionName: 'replace-with-signal-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-throw-signal',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  }\r\n];\r\n\r\nexport var END_EVENT = [\r\n  {\r\n    label: 'Start Event',\r\n    actionName: 'replace-with-none-start',\r\n    className: 'bpmn-icon-start-event-none',\r\n    target: {\r\n      type: 'bpmn:StartEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Intermediate Throw Event',\r\n    actionName: 'replace-with-none-intermediate-throw',\r\n    className: 'bpmn-icon-intermediate-event-none',\r\n    target: {\r\n      type: 'bpmn:IntermediateThrowEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'End Event',\r\n    actionName: 'replace-with-none-end',\r\n    className: 'bpmn-icon-end-event-none',\r\n    target: {\r\n      type: 'bpmn:EndEvent'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message End Event',\r\n    actionName: 'replace-with-message-end',\r\n    className: 'bpmn-icon-end-event-message',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation End Event',\r\n    actionName: 'replace-with-escalation-end',\r\n    className: 'bpmn-icon-end-event-escalation',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Error End Event',\r\n    actionName: 'replace-with-error-end',\r\n    className: 'bpmn-icon-end-event-error',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Cancel End Event',\r\n    actionName: 'replace-with-cancel-end',\r\n    className: 'bpmn-icon-end-event-cancel',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:CancelEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation End Event',\r\n    actionName: 'replace-with-compensation-end',\r\n    className: 'bpmn-icon-end-event-compensation',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal End Event',\r\n    actionName: 'replace-with-signal-end',\r\n    className: 'bpmn-icon-end-event-signal',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Terminate End Event',\r\n    actionName: 'replace-with-terminate-end',\r\n    className: 'bpmn-icon-end-event-terminate',\r\n    target: {\r\n      type: 'bpmn:EndEvent',\r\n      eventDefinitionType: 'bpmn:TerminateEventDefinition'\r\n    }\r\n  }\r\n];\r\n\r\nexport var GATEWAY = [\r\n  {\r\n    label: 'Exclusive Gateway',\r\n    actionName: 'replace-with-exclusive-gateway',\r\n    className: 'bpmn-icon-gateway-xor',\r\n    target: {\r\n      type: 'bpmn:ExclusiveGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Parallel Gateway',\r\n    actionName: 'replace-with-parallel-gateway',\r\n    className: 'bpmn-icon-gateway-parallel',\r\n    target: {\r\n      type: 'bpmn:ParallelGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Inclusive Gateway',\r\n    actionName: 'replace-with-inclusive-gateway',\r\n    className: 'bpmn-icon-gateway-or',\r\n    target: {\r\n      type: 'bpmn:InclusiveGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Complex Gateway',\r\n    actionName: 'replace-with-complex-gateway',\r\n    className: 'bpmn-icon-gateway-complex',\r\n    target: {\r\n      type: 'bpmn:ComplexGateway'\r\n    }\r\n  },\r\n  {\r\n    label: 'Event based Gateway',\r\n    actionName: 'replace-with-event-based-gateway',\r\n    className: 'bpmn-icon-gateway-eventbased',\r\n    target: {\r\n      type: 'bpmn:EventBasedGateway',\r\n      instantiate: false,\r\n      eventGatewayType: 'Exclusive'\r\n    }\r\n  }\r\n  // Gateways deactivated until https://github.com/bpmn-io/bpmn-js/issues/194\r\n  // {\r\n  //   label: 'Event based instantiating Gateway',\r\n  //   actionName: 'replace-with-exclusive-event-based-gateway',\r\n  //   className: 'bpmn-icon-exclusive-event-based',\r\n  //   target: {\r\n  //     type: 'bpmn:EventBasedGateway'\r\n  //   },\r\n  //   options: {\r\n  //     businessObject: { instantiate: true, eventGatewayType: 'Exclusive' }\r\n  //   }\r\n  // },\r\n  // {\r\n  //   label: 'Parallel Event based instantiating Gateway',\r\n  //   actionName: 'replace-with-parallel-event-based-instantiate-gateway',\r\n  //   className: 'bpmn-icon-parallel-event-based-instantiate-gateway',\r\n  //   target: {\r\n  //     type: 'bpmn:EventBasedGateway'\r\n  //   },\r\n  //   options: {\r\n  //     businessObject: { instantiate: true, eventGatewayType: 'Parallel' }\r\n  //   }\r\n  // }\r\n];\r\n\r\nexport var SUBPROCESS_EXPANDED = [\r\n  {\r\n    label: 'Transaction',\r\n    actionName: 'replace-with-transaction',\r\n    className: 'bpmn-icon-transaction',\r\n    target: {\r\n      type: 'bpmn:Transaction',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Event Sub Process',\r\n    actionName: 'replace-with-event-subprocess',\r\n    className: 'bpmn-icon-event-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      triggeredByEvent: true,\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Sub Process (collapsed)',\r\n    actionName: 'replace-with-collapsed-subprocess',\r\n    className: 'bpmn-icon-subprocess-collapsed',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: false\r\n    }\r\n  }\r\n];\r\n\r\nexport var TRANSACTION = [\r\n  {\r\n    label: 'Sub Process',\r\n    actionName: 'replace-with-subprocess',\r\n    className: 'bpmn-icon-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Event Sub Process',\r\n    actionName: 'replace-with-event-subprocess',\r\n    className: 'bpmn-icon-event-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      triggeredByEvent: true,\r\n      isExpanded: true\r\n    }\r\n  }\r\n];\r\n\r\nexport var EVENT_SUB_PROCESS = [\r\n  {\r\n    label: 'Sub Process',\r\n    actionName: 'replace-with-subprocess',\r\n    className: 'bpmn-icon-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Transaction',\r\n    actionName: 'replace-with-transaction',\r\n    className: 'bpmn-icon-transaction',\r\n    target: {\r\n      type: 'bpmn:Transaction',\r\n      isExpanded: true\r\n    }\r\n  }\r\n];\r\n\r\nexport var TASK = [\r\n  {\r\n    label: 'Task',\r\n    actionName: 'replace-with-task',\r\n    className: 'bpmn-icon-task',\r\n    target: {\r\n      type: 'bpmn:Task'\r\n    }\r\n  },\r\n  {\r\n    label: 'Send Task',\r\n    actionName: 'replace-with-send-task',\r\n    className: 'bpmn-icon-send',\r\n    target: {\r\n      type: 'bpmn:SendTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Receive Task',\r\n    actionName: 'replace-with-receive-task',\r\n    className: 'bpmn-icon-receive',\r\n    target: {\r\n      type: 'bpmn:ReceiveTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'User Task',\r\n    actionName: 'replace-with-user-task',\r\n    className: 'bpmn-icon-user',\r\n    target: {\r\n      type: 'bpmn:UserTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Manual Task',\r\n    actionName: 'replace-with-manual-task',\r\n    className: 'bpmn-icon-manual',\r\n    target: {\r\n      type: 'bpmn:ManualTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Business Rule Task',\r\n    actionName: 'replace-with-rule-task',\r\n    className: 'bpmn-icon-business-rule',\r\n    target: {\r\n      type: 'bpmn:BusinessRuleTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Service Task',\r\n    actionName: 'replace-with-service-task',\r\n    className: 'bpmn-icon-service',\r\n    target: {\r\n      type: 'bpmn:ServiceTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Script Task',\r\n    actionName: 'replace-with-script-task',\r\n    className: 'bpmn-icon-script',\r\n    target: {\r\n      type: 'bpmn:ScriptTask'\r\n    }\r\n  },\r\n  {\r\n    label: 'Call Activity',\r\n    actionName: 'replace-with-call-activity',\r\n    className: 'bpmn-icon-call-activity',\r\n    target: {\r\n      type: 'bpmn:CallActivity'\r\n    }\r\n  },\r\n  {\r\n    label: 'Sub Process (collapsed)',\r\n    actionName: 'replace-with-collapsed-subprocess',\r\n    className: 'bpmn-icon-subprocess-collapsed',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Sub Process (expanded)',\r\n    actionName: 'replace-with-expanded-subprocess',\r\n    className: 'bpmn-icon-subprocess-expanded',\r\n    target: {\r\n      type: 'bpmn:SubProcess',\r\n      isExpanded: true\r\n    }\r\n  }\r\n];\r\n\r\nexport var BOUNDARY_EVENT = [\r\n  {\r\n    label: 'Message Boundary Event',\r\n    actionName: 'replace-with-message-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-message',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Boundary Event',\r\n    actionName: 'replace-with-timer-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-timer',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Boundary Event',\r\n    actionName: 'replace-with-escalation-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-escalation',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Boundary Event',\r\n    actionName: 'replace-with-conditional-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-condition',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Error Boundary Event',\r\n    actionName: 'replace-with-error-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-error',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Cancel Boundary Event',\r\n    actionName: 'replace-with-cancel-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-cancel',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:CancelEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Boundary Event',\r\n    actionName: 'replace-with-signal-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-signal',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation Boundary Event',\r\n    actionName: 'replace-with-compensation-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-compensation',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-message-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-message',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-timer-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-timer',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-escalation-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-escalation',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-conditional-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-condition',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Boundary Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-signal-boundary',\r\n    className: 'bpmn-icon-intermediate-event-catch-non-interrupting-signal',\r\n    target: {\r\n      type: 'bpmn:BoundaryEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition',\r\n      cancelActivity: false\r\n    }\r\n  }\r\n];\r\n\r\nexport var EVENT_SUB_PROCESS_START_EVENT = [\r\n  {\r\n    label: 'Message Start Event',\r\n    actionName: 'replace-with-message-start',\r\n    className: 'bpmn-icon-start-event-message',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Start Event',\r\n    actionName: 'replace-with-timer-start',\r\n    className: 'bpmn-icon-start-event-timer',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Start Event',\r\n    actionName: 'replace-with-conditional-start',\r\n    className: 'bpmn-icon-start-event-condition',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Start Event',\r\n    actionName: 'replace-with-signal-start',\r\n    className: 'bpmn-icon-start-event-signal',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Error Start Event',\r\n    actionName: 'replace-with-error-start',\r\n    className: 'bpmn-icon-start-event-error',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ErrorEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Start Event',\r\n    actionName: 'replace-with-escalation-start',\r\n    className: 'bpmn-icon-start-event-escalation',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Compensation Start Event',\r\n    actionName: 'replace-with-compensation-start',\r\n    className: 'bpmn-icon-start-event-compensation',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:CompensateEventDefinition'\r\n    }\r\n  },\r\n  {\r\n    label: 'Message Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-message-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-message',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:MessageEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Timer Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-timer-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-timer',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:TimerEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Conditional Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-conditional-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-condition',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:ConditionalEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Signal Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-signal-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-signal',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:SignalEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  },\r\n  {\r\n    label: 'Escalation Start Event (non-interrupting)',\r\n    actionName: 'replace-with-non-interrupting-escalation-start',\r\n    className: 'bpmn-icon-start-event-non-interrupting-escalation',\r\n    target: {\r\n      type: 'bpmn:StartEvent',\r\n      eventDefinitionType: 'bpmn:EscalationEventDefinition',\r\n      isInterrupting: false\r\n    }\r\n  }\r\n];\r\n\r\nexport var SEQUENCE_FLOW = [\r\n  {\r\n    label: 'Sequence Flow',\r\n    actionName: 'replace-with-sequence-flow',\r\n    className: 'bpmn-icon-connection'\r\n  },\r\n  {\r\n    label: 'Default Flow',\r\n    actionName: 'replace-with-default-flow',\r\n    className: 'bpmn-icon-default-flow'\r\n  },\r\n  {\r\n    label: 'Conditional Flow',\r\n    actionName: 'replace-with-conditional-flow',\r\n    className: 'bpmn-icon-conditional-flow'\r\n  }\r\n];\r\n\r\nexport var PARTICIPANT = [\r\n  {\r\n    label: 'Expanded Pool',\r\n    actionName: 'replace-with-expanded-pool',\r\n    className: 'bpmn-icon-participant',\r\n    target: {\r\n      type: 'bpmn:Participant',\r\n      isExpanded: true\r\n    }\r\n  },\r\n  {\r\n    label: 'Collapsed Pool',\r\n    actionName: 'replace-with-collapsed-pool',\r\n    // TODO(@janstuemmel): maybe design new icon\r\n    className: 'bpmn-icon-lane',\r\n    target: {\r\n      type: 'bpmn:Participant',\r\n      isExpanded: false\r\n    }\r\n  }\r\n];\r\n","import SelectionModule from 'diagram-js/lib/features/selection';\r\nimport ReplaceModule from 'diagram-js/lib/features/replace';\r\n\r\nimport BpmnReplace from './BpmnReplace';\r\n\r\nexport default {\r\n  __depends__: [\r\n    SelectionModule,\r\n    ReplaceModule\r\n  ],\r\n  bpmnReplace: [ 'type', BpmnReplace ]\r\n};\r\n","import {\r\n  find,\r\n  some,\r\n  every,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nimport {\r\n  is,\r\n  getBusinessObject\r\n} from '../../util/ModelUtil';\r\n\r\nimport {\r\n  isAny\r\n} from '../modeling/util/ModelingUtil';\r\n\r\nimport {\r\n  isLabel\r\n} from '../../util/LabelUtil';\r\n\r\nimport {\r\n  isExpanded,\r\n  isEventSubProcess,\r\n  isInterrupting,\r\n  hasErrorEventDefinition,\r\n  hasEscalationEventDefinition,\r\n  hasCompensateEventDefinition\r\n} from '../../util/DiUtil';\r\n\r\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\r\n\r\nimport {\r\n  getBoundaryAttachment as isBoundaryAttachment\r\n} from '../snapping/BpmnSnappingUtil';\r\n\r\n\r\n/**\r\n * BPMN specific modeling rule\r\n */\r\nexport default function BpmnRules(eventBus) {\r\n  RuleProvider.call(this, eventBus);\r\n}\r\n\r\ninherits(BpmnRules, RuleProvider);\r\n\r\nBpmnRules.$inject = [ 'eventBus' ];\r\n\r\nBpmnRules.prototype.init = function() {\r\n\r\n  this.addRule('connection.start', function(context) {\r\n    var source = context.source;\r\n\r\n    return canStartConnection(source);\r\n  });\r\n\r\n  this.addRule('connection.create', function(context) {\r\n    var source = context.source,\r\n        target = context.target,\r\n        hints = context.hints || {},\r\n        targetParent = hints.targetParent,\r\n        targetAttach = hints.targetAttach;\r\n\r\n    // don't allow incoming connections on\r\n    // newly created boundary events\r\n    // to boundary events\r\n    if (targetAttach) {\r\n      return false;\r\n    }\r\n\r\n    // temporarily set target parent for scoping\r\n    // checks to work\r\n    if (targetParent) {\r\n      target.parent = targetParent;\r\n    }\r\n\r\n    try {\r\n      return canConnect(source, target);\r\n    } finally {\r\n      // unset temporary target parent\r\n      if (targetParent) {\r\n        target.parent = null;\r\n      }\r\n    }\r\n  });\r\n\r\n  this.addRule('connection.reconnectStart', function(context) {\r\n\r\n    var connection = context.connection,\r\n        source = context.hover || context.source,\r\n        target = connection.target;\r\n\r\n    return canConnect(source, target, connection);\r\n  });\r\n\r\n  this.addRule('connection.reconnectEnd', function(context) {\r\n\r\n    var connection = context.connection,\r\n        source = connection.source,\r\n        target = context.hover || context.target;\r\n\r\n    return canConnect(source, target, connection);\r\n  });\r\n\r\n  this.addRule('connection.updateWaypoints', function(context) {\r\n    // OK! but visually ignore\r\n    return null;\r\n  });\r\n\r\n  this.addRule('shape.resize', function(context) {\r\n\r\n    var shape = context.shape,\r\n        newBounds = context.newBounds;\r\n\r\n    return canResize(shape, newBounds);\r\n  });\r\n\r\n  this.addRule('elements.move', function(context) {\r\n\r\n    var target = context.target,\r\n        shapes = context.shapes,\r\n        position = context.position;\r\n\r\n    return canAttach(shapes, target, null, position) ||\r\n           canReplace(shapes, target, position) ||\r\n           canMove(shapes, target, position) ||\r\n           canInsert(shapes, target, position);\r\n  });\r\n\r\n  this.addRule('shape.create', function(context) {\r\n    return canCreate(\r\n      context.shape,\r\n      context.target,\r\n      context.source,\r\n      context.position\r\n    );\r\n  });\r\n\r\n  this.addRule('shape.attach', function(context) {\r\n\r\n    return canAttach(\r\n      context.shape,\r\n      context.target,\r\n      null,\r\n      context.position\r\n    );\r\n  });\r\n\r\n  this.addRule('element.copy', function(context) {\r\n    var collection = context.collection,\r\n        element = context.element;\r\n\r\n    return canCopy(collection, element);\r\n  });\r\n\r\n  this.addRule('element.paste', function(context) {\r\n    var parent = context.parent,\r\n        element = context.element,\r\n        position = context.position,\r\n        source = context.source,\r\n        target = context.target;\r\n\r\n    if (source || target) {\r\n      return canConnect(source, target);\r\n    }\r\n\r\n    return canAttach([ element ], parent, null, position) || canCreate(element, parent, null, position);\r\n  });\r\n\r\n  this.addRule('elements.paste', function(context) {\r\n    var tree = context.tree,\r\n        target = context.target;\r\n\r\n    return canPaste(tree, target);\r\n  });\r\n};\r\n\r\nBpmnRules.prototype.canConnectMessageFlow = canConnectMessageFlow;\r\n\r\nBpmnRules.prototype.canConnectSequenceFlow = canConnectSequenceFlow;\r\n\r\nBpmnRules.prototype.canConnectDataAssociation = canConnectDataAssociation;\r\n\r\nBpmnRules.prototype.canConnectAssociation = canConnectAssociation;\r\n\r\nBpmnRules.prototype.canMove = canMove;\r\n\r\nBpmnRules.prototype.canAttach = canAttach;\r\n\r\nBpmnRules.prototype.canReplace = canReplace;\r\n\r\nBpmnRules.prototype.canDrop = canDrop;\r\n\r\nBpmnRules.prototype.canInsert = canInsert;\r\n\r\nBpmnRules.prototype.canCreate = canCreate;\r\n\r\nBpmnRules.prototype.canConnect = canConnect;\r\n\r\nBpmnRules.prototype.canResize = canResize;\r\n\r\nBpmnRules.prototype.canCopy = canCopy;\r\n\r\n/**\r\n * Utility functions for rule checking\r\n */\r\n\r\n/**\r\n * Checks if given element can be used for starting connection.\r\n *\r\n * @param  {Element} source\r\n * @return {Boolean}\r\n */\r\nfunction canStartConnection(element) {\r\n  if (nonExistingOrLabel(element)) {\r\n    return null;\r\n  }\r\n\r\n  return isAny(element, [\r\n    'bpmn:FlowNode',\r\n    'bpmn:InteractionNode',\r\n    'bpmn:DataObjectReference',\r\n    'bpmn:DataStoreReference'\r\n  ]);\r\n}\r\n\r\nfunction nonExistingOrLabel(element) {\r\n  return !element || isLabel(element);\r\n}\r\n\r\nfunction isSame(a, b) {\r\n  return a === b;\r\n}\r\n\r\nfunction getOrganizationalParent(element) {\r\n\r\n  do {\r\n    if (is(element, 'bpmn:Process')) {\r\n      return getBusinessObject(element);\r\n    }\r\n\r\n    if (is(element, 'bpmn:Participant')) {\r\n      return (\r\n        getBusinessObject(element).processRef ||\r\n        getBusinessObject(element)\r\n      );\r\n    }\r\n  } while ((element = element.parent));\r\n\r\n}\r\n\r\nfunction isTextAnnotation(element) {\r\n  return is(element, 'bpmn:TextAnnotation');\r\n}\r\n\r\nfunction isCompensationBoundary(element) {\r\n  return is(element, 'bpmn:BoundaryEvent') &&\r\n         hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\r\n}\r\n\r\nfunction isForCompensation(e) {\r\n  return getBusinessObject(e).isForCompensation;\r\n}\r\n\r\nfunction isSameOrganization(a, b) {\r\n  var parentA = getOrganizationalParent(a),\r\n      parentB = getOrganizationalParent(b);\r\n\r\n  return parentA === parentB;\r\n}\r\n\r\nfunction isMessageFlowSource(element) {\r\n  return (\r\n    is(element, 'bpmn:InteractionNode') && (\r\n      !is(element, 'bpmn:Event') || (\r\n        is(element, 'bpmn:ThrowEvent') &&\r\n        hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nfunction isMessageFlowTarget(element) {\r\n  return (\r\n    is(element, 'bpmn:InteractionNode') &&\r\n    !isForCompensation(element) && (\r\n      !is(element, 'bpmn:Event') || (\r\n        is(element, 'bpmn:CatchEvent') &&\r\n        hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nfunction getScopeParent(element) {\r\n\r\n  var parent = element;\r\n\r\n  while ((parent = parent.parent)) {\r\n\r\n    if (is(parent, 'bpmn:FlowElementsContainer')) {\r\n      return getBusinessObject(parent);\r\n    }\r\n\r\n    if (is(parent, 'bpmn:Participant')) {\r\n      return getBusinessObject(parent).processRef;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction isSameScope(a, b) {\r\n  var scopeParentA = getScopeParent(a),\r\n      scopeParentB = getScopeParent(b);\r\n\r\n  return scopeParentA && (scopeParentA === scopeParentB);\r\n}\r\n\r\nfunction hasEventDefinition(element, eventDefinition) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return !!find(bo.eventDefinitions || [], function(definition) {\r\n    return is(definition, eventDefinition);\r\n  });\r\n}\r\n\r\nfunction hasEventDefinitionOrNone(element, eventDefinition) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return (bo.eventDefinitions || []).every(function(definition) {\r\n    return is(definition, eventDefinition);\r\n  });\r\n}\r\n\r\nfunction isSequenceFlowSource(element) {\r\n  return (\r\n    is(element, 'bpmn:FlowNode') &&\r\n    !is(element, 'bpmn:EndEvent') &&\r\n    !isEventSubProcess(element) &&\r\n    !(is(element, 'bpmn:IntermediateThrowEvent') &&\r\n      hasEventDefinition(element, 'bpmn:LinkEventDefinition')\r\n    ) &&\r\n    !isCompensationBoundary(element) &&\r\n    !isForCompensation(element)\r\n  );\r\n}\r\n\r\nfunction isSequenceFlowTarget(element) {\r\n  return (\r\n    is(element, 'bpmn:FlowNode') &&\r\n    !is(element, 'bpmn:StartEvent') &&\r\n    !is(element, 'bpmn:BoundaryEvent') &&\r\n    !isEventSubProcess(element) &&\r\n    !(is(element, 'bpmn:IntermediateCatchEvent') &&\r\n      hasEventDefinition(element, 'bpmn:LinkEventDefinition')\r\n    ) &&\r\n    !isForCompensation(element)\r\n  );\r\n}\r\n\r\nfunction isEventBasedTarget(element) {\r\n  return (\r\n    is(element, 'bpmn:ReceiveTask') || (\r\n      is(element, 'bpmn:IntermediateCatchEvent') && (\r\n        hasEventDefinition(element, 'bpmn:MessageEventDefinition') ||\r\n        hasEventDefinition(element, 'bpmn:TimerEventDefinition') ||\r\n        hasEventDefinition(element, 'bpmn:ConditionalEventDefinition') ||\r\n        hasEventDefinition(element, 'bpmn:SignalEventDefinition')\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n\r\nfunction getParents(element) {\r\n\r\n  var parents = [];\r\n\r\n  while (element) {\r\n    element = element.parent;\r\n\r\n    if (element) {\r\n      parents.push(element);\r\n    }\r\n  }\r\n\r\n  return parents;\r\n}\r\n\r\nfunction isParent(possibleParent, element) {\r\n  var allParents = getParents(element);\r\n  return allParents.indexOf(possibleParent) !== -1;\r\n}\r\n\r\nfunction canConnect(source, target, connection) {\r\n\r\n  if (nonExistingOrLabel(source) || nonExistingOrLabel(target)) {\r\n    return null;\r\n  }\r\n\r\n  if (!is(connection, 'bpmn:DataAssociation')) {\r\n\r\n    if (canConnectMessageFlow(source, target)) {\r\n      return { type: 'bpmn:MessageFlow' };\r\n    }\r\n\r\n    if (canConnectSequenceFlow(source, target)) {\r\n      return { type: 'bpmn:SequenceFlow' };\r\n    }\r\n  }\r\n\r\n  var connectDataAssociation = canConnectDataAssociation(source, target);\r\n\r\n  if (connectDataAssociation) {\r\n    return connectDataAssociation;\r\n  }\r\n\r\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\r\n    return {\r\n      type: 'bpmn:Association',\r\n      associationDirection: 'One'\r\n    };\r\n  }\r\n\r\n  if (canConnectAssociation(source, target)) {\r\n\r\n    return {\r\n      type: 'bpmn:Association'\r\n    };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Can an element be dropped into the target element\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction canDrop(element, target, position) {\r\n\r\n  // can move labels everywhere\r\n  if (isLabel(element)) {\r\n    return true;\r\n  }\r\n\r\n  // disallow to create elements on collapsed pools\r\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\r\n    return false;\r\n  }\r\n\r\n  // allow to create new participants on\r\n  // on existing collaboration and process diagrams\r\n  if (is(element, 'bpmn:Participant')) {\r\n    return is(target, 'bpmn:Process') || is(target, 'bpmn:Collaboration');\r\n  }\r\n\r\n  // allow creating lanes on participants and other lanes only\r\n  if (is(element, 'bpmn:Lane')) {\r\n    return is(target, 'bpmn:Participant') || is(target, 'bpmn:Lane');\r\n  }\r\n\r\n  if (is(element, 'bpmn:BoundaryEvent')) {\r\n    return false;\r\n  }\r\n\r\n  // drop flow elements onto flow element containers\r\n  // and participants\r\n  if (is(element, 'bpmn:FlowElement') && !is(element, 'bpmn:DataStoreReference')) {\r\n    if (is(target, 'bpmn:FlowElementsContainer')) {\r\n      return isExpanded(target);\r\n    }\r\n\r\n    return isAny(target, [ 'bpmn:Participant', 'bpmn:Lane' ]);\r\n  }\r\n\r\n  // account for the fact that data associations are always\r\n  // rendered and moved to top (Process or Collaboration level)\r\n  //\r\n  // artifacts may be placed wherever, too\r\n  if (isAny(element, [ 'bpmn:Artifact', 'bpmn:DataAssociation', 'bpmn:DataStoreReference' ])) {\r\n    return isAny(target, [\r\n      'bpmn:Collaboration',\r\n      'bpmn:Lane',\r\n      'bpmn:Participant',\r\n      'bpmn:Process',\r\n      'bpmn:SubProcess' ]);\r\n  }\r\n\r\n  if (is(element, 'bpmn:MessageFlow')) {\r\n    return is(target, 'bpmn:Collaboration')\r\n      || element.source.parent == target\r\n      || element.target.parent == target;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction canPaste(tree, target) {\r\n  var topLevel = tree[0],\r\n      participants;\r\n\r\n  if (is(target, 'bpmn:Collaboration')) {\r\n    return every(topLevel, function(e) {\r\n      return e.type === 'bpmn:Participant';\r\n    });\r\n  }\r\n\r\n  if (is(target, 'bpmn:Process')) {\r\n    participants = some(topLevel, function(e) {\r\n      return e.type === 'bpmn:Participant';\r\n    });\r\n\r\n    return !(participants && target.children.length > 0);\r\n  }\r\n\r\n  // disallow to create elements on collapsed pools\r\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\r\n    return false;\r\n  }\r\n\r\n  if (is(target, 'bpmn:FlowElementsContainer')) {\r\n    return isExpanded(target);\r\n  }\r\n\r\n  return isAny(target, [\r\n    'bpmn:Collaboration',\r\n    'bpmn:Lane',\r\n    'bpmn:Participant',\r\n    'bpmn:Process',\r\n    'bpmn:SubProcess' ]);\r\n}\r\n\r\nfunction isBoundaryEvent(element) {\r\n  return !isLabel(element) && is(element, 'bpmn:BoundaryEvent');\r\n}\r\n\r\nfunction isLane(element) {\r\n  return is(element, 'bpmn:Lane');\r\n}\r\n\r\n/**\r\n * We treat IntermediateThrowEvents as boundary events during create,\r\n * this must be reflected in the rules.\r\n */\r\nfunction isBoundaryCandidate(element) {\r\n  return isBoundaryEvent(element) ||\r\n        (is(element, 'bpmn:IntermediateThrowEvent') && !element.parent);\r\n}\r\n\r\nfunction isReceiveTaskAfterEventBasedGateway(element) {\r\n  return (\r\n    is(element, 'bpmn:ReceiveTask') &&\r\n    find(element.incoming, function(incoming) {\r\n      return is(incoming.source, 'bpmn:EventBasedGateway');\r\n    })\r\n  );\r\n}\r\n\r\n\r\nfunction canAttach(elements, target, source, position) {\r\n\r\n  if (!Array.isArray(elements)) {\r\n    elements = [ elements ];\r\n  }\r\n\r\n  // disallow appending as boundary event\r\n  if (source) {\r\n    return false;\r\n  }\r\n\r\n  // only (re-)attach one element at a time\r\n  if (elements.length !== 1) {\r\n    return false;\r\n  }\r\n\r\n  var element = elements[0];\r\n\r\n  // do not attach labels\r\n  if (isLabel(element)) {\r\n    return false;\r\n  }\r\n\r\n  // only handle boundary events\r\n  if (!isBoundaryCandidate(element)) {\r\n    return false;\r\n  }\r\n\r\n  // allow default move operation\r\n  if (!target) {\r\n    return true;\r\n  }\r\n\r\n  // disallow drop on event sub processes\r\n  if (isEventSubProcess(target)) {\r\n    return false;\r\n  }\r\n\r\n  // only allow drop on non compensation activities\r\n  if (!is(target, 'bpmn:Activity') || isForCompensation(target)) {\r\n    return false;\r\n  }\r\n\r\n  // only attach to subprocess border\r\n  if (position && !isBoundaryAttachment(position, target)) {\r\n    return false;\r\n  }\r\n\r\n  // do not attach on receive tasks after event based gateways\r\n  if (isReceiveTaskAfterEventBasedGateway(target)) {\r\n    return false;\r\n  }\r\n\r\n  return 'attach';\r\n}\r\n\r\n\r\n/**\r\n * Defines how to replace elements for a given target.\r\n *\r\n * Returns an array containing all elements which will be replaced.\r\n *\r\n * @example\r\n *\r\n *  [{ id: 'IntermediateEvent_2',\r\n *     type: 'bpmn:StartEvent'\r\n *   },\r\n *   { id: 'IntermediateEvent_5',\r\n *     type: 'bpmn:EndEvent'\r\n *   }]\r\n *\r\n * @param  {Array} elements\r\n * @param  {Object} target\r\n *\r\n * @return {Object} an object containing all elements which have to be replaced\r\n */\r\nfunction canReplace(elements, target, position) {\r\n\r\n  if (!target) {\r\n    return false;\r\n  }\r\n\r\n  var canExecute = {\r\n    replacements: []\r\n  };\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    if (!isEventSubProcess(target)) {\r\n\r\n      if (is(element, 'bpmn:StartEvent') &&\r\n          element.type !== 'label' &&\r\n          canDrop(element, target)) {\r\n\r\n        // replace a non-interrupting start event by a blank interrupting start event\r\n        // when the target is not an event sub process\r\n        if (!isInterrupting(element)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:StartEvent'\r\n          });\r\n        }\r\n\r\n        // replace an error/escalation/compansate start event by a blank interrupting start event\r\n        // when the target is not an event sub process\r\n        if (hasErrorEventDefinition(element) ||\r\n            hasEscalationEventDefinition(element) ||\r\n            hasCompensateEventDefinition(element)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:StartEvent'\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!is(target, 'bpmn:Transaction')) {\r\n      if (hasEventDefinition(element, 'bpmn:CancelEventDefinition') &&\r\n          element.type !== 'label') {\r\n\r\n        if (is(element, 'bpmn:EndEvent') && canDrop(element, target)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:EndEvent'\r\n          });\r\n        }\r\n\r\n        if (is(element, 'bpmn:BoundaryEvent') && canAttach(element, target, null, position)) {\r\n          canExecute.replacements.push({\r\n            oldElementId: element.id,\r\n            newElementType: 'bpmn:BoundaryEvent'\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return canExecute.replacements.length ? canExecute : false;\r\n}\r\n\r\nfunction canMove(elements, target) {\r\n\r\n  // do not move selection containing boundary events\r\n  if (some(elements, isBoundaryEvent)) {\r\n    return false;\r\n  }\r\n\r\n  // do not move selection containing lanes\r\n  if (some(elements, isLane)) {\r\n    return false;\r\n  }\r\n\r\n  // allow default move check to start move operation\r\n  if (!target) {\r\n    return true;\r\n  }\r\n\r\n  return elements.every(function(element) {\r\n    return canDrop(element, target);\r\n  });\r\n}\r\n\r\nfunction canCreate(shape, target, source, position) {\r\n\r\n  if (!target) {\r\n    return false;\r\n  }\r\n\r\n  if (isLabel(target)) {\r\n    return null;\r\n  }\r\n\r\n  if (isSame(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  // ensure we do not drop the element\r\n  // into source\r\n  if (source && isParent(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  return canDrop(shape, target, position) || canInsert(shape, target, position);\r\n}\r\n\r\nfunction canResize(shape, newBounds) {\r\n  if (is(shape, 'bpmn:SubProcess')) {\r\n    return (\r\n      isExpanded(shape) && (\r\n        !newBounds || (newBounds.width >= 100 && newBounds.height >= 80)\r\n      )\r\n    );\r\n  }\r\n\r\n  if (is(shape, 'bpmn:Lane')) {\r\n    return !newBounds || (newBounds.width >= 130 && newBounds.height >= 60);\r\n  }\r\n\r\n  if (is(shape, 'bpmn:Participant')) {\r\n    return !newBounds || (newBounds.width >= 250 && newBounds.height >= 50);\r\n  }\r\n\r\n  if (isTextAnnotation(shape)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Check, whether one side of the relationship\r\n * is a text annotation.\r\n */\r\nfunction isOneTextAnnotation(source, target) {\r\n\r\n  var sourceTextAnnotation = isTextAnnotation(source),\r\n      targetTextAnnotation = isTextAnnotation(target);\r\n\r\n  return (\r\n    (sourceTextAnnotation || targetTextAnnotation) &&\r\n    (sourceTextAnnotation !== targetTextAnnotation)\r\n  );\r\n}\r\n\r\n\r\nfunction canConnectAssociation(source, target) {\r\n\r\n  // do not connect connections\r\n  if (isConnection(source) || isConnection(target)) {\r\n    return false;\r\n  }\r\n\r\n  // compensation boundary events are exception\r\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\r\n    return true;\r\n  }\r\n\r\n  // don't connect parent <-> child\r\n  if (isParent(target, source) || isParent(source, target)) {\r\n    return false;\r\n  }\r\n\r\n  // allow connection of associations between <!TextAnnotation> and <TextAnnotation>\r\n  return isOneTextAnnotation(source, target);\r\n}\r\n\r\nfunction canConnectMessageFlow(source, target) {\r\n\r\n  return isMessageFlowSource(source) &&\r\n         isMessageFlowTarget(target) &&\r\n        !isSameOrganization(source, target);\r\n}\r\n\r\nfunction canConnectSequenceFlow(source, target) {\r\n\r\n  return isSequenceFlowSource(source) &&\r\n         isSequenceFlowTarget(target) &&\r\n         isSameScope(source, target) &&\r\n         !(is(source, 'bpmn:EventBasedGateway') && !isEventBasedTarget(target));\r\n}\r\n\r\n\r\nfunction canConnectDataAssociation(source, target) {\r\n\r\n  if (isAny(source, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\r\n      isAny(target, [ 'bpmn:Activity', 'bpmn:ThrowEvent' ])) {\r\n    return { type: 'bpmn:DataInputAssociation' };\r\n  }\r\n\r\n  if (isAny(target, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\r\n      isAny(source, [ 'bpmn:Activity', 'bpmn:CatchEvent' ])) {\r\n    return { type: 'bpmn:DataOutputAssociation' };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction canInsert(shape, flow, position) {\r\n\r\n  if (!flow) {\r\n    return false;\r\n  }\r\n\r\n  if (Array.isArray(shape)) {\r\n    if (shape.length !== 1) {\r\n      return false;\r\n    }\r\n\r\n    shape = shape[0];\r\n  }\r\n\r\n  if (flow.source === shape ||\r\n      flow.target === shape) {\r\n    return false;\r\n  }\r\n\r\n  // return true if we can drop on the\r\n  // underlying flow parent\r\n  //\r\n  // at this point we are not really able to talk\r\n  // about connection rules (yet)\r\n\r\n  return (\r\n    isAny(flow, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ]) &&\r\n    !isLabel(flow) &&\r\n    is(shape, 'bpmn:FlowNode') &&\r\n    !is(shape, 'bpmn:BoundaryEvent') &&\r\n    canDrop(shape, flow.parent, position));\r\n}\r\n\r\nfunction contains(collection, element) {\r\n  return (collection && element) && collection.indexOf(element) !== -1;\r\n}\r\n\r\nfunction canCopy(collection, element) {\r\n  if (is(element, 'bpmn:Lane') && !contains(collection, element.parent)) {\r\n    return false;\r\n  }\r\n\r\n  if (is(element, 'bpmn:BoundaryEvent') && !contains(collection, element.host)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import RulesModule from 'diagram-js/lib/features/rules';\r\n\r\nimport BpmnRules from './BpmnRules';\r\n\r\nexport default {\r\n  __depends__: [\r\n    RulesModule\r\n  ],\r\n  __init__: [ 'bpmnRules' ],\r\n  bpmnRules: [ 'type', BpmnRules ]\r\n};\r\n","import {\r\n  map,\r\n  filter,\r\n  sortBy\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getLabel\r\n} from '../label-editing/LabelUtil';\r\n\r\n\r\n/**\r\n * Provides ability to search through BPMN elements\r\n */\r\nexport default function BpmnSearchProvider(elementRegistry, searchPad, canvas) {\r\n\r\n  this._elementRegistry = elementRegistry;\r\n  this._canvas = canvas;\r\n\r\n  searchPad.registerProvider(this);\r\n}\r\n\r\nBpmnSearchProvider.$inject = [\r\n  'elementRegistry',\r\n  'searchPad',\r\n  'canvas'\r\n];\r\n\r\n\r\n/**\r\n * Finds all elements that match given pattern\r\n *\r\n * <Result> :\r\n *  {\r\n *    primaryTokens: <Array<Token>>,\r\n *    secondaryTokens: <Array<Token>>,\r\n *    element: <Element>\r\n *  }\r\n *\r\n * <Token> :\r\n *  {\r\n *    normal|matched: <String>\r\n *  }\r\n *\r\n * @param  {String} pattern\r\n * @return {Array<Result>}\r\n */\r\nBpmnSearchProvider.prototype.find = function(pattern) {\r\n  var rootElement = this._canvas.getRootElement();\r\n\r\n  var elements = this._elementRegistry.filter(function(element) {\r\n    if (element.labelTarget) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  // do not include root element\r\n  elements = filter(elements, function(element) {\r\n    return element !== rootElement;\r\n  });\r\n\r\n  elements = map(elements, function(element) {\r\n    return {\r\n      primaryTokens: matchAndSplit(getLabel(element), pattern),\r\n      secondaryTokens: matchAndSplit(element.id, pattern),\r\n      element: element\r\n    };\r\n  });\r\n\r\n  // exclude non-matched elements\r\n  elements = filter(elements, function(element) {\r\n    return hasMatched(element.primaryTokens) || hasMatched(element.secondaryTokens);\r\n  });\r\n\r\n  elements = sortBy(elements, function(element) {\r\n    return getLabel(element.element) + element.element.id;\r\n  });\r\n\r\n  return elements;\r\n};\r\n\r\n\r\nfunction hasMatched(tokens) {\r\n  var matched = filter(tokens, function(t) {\r\n    return !!t.matched;\r\n  });\r\n\r\n  return matched.length > 0;\r\n}\r\n\r\n\r\nfunction matchAndSplit(text, pattern) {\r\n  var tokens = [],\r\n      originalText = text;\r\n\r\n  if (!text) {\r\n    return tokens;\r\n  }\r\n\r\n  text = text.toLowerCase();\r\n  pattern = pattern.toLowerCase();\r\n\r\n  var i = text.indexOf(pattern);\r\n\r\n  if (i > -1) {\r\n    if (i !== 0) {\r\n      tokens.push({\r\n        normal: originalText.substr(0, i)\r\n      });\r\n    }\r\n\r\n    tokens.push({\r\n      matched: originalText.substr(i, pattern.length)\r\n    });\r\n\r\n    if (pattern.length + i < text.length) {\r\n      tokens.push({\r\n        normal: originalText.substr(pattern.length + i, text.length)\r\n      });\r\n    }\r\n  } else {\r\n    tokens.push({\r\n      normal: originalText\r\n    });\r\n  }\r\n\r\n  return tokens;\r\n}","import SearchPadModule from 'diagram-js/lib/features/search-pad';\r\n\r\nimport BpmnSearchProvider from './BpmnSearchProvider';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    SearchPadModule\r\n  ],\r\n  __init__: [ 'bpmnSearch'],\r\n  bpmnSearch: [ 'type', BpmnSearchProvider ]\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getBBox as getBoundingBox\r\n} from 'diagram-js/lib/util/Elements';\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\nimport { isAny } from '../modeling/util/ModelingUtil';\r\n\r\nimport {\r\n  isExpanded\r\n} from '../../util/DiUtil';\r\n\r\nimport Snapping from 'diagram-js/lib/features/snapping/Snapping';\r\n\r\nimport {\r\n  mid,\r\n  topLeft,\r\n  bottomRight,\r\n  isSnapped,\r\n  setSnapped\r\n} from 'diagram-js/lib/features/snapping/SnapUtil';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\n\r\nimport {\r\n  getBoundaryAttachment,\r\n  getParticipantSizeConstraints\r\n} from './BpmnSnappingUtil';\r\n\r\nimport {\r\n  getLanesRoot\r\n} from '../modeling/util/LaneUtil';\r\n\r\nvar round = Math.round;\r\n\r\nvar HIGH_PRIORITY = 1500;\r\n\r\n\r\n/**\r\n * BPMN specific snapping functionality\r\n *\r\n *  * snap on process elements if a pool is created inside a\r\n *    process diagram\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function BpmnSnapping(eventBus, canvas, bpmnRules, elementRegistry) {\r\n\r\n  // instantiate super\r\n  Snapping.call(this, eventBus, canvas);\r\n\r\n\r\n  /**\r\n   * Drop participant on process <> process elements snapping\r\n   */\r\n  eventBus.on('create.start', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    // snap participant around existing elements (if any)\r\n    if (is(shape, 'bpmn:Participant') && is(rootElement, 'bpmn:Process')) {\r\n      initParticipantSnapping(context, shape, rootElement.children);\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'create.move', 'create.end' ], HIGH_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        participantSnapBox = context.participantSnapBox;\r\n\r\n    if (!isSnapped(event) && participantSnapBox) {\r\n      snapParticipant(participantSnapBox, shape, event);\r\n    }\r\n  });\r\n\r\n  eventBus.on('shape.move.start', function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        rootElement = canvas.getRootElement();\r\n\r\n    // snap participant around existing elements (if any)\r\n    if (is(shape, 'bpmn:Participant') && is(rootElement, 'bpmn:Process')) {\r\n      initParticipantSnapping(context, shape, rootElement.children);\r\n    }\r\n  });\r\n\r\n\r\n  function canAttach(shape, target, position) {\r\n    return bpmnRules.canAttach([ shape ], target, null, position) === 'attach';\r\n  }\r\n\r\n  function canConnect(source, target) {\r\n    return bpmnRules.canConnect(source, target);\r\n  }\r\n\r\n  /**\r\n   * Snap boundary events to elements border\r\n   */\r\n  eventBus.on([\r\n    'create.move',\r\n    'create.end',\r\n    'shape.move.move',\r\n    'shape.move.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        target = context.target,\r\n        shape = context.shape;\r\n\r\n    if (target && !isSnapped(event) && canAttach(shape, target, event)) {\r\n      snapBoundaryEvent(event, shape, target);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Adjust parent for flowElements to the target participant\r\n   * when droping onto lanes.\r\n   */\r\n  eventBus.on([\r\n    'shape.move.hover',\r\n    'shape.move.move',\r\n    'shape.move.end',\r\n    'create.hover',\r\n    'create.move',\r\n    'create.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        hover = event.hover;\r\n\r\n    if (is(hover, 'bpmn:Lane') && !isAny(shape, [ 'bpmn:Lane', 'bpmn:Participant' ])) {\r\n      event.hover = getLanesRoot(hover);\r\n      event.hoverGfx = elementRegistry.getGraphics(event.hover);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Snap sequence flows.\r\n   */\r\n  eventBus.on([\r\n    'connect.move',\r\n    'connect.hover',\r\n    'connect.end'\r\n  ], HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        source = context.source,\r\n        target = context.target;\r\n\r\n    var connection = canConnect(source, target) || {};\r\n\r\n    if (!context.initialSourcePosition) {\r\n      context.initialSourcePosition = context.sourcePosition;\r\n    }\r\n\r\n    if (\r\n      target && (\r\n        connection.type === 'bpmn:Association' ||\r\n        connection.type === 'bpmn:DataOutputAssociation' ||\r\n        connection.type === 'bpmn:DataInputAssociation' ||\r\n        connection.type === 'bpmn:SequenceFlow'\r\n      )\r\n    ) {\r\n      // snap source\r\n      context.sourcePosition = mid(source);\r\n\r\n      // snap target\r\n      snapToPosition(event, mid(target));\r\n    } else\r\n\r\n    if (connection.type === 'bpmn:MessageFlow') {\r\n\r\n      if (is(source, 'bpmn:Event')) {\r\n        // snap source\r\n        context.sourcePosition = mid(source);\r\n      }\r\n\r\n      if (is(target, 'bpmn:Event')) {\r\n        // snap target\r\n        snapToPosition(event, mid(target));\r\n      }\r\n    }\r\n\r\n    else {\r\n      // otherwise reset source snap\r\n      context.sourcePosition = context.initialSourcePosition;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape;\r\n\r\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\r\n      context.minDimensions = { width: 140, height: 120 };\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Participant')) {\r\n      context.minDimensions = { width: 300, height: 150 };\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n      context.resizeConstraints = getParticipantSizeConstraints(\r\n        shape,\r\n        context.direction,\r\n        context.balanced\r\n      );\r\n    }\r\n\r\n    if (is(shape, 'bpmn:TextAnnotation')) {\r\n      context.minDimensions = { width: 50, height: 30 };\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(BpmnSnapping, Snapping);\r\n\r\nBpmnSnapping.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'bpmnRules',\r\n  'elementRegistry'\r\n];\r\n\r\n\r\nBpmnSnapping.prototype.initSnap = function(event) {\r\n\r\n  var context = event.context,\r\n      shape = event.shape,\r\n      shapeMid,\r\n      shapeBounds,\r\n      shapeTopLeft,\r\n      shapeBottomRight,\r\n      snapContext;\r\n\r\n\r\n  snapContext = Snapping.prototype.initSnap.call(this, event);\r\n\r\n  if (is(shape, 'bpmn:Participant')) {\r\n    // assign higher priority for outer snaps on participants\r\n    snapContext.setSnapLocations([ 'top-left', 'bottom-right', 'mid' ]);\r\n  }\r\n\r\n\r\n  if (shape) {\r\n\r\n    shapeMid = mid(shape, event);\r\n\r\n    shapeBounds = {\r\n      width: shape.width,\r\n      height: shape.height,\r\n      x: isNaN(shape.x) ? round(shapeMid.x - shape.width / 2) : shape.x,\r\n      y: isNaN(shape.y) ? round(shapeMid.y - shape.height / 2) : shape.y\r\n    };\r\n\r\n    shapeTopLeft = topLeft(shapeBounds);\r\n    shapeBottomRight = bottomRight(shapeBounds);\r\n\r\n    snapContext.setSnapOrigin('top-left', {\r\n      x: shapeTopLeft.x - event.x,\r\n      y: shapeTopLeft.y - event.y\r\n    });\r\n\r\n    snapContext.setSnapOrigin('bottom-right', {\r\n      x: shapeBottomRight.x - event.x,\r\n      y: shapeBottomRight.y - event.y\r\n    });\r\n\r\n    forEach(shape.outgoing, function(c) {\r\n      var docking = c.waypoints[0];\r\n\r\n      docking = docking.original || docking;\r\n\r\n      snapContext.setSnapOrigin(c.id + '-docking', {\r\n        x: docking.x - event.x,\r\n        y: docking.y - event.y\r\n      });\r\n    });\r\n\r\n    forEach(shape.incoming, function(c) {\r\n      var docking = c.waypoints[c.waypoints.length - 1];\r\n\r\n      docking = docking.original || docking;\r\n\r\n      snapContext.setSnapOrigin(c.id + '-docking', {\r\n        x: docking.x - event.x,\r\n        y: docking.y - event.y\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  var source = context.source;\r\n\r\n  if (source) {\r\n    snapContext.addDefaultSnap('mid', mid(source));\r\n  }\r\n};\r\n\r\n\r\nBpmnSnapping.prototype.addTargetSnaps = function(snapPoints, shape, target) {\r\n\r\n  // use target parent as snap target\r\n  if (is(shape, 'bpmn:BoundaryEvent') && shape.type !== 'label') {\r\n    target = target.parent;\r\n  }\r\n\r\n  // add sequence flow parents as snap targets\r\n  if (is(target, 'bpmn:SequenceFlow')) {\r\n    this.addTargetSnaps(snapPoints, shape, target.parent);\r\n  }\r\n\r\n  var siblings = this.getSiblings(shape, target) || [];\r\n\r\n  forEach(siblings, function(sibling) {\r\n\r\n    // do not snap to lanes\r\n    if (is(sibling, 'bpmn:Lane')) {\r\n      return;\r\n    }\r\n\r\n    if (sibling.waypoints) {\r\n\r\n      forEach(sibling.waypoints.slice(1, -1), function(waypoint, i) {\r\n        var nextWaypoint = sibling.waypoints[i + 2],\r\n            previousWaypoint = sibling.waypoints[i];\r\n\r\n        if (!nextWaypoint || !previousWaypoint) {\r\n          throw new Error('waypoints must exist');\r\n        }\r\n\r\n        if (nextWaypoint.x === waypoint.x ||\r\n            nextWaypoint.y === waypoint.y ||\r\n            previousWaypoint.x === waypoint.x ||\r\n            previousWaypoint.y === waypoint.y) {\r\n          snapPoints.add('mid', waypoint);\r\n        }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    snapPoints.add('mid', mid(sibling));\r\n\r\n    if (is(sibling, 'bpmn:Participant')) {\r\n      snapPoints.add('top-left', topLeft(sibling));\r\n      snapPoints.add('bottom-right', bottomRight(sibling));\r\n    }\r\n  });\r\n\r\n\r\n  forEach(shape.incoming, function(c) {\r\n\r\n    if (siblings.indexOf(c.source) === -1) {\r\n      snapPoints.add('mid', mid(c.source));\r\n    }\r\n\r\n    var docking = c.waypoints[0];\r\n    snapPoints.add(c.id + '-docking', docking.original || docking);\r\n  });\r\n\r\n\r\n  forEach(shape.outgoing, function(c) {\r\n\r\n    if (siblings.indexOf(c.target) === -1) {\r\n      snapPoints.add('mid', mid(c.target));\r\n    }\r\n\r\n    var docking = c.waypoints[c.waypoints.length - 1];\r\n    snapPoints.add(c.id + '-docking', docking.original || docking);\r\n  });\r\n};\r\n\r\n\r\n// participant snapping //////////////////////\r\n\r\nfunction initParticipantSnapping(context, shape, elements) {\r\n\r\n  if (!elements.length) {\r\n    return;\r\n  }\r\n\r\n  var snapBox = getBoundingBox(elements.filter(function(e) {\r\n    return !e.labelTarget && !e.waypoints;\r\n  }));\r\n\r\n  snapBox.x -= 50;\r\n  snapBox.y -= 20;\r\n  snapBox.width += 70;\r\n  snapBox.height += 40;\r\n\r\n  // adjust shape height to include bounding box\r\n  shape.width = Math.max(shape.width, snapBox.width);\r\n  shape.height = Math.max(shape.height, snapBox.height);\r\n\r\n  context.participantSnapBox = snapBox;\r\n}\r\n\r\nfunction snapParticipant(snapBox, shape, event, offset) {\r\n  offset = offset || 0;\r\n\r\n  var shapeHalfWidth = shape.width / 2 - offset,\r\n      shapeHalfHeight = shape.height / 2;\r\n\r\n  var currentTopLeft = {\r\n    x: event.x - shapeHalfWidth - offset,\r\n    y: event.y - shapeHalfHeight\r\n  };\r\n\r\n  var currentBottomRight = {\r\n    x: event.x + shapeHalfWidth + offset,\r\n    y: event.y + shapeHalfHeight\r\n  };\r\n\r\n  var snapTopLeft = snapBox,\r\n      snapBottomRight = bottomRight(snapBox);\r\n\r\n  if (currentTopLeft.x >= snapTopLeft.x) {\r\n    setSnapped(event, 'x', snapTopLeft.x + offset + shapeHalfWidth);\r\n  } else\r\n  if (currentBottomRight.x <= snapBottomRight.x) {\r\n    setSnapped(event, 'x', snapBottomRight.x - offset - shapeHalfWidth);\r\n  }\r\n\r\n  if (currentTopLeft.y >= snapTopLeft.y) {\r\n    setSnapped(event, 'y', snapTopLeft.y + shapeHalfHeight);\r\n  } else\r\n  if (currentBottomRight.y <= snapBottomRight.y) {\r\n    setSnapped(event, 'y', snapBottomRight.y - shapeHalfHeight);\r\n  }\r\n}\r\n\r\n\r\n// boundary event snapping //////////////////////\r\n\r\nfunction snapBoundaryEvent(event, shape, target) {\r\n  var targetTRBL = asTRBL(target);\r\n\r\n  var direction = getBoundaryAttachment(event, target);\r\n\r\n  if (/top/.test(direction)) {\r\n    setSnapped(event, 'y', targetTRBL.top);\r\n  } else\r\n  if (/bottom/.test(direction)) {\r\n    setSnapped(event, 'y', targetTRBL.bottom);\r\n  }\r\n\r\n  if (/left/.test(direction)) {\r\n    setSnapped(event, 'x', targetTRBL.left);\r\n  } else\r\n  if (/right/.test(direction)) {\r\n    setSnapped(event, 'x', targetTRBL.right);\r\n  }\r\n}\r\n\r\n\r\nfunction snapToPosition(event, position) {\r\n  setSnapped(event, 'x', position.x);\r\n  setSnapped(event, 'y', position.y);\r\n}","import {\r\n  getOrientation\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\n\r\nexport function getBoundaryAttachment(position, targetBounds) {\r\n\r\n  var orientation = getOrientation(position, targetBounds, -15);\r\n\r\n  if (orientation !== 'intersect') {\r\n    return orientation;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n// participant snapping box implementation //////////////////////\r\n\r\nimport { is } from '../../util/ModelUtil';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  collectLanes,\r\n  getLanesRoot\r\n} from '../modeling/util/LaneUtil';\r\n\r\nvar abs = Math.abs,\r\n    min = Math.min,\r\n    max = Math.max;\r\n\r\n\r\nfunction addToTrbl(trbl, attr, value, choice) {\r\n\r\n  var current = trbl[attr];\r\n\r\n  // make sure to set the value if it does not exist\r\n  // or apply the correct value by comparing against\r\n  // choice(value, currentValue)\r\n  trbl[attr] = current === undefined ? value : choice(value, current);\r\n}\r\n\r\nfunction addMin(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, min);\r\n}\r\n\r\nfunction addMax(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, max);\r\n}\r\n\r\n\r\nvar LANE_MIN_HEIGHT = 60,\r\n    LANE_MIN_WIDTH = 300,\r\n    LANE_RIGHT_PADDING = 20,\r\n    LANE_LEFT_PADDING = 50,\r\n    LANE_TOP_PADDING = 20,\r\n    LANE_BOTTOM_PADDING = 20;\r\n\r\n\r\nexport function getParticipantSizeConstraints(laneShape, resizeDirection, balanced) {\r\n\r\n  var lanesRoot = getLanesRoot(laneShape);\r\n\r\n  var isFirst = true,\r\n      isLast = true;\r\n\r\n  // max top/bottom size for lanes\r\n\r\n  var allLanes = collectLanes(lanesRoot, [ lanesRoot ]);\r\n\r\n  var laneTrbl = asTRBL(laneShape);\r\n\r\n  var maxTrbl = {},\r\n      minTrbl = {};\r\n\r\n  if (/e/.test(resizeDirection)) {\r\n    minTrbl.right = laneTrbl.left + LANE_MIN_WIDTH;\r\n  } else\r\n  if (/w/.test(resizeDirection)) {\r\n    minTrbl.left = laneTrbl.right - LANE_MIN_WIDTH;\r\n  }\r\n\r\n  allLanes.forEach(function(other) {\r\n\r\n    var otherTrbl = asTRBL(other);\r\n\r\n    if (/n/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.top < (laneTrbl.top - 10)) {\r\n        isFirst = false;\r\n      }\r\n\r\n      // max top size (based on next element)\r\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\r\n        addMax(maxTrbl, 'top', otherTrbl.top + LANE_MIN_HEIGHT);\r\n      }\r\n\r\n      // min top size (based on self or nested element)\r\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\r\n        addMin(minTrbl, 'top', otherTrbl.bottom - LANE_MIN_HEIGHT);\r\n      }\r\n    }\r\n\r\n    if (/s/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.bottom > (laneTrbl.bottom + 10)) {\r\n        isLast = false;\r\n      }\r\n\r\n      // max bottom size (based on previous element)\r\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\r\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - LANE_MIN_HEIGHT);\r\n      }\r\n\r\n      // min bottom size (based on self or nested element)\r\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\r\n        addMax(minTrbl, 'bottom', otherTrbl.top + LANE_MIN_HEIGHT);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  // max top/bottom/left/right size based on flow nodes\r\n\r\n  var flowElements = lanesRoot.children.filter(function(s) {\r\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\r\n  });\r\n\r\n  flowElements.forEach(function(flowElement) {\r\n\r\n    var flowElementTrbl = asTRBL(flowElement);\r\n\r\n    if (isFirst && /n/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'top', flowElementTrbl.top - LANE_TOP_PADDING);\r\n    }\r\n\r\n    if (/e/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'right', flowElementTrbl.right + LANE_RIGHT_PADDING);\r\n    }\r\n\r\n    if (isLast && /s/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + LANE_BOTTOM_PADDING);\r\n    }\r\n\r\n    if (/w/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'left', flowElementTrbl.left - LANE_LEFT_PADDING);\r\n    }\r\n  });\r\n\r\n\r\n  return {\r\n    min: minTrbl,\r\n    max: maxTrbl\r\n  };\r\n}","import BpmnSnapping from './BpmnSnapping';\r\n\r\nexport default {\r\n  __init__: [ 'snapping' ],\r\n  snapping: [ 'type', BpmnSnapping ]\r\n};","import {\r\n  assign,\r\n  map\r\n} from 'min-dash';\r\n\r\nimport { is } from '../util/ModelUtil';\r\n\r\nimport {\r\n  isLabelExternal,\r\n  getExternalLabelBounds\r\n} from '../util/LabelUtil';\r\n\r\nimport {\r\n  getMid\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  isExpanded\r\n} from '../util/DiUtil';\r\n\r\nimport {\r\n  elementToString\r\n} from './Util';\r\n\r\n\r\nfunction elementData(semantic, attrs) {\r\n  return assign({\r\n    id: semantic.id,\r\n    type: semantic.$type,\r\n    businessObject: semantic\r\n  }, attrs);\r\n}\r\n\r\nfunction collectWaypoints(waypoints) {\r\n  return map(waypoints, function(p) {\r\n    return { x: p.x, y: p.y };\r\n  });\r\n}\r\n\r\nfunction notYetDrawn(translate, semantic, refSemantic, property) {\r\n  return new Error(translate('element {element} referenced by {referenced}#{property} not yet drawn', {\r\n    element: elementToString(refSemantic),\r\n    referenced: elementToString(semantic),\r\n    property: property\r\n  }));\r\n}\r\n\r\n\r\n/**\r\n * An importer that adds bpmn elements to the canvas\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {ElementFactory} elementFactory\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Function} translate\r\n * @param {TextRenderer} textRenderer\r\n */\r\nexport default function BpmnImporter(\r\n    eventBus, canvas, elementFactory,\r\n    elementRegistry, translate, textRenderer) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._elementFactory = elementFactory;\r\n  this._elementRegistry = elementRegistry;\r\n  this._translate = translate;\r\n  this._textRenderer = textRenderer;\r\n}\r\n\r\nBpmnImporter.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'elementFactory',\r\n  'elementRegistry',\r\n  'translate',\r\n  'textRenderer'\r\n];\r\n\r\n\r\n/**\r\n * Add bpmn element (semantic) to the canvas onto the\r\n * specified parent shape.\r\n */\r\nBpmnImporter.prototype.add = function(semantic, parentElement) {\r\n\r\n  var di = semantic.di,\r\n      element,\r\n      translate = this._translate,\r\n      hidden;\r\n\r\n  var parentIndex;\r\n\r\n  // ROOT ELEMENT\r\n  // handle the special case that we deal with a\r\n  // invisible root element (process or collaboration)\r\n  if (is(di, 'bpmndi:BPMNPlane')) {\r\n\r\n    // add a virtual element (not being drawn)\r\n    element = this._elementFactory.createRoot(elementData(semantic));\r\n\r\n    this._canvas.setRootElement(element);\r\n  }\r\n\r\n  // SHAPE\r\n  else if (is(di, 'bpmndi:BPMNShape')) {\r\n\r\n    var collapsed = !isExpanded(semantic);\r\n    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);\r\n\r\n    var bounds = semantic.di.bounds;\r\n\r\n    element = this._elementFactory.createShape(elementData(semantic, {\r\n      collapsed: collapsed,\r\n      hidden: hidden,\r\n      x: Math.round(bounds.x),\r\n      y: Math.round(bounds.y),\r\n      width: Math.round(bounds.width),\r\n      height: Math.round(bounds.height)\r\n    }));\r\n\r\n    if (is(semantic, 'bpmn:BoundaryEvent')) {\r\n      this._attachBoundary(semantic, element);\r\n    }\r\n\r\n    // insert lanes behind other flow nodes (cf. #727)\r\n    if (is(semantic, 'bpmn:Lane')) {\r\n      parentIndex = 0;\r\n    }\r\n\r\n    if (is(semantic, 'bpmn:DataStoreReference')) {\r\n\r\n      // check wether data store is inside our outside of its semantic parent\r\n      if (!isPointInsideBBox(parentElement, getMid(bounds))) {\r\n        parentElement = this._canvas.getRootElement();\r\n      }\r\n    }\r\n\r\n    this._canvas.addShape(element, parentElement, parentIndex);\r\n  }\r\n\r\n  // CONNECTION\r\n  else if (is(di, 'bpmndi:BPMNEdge')) {\r\n\r\n    var source = this._getSource(semantic),\r\n        target = this._getTarget(semantic);\r\n\r\n    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);\r\n\r\n    element = this._elementFactory.createConnection(elementData(semantic, {\r\n      hidden: hidden,\r\n      source: source,\r\n      target: target,\r\n      waypoints: collectWaypoints(semantic.di.waypoint)\r\n    }));\r\n\r\n    if (is(semantic, 'bpmn:DataAssociation')) {\r\n\r\n      // render always on top; this ensures DataAssociations\r\n      // are rendered correctly across different \"hacks\" people\r\n      // love to model such as cross participant / sub process\r\n      // associations\r\n      parentElement = null;\r\n    }\r\n\r\n    // insert sequence flows behind other flow nodes (cf. #727)\r\n    if (is(semantic, 'bpmn:SequenceFlow')) {\r\n      parentIndex = 0;\r\n    }\r\n\r\n    this._canvas.addConnection(element, parentElement, parentIndex);\r\n  } else {\r\n    throw new Error(translate('unknown di {di} for element {semantic}', {\r\n      di: elementToString(di),\r\n      semantic: elementToString(semantic)\r\n    }));\r\n  }\r\n  // (optional) LABEL\r\n  if (isLabelExternal(semantic) && semantic.name) {\r\n    this.addLabel(semantic, element);\r\n  }\r\n\r\n\r\n  this._eventBus.fire('bpmnElement.added', { element: element });\r\n\r\n  return element;\r\n};\r\n\r\n\r\n/**\r\n * Attach the boundary element to the given host\r\n *\r\n * @param {ModdleElement} boundarySemantic\r\n * @param {djs.model.Base} boundaryElement\r\n */\r\nBpmnImporter.prototype._attachBoundary = function(boundarySemantic, boundaryElement) {\r\n  var translate = this._translate;\r\n  var hostSemantic = boundarySemantic.attachedToRef;\r\n\r\n  if (!hostSemantic) {\r\n    throw new Error(translate('missing {semantic}#attachedToRef', {\r\n      semantic: elementToString(boundarySemantic)\r\n    }));\r\n  }\r\n\r\n  var host = this._elementRegistry.get(hostSemantic.id),\r\n      attachers = host && host.attachers;\r\n\r\n  if (!host) {\r\n    throw notYetDrawn(translate, boundarySemantic, hostSemantic, 'attachedToRef');\r\n  }\r\n\r\n  // wire element.host <> host.attachers\r\n  boundaryElement.host = host;\r\n\r\n  if (!attachers) {\r\n    host.attachers = attachers = [];\r\n  }\r\n\r\n  if (attachers.indexOf(boundaryElement) === -1) {\r\n    attachers.push(boundaryElement);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * add label for an element\r\n */\r\nBpmnImporter.prototype.addLabel = function(semantic, element) {\r\n  var bounds,\r\n      text,\r\n      label;\r\n\r\n  bounds = getExternalLabelBounds(semantic, element);\r\n\r\n  text = semantic.name;\r\n\r\n  if (text) {\r\n    // get corrected bounds from actual layouted text\r\n    bounds = this._textRenderer.getExternalLabelBounds(bounds, text);\r\n  }\r\n\r\n  label = this._elementFactory.createLabel(elementData(semantic, {\r\n    id: semantic.id + '_label',\r\n    labelTarget: element,\r\n    type: 'label',\r\n    hidden: element.hidden || !semantic.name,\r\n    x: Math.round(bounds.x),\r\n    y: Math.round(bounds.y),\r\n    width: Math.round(bounds.width),\r\n    height: Math.round(bounds.height)\r\n  }));\r\n\r\n  return this._canvas.addShape(label, element.parent);\r\n};\r\n\r\n/**\r\n * Return the drawn connection end based on the given side.\r\n *\r\n * @throws {Error} if the end is not yet drawn\r\n */\r\nBpmnImporter.prototype._getEnd = function(semantic, side) {\r\n\r\n  var element,\r\n      refSemantic,\r\n      type = semantic.$type,\r\n      translate = this._translate;\r\n\r\n  refSemantic = semantic[side + 'Ref'];\r\n\r\n  // handle mysterious isMany DataAssociation#sourceRef\r\n  if (side === 'source' && type === 'bpmn:DataInputAssociation') {\r\n    refSemantic = refSemantic && refSemantic[0];\r\n  }\r\n\r\n  // fix source / target for DataInputAssociation / DataOutputAssociation\r\n  if (side === 'source' && type === 'bpmn:DataOutputAssociation' ||\r\n      side === 'target' && type === 'bpmn:DataInputAssociation') {\r\n\r\n    refSemantic = semantic.$parent;\r\n  }\r\n\r\n  element = refSemantic && this._getElement(refSemantic);\r\n\r\n  if (element) {\r\n    return element;\r\n  }\r\n\r\n  if (refSemantic) {\r\n    throw notYetDrawn(translate, semantic, refSemantic, side + 'Ref');\r\n  } else {\r\n    throw new Error(translate('{semantic}#{side} Ref not specified', {\r\n      semantic: elementToString(semantic),\r\n      side: side\r\n    }));\r\n  }\r\n};\r\n\r\nBpmnImporter.prototype._getSource = function(semantic) {\r\n  return this._getEnd(semantic, 'source');\r\n};\r\n\r\nBpmnImporter.prototype._getTarget = function(semantic) {\r\n  return this._getEnd(semantic, 'target');\r\n};\r\n\r\n\r\nBpmnImporter.prototype._getElement = function(semantic) {\r\n  return this._elementRegistry.get(semantic.id);\r\n};\r\n\r\n\r\n// helpers ////////////////////\r\n\r\nfunction isPointInsideBBox(bbox, point) {\r\n  var x = point.x,\r\n      y = point.y;\r\n\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n}","import {\r\n  filter,\r\n  find,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport Refs from 'object-refs';\r\n\r\nimport {\r\n  elementToString\r\n} from './Util';\r\n\r\nvar diRefs = new Refs(\r\n  { name: 'bpmnElement', enumerable: true },\r\n  { name: 'di', configurable: true }\r\n);\r\n\r\n/**\r\n * Returns true if an element has the given meta-model type\r\n *\r\n * @param  {ModdleElement}  element\r\n * @param  {String}         type\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction is(element, type) {\r\n  return element.$instanceOf(type);\r\n}\r\n\r\n\r\n/**\r\n * Find a suitable display candidate for definitions where the DI does not\r\n * correctly specify one.\r\n */\r\nfunction findDisplayCandidate(definitions) {\r\n  return find(definitions.rootElements, function(e) {\r\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\r\n  });\r\n}\r\n\r\n\r\nexport default function BpmnTreeWalker(handler, translate) {\r\n\r\n  // list of containers already walked\r\n  var handledElements = {};\r\n\r\n  // list of elements to handle deferred to ensure\r\n  // prerequisites are drawn\r\n  var deferred = [];\r\n\r\n  // Helpers //////////////////////\r\n\r\n  function contextual(fn, ctx) {\r\n    return function(e) {\r\n      fn(e, ctx);\r\n    };\r\n  }\r\n\r\n  function handled(element) {\r\n    handledElements[element.id] = element;\r\n  }\r\n\r\n  function isHandled(element) {\r\n    return handledElements[element.id];\r\n  }\r\n\r\n  function visit(element, ctx) {\r\n\r\n    var gfx = element.gfx;\r\n\r\n    // avoid multiple rendering of elements\r\n    if (gfx) {\r\n      throw new Error(\r\n        translate('already rendered {element}', { element: elementToString(element) })\r\n      );\r\n    }\r\n\r\n    // call handler\r\n    return handler.element(element, ctx);\r\n  }\r\n\r\n  function visitRoot(element, diagram) {\r\n    return handler.root(element, diagram);\r\n  }\r\n\r\n  function visitIfDi(element, ctx) {\r\n\r\n    try {\r\n      var gfx = element.di && visit(element, ctx);\r\n\r\n      handled(element);\r\n\r\n      return gfx;\r\n    } catch (e) {\r\n      logError(e.message, { element: element, error: e });\r\n\r\n      console.error(translate('failed to import {element}', { element: elementToString(element) }));\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  function logError(message, context) {\r\n    handler.error(message, context);\r\n  }\r\n\r\n  // DI handling //////////////////////\r\n\r\n  function registerDi(di) {\r\n    var bpmnElement = di.bpmnElement;\r\n\r\n    if (bpmnElement) {\r\n      if (bpmnElement.di) {\r\n        logError(\r\n          translate('multiple DI elements defined for {element}', {\r\n            element: elementToString(bpmnElement)\r\n          }),\r\n          { element: bpmnElement }\r\n        );\r\n      } else {\r\n        diRefs.bind(bpmnElement, 'di');\r\n        bpmnElement.di = di;\r\n      }\r\n    } else {\r\n      logError(\r\n        translate('no bpmnElement referenced in {element}', {\r\n          element: elementToString(di)\r\n        }),\r\n        { element: di }\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleDiagram(diagram) {\r\n    handlePlane(diagram.plane);\r\n  }\r\n\r\n  function handlePlane(plane) {\r\n    registerDi(plane);\r\n\r\n    forEach(plane.planeElement, handlePlaneElement);\r\n  }\r\n\r\n  function handlePlaneElement(planeElement) {\r\n    registerDi(planeElement);\r\n  }\r\n\r\n\r\n  // Semantic handling //////////////////////\r\n\r\n  /**\r\n   * Handle definitions and return the rendered diagram (if any)\r\n   *\r\n   * @param {ModdleElement} definitions to walk and import\r\n   * @param {ModdleElement} [diagram] specific diagram to import and display\r\n   *\r\n   * @throws {Error} if no diagram to display could be found\r\n   */\r\n  function handleDefinitions(definitions, diagram) {\r\n    // make sure we walk the correct bpmnElement\r\n\r\n    var diagrams = definitions.diagrams;\r\n\r\n    if (diagram && diagrams.indexOf(diagram) === -1) {\r\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\r\n    }\r\n\r\n    if (!diagram && diagrams && diagrams.length) {\r\n      diagram = diagrams[0];\r\n    }\r\n\r\n    // no diagram -> nothing to import\r\n    if (!diagram) {\r\n      throw new Error(translate('no diagram to display'));\r\n    }\r\n\r\n    // load DI from selected diagram only\r\n    handleDiagram(diagram);\r\n\r\n\r\n    var plane = diagram.plane;\r\n\r\n    if (!plane) {\r\n      throw new Error(translate(\r\n        'no plane for {element}',\r\n        { element: elementToString(diagram) }\r\n      ));\r\n    }\r\n\r\n    var rootElement = plane.bpmnElement;\r\n\r\n    // ensure we default to a suitable display candidate (process or collaboration),\r\n    // even if non is specified in DI\r\n    if (!rootElement) {\r\n      rootElement = findDisplayCandidate(definitions);\r\n\r\n      if (!rootElement) {\r\n        throw new Error(translate('no process or collaboration to display'));\r\n      } else {\r\n\r\n        logError(\r\n          translate('correcting missing bpmnElement on {plane} to {rootElement}', {\r\n            plane: elementToString(plane),\r\n            rootElement: elementToString(rootElement)\r\n          })\r\n        );\r\n\r\n        // correct DI on the fly\r\n        plane.bpmnElement = rootElement;\r\n        registerDi(plane);\r\n      }\r\n    }\r\n\r\n\r\n    var ctx = visitRoot(rootElement, plane);\r\n\r\n    if (is(rootElement, 'bpmn:Process')) {\r\n      handleProcess(rootElement, ctx);\r\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\r\n      handleCollaboration(rootElement, ctx);\r\n\r\n      // force drawing of everything not yet drawn that is part of the target DI\r\n      handleUnhandledProcesses(definitions.rootElements, ctx);\r\n    } else {\r\n      throw new Error(\r\n        translate('unsupported bpmnElement for {plane}: {rootElement}', {\r\n          plane: elementToString(plane),\r\n          rootElement: elementToString(rootElement)\r\n        })\r\n      );\r\n    }\r\n\r\n    // handle all deferred elements\r\n    handleDeferred(deferred);\r\n  }\r\n\r\n  function handleDeferred() {\r\n\r\n    var fn;\r\n\r\n    // drain deferred until empty\r\n    while (deferred.length) {\r\n      fn = deferred.shift();\r\n\r\n      fn();\r\n    }\r\n  }\r\n\r\n  function handleProcess(process, context) {\r\n    handleFlowElementsContainer(process, context);\r\n    handleIoSpecification(process.ioSpecification, context);\r\n\r\n    handleArtifacts(process.artifacts, context);\r\n\r\n    // log process handled\r\n    handled(process);\r\n  }\r\n\r\n  function handleUnhandledProcesses(rootElements) {\r\n\r\n    // walk through all processes that have not yet been drawn and draw them\r\n    // if they contain lanes with DI information.\r\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\r\n    var processes = filter(rootElements, function(e) {\r\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\r\n    });\r\n\r\n    processes.forEach(contextual(handleProcess));\r\n  }\r\n\r\n  function handleMessageFlow(messageFlow, context) {\r\n    visitIfDi(messageFlow, context);\r\n  }\r\n\r\n  function handleMessageFlows(messageFlows, context) {\r\n    forEach(messageFlows, contextual(handleMessageFlow, context));\r\n  }\r\n\r\n  function handleDataAssociation(association, context) {\r\n    visitIfDi(association, context);\r\n  }\r\n\r\n  function handleDataInput(dataInput, context) {\r\n    visitIfDi(dataInput, context);\r\n  }\r\n\r\n  function handleDataOutput(dataOutput, context) {\r\n    visitIfDi(dataOutput, context);\r\n  }\r\n\r\n  function handleArtifact(artifact, context) {\r\n\r\n    // bpmn:TextAnnotation\r\n    // bpmn:Group\r\n    // bpmn:Association\r\n\r\n    visitIfDi(artifact, context);\r\n  }\r\n\r\n  function handleArtifacts(artifacts, context) {\r\n\r\n    forEach(artifacts, function(e) {\r\n      if (is(e, 'bpmn:Association')) {\r\n        deferred.push(function() {\r\n          handleArtifact(e, context);\r\n        });\r\n      } else {\r\n        handleArtifact(e, context);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleIoSpecification(ioSpecification, context) {\r\n\r\n    if (!ioSpecification) {\r\n      return;\r\n    }\r\n\r\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\r\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\r\n  }\r\n\r\n  function handleSubProcess(subProcess, context) {\r\n    handleFlowElementsContainer(subProcess, context);\r\n    handleArtifacts(subProcess.artifacts, context);\r\n  }\r\n\r\n  function handleFlowNode(flowNode, context) {\r\n    var childCtx = visitIfDi(flowNode, context);\r\n\r\n    if (is(flowNode, 'bpmn:SubProcess')) {\r\n      handleSubProcess(flowNode, childCtx || context);\r\n    }\r\n\r\n    if (is(flowNode, 'bpmn:Activity')) {\r\n      handleIoSpecification(flowNode.ioSpecification, context);\r\n    }\r\n\r\n    // defer handling of associations\r\n    // affected types:\r\n    //\r\n    //   * bpmn:Activity\r\n    //   * bpmn:ThrowEvent\r\n    //   * bpmn:CatchEvent\r\n    //\r\n    deferred.push(function() {\r\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\r\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\r\n    });\r\n  }\r\n\r\n  function handleSequenceFlow(sequenceFlow, context) {\r\n    visitIfDi(sequenceFlow, context);\r\n  }\r\n\r\n  function handleDataElement(dataObject, context) {\r\n    visitIfDi(dataObject, context);\r\n  }\r\n\r\n  function handleBoundaryEvent(dataObject, context) {\r\n    visitIfDi(dataObject, context);\r\n  }\r\n\r\n  function handleLane(lane, context) {\r\n\r\n    deferred.push(function() {\r\n\r\n      var newContext = visitIfDi(lane, context);\r\n\r\n      if (lane.childLaneSet) {\r\n        handleLaneSet(lane.childLaneSet, newContext || context);\r\n      }\r\n\r\n      wireFlowNodeRefs(lane);\r\n    });\r\n  }\r\n\r\n  function handleLaneSet(laneSet, context) {\r\n    forEach(laneSet.lanes, contextual(handleLane, context));\r\n  }\r\n\r\n  function handleLaneSets(laneSets, context) {\r\n    forEach(laneSets, contextual(handleLaneSet, context));\r\n  }\r\n\r\n  function handleFlowElementsContainer(container, context) {\r\n    handleFlowElements(container.flowElements, context);\r\n\r\n    if (container.laneSets) {\r\n      handleLaneSets(container.laneSets, context);\r\n    }\r\n  }\r\n\r\n  function handleFlowElements(flowElements, context) {\r\n    forEach(flowElements, function(e) {\r\n      if (is(e, 'bpmn:SequenceFlow')) {\r\n        deferred.push(function() {\r\n          handleSequenceFlow(e, context);\r\n        });\r\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\r\n        deferred.unshift(function() {\r\n          handleBoundaryEvent(e, context);\r\n        });\r\n      } else if (is(e, 'bpmn:FlowNode')) {\r\n        handleFlowNode(e, context);\r\n      } else if (is(e, 'bpmn:DataObject')) {\r\n        // SKIP (assume correct referencing via DataObjectReference)\r\n      } else if (is(e, 'bpmn:DataStoreReference')) {\r\n        handleDataElement(e, context);\r\n      } else if (is(e, 'bpmn:DataObjectReference')) {\r\n        handleDataElement(e, context);\r\n      } else {\r\n        logError(\r\n          translate('unrecognized flowElement {element} in context {context}', {\r\n            element: elementToString(e),\r\n            context: (context ? elementToString(context.businessObject) : 'null')\r\n          }),\r\n          { element: e, context: context }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleParticipant(participant, context) {\r\n    var newCtx = visitIfDi(participant, context);\r\n\r\n    var process = participant.processRef;\r\n    if (process) {\r\n      handleProcess(process, newCtx || context);\r\n    }\r\n  }\r\n\r\n  function handleCollaboration(collaboration) {\r\n\r\n    forEach(collaboration.participants, contextual(handleParticipant));\r\n\r\n    handleArtifacts(collaboration.artifacts);\r\n\r\n    // handle message flows latest in the process\r\n    deferred.push(function() {\r\n      handleMessageFlows(collaboration.messageFlows);\r\n    });\r\n  }\r\n\r\n\r\n  function wireFlowNodeRefs(lane) {\r\n    // wire the virtual flowNodeRefs <-> relationship\r\n    forEach(lane.flowNodeRef, function(flowNode) {\r\n      var lanes = flowNode.get('lanes');\r\n\r\n      if (lanes) {\r\n        lanes.push(lane);\r\n      }\r\n    });\r\n  }\r\n\r\n  // API //////////////////////\r\n\r\n  return {\r\n    handleDeferred: handleDeferred,\r\n    handleDefinitions: handleDefinitions,\r\n    handleSubProcess: handleSubProcess,\r\n    registerDi: registerDi\r\n  };\r\n}","import BpmnTreeWalker from './BpmnTreeWalker';\r\n\r\n\r\n/**\r\n * Import the definitions into a diagram.\r\n *\r\n * Errors and warnings are reported through the specified callback.\r\n *\r\n * @param  {Diagram} diagram\r\n * @param  {ModdleElement} definitions\r\n * @param  {Function} done the callback, invoked with (err, [ warning ]) once the import is done\r\n */\r\nexport function importBpmnDiagram(diagram, definitions, done) {\r\n\r\n  var importer,\r\n      eventBus,\r\n      translate;\r\n\r\n  var error,\r\n      warnings = [];\r\n\r\n  /**\r\n   * Walk the diagram semantically, importing (=drawing)\r\n   * all elements you encounter.\r\n   *\r\n   * @param {ModdleElement} definitions\r\n   */\r\n  function render(definitions) {\r\n\r\n    var visitor = {\r\n\r\n      root: function(element) {\r\n        return importer.add(element);\r\n      },\r\n\r\n      element: function(element, parentShape) {\r\n        return importer.add(element, parentShape);\r\n      },\r\n\r\n      error: function(message, context) {\r\n        warnings.push({ message: message, context: context });\r\n      }\r\n    };\r\n\r\n    var walker = new BpmnTreeWalker(visitor, translate);\r\n\r\n    // traverse BPMN 2.0 document model,\r\n    // starting at definitions\r\n    walker.handleDefinitions(definitions);\r\n  }\r\n\r\n  try {\r\n    importer = diagram.get('bpmnImporter');\r\n    eventBus = diagram.get('eventBus');\r\n    translate = diagram.get('translate');\r\n\r\n    eventBus.fire('import.render.start', { definitions: definitions });\r\n\r\n    render(definitions);\r\n\r\n    eventBus.fire('import.render.complete', {\r\n      error: error,\r\n      warnings: warnings\r\n    });\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  done(error, warnings);\r\n}","export function elementToString(e) {\r\n  if (!e) {\r\n    return '<null>';\r\n  }\r\n\r\n  return '<' + e.$type + (e.id ? ' id=\"' + e.id : '') + '\" />';\r\n}","import translate from 'diagram-js/lib/i18n/translate';\r\n\r\nimport BpmnImporter from './BpmnImporter';\r\n\r\nexport default {\r\n  __depends__: [\r\n    translate\r\n  ],\r\n  bpmnImporter: [ 'type', BpmnImporter ]\r\n};","import {\r\n  is,\r\n  getBusinessObject\r\n} from './ModelUtil';\r\n\r\nimport {\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\nexport function isExpanded(element) {\r\n\r\n  if (is(element, 'bpmn:CallActivity')) {\r\n    return false;\r\n  }\r\n\r\n  if (is(element, 'bpmn:SubProcess')) {\r\n    return !!getBusinessObject(element).di.isExpanded;\r\n  }\r\n\r\n  if (is(element, 'bpmn:Participant')) {\r\n    return !!getBusinessObject(element).processRef;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isInterrupting(element) {\r\n  return element && getBusinessObject(element).isInterrupting !== false;\r\n}\r\n\r\nexport function isEventSubProcess(element) {\r\n  return element && !!getBusinessObject(element).triggeredByEvent;\r\n}\r\n\r\nexport function hasEventDefinition(element, eventType) {\r\n  var bo = getBusinessObject(element),\r\n      hasEventDefinition = false;\r\n\r\n  if (bo.eventDefinitions) {\r\n    forEach(bo.eventDefinitions, function(event) {\r\n      if (is(event, eventType)) {\r\n        hasEventDefinition = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  return hasEventDefinition;\r\n}\r\n\r\nexport function hasErrorEventDefinition(element) {\r\n  return hasEventDefinition(element, 'bpmn:ErrorEventDefinition');\r\n}\r\n\r\nexport function hasEscalationEventDefinition(element) {\r\n  return hasEventDefinition(element, 'bpmn:EscalationEventDefinition');\r\n}\r\n\r\nexport function hasCompensateEventDefinition(element) {\r\n  return hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\r\n}\r\n","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport { is } from './ModelUtil';\r\n\r\n\r\nexport var DEFAULT_LABEL_SIZE = {\r\n  width: 90,\r\n  height: 20\r\n};\r\n\r\nexport var FLOW_LABEL_INDENT = 15;\r\n\r\n\r\n/**\r\n * Returns true if the given semantic has an external label\r\n *\r\n * @param {BpmnElement} semantic\r\n * @return {Boolean} true if has label\r\n */\r\nexport function isLabelExternal(semantic) {\r\n  return is(semantic, 'bpmn:Event') ||\r\n         is(semantic, 'bpmn:Gateway') ||\r\n         is(semantic, 'bpmn:DataStoreReference') ||\r\n         is(semantic, 'bpmn:DataObjectReference') ||\r\n         is(semantic, 'bpmn:SequenceFlow') ||\r\n         is(semantic, 'bpmn:MessageFlow');\r\n}\r\n\r\n/**\r\n * Returns true if the given element has an external label\r\n *\r\n * @param {djs.model.shape} element\r\n * @return {Boolean} true if has label\r\n */\r\nexport function hasExternalLabel(element) {\r\n  return isLabel(element.label);\r\n}\r\n\r\n/**\r\n * Get the position for sequence flow labels\r\n *\r\n * @param  {Array<Point>} waypoints\r\n * @return {Point} the label position\r\n */\r\nexport function getFlowLabelPosition(waypoints) {\r\n\r\n  // get the waypoints mid\r\n  var mid = waypoints.length / 2 - 1;\r\n\r\n  var first = waypoints[Math.floor(mid)];\r\n  var second = waypoints[Math.ceil(mid + 0.01)];\r\n\r\n  // get position\r\n  var position = getWaypointsMid(waypoints);\r\n\r\n  // calculate angle\r\n  var angle = Math.atan((second.y - first.y) / (second.x - first.x));\r\n\r\n  var x = position.x,\r\n      y = position.y;\r\n\r\n  if (Math.abs(angle) < Math.PI / 2) {\r\n    y -= FLOW_LABEL_INDENT;\r\n  } else {\r\n    x += FLOW_LABEL_INDENT;\r\n  }\r\n\r\n  return { x: x, y: y };\r\n}\r\n\r\n\r\n/**\r\n * Get the middle of a number of waypoints\r\n *\r\n * @param  {Array<Point>} waypoints\r\n * @return {Point} the mid point\r\n */\r\nexport function getWaypointsMid(waypoints) {\r\n\r\n  var mid = waypoints.length / 2 - 1;\r\n\r\n  var first = waypoints[Math.floor(mid)];\r\n  var second = waypoints[Math.ceil(mid + 0.01)];\r\n\r\n  return {\r\n    x: first.x + (second.x - first.x) / 2,\r\n    y: first.y + (second.y - first.y) / 2\r\n  };\r\n}\r\n\r\n\r\nexport function getExternalLabelMid(element) {\r\n\r\n  if (element.waypoints) {\r\n    return getFlowLabelPosition(element.waypoints);\r\n  } else {\r\n    return {\r\n      x: element.x + element.width / 2,\r\n      y: element.y + element.height + DEFAULT_LABEL_SIZE.height / 2\r\n    };\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Returns the bounds of an elements label, parsed from the elements DI or\r\n * generated from its bounds.\r\n *\r\n * @param {BpmnElement} semantic\r\n * @param {djs.model.Base} element\r\n */\r\nexport function getExternalLabelBounds(semantic, element) {\r\n\r\n  var mid,\r\n      size,\r\n      bounds,\r\n      di = semantic.di,\r\n      label = di.label;\r\n\r\n  if (label && label.bounds) {\r\n    bounds = label.bounds;\r\n\r\n    size = {\r\n      width: Math.max(DEFAULT_LABEL_SIZE.width, bounds.width),\r\n      height: bounds.height\r\n    };\r\n\r\n    mid = {\r\n      x: bounds.x + bounds.width / 2,\r\n      y: bounds.y + bounds.height / 2\r\n    };\r\n  } else {\r\n\r\n    mid = getExternalLabelMid(element);\r\n\r\n    size = DEFAULT_LABEL_SIZE;\r\n  }\r\n\r\n  return assign({\r\n    x: mid.x - size.width / 2,\r\n    y: mid.y - size.height / 2\r\n  }, size);\r\n}\r\n\r\nexport function isLabel(element) {\r\n  return element && element.labelTarget;\r\n}\r\n","/**\r\n * Is an element of the given BPMN type?\r\n *\r\n * @param  {djs.model.Base|ModdleElement} element\r\n * @param  {String} type\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function is(element, type) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\r\n}\r\n\r\n\r\n/**\r\n * Return the business object for a given element.\r\n *\r\n * @param  {djs.model.Base|ModdleElement} element\r\n *\r\n * @return {ModdleElement}\r\n */\r\nexport function getBusinessObject(element) {\r\n  return (element && element.businessObject) || element;\r\n}","/**\r\n * This file must not be changed or exchanged.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\n\r\nimport {\r\n  domify,\r\n  delegate as domDelegate\r\n} from 'min-dom';\r\n\r\n\r\n// inlined ../../resources/logo.svg\r\nvar BPMNIO_LOGO_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 960 960\"><path fill=\"#fff\" d=\"M960 60v839c0 33-27 61-60 61H60c-33 0-60-27-60-60V60C0 27 27 0 60 0h839c34 0 61 27 61 60z\"/><path fill=\"#52b415\" d=\"M217 548a205 205 0 0 0-144 58 202 202 0 0 0-4 286 202 202 0 0 0 285 3 200 200 0 0 0 48-219 203 203 0 0 0-185-128zM752 6a206 206 0 0 0-192 285 206 206 0 0 0 269 111 207 207 0 0 0 111-260A204 204 0 0 0 752 6zM62 0A62 62 0 0 0 0 62v398l60 46a259 259 0 0 1 89-36c5-28 10-57 14-85l99 2 12 85a246 246 0 0 1 88 38l70-52 69 71-52 68c17 30 29 58 35 90l86 14-2 100-86 12a240 240 0 0 1-38 89l43 58h413c37 0 60-27 60-61V407a220 220 0 0 1-44 40l21 85-93 39-45-76a258 258 0 0 1-98 1l-45 76-94-39 22-85a298 298 0 0 1-70-69l-86 22-38-94 76-45a258 258 0 0 1-1-98l-76-45 40-94 85 22a271 271 0 0 1 41-47z\"/></svg>';\r\n\r\nvar BPMNIO_LOGO_URL = 'data:image/svg+xml,' + encodeURIComponent(BPMNIO_LOGO_SVG);\r\n\r\nexport var BPMNIO_IMG = '<img width=\"52\" height=\"52\" src=\"' + BPMNIO_LOGO_URL + '\" />';\r\n\r\nfunction css(attrs) {\r\n  return attrs.join(';');\r\n}\r\n\r\nvar LIGHTBOX_STYLES = css([\r\n  'z-index: 1001',\r\n  'position: fixed',\r\n  'top: 0',\r\n  'left: 0',\r\n  'right: 0',\r\n  'bottom: 0'\r\n]);\r\n\r\nvar BACKDROP_STYLES = css([\r\n  'width: 100%',\r\n  'height: 100%',\r\n  'background: rgba(0,0,0,0.2)'\r\n]);\r\n\r\nvar NOTICE_STYLES = css([\r\n  'position: absolute',\r\n  'left: 50%',\r\n  'top: 40%',\r\n  'margin: 0 -130px',\r\n  'width: 260px',\r\n  'padding: 10px',\r\n  'background: white',\r\n  'border: solid 1px #AAA',\r\n  'border-radius: 3px',\r\n  'font-family: Helvetica, Arial, sans-serif',\r\n  'font-size: 14px',\r\n  'line-height: 1.2em'\r\n]);\r\n\r\nvar LIGHTBOX_MARKUP =\r\n  '<div class=\"bjs-powered-by-lightbox\" style=\"' + LIGHTBOX_STYLES + '\">' +\r\n    '<div class=\"backdrop\" style=\"' + BACKDROP_STYLES + '\"></div>' +\r\n    '<div class=\"notice\" style=\"' + NOTICE_STYLES + '\">' +\r\n      '<a href=\"http://bpmn.io\" target=\"_blank\" style=\"float: left; margin-right: 10px\">' +\r\n        BPMNIO_IMG +\r\n      '</a>' +\r\n      'Web-based tooling for BPMN, DMN and CMMN diagrams ' +\r\n      'powered by <a href=\"http://bpmn.io\" target=\"_blank\">bpmn.io</a>.' +\r\n    '</div>' +\r\n  '</div>';\r\n\r\n\r\nvar lightbox;\r\n\r\nexport function open() {\r\n\r\n  if (!lightbox) {\r\n    lightbox = domify(LIGHTBOX_MARKUP);\r\n\r\n    domDelegate.bind(lightbox, '.backdrop', 'click', function(event) {\r\n      document.body.removeChild(lightbox);\r\n    });\r\n  }\r\n\r\n  document.body.appendChild(lightbox);\r\n}","import {\r\n  forEach,\r\n  filter,\r\n  some,\r\n  sortBy,\r\n  isArray\r\n} from 'min-dash';\r\n\r\nimport {\r\n  IGNORED_PROPERTIES\r\n} from './ModelCloneUtils';\r\n\r\n\r\nfunction isAllowedIn(extProp, type) {\r\n  var allowedIn = extProp.meta.allowedIn;\r\n\r\n  // '*' is a wildcard, which means any element is allowed to use this property\r\n  if (allowedIn.length === 1 && allowedIn[0] === '*') {\r\n    return true;\r\n  }\r\n\r\n  return allowedIn.indexOf(type) !== -1;\r\n}\r\n\r\nfunction isType(element, types) {\r\n  return some(types, function(type) {\r\n    return typeof element === type;\r\n  });\r\n}\r\n\r\n/**\r\n * A bpmn properties cloning interface\r\n *\r\n */\r\nexport default function ModelCloneHelper(eventBus, bpmnFactory) {\r\n  this._eventBus = eventBus;\r\n  this._bpmnFactory = bpmnFactory;\r\n}\r\n\r\n\r\nModelCloneHelper.prototype.clone = function(refElement, newElement, properties) {\r\n\r\n  var self = this;\r\n\r\n  // hasNestedProperty: property allows us to avoid ending up with empty (xml) tags\r\n  // f.ex: if extensionElements.values is empty, don't set it\r\n  var context = {\r\n    newElement: newElement,\r\n    hasNestedProperty: false\r\n  };\r\n\r\n  // we want the extensionElements to be cloned last\r\n  // so that they can check certain properties\r\n  properties = sortBy(properties, function(prop) {\r\n    return prop === 'bpmn:extensionElements';\r\n  });\r\n\r\n  forEach(properties, function(propName) {\r\n    var refElementProp = refElement.get(propName),\r\n        newElementProp = newElement.get(propName),\r\n        propDescriptor = newElement.$model.getPropertyDescriptor(newElement, propName),\r\n        newProperty, name;\r\n\r\n    // we're not interested in cloning:\r\n    // - same values from simple types\r\n    // - cloning id's\r\n    // - cloning reference elements\r\n    if (newElementProp === refElementProp) {\r\n      return;\r\n    }\r\n\r\n    if (propDescriptor && (propDescriptor.isId || propDescriptor.isReference)) {\r\n      return;\r\n    }\r\n\r\n    // if the property is of type 'boolean', 'string', 'number' or 'null', just set it\r\n    if (isType(refElementProp, [ 'boolean', 'string', 'number' ]) || refElementProp === null) {\r\n      newElement.set(propName, refElementProp);\r\n\r\n      return;\r\n    }\r\n\r\n    if (isArray(refElementProp)) {\r\n\r\n      forEach(refElementProp, function(extElement) {\r\n        var newProp;\r\n\r\n        context.refTopLevelProperty = extElement;\r\n\r\n        newProp = self._deepClone(extElement, context);\r\n\r\n        if (context.hasNestedProperty) {\r\n          newProp.$parent = newElement;\r\n\r\n          newElementProp.push(newProp);\r\n        }\r\n\r\n        context.hasNestedProperty = false;\r\n      });\r\n\r\n    } else {\r\n      name = propName.replace(/bpmn:/, '');\r\n\r\n      context.refTopLevelProperty = refElementProp;\r\n\r\n      newProperty = self._deepClone(refElementProp, context);\r\n\r\n      if (context.hasNestedProperty) {\r\n        newProperty.$parent = newElement;\r\n\r\n        newElement.set(name, newProperty);\r\n      }\r\n\r\n      context.hasNestedProperty = false;\r\n    }\r\n  });\r\n\r\n  return newElement;\r\n};\r\n\r\nModelCloneHelper.prototype._deepClone = function _deepClone(propertyElement, context) {\r\n  var self = this;\r\n\r\n  var eventBus = this._eventBus;\r\n  var bpmnFactory = this._bpmnFactory;\r\n\r\n  var newProp = bpmnFactory.create(propertyElement.$type);\r\n\r\n  var properties = filter(Object.keys(propertyElement), function(prop) {\r\n    var descriptor = newProp.$model.getPropertyDescriptor(newProp, prop);\r\n\r\n    if (descriptor && (descriptor.isId || descriptor.isReference)) {\r\n      return false;\r\n    }\r\n\r\n    // we need to make sure we don't clone certain properties\r\n    // which we cannot easily know if they hold references or not\r\n    if (IGNORED_PROPERTIES.indexOf(prop) !== -1) {\r\n      return false;\r\n    }\r\n\r\n    // make sure we don't copy the type\r\n    return prop !== '$type';\r\n  });\r\n\r\n  if (!properties.length) {\r\n    context.hasNestedProperty = true;\r\n  }\r\n\r\n  forEach(properties, function(propName) {\r\n    // check if the propertyElement has this property defined\r\n    if (propertyElement[propName] !== undefined &&\r\n       (propertyElement[propName].$type || isArray(propertyElement[propName]))) {\r\n\r\n      if (isArray(propertyElement[propName])) {\r\n        newProp[propName] = [];\r\n\r\n        forEach(propertyElement[propName], function(property) {\r\n          var extProp = propertyElement.$model.getTypeDescriptor(property.$type),\r\n              newDeepProp;\r\n\r\n          // we're not going to copy undefined types\r\n          if (!extProp) {\r\n            return;\r\n          }\r\n\r\n          var canClone = eventBus.fire('property.clone', {\r\n            newElement: context.newElement,\r\n            refTopLevelProperty: context.refTopLevelProperty,\r\n            propertyDescriptor: extProp\r\n          });\r\n\r\n          if (!canClone) {\r\n            // if can clone is 'undefined' or 'false'\r\n            // check for the meta information if it is allowed\r\n            if (propertyElement.$type === 'bpmn:ExtensionElements' &&\r\n                extProp.meta && extProp.meta.allowedIn &&\r\n                !isAllowedIn(extProp, context.newElement.$type)) {\r\n              return false;\r\n            }\r\n          }\r\n\r\n          newDeepProp = self._deepClone(property, context);\r\n\r\n          newDeepProp.$parent = newProp;\r\n\r\n          if (!newProp[propName]) {\r\n            newProp[propName] = [];\r\n          }\r\n\r\n          context.hasNestedProperty = true;\r\n\r\n          newProp[propName].push(newDeepProp);\r\n        });\r\n\r\n      } else if (propertyElement[propName].$type) {\r\n        newProp[propName] = self._deepClone(propertyElement[propName], context);\r\n\r\n        if (newProp[propName]) {\r\n          context.hasNestedProperty = true;\r\n\r\n          newProp[propName].$parent = newProp;\r\n        }\r\n      }\r\n    } else {\r\n      context.hasNestedProperty = true;\r\n\r\n      // just assign directly if it's a value\r\n      newProp[propName] = propertyElement[propName];\r\n    }\r\n  });\r\n\r\n  return newProp;\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * These are the properties that should be ignored when cloning elements.\r\n *\r\n * @type {Array}\r\n */\r\nexport var IGNORED_PROPERTIES = [\r\n  'lanes',\r\n  'incoming',\r\n  'outgoing',\r\n  'artifacts',\r\n  'default',\r\n  'flowElements',\r\n  'dataInputAssociations',\r\n  'dataOutputAssociations'\r\n];\r\n\r\n\r\nexport function getProperties(descriptor, keepDefault) {\r\n  var properties = [];\r\n\r\n  forEach(descriptor.properties, function(property) {\r\n\r\n    if (keepDefault && property.default) {\r\n      return;\r\n    }\r\n\r\n    properties.push(property.ns.name);\r\n  });\r\n\r\n  return properties;\r\n}","export {\r\n  default\r\n} from './lib/simple';","import {\r\n  isString,\r\n  isFunction,\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport Moddle from 'moddle';\r\n\r\nimport {\r\n  Reader,\r\n  Writer\r\n} from 'moddle-xml';\r\n\r\n\r\n/**\r\n * A sub class of {@link Moddle} with support for import and export of BPMN 2.0 xml files.\r\n *\r\n * @class BpmnModdle\r\n * @extends Moddle\r\n *\r\n * @param {Object|Array} packages to use for instantiating the model\r\n * @param {Object} [options] additional options to pass over\r\n */\r\nexport default function BpmnModdle(packages, options) {\r\n  Moddle.call(this, packages, options);\r\n}\r\n\r\nBpmnModdle.prototype = Object.create(Moddle.prototype);\r\n\r\n\r\n/**\r\n * Instantiates a BPMN model tree from a given xml string.\r\n *\r\n * @param {String}   xmlStr\r\n * @param {String}   [typeName='bpmn:Definitions'] name of the root element\r\n * @param {Object}   [options]  options to pass to the underlying reader\r\n * @param {Function} done       callback that is invoked with (err, result, parseContext)\r\n *                              once the import completes\r\n */\r\nBpmnModdle.prototype.fromXML = function(xmlStr, typeName, options, done) {\r\n\r\n  if (!isString(typeName)) {\r\n    done = options;\r\n    options = typeName;\r\n    typeName = 'bpmn:Definitions';\r\n  }\r\n\r\n  if (isFunction(options)) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var reader = new Reader(assign({ model: this, lax: true }, options));\r\n  var rootHandler = reader.handler(typeName);\r\n\r\n  reader.fromXML(xmlStr, rootHandler, done);\r\n};\r\n\r\n\r\n/**\r\n * Serializes a BPMN 2.0 object tree to XML.\r\n *\r\n * @param {String}   element    the root element, typically an instance of `bpmn:Definitions`\r\n * @param {Object}   [options]  to pass to the underlying writer\r\n * @param {Function} done       callback invoked with (err, xmlStr) once the import completes\r\n */\r\nBpmnModdle.prototype.toXML = function(element, options, done) {\r\n\r\n  if (isFunction(options)) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var writer = new Writer(options);\r\n\r\n  var result;\r\n  var err;\r\n\r\n  try {\r\n    result = writer.toXML(element);\r\n  } catch (e) {\r\n    err = e;\r\n  }\r\n\r\n  return done(err, result);\r\n};\r\n","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport BpmnModdle from './bpmn-moddle';\r\n\r\nimport BpmnPackage from '../resources/bpmn/json/bpmn.json';\r\nimport BpmnDiPackage from '../resources/bpmn/json/bpmndi.json';\r\nimport DcPackage from '../resources/bpmn/json/dc.json';\r\nimport DiPackage from '../resources/bpmn/json/di.json';\r\nimport BiocPackage from '../resources/bpmn-io/json/bioc.json';\r\n\r\nvar packages = {\r\n  bpmn: BpmnPackage,\r\n  bpmndi: BpmnDiPackage,\r\n  dc: DcPackage,\r\n  di: DiPackage,\r\n  bioc: BiocPackage\r\n};\r\n\r\nexport default function(additionalPackages, options) {\r\n  var pks = assign({}, packages, additionalPackages);\r\n\r\n  return new BpmnModdle(pks, options);\r\n}\r\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".element-properties label {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.element-properties label:after {\\r\\n  content: ': ';\\r\\n}\\r\\n\\r\\n.element-properties button + button {\\r\\n  margin-left: 10px;\\r\\n}\", \"\"]);\n\n","\"use strict\";\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function (useSourceMap) {\r\n  var list = []; // return the list of modules as css string\r\n\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = cssWithMappingToString(item, useSourceMap);\r\n\r\n      if (item[2]) {\r\n        return '@media ' + item[2] + '{' + content + '}';\r\n      } else {\r\n        return content;\r\n      }\r\n    }).join('');\r\n  }; // import a list of modules into the list\r\n\r\n\r\n  list.i = function (modules, mediaQuery) {\r\n    if (typeof modules === 'string') {\r\n      modules = [[null, modules, '']];\r\n    }\r\n\r\n    var alreadyImportedModules = {};\r\n\r\n    for (var i = 0; i < this.length; i++) {\r\n      var id = this[i][0];\r\n\r\n      if (id != null) {\r\n        alreadyImportedModules[id] = true;\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < modules.length; i++) {\r\n      var item = modules[i]; // skip already imported module\r\n      // this implementation is not 100% perfect for weird media query combinations\r\n      // when a module is imported multiple times with different media queries.\r\n      // I hope this will never occur (Hey this way we have smaller bundles)\r\n\r\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\r\n        if (mediaQuery && !item[2]) {\r\n          item[2] = mediaQuery;\r\n        } else if (mediaQuery) {\r\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\r\n        }\r\n\r\n        list.push(item);\r\n      }\r\n    }\r\n  };\r\n\r\n  return list;\r\n};\r\n\r\nfunction cssWithMappingToString(item, useSourceMap) {\r\n  var content = item[1] || '';\r\n  var cssMapping = item[3];\r\n\r\n  if (!cssMapping) {\r\n    return content;\r\n  }\r\n\r\n  if (useSourceMap && typeof btoa === 'function') {\r\n    var sourceMapping = toComment(cssMapping);\r\n    var sourceURLs = cssMapping.sources.map(function (source) {\r\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\r\n    });\r\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\r\n  }\r\n\r\n  return [content].join('\\n');\r\n} // Adapted from convert-source-map (MIT)\r\n\r\n\r\nfunction toComment(sourceMap) {\r\n  // eslint-disable-next-line no-undef\r\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\r\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\r\n  return '/*# ' + data + ' */';\r\n}","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\r\n;(function(root, factory) {\r\n\t// https://github.com/umdjs/umd/blob/master/returnExports.js\r\n\tif (typeof exports == 'object') {\r\n\t\t// For Node.js.\r\n\t\tmodule.exports = factory(root);\r\n\t} else if (typeof define == 'function' && define.amd) {\r\n\t\t// For AMD. Register as an anonymous module.\r\n\t\tdefine([], factory.bind(root, root));\r\n\t} else {\r\n\t\t// For browser globals (not exposing the function separately).\r\n\t\tfactory(root);\r\n\t}\r\n}(typeof global != 'undefined' ? global : this, function(root) {\r\n\r\n\tif (root.CSS && root.CSS.escape) {\r\n\t\treturn root.CSS.escape;\r\n\t}\r\n\r\n\t// https://drafts.csswg.org/cssom/#serialize-an-identifier\r\n\tvar cssEscape = function(value) {\r\n\t\tif (arguments.length == 0) {\r\n\t\t\tthrow new TypeError('`CSS.escape` requires an argument.');\r\n\t\t}\r\n\t\tvar string = String(value);\r\n\t\tvar length = string.length;\r\n\t\tvar index = -1;\r\n\t\tvar codeUnit;\r\n\t\tvar result = '';\r\n\t\tvar firstCodeUnit = string.charCodeAt(0);\r\n\t\twhile (++index < length) {\r\n\t\t\tcodeUnit = string.charCodeAt(index);\r\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\r\n\t\t\t// pairs, or lone surrogates.\r\n\r\n\t\t\t// If the character is NULL (U+0000), then the REPLACEMENT CHARACTER\r\n\t\t\t// (U+FFFD).\r\n\t\t\tif (codeUnit == 0x0000) {\r\n\t\t\t\tresult += '\\uFFFD';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\r\n\t\t\t\t// U+007F, […]\r\n\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\r\n\t\t\t\t// If the character is the first character and is in the range [0-9]\r\n\t\t\t\t// (U+0030 to U+0039), […]\r\n\t\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\r\n\t\t\t\t// If the character is the second character and is in the range [0-9]\r\n\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\r\n\t\t\t\t(\r\n\t\t\t\t\tindex == 1 &&\r\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\r\n\t\t\t\t\tfirstCodeUnit == 0x002D\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\r\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t// If the character is the first character and is a `-` (U+002D), and\r\n\t\t\t\t// there is no second character, […]\r\n\t\t\t\tindex == 0 &&\r\n\t\t\t\tlength == 1 &&\r\n\t\t\t\tcodeUnit == 0x002D\r\n\t\t\t) {\r\n\t\t\t\tresult += '\\\\' + string.charAt(index);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If the character is not handled by one of the above rules and is\r\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\r\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\r\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\r\n\t\t\tif (\r\n\t\t\t\tcodeUnit >= 0x0080 ||\r\n\t\t\t\tcodeUnit == 0x002D ||\r\n\t\t\t\tcodeUnit == 0x005F ||\r\n\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\r\n\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\r\n\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\r\n\t\t\t) {\r\n\t\t\t\t// the character itself\r\n\t\t\t\tresult += string.charAt(index);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, the escaped character.\r\n\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character\r\n\t\t\tresult += '\\\\' + string.charAt(index);\r\n\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tif (!root.CSS) {\r\n\t\troot.CSS = {};\r\n\t}\r\n\r\n\troot.CSS.escape = cssEscape;\r\n\treturn cssEscape;\r\n\r\n}));\r\n","import InteractionEventsModule from 'diagram-js/lib/features/interaction-events';\r\n\r\nimport DirectEditing from './lib/DirectEditing';\r\n\r\nexport default {\r\n  __depends__: [\r\n    InteractionEventsModule\r\n  ],\r\n  __init__: [ 'directEditing' ],\r\n  directEditing: [ 'type', DirectEditing ]\r\n};","import {\r\n  bind,\r\n  find\r\n} from 'min-dash';\r\n\r\nimport TextBox from './TextBox';\r\n\r\n\r\n/**\r\n * A direct editing component that allows users\r\n * to edit an elements text directly in the diagram\r\n *\r\n * @param {EventBus} eventBus the event bus\r\n */\r\nexport default function DirectEditing(eventBus, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n\r\n  this._providers = [];\r\n  this._textbox = new TextBox({\r\n    container: canvas.getContainer(),\r\n    keyHandler: bind(this._handleKey, this),\r\n    resizeHandler: bind(this._handleResize, this)\r\n  });\r\n}\r\n\r\nDirectEditing.$inject = [ 'eventBus', 'canvas' ];\r\n\r\n\r\n/**\r\n * Register a direct editing provider\r\n\r\n * @param {Object} provider the provider, must expose an #activate(element) method that returns\r\n *                          an activation context ({ bounds: {x, y, width, height }, text }) if\r\n *                          direct editing is available for the given element.\r\n *                          Additionally the provider must expose a #update(element, value) method\r\n *                          to receive direct editing updates.\r\n */\r\nDirectEditing.prototype.registerProvider = function(provider) {\r\n  this._providers.push(provider);\r\n};\r\n\r\n\r\n/**\r\n * Returns true if direct editing is currently active\r\n *\r\n * @return {Boolean}\r\n */\r\nDirectEditing.prototype.isActive = function() {\r\n  return !!this._active;\r\n};\r\n\r\n\r\n/**\r\n * Cancel direct editing, if it is currently active\r\n */\r\nDirectEditing.prototype.cancel = function() {\r\n  if (!this._active) {\r\n    return;\r\n  }\r\n\r\n  this._fire('cancel');\r\n  this.close();\r\n};\r\n\r\n\r\nDirectEditing.prototype._fire = function(event, context) {\r\n  this._eventBus.fire('directEditing.' + event, context || { active: this._active });\r\n};\r\n\r\nDirectEditing.prototype.close = function() {\r\n  this._textbox.destroy();\r\n\r\n  this._fire('deactivate');\r\n\r\n  this._active = null;\r\n\r\n  this.resizable = undefined;\r\n};\r\n\r\n\r\nDirectEditing.prototype.complete = function() {\r\n\r\n  var active = this._active;\r\n\r\n  if (!active) {\r\n    return;\r\n  }\r\n\r\n  var text = this.getValue();\r\n\r\n  var bounds = this.$textbox.getBoundingClientRect();\r\n\r\n  if (text !== active.context.text || this.resizable) {\r\n    active.provider.update(active.element, text, active.context.text, {\r\n      x: bounds.top,\r\n      y: bounds.left,\r\n      width: bounds.width,\r\n      height: bounds.height\r\n    });\r\n  }\r\n\r\n  this._fire('complete');\r\n\r\n  this.close();\r\n};\r\n\r\n\r\nDirectEditing.prototype.getValue = function() {\r\n  return this._textbox.getValue();\r\n};\r\n\r\n\r\nDirectEditing.prototype._handleKey = function(e) {\r\n\r\n  // stop bubble\r\n  e.stopPropagation();\r\n\r\n  var key = e.keyCode || e.charCode;\r\n\r\n  // ESC\r\n  if (key === 27) {\r\n    e.preventDefault();\r\n    return this.cancel();\r\n  }\r\n\r\n  // Enter\r\n  if (key === 13 && !e.shiftKey) {\r\n    e.preventDefault();\r\n    return this.complete();\r\n  }\r\n};\r\n\r\n\r\nDirectEditing.prototype._handleResize = function(event) {\r\n  this._fire('resize', event);\r\n};\r\n\r\n\r\n/**\r\n * Activate direct editing on the given element\r\n *\r\n * @param {Object} ElementDescriptor the descriptor for a shape or connection\r\n * @return {Boolean} true if the activation was possible\r\n */\r\nDirectEditing.prototype.activate = function(element) {\r\n  if (this.isActive()) {\r\n    this.cancel();\r\n  }\r\n\r\n  // the direct editing context\r\n  var context;\r\n\r\n  var provider = find(this._providers, function(p) {\r\n    return (context = p.activate(element)) ? p : null;\r\n  });\r\n\r\n  // check if activation took place\r\n  if (context) {\r\n    this.$textbox = this._textbox.create(\r\n      context.bounds,\r\n      context.style,\r\n      context.text,\r\n      context.options\r\n    );\r\n\r\n    this._active = {\r\n      element: element,\r\n      context: context,\r\n      provider: provider\r\n    };\r\n\r\n    if (context.options && context.options.resizable) {\r\n      this.resizable = true;\r\n    }\r\n\r\n    this._fire('activate');\r\n  }\r\n\r\n  return !!context;\r\n};","import {\r\n  assign,\r\n  bind,\r\n  pick\r\n} from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  query as domQuery,\r\n  event as domEvent,\r\n  remove as domRemove\r\n} from 'min-dom';\r\n\r\nvar min = Math.min,\r\n    max = Math.max;\r\n\r\nfunction preventDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction stopPropagation(e) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction isTextNode(node) {\r\n  return node.nodeType === Node.TEXT_NODE;\r\n}\r\n\r\nfunction toArray(nodeList) {\r\n  return [].slice.call(nodeList);\r\n}\r\n\r\n/**\r\n * Initializes a container for a content editable div.\r\n *\r\n * Structure:\r\n *\r\n * container\r\n *   parent\r\n *     content\r\n *     resize-handle\r\n *\r\n * @param {object} options\r\n * @param {DOMElement} options.container The DOM element to append the contentContainer to\r\n * @param {Function} options.keyHandler Handler for key events\r\n * @param {Function} options.resizeHandler Handler for resize events\r\n */\r\nexport default function TextBox(options) {\r\n  this.container = options.container;\r\n\r\n  this.parent = domify(\r\n    '<div class=\"djs-direct-editing-parent\">' +\r\n      '<div class=\"djs-direct-editing-content\" contenteditable=\"true\"></div>' +\r\n    '</div>'\r\n  );\r\n\r\n  this.content = domQuery('[contenteditable]', this.parent);\r\n\r\n  this.keyHandler = options.keyHandler || function() {};\r\n  this.resizeHandler = options.resizeHandler || function() {};\r\n\r\n  this.autoResize = bind(this.autoResize, this);\r\n  this.handlePaste = bind(this.handlePaste, this);\r\n}\r\n\r\n\r\n/**\r\n * Create a text box with the given position, size, style and text content\r\n *\r\n * @param {Object} bounds\r\n * @param {Number} bounds.x absolute x position\r\n * @param {Number} bounds.y absolute y position\r\n * @param {Number} [bounds.width] fixed width value\r\n * @param {Number} [bounds.height] fixed height value\r\n * @param {Number} [bounds.maxWidth] maximum width value\r\n * @param {Number} [bounds.maxHeight] maximum height value\r\n * @param {Number} [bounds.minWidth] minimum width value\r\n * @param {Number} [bounds.minHeight] minimum height value\r\n * @param {Object} [style]\r\n * @param {String} value text content\r\n *\r\n * @return {DOMElement} The created content DOM element\r\n */\r\nTextBox.prototype.create = function(bounds, style, value, options) {\r\n  var self = this;\r\n\r\n  var parent = this.parent,\r\n      content = this.content,\r\n      container = this.container;\r\n\r\n  options = this.options = options || {};\r\n\r\n  style = this.style = style || {};\r\n\r\n  var parentStyle = pick(style, [\r\n    'width',\r\n    'height',\r\n    'maxWidth',\r\n    'maxHeight',\r\n    'minWidth',\r\n    'minHeight',\r\n    'left',\r\n    'top',\r\n    'backgroundColor',\r\n    'position',\r\n    'overflow',\r\n    'border',\r\n    'wordWrap',\r\n    'textAlign',\r\n    'outline',\r\n    'transform'\r\n  ]);\r\n\r\n  assign(parent.style, {\r\n    width: bounds.width + 'px',\r\n    height: bounds.height + 'px',\r\n    maxWidth: bounds.maxWidth + 'px',\r\n    maxHeight: bounds.maxHeight + 'px',\r\n    minWidth: bounds.minWidth + 'px',\r\n    minHeight: bounds.minHeight + 'px',\r\n    left: bounds.x + 'px',\r\n    top: bounds.y + 'px',\r\n    backgroundColor: '#ffffff',\r\n    position: 'absolute',\r\n    overflow: 'visible',\r\n    border: '1px solid #ccc',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'normal',\r\n    textAlign: 'center',\r\n    outline: 'none'\r\n  }, parentStyle);\r\n\r\n  var contentStyle = pick(style, [\r\n    'fontFamily',\r\n    'fontSize',\r\n    'fontWeight',\r\n    'lineHeight',\r\n    'padding',\r\n    'paddingTop',\r\n    'paddingRight',\r\n    'paddingBottom',\r\n    'paddingLeft'\r\n  ]);\r\n\r\n  assign(content.style, {\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n    outline: 'none',\r\n    wordWrap: 'break-word'\r\n  }, contentStyle);\r\n\r\n  if (options.centerVertically) {\r\n    assign(content.style, {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      transform: 'translate(0, -50%)'\r\n    }, contentStyle);\r\n  }\r\n\r\n  content.innerText = value;\r\n\r\n  domEvent.bind(content, 'keydown', this.keyHandler);\r\n  domEvent.bind(content, 'mousedown', stopPropagation);\r\n  domEvent.bind(content, 'paste', self.handlePaste);\r\n\r\n  if (options.autoResize) {\r\n    domEvent.bind(content, 'input', this.autoResize);\r\n  }\r\n\r\n  if (options.resizable) {\r\n    this.resizable(style);\r\n  }\r\n\r\n  container.appendChild(parent);\r\n\r\n  // set selection to end of text\r\n  this.setSelection(content.lastChild, content.lastChild && content.lastChild.length);\r\n\r\n  return parent;\r\n};\r\n\r\n/**\r\n * Intercept paste events to remove formatting from pasted text.\r\n */\r\nTextBox.prototype.handlePaste = function(e) {\r\n  var self = this;\r\n\r\n  var options = this.options,\r\n      style = this.style;\r\n\r\n  e.preventDefault();\r\n\r\n  var text;\r\n\r\n  if (e.clipboardData) {\r\n\r\n    // Chrome, Firefox, Safari\r\n    text = e.clipboardData.getData('text/plain');\r\n  } else {\r\n\r\n    // Internet Explorer\r\n    text = window.clipboardData.getData('Text');\r\n  }\r\n\r\n  // insertHTML command not supported by Internet Explorer\r\n  var success = document.execCommand('insertHTML', false, text);\r\n\r\n  if (!success) {\r\n\r\n    // Internet Explorer\r\n    var range = this.getSelection(),\r\n        startContainer = range.startContainer,\r\n        endContainer = range.endContainer,\r\n        startOffset = range.startOffset,\r\n        endOffset = range.endOffset,\r\n        commonAncestorContainer = range.commonAncestorContainer;\r\n\r\n    var childNodesArray = toArray(commonAncestorContainer.childNodes);\r\n\r\n    var container,\r\n        offset;\r\n\r\n    if (isTextNode(commonAncestorContainer)) {\r\n      var containerTextContent = startContainer.textContent;\r\n\r\n      startContainer.textContent =\r\n        containerTextContent.substring(0, startOffset)\r\n        + text\r\n        + containerTextContent.substring(endOffset);\r\n\r\n      container = startContainer;\r\n      offset = startOffset + text.length;\r\n\r\n    } else if (startContainer === this.content && endContainer === this.content) {\r\n      var textNode = document.createTextNode(text);\r\n\r\n      this.content.insertBefore(textNode, childNodesArray[startOffset]);\r\n\r\n      container = textNode;\r\n      offset = textNode.textContent.length;\r\n    } else {\r\n      var startContainerChildIndex = childNodesArray.indexOf(startContainer),\r\n          endContainerChildIndex = childNodesArray.indexOf(endContainer);\r\n\r\n      childNodesArray.forEach(function(childNode, index) {\r\n\r\n        if (index === startContainerChildIndex) {\r\n          childNode.textContent =\r\n            startContainer.textContent.substring(0, startOffset) +\r\n            text +\r\n            endContainer.textContent.substring(endOffset);\r\n        } else if (index > startContainerChildIndex && index <= endContainerChildIndex) {\r\n          domRemove(childNode);\r\n        }\r\n      });\r\n\r\n      container = startContainer;\r\n      offset = startOffset + text.length;\r\n    }\r\n\r\n    if (container && offset !== undefined) {\r\n\r\n      // is necessary in Internet Explorer\r\n      setTimeout(function() {\r\n        self.setSelection(container, offset);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (options.autoResize) {\r\n    var hasResized = this.autoResize(style);\r\n\r\n    if (hasResized) {\r\n      this.resizeHandler(hasResized);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Automatically resize element vertically to fit its content.\r\n */\r\nTextBox.prototype.autoResize = function() {\r\n  var parent = this.parent,\r\n      content = this.content;\r\n\r\n  var fontSize = parseInt(this.style.fontSize) || 12;\r\n\r\n  if (content.scrollHeight > parent.offsetHeight ||\r\n      content.scrollHeight < parent.offsetHeight - fontSize) {\r\n    var bounds = parent.getBoundingClientRect();\r\n\r\n    var height = content.scrollHeight;\r\n    parent.style.height = height + 'px';\r\n\r\n    this.resizeHandler({\r\n      width: bounds.width,\r\n      height: bounds.height,\r\n      dx: 0,\r\n      dy: height - bounds.height\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Make an element resizable by adding a resize handle.\r\n */\r\nTextBox.prototype.resizable = function() {\r\n  var self = this;\r\n\r\n  var parent = this.parent,\r\n      resizeHandle = this.resizeHandle;\r\n\r\n  var minWidth = parseInt(this.style.minWidth) || 0,\r\n      minHeight = parseInt(this.style.minHeight) || 0,\r\n      maxWidth = parseInt(this.style.maxWidth) || Infinity,\r\n      maxHeight = parseInt(this.style.maxHeight) || Infinity;\r\n\r\n  if (!resizeHandle) {\r\n    resizeHandle = this.resizeHandle = domify(\r\n      '<div class=\"djs-direct-editing-resize-handle\"></div>'\r\n    );\r\n\r\n    var startX, startY, startWidth, startHeight;\r\n\r\n    var onMouseDown = function(e) {\r\n      preventDefault(e);\r\n      stopPropagation(e);\r\n\r\n      startX = e.clientX;\r\n      startY = e.clientY;\r\n\r\n      var bounds = parent.getBoundingClientRect();\r\n\r\n      startWidth = bounds.width;\r\n      startHeight = bounds.height;\r\n\r\n      domEvent.bind(document, 'mousemove', onMouseMove);\r\n      domEvent.bind(document, 'mouseup', onMouseUp);\r\n    };\r\n\r\n    var onMouseMove = function(e) {\r\n      preventDefault(e);\r\n      stopPropagation(e);\r\n\r\n      var newWidth = min(max(startWidth + e.clientX - startX, minWidth), maxWidth);\r\n      var newHeight = min(max(startHeight + e.clientY - startY, minHeight), maxHeight);\r\n\r\n      parent.style.width = newWidth + 'px';\r\n      parent.style.height = newHeight + 'px';\r\n\r\n      self.resizeHandler({\r\n        width: startWidth,\r\n        height: startHeight,\r\n        dx: e.clientX - startX,\r\n        dy: e.clientY - startY\r\n      });\r\n    };\r\n\r\n    var onMouseUp = function(e) {\r\n      preventDefault(e);\r\n      stopPropagation(e);\r\n\r\n      domEvent.unbind(document,'mousemove', onMouseMove, false);\r\n      domEvent.unbind(document, 'mouseup', onMouseUp, false);\r\n    };\r\n\r\n    domEvent.bind(resizeHandle, 'mousedown', onMouseDown);\r\n  }\r\n\r\n  assign(resizeHandle.style, {\r\n    position: 'absolute',\r\n    bottom: '0px',\r\n    right: '0px',\r\n    cursor: 'nwse-resize',\r\n    width: '0',\r\n    height: '0',\r\n    borderTop: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid transparent',\r\n    borderRight: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid #ccc',\r\n    borderBottom: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid #ccc',\r\n    borderLeft: (parseInt(this.style.fontSize) / 4 || 3) + 'px solid transparent'\r\n  });\r\n\r\n  parent.appendChild(resizeHandle);\r\n};\r\n\r\n\r\n/**\r\n * Clear content and style of the textbox, unbind listeners and\r\n * reset CSS style.\r\n */\r\nTextBox.prototype.destroy = function() {\r\n  var parent = this.parent,\r\n      content = this.content,\r\n      resizeHandle = this.resizeHandle;\r\n\r\n  // clear content\r\n  content.innerText = '';\r\n\r\n  // clear styles\r\n  parent.removeAttribute('style');\r\n  content.removeAttribute('style');\r\n\r\n  domEvent.unbind(content, 'keydown', this.keyHandler);\r\n  domEvent.unbind(content, 'mousedown', stopPropagation);\r\n  domEvent.unbind(content, 'input', this.autoResize);\r\n  domEvent.unbind(content, 'paste', this.handlePaste);\r\n\r\n  if (resizeHandle) {\r\n    resizeHandle.removeAttribute('style');\r\n\r\n    domRemove(resizeHandle);\r\n  }\r\n\r\n  domRemove(parent);\r\n};\r\n\r\n\r\nTextBox.prototype.getValue = function() {\r\n  return this.content.innerText;\r\n};\r\n\r\n\r\nTextBox.prototype.getSelection = function() {\r\n  var selection = window.getSelection(),\r\n      range = selection.getRangeAt(0);\r\n\r\n  return range;\r\n};\r\n\r\n\r\nTextBox.prototype.setSelection = function(container, offset) {\r\n  var range = document.createRange();\r\n\r\n  if (container === null) {\r\n    range.selectNodeContents(this.content);\r\n  } else {\r\n    range.setStart(container, offset);\r\n    range.setEnd(container, offset);\r\n  }\r\n\r\n  var selection = window.getSelection();\r\n\r\n  selection.removeAllRanges();\r\n  selection.addRange(range);\r\n};\r\n","export { default } from './lib/Diagram';","import { Injector } from 'didi';\r\n\r\nimport CoreModule from './core';\r\n\r\n\r\n/**\r\n * Bootstrap an injector from a list of modules, instantiating a number of default components\r\n *\r\n * @ignore\r\n * @param {Array<didi.Module>} bootstrapModules\r\n *\r\n * @return {didi.Injector} a injector to use to access the components\r\n */\r\nfunction bootstrap(bootstrapModules) {\r\n\r\n  var modules = [],\r\n      components = [];\r\n\r\n  function hasModule(m) {\r\n    return modules.indexOf(m) >= 0;\r\n  }\r\n\r\n  function addModule(m) {\r\n    modules.push(m);\r\n  }\r\n\r\n  function visit(m) {\r\n    if (hasModule(m)) {\r\n      return;\r\n    }\r\n\r\n    (m.__depends__ || []).forEach(visit);\r\n\r\n    if (hasModule(m)) {\r\n      return;\r\n    }\r\n\r\n    addModule(m);\r\n\r\n    (m.__init__ || []).forEach(function(c) {\r\n      components.push(c);\r\n    });\r\n  }\r\n\r\n  bootstrapModules.forEach(visit);\r\n\r\n  var injector = new Injector(modules);\r\n\r\n  components.forEach(function(c) {\r\n\r\n    try {\r\n      // eagerly resolve component (fn or string)\r\n      injector[typeof c === 'string' ? 'get' : 'invoke'](c);\r\n    } catch (e) {\r\n      console.error('Failed to instantiate component');\r\n      console.error(e.stack);\r\n\r\n      throw e;\r\n    }\r\n  });\r\n\r\n  return injector;\r\n}\r\n\r\n/**\r\n * Creates an injector from passed options.\r\n *\r\n * @ignore\r\n * @param  {Object} options\r\n * @return {didi.Injector}\r\n */\r\nfunction createInjector(options) {\r\n\r\n  options = options || {};\r\n\r\n  var configModule = {\r\n    'config': ['value', options]\r\n  };\r\n\r\n  var modules = [ configModule, CoreModule ].concat(options.modules || []);\r\n\r\n  return bootstrap(modules);\r\n}\r\n\r\n\r\n/**\r\n * The main diagram-js entry point that bootstraps the diagram with the given\r\n * configuration.\r\n *\r\n * To register extensions with the diagram, pass them as Array<didi.Module> to the constructor.\r\n *\r\n * @class djs.Diagram\r\n * @memberOf djs\r\n * @constructor\r\n *\r\n * @example\r\n *\r\n * <caption>Creating a plug-in that logs whenever a shape is added to the canvas.</caption>\r\n *\r\n * // plug-in implemenentation\r\n * function MyLoggingPlugin(eventBus) {\r\n *   eventBus.on('shape.added', function(event) {\r\n *     console.log('shape ', event.shape, ' was added to the diagram');\r\n *   });\r\n * }\r\n *\r\n * // export as module\r\n * export default {\r\n *   __init__: [ 'myLoggingPlugin' ],\r\n *     myLoggingPlugin: [ 'type', MyLoggingPlugin ]\r\n * };\r\n *\r\n *\r\n * // instantiate the diagram with the new plug-in\r\n *\r\n * import MyLoggingModule from 'path-to-my-logging-plugin';\r\n *\r\n * var diagram = new Diagram({\r\n *   modules: [\r\n *     MyLoggingModule\r\n *   ]\r\n * });\r\n *\r\n * diagram.invoke([ 'canvas', function(canvas) {\r\n *   // add shape to drawing canvas\r\n *   canvas.addShape({ x: 10, y: 10 });\r\n * });\r\n *\r\n * // 'shape ... was added to the diagram' logged to console\r\n *\r\n * @param {Object} options\r\n * @param {Array<didi.Module>} [options.modules] external modules to instantiate with the diagram\r\n * @param {didi.Injector} [injector] an (optional) injector to bootstrap the diagram with\r\n */\r\nexport default function Diagram(options, injector) {\r\n\r\n  // create injector unless explicitly specified\r\n  this.injector = injector = injector || createInjector(options);\r\n\r\n  // API\r\n\r\n  /**\r\n   * Resolves a diagram service\r\n   *\r\n   * @method Diagram#get\r\n   *\r\n   * @param {String} name the name of the diagram service to be retrieved\r\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\r\n   */\r\n  this.get = injector.get;\r\n\r\n  /**\r\n   * Executes a function into which diagram services are injected\r\n   *\r\n   * @method Diagram#invoke\r\n   *\r\n   * @param {Function|Object[]} fn the function to resolve\r\n   * @param {Object} locals a number of locals to use to resolve certain dependencies\r\n   */\r\n  this.invoke = injector.invoke;\r\n\r\n  // init\r\n\r\n  // indicate via event\r\n\r\n\r\n  /**\r\n   * An event indicating that all plug-ins are loaded.\r\n   *\r\n   * Use this event to fire other events to interested plug-ins\r\n   *\r\n   * @memberOf Diagram\r\n   *\r\n   * @event diagram.init\r\n   *\r\n   * @example\r\n   *\r\n   * eventBus.on('diagram.init', function() {\r\n   *   eventBus.fire('my-custom-event', { foo: 'BAR' });\r\n   * });\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this.get('eventBus').fire('diagram.init');\r\n}\r\n\r\n\r\n/**\r\n * Destroys the diagram\r\n *\r\n * @method  Diagram#destroy\r\n */\r\nDiagram.prototype.destroy = function() {\r\n  this.get('eventBus').fire('diagram.destroy');\r\n};\r\n\r\n/**\r\n * Clear the diagram, removing all contents.\r\n */\r\nDiagram.prototype.clear = function() {\r\n  this.get('eventBus').fire('diagram.clear');\r\n};\r\n","import {\r\n  forEach,\r\n  isFunction,\r\n  isArray,\r\n  isNumber,\r\n  isObject\r\n} from 'min-dash';\r\n\r\n\r\nvar DEFAULT_PRIORITY = 1000;\r\n\r\n/**\r\n * A utility that can be used to plug-in into the command execution for\r\n * extension and/or validation.\r\n *\r\n * @param {EventBus} eventBus\r\n *\r\n * @example\r\n *\r\n * import inherits from 'inherits';\r\n *\r\n * import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n *\r\n * function CommandLogger(eventBus) {\r\n *   CommandInterceptor.call(this, eventBus);\r\n *\r\n *   this.preExecute(function(event) {\r\n *     console.log('command pre-execute', event);\r\n *   });\r\n * }\r\n *\r\n * inherits(CommandLogger, CommandInterceptor);\r\n *\r\n */\r\nexport default function CommandInterceptor(eventBus) {\r\n  this._eventBus = eventBus;\r\n}\r\n\r\nCommandInterceptor.$inject = [ 'eventBus' ];\r\n\r\nfunction unwrapEvent(fn, that) {\r\n  return function(event) {\r\n    return fn.call(that || null, event.context, event.command, event);\r\n  };\r\n}\r\n\r\n/**\r\n * Register an interceptor for a command execution\r\n *\r\n * @param {String|Array<String>} [events] list of commands to register on\r\n * @param {String} [hook] command hook, i.e. preExecute, executed to listen on\r\n * @param {Number} [priority] the priority on which to hook into the execution\r\n * @param {Function} handlerFn interceptor to be invoked with (event)\r\n * @param {Boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\r\n *                          listener instead\r\n * @param {Object} [that] Pass context (`this`) to the handler function\r\n */\r\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\r\n\r\n  if (isFunction(hook) || isNumber(hook)) {\r\n    that = unwrap;\r\n    unwrap = handlerFn;\r\n    handlerFn = priority;\r\n    priority = hook;\r\n    hook = null;\r\n  }\r\n\r\n  if (isFunction(priority)) {\r\n    that = unwrap;\r\n    unwrap = handlerFn;\r\n    handlerFn = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  if (isObject(unwrap)) {\r\n    that = unwrap;\r\n    unwrap = false;\r\n  }\r\n\r\n  if (!isFunction(handlerFn)) {\r\n    throw new Error('handlerFn must be a function');\r\n  }\r\n\r\n  if (!isArray(events)) {\r\n    events = [ events ];\r\n  }\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  forEach(events, function(event) {\r\n    // concat commandStack(.event)?(.hook)?\r\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\r\n\r\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\r\n  });\r\n};\r\n\r\n\r\nvar hooks = [\r\n  'canExecute',\r\n  'preExecute',\r\n  'preExecuted',\r\n  'execute',\r\n  'executed',\r\n  'postExecute',\r\n  'postExecuted',\r\n  'revert',\r\n  'reverted'\r\n];\r\n\r\n/*\r\n * Install hook shortcuts\r\n *\r\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\r\n * which will in term forward to CommandInterceptor#on.\r\n */\r\nforEach(hooks, function(hook) {\r\n\r\n  /**\r\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\r\n   *\r\n   * A named hook for plugging into the command execution\r\n   *\r\n   * @param {String|Array<String>} [events] list of commands to register on\r\n   * @param {Number} [priority] the priority on which to hook into the execution\r\n   * @param {Function} handlerFn interceptor to be invoked with (event)\r\n   * @param {Boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\r\n   *                          listener instead\r\n   * @param {Object} [that] Pass context (`this`) to the handler function\r\n   */\r\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\r\n\r\n    if (isFunction(events) || isNumber(events)) {\r\n      that = unwrap;\r\n      unwrap = handlerFn;\r\n      handlerFn = priority;\r\n      priority = events;\r\n      events = null;\r\n    }\r\n\r\n    this.on(events, hook, priority, handlerFn, unwrap, that);\r\n  };\r\n});\r\n","import {\r\n  uniqueBy,\r\n  isArray\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * A service that offers un- and redoable execution of commands.\r\n *\r\n * The command stack is responsible for executing modeling actions\r\n * in a un- and redoable manner. To do this it delegates the actual\r\n * command execution to {@link CommandHandler}s.\r\n *\r\n * Command handlers provide {@link CommandHandler#execute(ctx)} and\r\n * {@link CommandHandler#revert(ctx)} methods to un- and redo a command\r\n * identified by a command context.\r\n *\r\n *\r\n * ## Life-Cycle events\r\n *\r\n * In the process the command stack fires a number of life-cycle events\r\n * that other components to participate in the command execution.\r\n *\r\n *    * preExecute\r\n *    * preExecuted\r\n *    * execute\r\n *    * executed\r\n *    * postExecute\r\n *    * postExecuted\r\n *    * revert\r\n *    * reverted\r\n *\r\n * A special event is used for validating, whether a command can be\r\n * performed prior to its execution.\r\n *\r\n *    * canExecute\r\n *\r\n * Each of the events is fired as `commandStack.{eventName}` and\r\n * `commandStack.{commandName}.{eventName}`, respectively. This gives\r\n * components fine grained control on where to hook into.\r\n *\r\n * The event object fired transports `command`, the name of the\r\n * command and `context`, the command context.\r\n *\r\n *\r\n * ## Creating Command Handlers\r\n *\r\n * Command handlers should provide the {@link CommandHandler#execute(ctx)}\r\n * and {@link CommandHandler#revert(ctx)} methods to implement\r\n * redoing and undoing of a command.\r\n *\r\n * A command handler _must_ ensure undo is performed properly in order\r\n * not to break the undo chain. It must also return the shapes that\r\n * got changed during the `execute` and `revert` operations.\r\n *\r\n * Command handlers may execute other modeling operations (and thus\r\n * commands) in their `preExecute` and `postExecute` phases. The command\r\n * stack will properly group all commands together into a logical unit\r\n * that may be re- and undone atomically.\r\n *\r\n * Command handlers must not execute other commands from within their\r\n * core implementation (`execute`, `revert`).\r\n *\r\n *\r\n * ## Change Tracking\r\n *\r\n * During the execution of the CommandStack it will keep track of all\r\n * elements that have been touched during the command's execution.\r\n *\r\n * At the end of the CommandStack execution it will notify interested\r\n * components via an 'elements.changed' event with all the dirty\r\n * elements.\r\n *\r\n * The event can be picked up by components that are interested in the fact\r\n * that elements have been changed. One use case for this is updating\r\n * their graphical representation after moving / resizing or deletion.\r\n *\r\n * @see CommandHandler\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Injector} injector\r\n */\r\nexport default function CommandStack(eventBus, injector) {\r\n\r\n  /**\r\n   * A map of all registered command handlers.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._handlerMap = {};\r\n\r\n  /**\r\n   * A stack containing all re/undoable actions on the diagram\r\n   *\r\n   * @type {Array<Object>}\r\n   */\r\n  this._stack = [];\r\n\r\n  /**\r\n   * The current index on the stack\r\n   *\r\n   * @type {Number}\r\n   */\r\n  this._stackIdx = -1;\r\n\r\n  /**\r\n   * Current active commandStack execution\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._currentExecution = {\r\n    actions: [],\r\n    dirty: []\r\n  };\r\n\r\n\r\n  this._injector = injector;\r\n  this._eventBus = eventBus;\r\n\r\n  this._uid = 1;\r\n\r\n  eventBus.on([\r\n    'diagram.destroy',\r\n    'diagram.clear'\r\n  ], function() {\r\n    this.clear(false);\r\n  }, this);\r\n}\r\n\r\nCommandStack.$inject = [ 'eventBus', 'injector' ];\r\n\r\n\r\n/**\r\n * Execute a command\r\n *\r\n * @param {String} command the command to execute\r\n * @param {Object} context the environment to execute the command in\r\n */\r\nCommandStack.prototype.execute = function(command, context) {\r\n  if (!command) {\r\n    throw new Error('command required');\r\n  }\r\n\r\n  var action = { command: command, context: context };\r\n\r\n  this._pushAction(action);\r\n  this._internalExecute(action);\r\n  this._popAction(action);\r\n};\r\n\r\n\r\n/**\r\n * Ask whether a given command can be executed.\r\n *\r\n * Implementors may hook into the mechanism on two ways:\r\n *\r\n *   * in event listeners:\r\n *\r\n *     Users may prevent the execution via an event listener.\r\n *     It must prevent the default action for `commandStack.(<command>.)canExecute` events.\r\n *\r\n *   * in command handlers:\r\n *\r\n *     If the method {@link CommandHandler#canExecute} is implemented in a handler\r\n *     it will be called to figure out whether the execution is allowed.\r\n *\r\n * @param  {String} command the command to execute\r\n * @param  {Object} context the environment to execute the command in\r\n *\r\n * @return {Boolean} true if the command can be executed\r\n */\r\nCommandStack.prototype.canExecute = function(command, context) {\r\n\r\n  var action = { command: command, context: context };\r\n\r\n  var handler = this._getHandler(command);\r\n\r\n  var result = this._fire(command, 'canExecute', action);\r\n\r\n  // handler#canExecute will only be called if no listener\r\n  // decided on a result already\r\n  if (result === undefined) {\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    if (handler.canExecute) {\r\n      result = handler.canExecute(context);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n\r\n/**\r\n * Clear the command stack, erasing all undo / redo history\r\n */\r\nCommandStack.prototype.clear = function(emit) {\r\n  this._stack.length = 0;\r\n  this._stackIdx = -1;\r\n\r\n  if (emit !== false) {\r\n    this._fire('changed');\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Undo last command(s)\r\n */\r\nCommandStack.prototype.undo = function() {\r\n  var action = this._getUndoAction(),\r\n      next;\r\n\r\n  if (action) {\r\n    this._pushAction(action);\r\n\r\n    while (action) {\r\n      this._internalUndo(action);\r\n      next = this._getUndoAction();\r\n\r\n      if (!next || next.id !== action.id) {\r\n        break;\r\n      }\r\n\r\n      action = next;\r\n    }\r\n\r\n    this._popAction();\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Redo last command(s)\r\n */\r\nCommandStack.prototype.redo = function() {\r\n  var action = this._getRedoAction(),\r\n      next;\r\n\r\n  if (action) {\r\n    this._pushAction(action);\r\n\r\n    while (action) {\r\n      this._internalExecute(action, true);\r\n      next = this._getRedoAction();\r\n\r\n      if (!next || next.id !== action.id) {\r\n        break;\r\n      }\r\n\r\n      action = next;\r\n    }\r\n\r\n    this._popAction();\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Register a handler instance with the command stack\r\n *\r\n * @param {String} command\r\n * @param {CommandHandler} handler\r\n */\r\nCommandStack.prototype.register = function(command, handler) {\r\n  this._setHandler(command, handler);\r\n};\r\n\r\n\r\n/**\r\n * Register a handler type with the command stack\r\n * by instantiating it and injecting its dependencies.\r\n *\r\n * @param {String} command\r\n * @param {Function} a constructor for a {@link CommandHandler}\r\n */\r\nCommandStack.prototype.registerHandler = function(command, handlerCls) {\r\n\r\n  if (!command || !handlerCls) {\r\n    throw new Error('command and handlerCls must be defined');\r\n  }\r\n\r\n  var handler = this._injector.instantiate(handlerCls);\r\n  this.register(command, handler);\r\n};\r\n\r\nCommandStack.prototype.canUndo = function() {\r\n  return !!this._getUndoAction();\r\n};\r\n\r\nCommandStack.prototype.canRedo = function() {\r\n  return !!this._getRedoAction();\r\n};\r\n\r\n// stack access  //////////////////////\r\n\r\nCommandStack.prototype._getRedoAction = function() {\r\n  return this._stack[this._stackIdx + 1];\r\n};\r\n\r\n\r\nCommandStack.prototype._getUndoAction = function() {\r\n  return this._stack[this._stackIdx];\r\n};\r\n\r\n\r\n// internal functionality //////////////////////\r\n\r\nCommandStack.prototype._internalUndo = function(action) {\r\n  var self = this;\r\n\r\n  var command = action.command,\r\n      context = action.context;\r\n\r\n  var handler = this._getHandler(command);\r\n\r\n  // guard against illegal nested command stack invocations\r\n  this._atomicDo(function() {\r\n    self._fire(command, 'revert', action);\r\n\r\n    if (handler.revert) {\r\n      self._markDirty(handler.revert(context));\r\n    }\r\n\r\n    self._revertedAction(action);\r\n\r\n    self._fire(command, 'reverted', action);\r\n  });\r\n};\r\n\r\n\r\nCommandStack.prototype._fire = function(command, qualifier, event) {\r\n  if (arguments.length < 3) {\r\n    event = qualifier;\r\n    qualifier = null;\r\n  }\r\n\r\n  var names = qualifier ? [ command + '.' + qualifier, qualifier ] : [ command ],\r\n      i, name, result;\r\n\r\n  event = this._eventBus.createEvent(event);\r\n\r\n  for (i = 0; (name = names[i]); i++) {\r\n    result = this._eventBus.fire('commandStack.' + name, event);\r\n\r\n    if (event.cancelBubble) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nCommandStack.prototype._createId = function() {\r\n  return this._uid++;\r\n};\r\n\r\nCommandStack.prototype._atomicDo = function(fn) {\r\n\r\n  var execution = this._currentExecution;\r\n\r\n  execution.atomic = true;\r\n\r\n  try {\r\n    fn();\r\n  } finally {\r\n    execution.atomic = false;\r\n  }\r\n};\r\n\r\nCommandStack.prototype._internalExecute = function(action, redo) {\r\n  var self = this;\r\n\r\n  var command = action.command,\r\n      context = action.context;\r\n\r\n  var handler = this._getHandler(command);\r\n\r\n  if (!handler) {\r\n    throw new Error('no command handler registered for <' + command + '>');\r\n  }\r\n\r\n  this._pushAction(action);\r\n\r\n  if (!redo) {\r\n    this._fire(command, 'preExecute', action);\r\n\r\n    if (handler.preExecute) {\r\n      handler.preExecute(context);\r\n    }\r\n\r\n    this._fire(command, 'preExecuted', action);\r\n  }\r\n\r\n  // guard against illegal nested command stack invocations\r\n  this._atomicDo(function() {\r\n\r\n    self._fire(command, 'execute', action);\r\n\r\n    if (handler.execute) {\r\n      // actual execute + mark return results as dirty\r\n      self._markDirty(handler.execute(context));\r\n    }\r\n\r\n    // log to stack\r\n    self._executedAction(action, redo);\r\n\r\n    self._fire(command, 'executed', action);\r\n  });\r\n\r\n  if (!redo) {\r\n    this._fire(command, 'postExecute', action);\r\n\r\n    if (handler.postExecute) {\r\n      handler.postExecute(context);\r\n    }\r\n\r\n    this._fire(command, 'postExecuted', action);\r\n  }\r\n\r\n  this._popAction(action);\r\n};\r\n\r\n\r\nCommandStack.prototype._pushAction = function(action) {\r\n\r\n  var execution = this._currentExecution,\r\n      actions = execution.actions;\r\n\r\n  var baseAction = actions[0];\r\n\r\n  if (execution.atomic) {\r\n    throw new Error('illegal invocation in <execute> or <revert> phase (action: ' + action.command + ')');\r\n  }\r\n\r\n  if (!action.id) {\r\n    action.id = (baseAction && baseAction.id) || this._createId();\r\n  }\r\n\r\n  actions.push(action);\r\n};\r\n\r\n\r\nCommandStack.prototype._popAction = function() {\r\n  var execution = this._currentExecution,\r\n      actions = execution.actions,\r\n      dirty = execution.dirty;\r\n\r\n  actions.pop();\r\n\r\n  if (!actions.length) {\r\n    this._eventBus.fire('elements.changed', { elements: uniqueBy('id', dirty) });\r\n\r\n    dirty.length = 0;\r\n\r\n    this._fire('changed');\r\n  }\r\n};\r\n\r\n\r\nCommandStack.prototype._markDirty = function(elements) {\r\n  var execution = this._currentExecution;\r\n\r\n  if (!elements) {\r\n    return;\r\n  }\r\n\r\n  elements = isArray(elements) ? elements : [ elements ];\r\n\r\n  execution.dirty = execution.dirty.concat(elements);\r\n};\r\n\r\n\r\nCommandStack.prototype._executedAction = function(action, redo) {\r\n  var stackIdx = ++this._stackIdx;\r\n\r\n  if (!redo) {\r\n    this._stack.splice(stackIdx, this._stack.length, action);\r\n  }\r\n};\r\n\r\n\r\nCommandStack.prototype._revertedAction = function(action) {\r\n  this._stackIdx--;\r\n};\r\n\r\n\r\nCommandStack.prototype._getHandler = function(command) {\r\n  return this._handlerMap[command];\r\n};\r\n\r\nCommandStack.prototype._setHandler = function(command, handler) {\r\n  if (!command || !handler) {\r\n    throw new Error('command and handler required');\r\n  }\r\n\r\n  if (this._handlerMap[command]) {\r\n    throw new Error('overriding handler for command <' + command + '>');\r\n  }\r\n\r\n  this._handlerMap[command] = handler;\r\n};\r\n","import CommandStack from './CommandStack';\r\n\r\nexport default {\r\n  commandStack: [ 'type', CommandStack ]\r\n};\r\n","import {\r\n  isNumber,\r\n  assign,\r\n  forEach,\r\n  every,\r\n  debounce,\r\n  bind,\r\n  reduce\r\n} from 'min-dash';\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from '../util/Collections';\r\n\r\nimport {\r\n  getType\r\n} from '../util/Elements';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate,\r\n  transform as svgTransform\r\n} from 'tiny-svg';\r\n\r\nimport { createMatrix as createMatrix } from 'tiny-svg';\r\n\r\n\r\nfunction round(number, resolution) {\r\n  return Math.round(number * resolution) / resolution;\r\n}\r\n\r\nfunction ensurePx(number) {\r\n  return isNumber(number) ? number + 'px' : number;\r\n}\r\n\r\n/**\r\n * Creates a HTML container element for a SVG element with\r\n * the given configuration\r\n *\r\n * @param  {Object} options\r\n * @return {HTMLElement} the container element\r\n */\r\nfunction createContainer(options) {\r\n\r\n  options = assign({}, { width: '100%', height: '100%' }, options);\r\n\r\n  var container = options.container || document.body;\r\n\r\n  // create a <div> around the svg element with the respective size\r\n  // this way we can always get the correct container size\r\n  // (this is impossible for <svg> elements at the moment)\r\n  var parent = document.createElement('div');\r\n  parent.setAttribute('class', 'djs-container');\r\n\r\n  assign(parent.style, {\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    width: ensurePx(options.width),\r\n    height: ensurePx(options.height)\r\n  });\r\n\r\n  container.appendChild(parent);\r\n\r\n  return parent;\r\n}\r\n\r\nfunction createGroup(parent, cls, childIndex) {\r\n  var group = svgCreate('g');\r\n  svgClasses(group).add(cls);\r\n\r\n  var index = childIndex !== undefined ? childIndex : parent.childNodes.length - 1;\r\n\r\n  // must ensure second argument is node or _null_\r\n  // cf. https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\r\n  parent.insertBefore(group, parent.childNodes[index] || null);\r\n\r\n  return group;\r\n}\r\n\r\nvar BASE_LAYER = 'base';\r\n\r\n\r\nvar REQUIRED_MODEL_ATTRS = {\r\n  shape: [ 'x', 'y', 'width', 'height' ],\r\n  connection: [ 'waypoints' ]\r\n};\r\n\r\n/**\r\n * The main drawing canvas.\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @emits Canvas#canvas.init\r\n *\r\n * @param {Object} config\r\n * @param {EventBus} eventBus\r\n * @param {GraphicsFactory} graphicsFactory\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function Canvas(config, eventBus, graphicsFactory, elementRegistry) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n  this._graphicsFactory = graphicsFactory;\r\n\r\n  this._init(config || {});\r\n}\r\n\r\nCanvas.$inject = [\r\n  'config.canvas',\r\n  'eventBus',\r\n  'graphicsFactory',\r\n  'elementRegistry'\r\n];\r\n\r\n\r\nCanvas.prototype._init = function(config) {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  // Creates a <svg> element that is wrapped into a <div>.\r\n  // This way we are always able to correctly figure out the size of the svg element\r\n  // by querying the parent node.\r\n  //\r\n  // (It is not possible to get the size of a svg element cross browser @ 2014-04-01)\r\n  //\r\n  // <div class=\"djs-container\" style=\"width: {desired-width}, height: {desired-height}\">\r\n  //   <svg width=\"100%\" height=\"100%\">\r\n  //    ...\r\n  //   </svg>\r\n  // </div>\r\n\r\n  // html container\r\n  var container = this._container = createContainer(config);\r\n\r\n  var svg = this._svg = svgCreate('svg');\r\n  svgAttr(svg, { width: '100%', height: '100%' });\r\n\r\n  svgAppend(container, svg);\r\n\r\n  var viewport = this._viewport = createGroup(svg, 'viewport');\r\n\r\n  this._layers = {};\r\n\r\n  // debounce canvas.viewbox.changed events\r\n  // for smoother diagram interaction\r\n  if (config.deferUpdate !== false) {\r\n    this._viewboxChanged = debounce(bind(this._viewboxChanged, this), 300);\r\n  }\r\n\r\n  eventBus.on('diagram.init', function() {\r\n\r\n    /**\r\n     * An event indicating that the canvas is ready to be drawn on.\r\n     *\r\n     * @memberOf Canvas\r\n     *\r\n     * @event canvas.init\r\n     *\r\n     * @type {Object}\r\n     * @property {SVGElement} svg the created svg element\r\n     * @property {SVGElement} viewport the direct parent of diagram elements and shapes\r\n     */\r\n    eventBus.fire('canvas.init', {\r\n      svg: svg,\r\n      viewport: viewport\r\n    });\r\n\r\n  }, this);\r\n\r\n  // reset viewbox on shape changes to\r\n  // recompute the viewbox\r\n  eventBus.on([\r\n    'shape.added',\r\n    'connection.added',\r\n    'shape.removed',\r\n    'connection.removed',\r\n    'elements.changed'\r\n  ], function() {\r\n    delete this._cachedViewbox;\r\n  }, this);\r\n\r\n  eventBus.on('diagram.destroy', 500, this._destroy, this);\r\n  eventBus.on('diagram.clear', 500, this._clear, this);\r\n};\r\n\r\nCanvas.prototype._destroy = function(emit) {\r\n  this._eventBus.fire('canvas.destroy', {\r\n    svg: this._svg,\r\n    viewport: this._viewport\r\n  });\r\n\r\n  var parent = this._container.parentNode;\r\n\r\n  if (parent) {\r\n    parent.removeChild(this._container);\r\n  }\r\n\r\n  delete this._svg;\r\n  delete this._container;\r\n  delete this._layers;\r\n  delete this._rootElement;\r\n  delete this._viewport;\r\n};\r\n\r\nCanvas.prototype._clear = function() {\r\n\r\n  var self = this;\r\n\r\n  var allElements = this._elementRegistry.getAll();\r\n\r\n  // remove all elements\r\n  allElements.forEach(function(element) {\r\n    var type = getType(element);\r\n\r\n    if (type === 'root') {\r\n      self.setRootElement(null, true);\r\n    } else {\r\n      self._removeElement(element, type);\r\n    }\r\n  });\r\n\r\n  // force recomputation of view box\r\n  delete this._cachedViewbox;\r\n};\r\n\r\n/**\r\n * Returns the default layer on which\r\n * all elements are drawn.\r\n *\r\n * @returns {SVGElement}\r\n */\r\nCanvas.prototype.getDefaultLayer = function() {\r\n  return this.getLayer(BASE_LAYER, 0);\r\n};\r\n\r\n/**\r\n * Returns a layer that is used to draw elements\r\n * or annotations on it.\r\n *\r\n * Non-existing layers retrieved through this method\r\n * will be created. During creation, the optional index\r\n * may be used to create layers below or above existing layers.\r\n * A layer with a certain index is always created above all\r\n * existing layers with the same index.\r\n *\r\n * @param {String} name\r\n * @param {Number} index\r\n *\r\n * @returns {SVGElement}\r\n */\r\nCanvas.prototype.getLayer = function(name, index) {\r\n\r\n  if (!name) {\r\n    throw new Error('must specify a name');\r\n  }\r\n\r\n  var layer = this._layers[name];\r\n\r\n  if (!layer) {\r\n    layer = this._layers[name] = this._createLayer(name, index);\r\n  }\r\n\r\n  // throw an error if layer creation / retrival is\r\n  // requested on different index\r\n  if (typeof index !== 'undefined' && layer.index !== index) {\r\n    throw new Error('layer <' + name + '> already created at index <' + index + '>');\r\n  }\r\n\r\n  return layer.group;\r\n};\r\n\r\n/**\r\n * Creates a given layer and returns it.\r\n *\r\n * @param {String} name\r\n * @param {Number} [index=0]\r\n *\r\n * @return {Object} layer descriptor with { index, group: SVGGroup }\r\n */\r\nCanvas.prototype._createLayer = function(name, index) {\r\n\r\n  if (!index) {\r\n    index = 0;\r\n  }\r\n\r\n  var childIndex = reduce(this._layers, function(childIndex, layer) {\r\n    if (index >= layer.index) {\r\n      childIndex++;\r\n    }\r\n\r\n    return childIndex;\r\n  }, 0);\r\n\r\n  return {\r\n    group: createGroup(this._viewport, 'layer-' + name, childIndex),\r\n    index: index\r\n  };\r\n\r\n};\r\n\r\n/**\r\n * Returns the html element that encloses the\r\n * drawing canvas.\r\n *\r\n * @return {DOMNode}\r\n */\r\nCanvas.prototype.getContainer = function() {\r\n  return this._container;\r\n};\r\n\r\n\r\n// markers //////////////////////\r\n\r\nCanvas.prototype._updateMarker = function(element, marker, add) {\r\n  var container;\r\n\r\n  if (!element.id) {\r\n    element = this._elementRegistry.get(element);\r\n  }\r\n\r\n  // we need to access all\r\n  container = this._elementRegistry._elements[element.id];\r\n\r\n  if (!container) {\r\n    return;\r\n  }\r\n\r\n  forEach([ container.gfx, container.secondaryGfx ], function(gfx) {\r\n    if (gfx) {\r\n      // invoke either addClass or removeClass based on mode\r\n      if (add) {\r\n        svgClasses(gfx).add(marker);\r\n      } else {\r\n        svgClasses(gfx).remove(marker);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * An event indicating that a marker has been updated for an element\r\n   *\r\n   * @event element.marker.update\r\n   * @type {Object}\r\n   * @property {djs.model.Element} element the shape\r\n   * @property {Object} gfx the graphical representation of the shape\r\n   * @property {String} marker\r\n   * @property {Boolean} add true if the marker was added, false if it got removed\r\n   */\r\n  this._eventBus.fire('element.marker.update', { element: element, gfx: container.gfx, marker: marker, add: !!add });\r\n};\r\n\r\n\r\n/**\r\n * Adds a marker to an element (basically a css class).\r\n *\r\n * Fires the element.marker.update event, making it possible to\r\n * integrate extension into the marker life-cycle, too.\r\n *\r\n * @example\r\n * canvas.addMarker('foo', 'some-marker');\r\n *\r\n * var fooGfx = canvas.getGraphics('foo');\r\n *\r\n * fooGfx; // <g class=\"... some-marker\"> ... </g>\r\n *\r\n * @param {String|djs.model.Base} element\r\n * @param {String} marker\r\n */\r\nCanvas.prototype.addMarker = function(element, marker) {\r\n  this._updateMarker(element, marker, true);\r\n};\r\n\r\n\r\n/**\r\n * Remove a marker from an element.\r\n *\r\n * Fires the element.marker.update event, making it possible to\r\n * integrate extension into the marker life-cycle, too.\r\n *\r\n * @param  {String|djs.model.Base} element\r\n * @param  {String} marker\r\n */\r\nCanvas.prototype.removeMarker = function(element, marker) {\r\n  this._updateMarker(element, marker, false);\r\n};\r\n\r\n/**\r\n * Check the existence of a marker on element.\r\n *\r\n * @param  {String|djs.model.Base} element\r\n * @param  {String} marker\r\n */\r\nCanvas.prototype.hasMarker = function(element, marker) {\r\n  if (!element.id) {\r\n    element = this._elementRegistry.get(element);\r\n  }\r\n\r\n  var gfx = this.getGraphics(element);\r\n\r\n  return svgClasses(gfx).has(marker);\r\n};\r\n\r\n/**\r\n * Toggles a marker on an element.\r\n *\r\n * Fires the element.marker.update event, making it possible to\r\n * integrate extension into the marker life-cycle, too.\r\n *\r\n * @param  {String|djs.model.Base} element\r\n * @param  {String} marker\r\n */\r\nCanvas.prototype.toggleMarker = function(element, marker) {\r\n  if (this.hasMarker(element, marker)) {\r\n    this.removeMarker(element, marker);\r\n  } else {\r\n    this.addMarker(element, marker);\r\n  }\r\n};\r\n\r\nCanvas.prototype.getRootElement = function() {\r\n  if (!this._rootElement) {\r\n    this.setRootElement({ id: '__implicitroot', children: [] });\r\n  }\r\n\r\n  return this._rootElement;\r\n};\r\n\r\n\r\n\r\n// root element handling //////////////////////\r\n\r\n/**\r\n * Sets a given element as the new root element for the canvas\r\n * and returns the new root element.\r\n *\r\n * @param {Object|djs.model.Root} element\r\n * @param {Boolean} [override] whether to override the current root element, if any\r\n *\r\n * @return {Object|djs.model.Root} new root element\r\n */\r\nCanvas.prototype.setRootElement = function(element, override) {\r\n\r\n  if (element) {\r\n    this._ensureValid('root', element);\r\n  }\r\n\r\n  var currentRoot = this._rootElement,\r\n      elementRegistry = this._elementRegistry,\r\n      eventBus = this._eventBus;\r\n\r\n  if (currentRoot) {\r\n    if (!override) {\r\n      throw new Error('rootElement already set, need to specify override');\r\n    }\r\n\r\n    // simulate element remove event sequence\r\n    eventBus.fire('root.remove', { element: currentRoot });\r\n    eventBus.fire('root.removed', { element: currentRoot });\r\n\r\n    elementRegistry.remove(currentRoot);\r\n  }\r\n\r\n  if (element) {\r\n    var gfx = this.getDefaultLayer();\r\n\r\n    // resemble element add event sequence\r\n    eventBus.fire('root.add', { element: element });\r\n\r\n    elementRegistry.add(element, gfx, this._svg);\r\n\r\n    eventBus.fire('root.added', { element: element, gfx: gfx });\r\n  }\r\n\r\n  this._rootElement = element;\r\n\r\n  return element;\r\n};\r\n\r\n\r\n\r\n// add functionality //////////////////////\r\n\r\nCanvas.prototype._ensureValid = function(type, element) {\r\n  if (!element.id) {\r\n    throw new Error('element must have an id');\r\n  }\r\n\r\n  if (this._elementRegistry.get(element.id)) {\r\n    throw new Error('element with id ' + element.id + ' already exists');\r\n  }\r\n\r\n  var requiredAttrs = REQUIRED_MODEL_ATTRS[type];\r\n\r\n  var valid = every(requiredAttrs, function(attr) {\r\n    return typeof element[attr] !== 'undefined';\r\n  });\r\n\r\n  if (!valid) {\r\n    throw new Error(\r\n      'must supply { ' + requiredAttrs.join(', ') + ' } with ' + type);\r\n  }\r\n};\r\n\r\nCanvas.prototype._setParent = function(element, parent, parentIndex) {\r\n  collectionAdd(parent.children, element, parentIndex);\r\n  element.parent = parent;\r\n};\r\n\r\n/**\r\n * Adds an element to the canvas.\r\n *\r\n * This wires the parent <-> child relationship between the element and\r\n * a explicitly specified parent or an implicit root element.\r\n *\r\n * During add it emits the events\r\n *\r\n *  * <{type}.add> (element, parent)\r\n *  * <{type}.added> (element, gfx)\r\n *\r\n * Extensions may hook into these events to perform their magic.\r\n *\r\n * @param {String} type\r\n * @param {Object|djs.model.Base} element\r\n * @param {Object|djs.model.Base} [parent]\r\n * @param {Number} [parentIndex]\r\n *\r\n * @return {Object|djs.model.Base} the added element\r\n */\r\nCanvas.prototype._addElement = function(type, element, parent, parentIndex) {\r\n\r\n  parent = parent || this.getRootElement();\r\n\r\n  var eventBus = this._eventBus,\r\n      graphicsFactory = this._graphicsFactory;\r\n\r\n  this._ensureValid(type, element);\r\n\r\n  eventBus.fire(type + '.add', { element: element, parent: parent });\r\n\r\n  this._setParent(element, parent, parentIndex);\r\n\r\n  // create graphics\r\n  var gfx = graphicsFactory.create(type, element, parentIndex);\r\n\r\n  this._elementRegistry.add(element, gfx);\r\n\r\n  // update its visual\r\n  graphicsFactory.update(type, element, gfx);\r\n\r\n  eventBus.fire(type + '.added', { element: element, gfx: gfx });\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Adds a shape to the canvas\r\n *\r\n * @param {Object|djs.model.Shape} shape to add to the diagram\r\n * @param {djs.model.Base} [parent]\r\n * @param {Number} [parentIndex]\r\n *\r\n * @return {djs.model.Shape} the added shape\r\n */\r\nCanvas.prototype.addShape = function(shape, parent, parentIndex) {\r\n  return this._addElement('shape', shape, parent, parentIndex);\r\n};\r\n\r\n/**\r\n * Adds a connection to the canvas\r\n *\r\n * @param {Object|djs.model.Connection} connection to add to the diagram\r\n * @param {djs.model.Base} [parent]\r\n * @param {Number} [parentIndex]\r\n *\r\n * @return {djs.model.Connection} the added connection\r\n */\r\nCanvas.prototype.addConnection = function(connection, parent, parentIndex) {\r\n  return this._addElement('connection', connection, parent, parentIndex);\r\n};\r\n\r\n\r\n/**\r\n * Internal remove element\r\n */\r\nCanvas.prototype._removeElement = function(element, type) {\r\n\r\n  var elementRegistry = this._elementRegistry,\r\n      graphicsFactory = this._graphicsFactory,\r\n      eventBus = this._eventBus;\r\n\r\n  element = elementRegistry.get(element.id || element);\r\n\r\n  if (!element) {\r\n    // element was removed already\r\n    return;\r\n  }\r\n\r\n  eventBus.fire(type + '.remove', { element: element });\r\n\r\n  graphicsFactory.remove(element);\r\n\r\n  // unset parent <-> child relationship\r\n  collectionRemove(element.parent && element.parent.children, element);\r\n  element.parent = null;\r\n\r\n  eventBus.fire(type + '.removed', { element: element });\r\n\r\n  elementRegistry.remove(element);\r\n\r\n  return element;\r\n};\r\n\r\n\r\n/**\r\n * Removes a shape from the canvas\r\n *\r\n * @param {String|djs.model.Shape} shape or shape id to be removed\r\n *\r\n * @return {djs.model.Shape} the removed shape\r\n */\r\nCanvas.prototype.removeShape = function(shape) {\r\n\r\n  /**\r\n   * An event indicating that a shape is about to be removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event shape.remove\r\n   * @type {Object}\r\n   * @property {djs.model.Shape} element the shape descriptor\r\n   * @property {Object} gfx the graphical representation of the shape\r\n   */\r\n\r\n  /**\r\n   * An event indicating that a shape has been removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event shape.removed\r\n   * @type {Object}\r\n   * @property {djs.model.Shape} element the shape descriptor\r\n   * @property {Object} gfx the graphical representation of the shape\r\n   */\r\n  return this._removeElement(shape, 'shape');\r\n};\r\n\r\n\r\n/**\r\n * Removes a connection from the canvas\r\n *\r\n * @param {String|djs.model.Connection} connection or connection id to be removed\r\n *\r\n * @return {djs.model.Connection} the removed connection\r\n */\r\nCanvas.prototype.removeConnection = function(connection) {\r\n\r\n  /**\r\n   * An event indicating that a connection is about to be removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event connection.remove\r\n   * @type {Object}\r\n   * @property {djs.model.Connection} element the connection descriptor\r\n   * @property {Object} gfx the graphical representation of the connection\r\n   */\r\n\r\n  /**\r\n   * An event indicating that a connection has been removed from the canvas.\r\n   *\r\n   * @memberOf Canvas\r\n   *\r\n   * @event connection.removed\r\n   * @type {Object}\r\n   * @property {djs.model.Connection} element the connection descriptor\r\n   * @property {Object} gfx the graphical representation of the connection\r\n   */\r\n  return this._removeElement(connection, 'connection');\r\n};\r\n\r\n\r\n/**\r\n * Return the graphical object underlaying a certain diagram element\r\n *\r\n * @param {String|djs.model.Base} element descriptor of the element\r\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\r\n *\r\n * @return {SVGElement}\r\n */\r\nCanvas.prototype.getGraphics = function(element, secondary) {\r\n  return this._elementRegistry.getGraphics(element, secondary);\r\n};\r\n\r\n\r\n/**\r\n * Perform a viewbox update via a given change function.\r\n *\r\n * @param {Function} changeFn\r\n */\r\nCanvas.prototype._changeViewbox = function(changeFn) {\r\n\r\n  // notify others of the upcoming viewbox change\r\n  this._eventBus.fire('canvas.viewbox.changing');\r\n\r\n  // perform actual change\r\n  changeFn.apply(this);\r\n\r\n  // reset the cached viewbox so that\r\n  // a new get operation on viewbox or zoom\r\n  // triggers a viewbox re-computation\r\n  this._cachedViewbox = null;\r\n\r\n  // notify others of the change; this step\r\n  // may or may not be debounced\r\n  this._viewboxChanged();\r\n};\r\n\r\nCanvas.prototype._viewboxChanged = function() {\r\n  this._eventBus.fire('canvas.viewbox.changed', { viewbox: this.viewbox() });\r\n};\r\n\r\n\r\n/**\r\n * Gets or sets the view box of the canvas, i.e. the\r\n * area that is currently displayed.\r\n *\r\n * The getter may return a cached viewbox (if it is currently\r\n * changing). To force a recomputation, pass `false` as the first argument.\r\n *\r\n * @example\r\n *\r\n * canvas.viewbox({ x: 100, y: 100, width: 500, height: 500 })\r\n *\r\n * // sets the visible area of the diagram to (100|100) -> (600|100)\r\n * // and and scales it according to the diagram width\r\n *\r\n * var viewbox = canvas.viewbox(); // pass `false` to force recomputing the box.\r\n *\r\n * console.log(viewbox);\r\n * // {\r\n * //   inner: Dimensions,\r\n * //   outer: Dimensions,\r\n * //   scale,\r\n * //   x, y,\r\n * //   width, height\r\n * // }\r\n *\r\n * // if the current diagram is zoomed and scrolled, you may reset it to the\r\n * // default zoom via this method, too:\r\n *\r\n * var zoomedAndScrolledViewbox = canvas.viewbox();\r\n *\r\n * canvas.viewbox({\r\n *   x: 0,\r\n *   y: 0,\r\n *   width: zoomedAndScrolledViewbox.outer.width,\r\n *   height: zoomedAndScrolledViewbox.outer.height\r\n * });\r\n *\r\n * @param  {Object} [box] the new view box to set\r\n * @param  {Number} box.x the top left X coordinate of the canvas visible in view box\r\n * @param  {Number} box.y the top left Y coordinate of the canvas visible in view box\r\n * @param  {Number} box.width the visible width\r\n * @param  {Number} box.height\r\n *\r\n * @return {Object} the current view box\r\n */\r\nCanvas.prototype.viewbox = function(box) {\r\n\r\n  if (box === undefined && this._cachedViewbox) {\r\n    return this._cachedViewbox;\r\n  }\r\n\r\n  var viewport = this._viewport,\r\n      innerBox,\r\n      outerBox = this.getSize(),\r\n      matrix,\r\n      transform,\r\n      scale,\r\n      x, y;\r\n\r\n  if (!box) {\r\n    // compute the inner box based on the\r\n    // diagrams default layer. This allows us to exclude\r\n    // external components, such as overlays\r\n    innerBox = this.getDefaultLayer().getBBox();\r\n\r\n    transform = svgTransform(viewport);\r\n    matrix = transform ? transform.matrix : createMatrix();\r\n    scale = round(matrix.a, 1000);\r\n\r\n    x = round(-matrix.e || 0, 1000);\r\n    y = round(-matrix.f || 0, 1000);\r\n\r\n    box = this._cachedViewbox = {\r\n      x: x ? x / scale : 0,\r\n      y: y ? y / scale : 0,\r\n      width: outerBox.width / scale,\r\n      height: outerBox.height / scale,\r\n      scale: scale,\r\n      inner: {\r\n        width: innerBox.width,\r\n        height: innerBox.height,\r\n        x: innerBox.x,\r\n        y: innerBox.y\r\n      },\r\n      outer: outerBox\r\n    };\r\n\r\n    return box;\r\n  } else {\r\n\r\n    this._changeViewbox(function() {\r\n      scale = Math.min(outerBox.width / box.width, outerBox.height / box.height);\r\n\r\n      var matrix = this._svg.createSVGMatrix()\r\n        .scale(scale)\r\n        .translate(-box.x, -box.y);\r\n\r\n      svgTransform(viewport, matrix);\r\n    });\r\n  }\r\n\r\n  return box;\r\n};\r\n\r\n\r\n/**\r\n * Gets or sets the scroll of the canvas.\r\n *\r\n * @param {Object} [delta] the new scroll to apply.\r\n *\r\n * @param {Number} [delta.dx]\r\n * @param {Number} [delta.dy]\r\n */\r\nCanvas.prototype.scroll = function(delta) {\r\n\r\n  var node = this._viewport;\r\n  var matrix = node.getCTM();\r\n\r\n  if (delta) {\r\n    this._changeViewbox(function() {\r\n      delta = assign({ dx: 0, dy: 0 }, delta || {});\r\n\r\n      matrix = this._svg.createSVGMatrix().translate(delta.dx, delta.dy).multiply(matrix);\r\n\r\n      setCTM(node, matrix);\r\n    });\r\n  }\r\n\r\n  return { x: matrix.e, y: matrix.f };\r\n};\r\n\r\n\r\n/**\r\n * Gets or sets the current zoom of the canvas, optionally zooming\r\n * to the specified position.\r\n *\r\n * The getter may return a cached zoom level. Call it with `false` as\r\n * the first argument to force recomputation of the current level.\r\n *\r\n * @param {String|Number} [newScale] the new zoom level, either a number, i.e. 0.9,\r\n *                                   or `fit-viewport` to adjust the size to fit the current viewport\r\n * @param {String|Point} [center] the reference point { x: .., y: ..} to zoom to, 'auto' to zoom into mid or null\r\n *\r\n * @return {Number} the current scale\r\n */\r\nCanvas.prototype.zoom = function(newScale, center) {\r\n\r\n  if (!newScale) {\r\n    return this.viewbox(newScale).scale;\r\n  }\r\n\r\n  if (newScale === 'fit-viewport') {\r\n    return this._fitViewport(center);\r\n  }\r\n\r\n  var outer,\r\n      matrix;\r\n\r\n  this._changeViewbox(function() {\r\n\r\n    if (typeof center !== 'object') {\r\n      outer = this.viewbox().outer;\r\n\r\n      center = {\r\n        x: outer.width / 2,\r\n        y: outer.height / 2\r\n      };\r\n    }\r\n\r\n    matrix = this._setZoom(newScale, center);\r\n  });\r\n\r\n  return round(matrix.a, 1000);\r\n};\r\n\r\nfunction setCTM(node, m) {\r\n  var mstr = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\r\n  node.setAttribute('transform', mstr);\r\n}\r\n\r\nCanvas.prototype._fitViewport = function(center) {\r\n\r\n  var vbox = this.viewbox(),\r\n      outer = vbox.outer,\r\n      inner = vbox.inner,\r\n      newScale,\r\n      newViewbox;\r\n\r\n  // display the complete diagram without zooming in.\r\n  // instead of relying on internal zoom, we perform a\r\n  // hard reset on the canvas viewbox to realize this\r\n  //\r\n  // if diagram does not need to be zoomed in, we focus it around\r\n  // the diagram origin instead\r\n\r\n  if (inner.x >= 0 &&\r\n      inner.y >= 0 &&\r\n      inner.x + inner.width <= outer.width &&\r\n      inner.y + inner.height <= outer.height &&\r\n      !center) {\r\n\r\n    newViewbox = {\r\n      x: 0,\r\n      y: 0,\r\n      width: Math.max(inner.width + inner.x, outer.width),\r\n      height: Math.max(inner.height + inner.y, outer.height)\r\n    };\r\n  } else {\r\n\r\n    newScale = Math.min(1, outer.width / inner.width, outer.height / inner.height);\r\n    newViewbox = {\r\n      x: inner.x + (center ? inner.width / 2 - outer.width / newScale / 2 : 0),\r\n      y: inner.y + (center ? inner.height / 2 - outer.height / newScale / 2 : 0),\r\n      width: outer.width / newScale,\r\n      height: outer.height / newScale\r\n    };\r\n  }\r\n\r\n  this.viewbox(newViewbox);\r\n\r\n  return this.viewbox(false).scale;\r\n};\r\n\r\n\r\nCanvas.prototype._setZoom = function(scale, center) {\r\n\r\n  var svg = this._svg,\r\n      viewport = this._viewport;\r\n\r\n  var matrix = svg.createSVGMatrix();\r\n  var point = svg.createSVGPoint();\r\n\r\n  var centerPoint,\r\n      originalPoint,\r\n      currentMatrix,\r\n      scaleMatrix,\r\n      newMatrix;\r\n\r\n  currentMatrix = viewport.getCTM();\r\n\r\n  var currentScale = currentMatrix.a;\r\n\r\n  if (center) {\r\n    centerPoint = assign(point, center);\r\n\r\n    // revert applied viewport transformations\r\n    originalPoint = centerPoint.matrixTransform(currentMatrix.inverse());\r\n\r\n    // create scale matrix\r\n    scaleMatrix = matrix\r\n      .translate(originalPoint.x, originalPoint.y)\r\n      .scale(1 / currentScale * scale)\r\n      .translate(-originalPoint.x, -originalPoint.y);\r\n\r\n    newMatrix = currentMatrix.multiply(scaleMatrix);\r\n  } else {\r\n    newMatrix = matrix.scale(scale);\r\n  }\r\n\r\n  setCTM(this._viewport, newMatrix);\r\n\r\n  return newMatrix;\r\n};\r\n\r\n\r\n/**\r\n * Returns the size of the canvas\r\n *\r\n * @return {Dimensions}\r\n */\r\nCanvas.prototype.getSize = function() {\r\n  return {\r\n    width: this._container.clientWidth,\r\n    height: this._container.clientHeight\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Return the absolute bounding box for the given element\r\n *\r\n * The absolute bounding box may be used to display overlays in the\r\n * callers (browser) coordinate system rather than the zoomed in/out\r\n * canvas coordinates.\r\n *\r\n * @param  {ElementDescriptor} element\r\n * @return {Bounds} the absolute bounding box\r\n */\r\nCanvas.prototype.getAbsoluteBBox = function(element) {\r\n  var vbox = this.viewbox();\r\n  var bbox;\r\n\r\n  // connection\r\n  // use svg bbox\r\n  if (element.waypoints) {\r\n    var gfx = this.getGraphics(element);\r\n\r\n    bbox = gfx.getBBox();\r\n  }\r\n  // shapes\r\n  // use data\r\n  else {\r\n    bbox = element;\r\n  }\r\n\r\n  var x = bbox.x * vbox.scale - vbox.x * vbox.scale;\r\n  var y = bbox.y * vbox.scale - vbox.y * vbox.scale;\r\n\r\n  var width = bbox.width * vbox.scale;\r\n  var height = bbox.height * vbox.scale;\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    width: width,\r\n    height: height\r\n  };\r\n};\r\n\r\n/**\r\n * Fires an event in order other modules can react to the\r\n * canvas resizing\r\n */\r\nCanvas.prototype.resized = function() {\r\n\r\n  // force recomputation of view box\r\n  delete this._cachedViewbox;\r\n\r\n  this._eventBus.fire('canvas.resized');\r\n};\r\n","import {\r\n  create\r\n} from '../model';\r\n\r\nimport { assign } from 'min-dash';\r\n\r\n/**\r\n * A factory for diagram-js shapes\r\n */\r\nexport default function ElementFactory() {\r\n  this._uid = 12;\r\n}\r\n\r\n\r\nElementFactory.prototype.createRoot = function(attrs) {\r\n  return this.create('root', attrs);\r\n};\r\n\r\nElementFactory.prototype.createLabel = function(attrs) {\r\n  return this.create('label', attrs);\r\n};\r\n\r\nElementFactory.prototype.createShape = function(attrs) {\r\n  return this.create('shape', attrs);\r\n};\r\n\r\nElementFactory.prototype.createConnection = function(attrs) {\r\n  return this.create('connection', attrs);\r\n};\r\n\r\n/**\r\n * Create a model element with the given type and\r\n * a number of pre-set attributes.\r\n *\r\n * @param  {String} type\r\n * @param  {Object} attrs\r\n * @return {djs.model.Base} the newly created model instance\r\n */\r\nElementFactory.prototype.create = function(type, attrs) {\r\n\r\n  attrs = assign({}, attrs || {});\r\n\r\n  if (!attrs.id) {\r\n    attrs.id = type + '_' + (this._uid++);\r\n  }\r\n\r\n  return create(type, attrs);\r\n};","var ELEMENT_ID = 'data-element-id';\r\n\r\nimport { attr as svgAttr } from 'tiny-svg';\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A registry that keeps track of all shapes in the diagram.\r\n */\r\nexport default function ElementRegistry(eventBus) {\r\n  this._elements = {};\r\n\r\n  this._eventBus = eventBus;\r\n}\r\n\r\nElementRegistry.$inject = [ 'eventBus' ];\r\n\r\n/**\r\n * Register a pair of (element, gfx, (secondaryGfx)).\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} gfx\r\n * @param {SVGElement} [secondaryGfx] optional other element to register, too\r\n */\r\nElementRegistry.prototype.add = function(element, gfx, secondaryGfx) {\r\n\r\n  var id = element.id;\r\n\r\n  this._validateId(id);\r\n\r\n  // associate dom node with element\r\n  svgAttr(gfx, ELEMENT_ID, id);\r\n\r\n  if (secondaryGfx) {\r\n    svgAttr(secondaryGfx, ELEMENT_ID, id);\r\n  }\r\n\r\n  this._elements[id] = { element: element, gfx: gfx, secondaryGfx: secondaryGfx };\r\n};\r\n\r\n/**\r\n * Removes an element from the registry.\r\n *\r\n * @param {djs.model.Base} element\r\n */\r\nElementRegistry.prototype.remove = function(element) {\r\n  var elements = this._elements,\r\n      id = element.id || element,\r\n      container = id && elements[id];\r\n\r\n  if (container) {\r\n\r\n    // unset element id on gfx\r\n    svgAttr(container.gfx, ELEMENT_ID, '');\r\n\r\n    if (container.secondaryGfx) {\r\n      svgAttr(container.secondaryGfx, ELEMENT_ID, '');\r\n    }\r\n\r\n    delete elements[id];\r\n  }\r\n};\r\n\r\n/**\r\n * Update the id of an element\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {String} newId\r\n */\r\nElementRegistry.prototype.updateId = function(element, newId) {\r\n\r\n  this._validateId(newId);\r\n\r\n  if (typeof element === 'string') {\r\n    element = this.get(element);\r\n  }\r\n\r\n  this._eventBus.fire('element.updateId', {\r\n    element: element,\r\n    newId: newId\r\n  });\r\n\r\n  var gfx = this.getGraphics(element),\r\n      secondaryGfx = this.getGraphics(element, true);\r\n\r\n  this.remove(element);\r\n\r\n  element.id = newId;\r\n\r\n  this.add(element, gfx, secondaryGfx);\r\n};\r\n\r\n/**\r\n * Return the model element for a given id or graphics.\r\n *\r\n * @example\r\n *\r\n * elementRegistry.get('SomeElementId_1');\r\n * elementRegistry.get(gfx);\r\n *\r\n *\r\n * @param {String|SVGElement} filter for selecting the element\r\n *\r\n * @return {djs.model.Base}\r\n */\r\nElementRegistry.prototype.get = function(filter) {\r\n  var id;\r\n\r\n  if (typeof filter === 'string') {\r\n    id = filter;\r\n  } else {\r\n    id = filter && svgAttr(filter, ELEMENT_ID);\r\n  }\r\n\r\n  var container = this._elements[id];\r\n  return container && container.element;\r\n};\r\n\r\n/**\r\n * Return all elements that match a given filter function.\r\n *\r\n * @param {Function} fn\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nElementRegistry.prototype.filter = function(fn) {\r\n\r\n  var filtered = [];\r\n\r\n  this.forEach(function(element, gfx) {\r\n    if (fn(element, gfx)) {\r\n      filtered.push(element);\r\n    }\r\n  });\r\n\r\n  return filtered;\r\n};\r\n\r\n/**\r\n * Return all rendered model elements.\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nElementRegistry.prototype.getAll = function() {\r\n  return this.filter(function(e) { return e; });\r\n};\r\n\r\n/**\r\n * Iterate over all diagram elements.\r\n *\r\n * @param {Function} fn\r\n */\r\nElementRegistry.prototype.forEach = function(fn) {\r\n\r\n  var map = this._elements;\r\n\r\n  Object.keys(map).forEach(function(id) {\r\n    var container = map[id],\r\n        element = container.element,\r\n        gfx = container.gfx;\r\n\r\n    return fn(element, gfx);\r\n  });\r\n};\r\n\r\n/**\r\n * Return the graphical representation of an element or its id.\r\n *\r\n * @example\r\n * elementRegistry.getGraphics('SomeElementId_1');\r\n * elementRegistry.getGraphics(rootElement); // <g ...>\r\n *\r\n * elementRegistry.getGraphics(rootElement, true); // <svg ...>\r\n *\r\n *\r\n * @param {String|djs.model.Base} filter\r\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\r\n *\r\n * @return {SVGElement}\r\n */\r\nElementRegistry.prototype.getGraphics = function(filter, secondary) {\r\n  var id = filter.id || filter;\r\n\r\n  var container = this._elements[id];\r\n  return container && (secondary ? container.secondaryGfx : container.gfx);\r\n};\r\n\r\n/**\r\n * Validate the suitability of the given id and signals a problem\r\n * with an exception.\r\n *\r\n * @param {String} id\r\n *\r\n * @throws {Error} if id is empty or already assigned\r\n */\r\nElementRegistry.prototype._validateId = function(id) {\r\n  if (!id) {\r\n    throw new Error('element must have an id');\r\n  }\r\n\r\n  if (this._elements[id]) {\r\n    throw new Error('element with id ' + id + ' already added');\r\n  }\r\n};\r\n","import {\r\n  isFunction,\r\n  isArray,\r\n  isNumber,\r\n  bind,\r\n  assign\r\n} from 'min-dash';\r\n\r\nvar FN_REF = '__fn';\r\n\r\nvar DEFAULT_PRIORITY = 1000;\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\n/**\r\n * A general purpose event bus.\r\n *\r\n * This component is used to communicate across a diagram instance.\r\n * Other parts of a diagram can use it to listen to and broadcast events.\r\n *\r\n *\r\n * ## Registering for Events\r\n *\r\n * The event bus provides the {@link EventBus#on} and {@link EventBus#once}\r\n * methods to register for events. {@link EventBus#off} can be used to\r\n * remove event registrations. Listeners receive an instance of {@link Event}\r\n * as the first argument. It allows them to hook into the event execution.\r\n *\r\n * ```javascript\r\n *\r\n * // listen for event\r\n * eventBus.on('foo', function(event) {\r\n *\r\n *   // access event type\r\n *   event.type; // 'foo'\r\n *\r\n *   // stop propagation to other listeners\r\n *   event.stopPropagation();\r\n *\r\n *   // prevent event default\r\n *   event.preventDefault();\r\n * });\r\n *\r\n * // listen for event with custom payload\r\n * eventBus.on('bar', function(event, payload) {\r\n *   console.log(payload);\r\n * });\r\n *\r\n * // listen for event returning value\r\n * eventBus.on('foobar', function(event) {\r\n *\r\n *   // stop event propagation + prevent default\r\n *   return false;\r\n *\r\n *   // stop event propagation + return custom result\r\n *   return {\r\n *     complex: 'listening result'\r\n *   };\r\n * });\r\n *\r\n *\r\n * // listen with custom priority (default=1000, higher is better)\r\n * eventBus.on('priorityfoo', 1500, function(event) {\r\n *   console.log('invoked first!');\r\n * });\r\n *\r\n *\r\n * // listen for event and pass the context (`this`)\r\n * eventBus.on('foobar', function(event) {\r\n *   this.foo();\r\n * }, this);\r\n * ```\r\n *\r\n *\r\n * ## Emitting Events\r\n *\r\n * Events can be emitted via the event bus using {@link EventBus#fire}.\r\n *\r\n * ```javascript\r\n *\r\n * // false indicates that the default action\r\n * // was prevented by listeners\r\n * if (eventBus.fire('foo') === false) {\r\n *   console.log('default has been prevented!');\r\n * };\r\n *\r\n *\r\n * // custom args + return value listener\r\n * eventBus.on('sum', function(event, a, b) {\r\n *   return a + b;\r\n * });\r\n *\r\n * // you can pass custom arguments + retrieve result values.\r\n * var sum = eventBus.fire('sum', 1, 2);\r\n * console.log(sum); // 3\r\n * ```\r\n */\r\nexport default function EventBus() {\r\n  this._listeners = {};\r\n\r\n  // cleanup on destroy on lowest priority to allow\r\n  // message passing until the bitter end\r\n  this.on('diagram.destroy', 1, this._destroy, this);\r\n}\r\n\r\n\r\n/**\r\n * Register an event listener for events with the given name.\r\n *\r\n * The callback will be invoked with `event, ...additionalArguments`\r\n * that have been passed to {@link EventBus#fire}.\r\n *\r\n * Returning false from a listener will prevent the events default action\r\n * (if any is specified). To stop an event from being processed further in\r\n * other listeners execute {@link Event#stopPropagation}.\r\n *\r\n * Returning anything but `undefined` from a listener will stop the listener propagation.\r\n *\r\n * @param {String|Array<String>} events\r\n * @param {Number} [priority=1000] the priority in which this listener is called, larger is higher\r\n * @param {Function} callback\r\n * @param {Object} [that] Pass context (`this`) to the callback\r\n */\r\nEventBus.prototype.on = function(events, priority, callback, that) {\r\n\r\n  events = isArray(events) ? events : [ events ];\r\n\r\n  if (isFunction(priority)) {\r\n    that = callback;\r\n    callback = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  if (!isNumber(priority)) {\r\n    throw new Error('priority must be a number');\r\n  }\r\n\r\n  var actualCallback = callback;\r\n\r\n  if (that) {\r\n    actualCallback = bind(callback, that);\r\n\r\n    // make sure we remember and are able to remove\r\n    // bound callbacks via {@link #off} using the original\r\n    // callback\r\n    actualCallback[FN_REF] = callback[FN_REF] || callback;\r\n  }\r\n\r\n  var self = this;\r\n\r\n  events.forEach(function(e) {\r\n    self._addListener(e, {\r\n      priority: priority,\r\n      callback: actualCallback,\r\n      next: null\r\n    });\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Register an event listener that is executed only once.\r\n *\r\n * @param {String} event the event name to register for\r\n * @param {Function} callback the callback to execute\r\n * @param {Object} [that] Pass context (`this`) to the callback\r\n */\r\nEventBus.prototype.once = function(event, priority, callback, that) {\r\n  var self = this;\r\n\r\n  if (isFunction(priority)) {\r\n    that = callback;\r\n    callback = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  if (!isNumber(priority)) {\r\n    throw new Error('priority must be a number');\r\n  }\r\n\r\n  function wrappedCallback() {\r\n    var result = callback.apply(that, arguments);\r\n\r\n    self.off(event, wrappedCallback);\r\n\r\n    return result;\r\n  }\r\n\r\n  // make sure we remember and are able to remove\r\n  // bound callbacks via {@link #off} using the original\r\n  // callback\r\n  wrappedCallback[FN_REF] = callback;\r\n\r\n  this.on(event, priority, wrappedCallback);\r\n};\r\n\r\n\r\n/**\r\n * Removes event listeners by event and callback.\r\n *\r\n * If no callback is given, all listeners for a given event name are being removed.\r\n *\r\n * @param {String|Array<String>} events\r\n * @param {Function} [callback]\r\n */\r\nEventBus.prototype.off = function(events, callback) {\r\n\r\n  events = isArray(events) ? events : [ events ];\r\n\r\n  var self = this;\r\n\r\n  events.forEach(function(event) {\r\n    self._removeListener(event, callback);\r\n  });\r\n\r\n};\r\n\r\n\r\n/**\r\n * Create an EventBus event.\r\n *\r\n * @param {Object} data\r\n *\r\n * @return {Object} event, recognized by the eventBus\r\n */\r\nEventBus.prototype.createEvent = function(data) {\r\n  var event = new InternalEvent();\r\n\r\n  event.init(data);\r\n\r\n  return event;\r\n};\r\n\r\n\r\n/**\r\n * Fires a named event.\r\n *\r\n * @example\r\n *\r\n * // fire event by name\r\n * events.fire('foo');\r\n *\r\n * // fire event object with nested type\r\n * var event = { type: 'foo' };\r\n * events.fire(event);\r\n *\r\n * // fire event with explicit type\r\n * var event = { x: 10, y: 20 };\r\n * events.fire('element.moved', event);\r\n *\r\n * // pass additional arguments to the event\r\n * events.on('foo', function(event, bar) {\r\n *   alert(bar);\r\n * });\r\n *\r\n * events.fire({ type: 'foo' }, 'I am bar!');\r\n *\r\n * @param {String} [name] the optional event name\r\n * @param {Object} [event] the event object\r\n * @param {...Object} additional arguments to be passed to the callback functions\r\n *\r\n * @return {Boolean} the events return value, if specified or false if the\r\n *                   default action was prevented by listeners\r\n */\r\nEventBus.prototype.fire = function(type, data) {\r\n\r\n  var event,\r\n      firstListener,\r\n      returnValue,\r\n      args;\r\n\r\n  args = slice.call(arguments);\r\n\r\n  if (typeof type === 'object') {\r\n    event = type;\r\n    type = event.type;\r\n  }\r\n\r\n  if (!type) {\r\n    throw new Error('no event type specified');\r\n  }\r\n\r\n  firstListener = this._listeners[type];\r\n\r\n  if (!firstListener) {\r\n    return;\r\n  }\r\n\r\n  // we make sure we fire instances of our home made\r\n  // events here. We wrap them only once, though\r\n  if (data instanceof InternalEvent) {\r\n    // we are fine, we alread have an event\r\n    event = data;\r\n  } else {\r\n    event = this.createEvent(data);\r\n  }\r\n\r\n  // ensure we pass the event as the first parameter\r\n  args[0] = event;\r\n\r\n  // original event type (in case we delegate)\r\n  var originalType = event.type;\r\n\r\n  // update event type before delegation\r\n  if (type !== originalType) {\r\n    event.type = type;\r\n  }\r\n\r\n  try {\r\n    returnValue = this._invokeListeners(event, args, firstListener);\r\n  } finally {\r\n    // reset event type after delegation\r\n    if (type !== originalType) {\r\n      event.type = originalType;\r\n    }\r\n  }\r\n\r\n  // set the return value to false if the event default\r\n  // got prevented and no other return value exists\r\n  if (returnValue === undefined && event.defaultPrevented) {\r\n    returnValue = false;\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\n\r\nEventBus.prototype.handleError = function(error) {\r\n  return this.fire('error', { error: error }) === false;\r\n};\r\n\r\n\r\nEventBus.prototype._destroy = function() {\r\n  this._listeners = {};\r\n};\r\n\r\nEventBus.prototype._invokeListeners = function(event, args, listener) {\r\n\r\n  var returnValue;\r\n\r\n  while (listener) {\r\n\r\n    // handle stopped propagation\r\n    if (event.cancelBubble) {\r\n      break;\r\n    }\r\n\r\n    returnValue = this._invokeListener(event, args, listener);\r\n\r\n    listener = listener.next;\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\nEventBus.prototype._invokeListener = function(event, args, listener) {\r\n\r\n  var returnValue;\r\n\r\n  try {\r\n    // returning false prevents the default action\r\n    returnValue = invokeFunction(listener.callback, args);\r\n\r\n    // stop propagation on return value\r\n    if (returnValue !== undefined) {\r\n      event.returnValue = returnValue;\r\n      event.stopPropagation();\r\n    }\r\n\r\n    // prevent default on return false\r\n    if (returnValue === false) {\r\n      event.preventDefault();\r\n    }\r\n  } catch (e) {\r\n    if (!this.handleError(e)) {\r\n      console.error('unhandled error in event listener');\r\n      console.error(e.stack);\r\n\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\n/*\r\n * Add new listener with a certain priority to the list\r\n * of listeners (for the given event).\r\n *\r\n * The semantics of listener registration / listener execution are\r\n * first register, first serve: New listeners will always be inserted\r\n * after existing listeners with the same priority.\r\n *\r\n * Example: Inserting two listeners with priority 1000 and 1300\r\n *\r\n *    * before: [ 1500, 1500, 1000, 1000 ]\r\n *    * after: [ 1500, 1500, (new=1300), 1000, 1000, (new=1000) ]\r\n *\r\n * @param {String} event\r\n * @param {Object} listener { priority, callback }\r\n */\r\nEventBus.prototype._addListener = function(event, newListener) {\r\n\r\n  var listener = this._getListeners(event),\r\n      previousListener;\r\n\r\n  // no prior listeners\r\n  if (!listener) {\r\n    this._setListeners(event, newListener);\r\n\r\n    return;\r\n  }\r\n\r\n  // ensure we order listeners by priority from\r\n  // 0 (high) to n > 0 (low)\r\n  while (listener) {\r\n\r\n    if (listener.priority < newListener.priority) {\r\n\r\n      newListener.next = listener;\r\n\r\n      if (previousListener) {\r\n        previousListener.next = newListener;\r\n      } else {\r\n        this._setListeners(event, newListener);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    previousListener = listener;\r\n    listener = listener.next;\r\n  }\r\n\r\n  // add new listener to back\r\n  previousListener.next = newListener;\r\n};\r\n\r\n\r\nEventBus.prototype._getListeners = function(name) {\r\n  return this._listeners[name];\r\n};\r\n\r\nEventBus.prototype._setListeners = function(name, listener) {\r\n  this._listeners[name] = listener;\r\n};\r\n\r\nEventBus.prototype._removeListener = function(event, callback) {\r\n\r\n  var listener = this._getListeners(event),\r\n      nextListener,\r\n      previousListener,\r\n      listenerCallback;\r\n\r\n  if (!callback) {\r\n    // clear listeners\r\n    this._setListeners(event, null);\r\n\r\n    return;\r\n  }\r\n\r\n  while (listener) {\r\n\r\n    nextListener = listener.next;\r\n\r\n    listenerCallback = listener.callback;\r\n\r\n    if (listenerCallback === callback || listenerCallback[FN_REF] === callback) {\r\n      if (previousListener) {\r\n        previousListener.next = nextListener;\r\n      } else {\r\n        // new first listener\r\n        this._setListeners(event, nextListener);\r\n      }\r\n    }\r\n\r\n    previousListener = listener;\r\n    listener = nextListener;\r\n  }\r\n};\r\n\r\n/**\r\n * A event that is emitted via the event bus.\r\n */\r\nfunction InternalEvent() { }\r\n\r\nInternalEvent.prototype.stopPropagation = function() {\r\n  this.cancelBubble = true;\r\n};\r\n\r\nInternalEvent.prototype.preventDefault = function() {\r\n  this.defaultPrevented = true;\r\n};\r\n\r\nInternalEvent.prototype.init = function(data) {\r\n  assign(this, data || {});\r\n};\r\n\r\n\r\n/**\r\n * Invoke function. Be fast...\r\n *\r\n * @param {Function} fn\r\n * @param {Array<Object>} args\r\n *\r\n * @return {Any}\r\n */\r\nfunction invokeFunction(fn, args) {\r\n  return fn.apply(null, args);\r\n}\r\n","import {\r\n  forEach,\r\n  reduce\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getChildren,\r\n  getVisual\r\n} from '../util/GraphicsUtil';\r\n\r\nimport { translate } from '../util/SvgTransformUtil';\r\n\r\nimport { clear as domClear } from 'min-dom';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * A factory that creates graphical elements\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function GraphicsFactory(eventBus, elementRegistry) {\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\r\n\r\n\r\nGraphicsFactory.prototype._getChildren = function(element) {\r\n\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  var childrenGfx;\r\n\r\n  // root element\r\n  if (!element.parent) {\r\n    childrenGfx = gfx;\r\n  } else {\r\n    childrenGfx = getChildren(gfx);\r\n    if (!childrenGfx) {\r\n      childrenGfx = svgCreate('g');\r\n      svgClasses(childrenGfx).add('djs-children');\r\n\r\n      svgAppend(gfx.parentNode, childrenGfx);\r\n    }\r\n  }\r\n\r\n  return childrenGfx;\r\n};\r\n\r\n/**\r\n * Clears the graphical representation of the element and returns the\r\n * cleared visual (the <g class=\"djs-visual\" /> element).\r\n */\r\nGraphicsFactory.prototype._clear = function(gfx) {\r\n  var visual = getVisual(gfx);\r\n\r\n  domClear(visual);\r\n\r\n  return visual;\r\n};\r\n\r\n/**\r\n * Creates a gfx container for shapes and connections\r\n *\r\n * The layout is as follows:\r\n *\r\n * <g class=\"djs-group\">\r\n *\r\n *   <!-- the gfx -->\r\n *   <g class=\"djs-element djs-(shape|connection)\">\r\n *     <g class=\"djs-visual\">\r\n *       <!-- the renderer draws in here -->\r\n *     </g>\r\n *\r\n *     <!-- extensions (overlays, click box, ...) goes here\r\n *   </g>\r\n *\r\n *   <!-- the gfx child nodes -->\r\n *   <g class=\"djs-children\"></g>\r\n * </g>\r\n *\r\n * @param {Object} parent\r\n * @param {String} type the type of the element, i.e. shape | connection\r\n * @param {Number} [parentIndex] position to create container in parent\r\n */\r\nGraphicsFactory.prototype._createContainer = function(type, childrenGfx, parentIndex) {\r\n  var outerGfx = svgCreate('g');\r\n  svgClasses(outerGfx).add('djs-group');\r\n\r\n  // insert node at position\r\n  if (typeof parentIndex !== 'undefined') {\r\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\r\n  } else {\r\n    svgAppend(childrenGfx, outerGfx);\r\n  }\r\n\r\n  var gfx = svgCreate('g');\r\n  svgClasses(gfx).add('djs-element');\r\n  svgClasses(gfx).add('djs-' + type);\r\n\r\n  svgAppend(outerGfx, gfx);\r\n\r\n  // create visual\r\n  var visual = svgCreate('g');\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(gfx, visual);\r\n\r\n  return gfx;\r\n};\r\n\r\nGraphicsFactory.prototype.create = function(type, element, parentIndex) {\r\n  var childrenGfx = this._getChildren(element.parent);\r\n  return this._createContainer(type, childrenGfx, parentIndex);\r\n};\r\n\r\nGraphicsFactory.prototype.updateContainments = function(elements) {\r\n\r\n  var self = this,\r\n      elementRegistry = this._elementRegistry,\r\n      parents;\r\n\r\n  parents = reduce(elements, function(map, e) {\r\n\r\n    if (e.parent) {\r\n      map[e.parent.id] = e.parent;\r\n    }\r\n\r\n    return map;\r\n  }, {});\r\n\r\n  // update all parents of changed and reorganized their children\r\n  // in the correct order (as indicated in our model)\r\n  forEach(parents, function(parent) {\r\n\r\n    var children = parent.children;\r\n\r\n    if (!children) {\r\n      return;\r\n    }\r\n\r\n    var childGfx = self._getChildren(parent);\r\n\r\n    forEach(children.slice().reverse(), function(c) {\r\n      var gfx = elementRegistry.getGraphics(c);\r\n\r\n      prependTo(gfx.parentNode, childGfx);\r\n    });\r\n  });\r\n};\r\n\r\nGraphicsFactory.prototype.drawShape = function(visual, element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\r\n};\r\n\r\nGraphicsFactory.prototype.getShapePath = function(element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.getShapePath', element);\r\n};\r\n\r\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\r\n};\r\n\r\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.getConnectionPath', waypoints);\r\n};\r\n\r\nGraphicsFactory.prototype.update = function(type, element, gfx) {\r\n  // Do not update root element\r\n  if (!element.parent) {\r\n    return;\r\n  }\r\n\r\n  var visual = this._clear(gfx);\r\n\r\n  // redraw\r\n  if (type === 'shape') {\r\n    this.drawShape(visual, element);\r\n\r\n    // update positioning\r\n    translate(gfx, element.x, element.y);\r\n  } else\r\n  if (type === 'connection') {\r\n    this.drawConnection(visual, element);\r\n  } else {\r\n    throw new Error('unknown type: ' + type);\r\n  }\r\n\r\n  if (element.hidden) {\r\n    svgAttr(gfx, 'display', 'none');\r\n  } else {\r\n    svgAttr(gfx, 'display', 'block');\r\n  }\r\n};\r\n\r\nGraphicsFactory.prototype.remove = function(element) {\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  // remove\r\n  svgRemove(gfx.parentNode);\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction prependTo(newNode, parentNode, siblingNode) {\r\n  parentNode.insertBefore(newNode, siblingNode || parentNode.firstChild);\r\n}\r\n","import DrawModule from '../draw';\r\n\r\nimport Canvas from './Canvas';\r\nimport ElementRegistry from './ElementRegistry';\r\nimport ElementFactory from './ElementFactory';\r\nimport EventBus from './EventBus';\r\nimport GraphicsFactory from './GraphicsFactory';\r\n\r\nexport default {\r\n  __depends__: [ DrawModule ],\r\n  __init__: [ 'canvas' ],\r\n  canvas: [ 'type', Canvas ],\r\n  elementRegistry: [ 'type', ElementRegistry ],\r\n  elementFactory: [ 'type', ElementFactory ],\r\n  eventBus: [ 'type', EventBus ],\r\n  graphicsFactory: [ 'type', GraphicsFactory ]\r\n};","var DEFAULT_RENDER_PRIORITY = 1000;\r\n\r\n/**\r\n * The base implementation of shape and connection renderers.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Number} [renderPriority=1000]\r\n */\r\nexport default function BaseRenderer(eventBus, renderPriority) {\r\n  var self = this;\r\n\r\n  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;\r\n\r\n  eventBus.on([ 'render.shape', 'render.connection' ], renderPriority, function(evt, context) {\r\n    var type = evt.type,\r\n        element = context.element,\r\n        visuals = context.gfx;\r\n\r\n    if (self.canRender(element)) {\r\n      if (type === 'render.shape') {\r\n        return self.drawShape(visuals, element);\r\n      } else {\r\n        return self.drawConnection(visuals, element);\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'render.getShapePath', 'render.getConnectionPath'], renderPriority, function(evt, element) {\r\n    if (self.canRender(element)) {\r\n      if (evt.type === 'render.getShapePath') {\r\n        return self.getShapePath(element);\r\n      } else {\r\n        return self.getConnectionPath(element);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Should check whether *this* renderer can render\r\n * the element/connection.\r\n *\r\n * @param {element} element\r\n *\r\n * @returns {Boolean}\r\n */\r\nBaseRenderer.prototype.canRender = function() {};\r\n\r\n/**\r\n * Provides the shape's snap svg element to be drawn on the `canvas`.\r\n *\r\n * @param {djs.Graphics} visuals\r\n * @param {Shape} shape\r\n *\r\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\r\n */\r\nBaseRenderer.prototype.drawShape = function() {};\r\n\r\n/**\r\n * Provides the shape's snap svg element to be drawn on the `canvas`.\r\n *\r\n * @param {djs.Graphics} visuals\r\n * @param {Connection} connection\r\n *\r\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\r\n */\r\nBaseRenderer.prototype.drawConnection = function() {};\r\n\r\n/**\r\n * Gets the SVG path of a shape that represents it's visual bounds.\r\n *\r\n * @param {Shape} shape\r\n *\r\n * @return {string} svg path\r\n */\r\nBaseRenderer.prototype.getShapePath = function() {};\r\n\r\n/**\r\n * Gets the SVG path of a connection that represents it's visual bounds.\r\n *\r\n * @param {Connection} connection\r\n *\r\n * @return {string} svg path\r\n */\r\nBaseRenderer.prototype.getConnectionPath = function() {};\r\n","import inherits from 'inherits';\r\n\r\nimport BaseRenderer from './BaseRenderer';\r\n\r\nimport {\r\n  componentsToPath,\r\n  createLine\r\n} from '../util/RenderUtil';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\n// apply default renderer with lowest possible priority\r\n// so that it only kicks in if noone else could render\r\nvar DEFAULT_RENDER_PRIORITY = 1;\r\n\r\n/**\r\n * The default renderer used for shapes and connections.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Styles} styles\r\n */\r\nexport default function DefaultRenderer(eventBus, styles) {\r\n  //\r\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\r\n\r\n  this.CONNECTION_STYLE = styles.style([ 'no-fill' ], { strokeWidth: 5, stroke: 'fuchsia' });\r\n  this.SHAPE_STYLE = styles.style({ fill: 'white', stroke: 'fuchsia', strokeWidth: 2 });\r\n}\r\n\r\ninherits(DefaultRenderer, BaseRenderer);\r\n\r\n\r\nDefaultRenderer.prototype.canRender = function() {\r\n  return true;\r\n};\r\n\r\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element) {\r\n\r\n  var rect = svgCreate('rect');\r\n  svgAttr(rect, {\r\n    x: 0,\r\n    y: 0,\r\n    width: element.width || 0,\r\n    height: element.height || 0\r\n  });\r\n  svgAttr(rect, this.SHAPE_STYLE);\r\n\r\n  svgAppend(visuals, rect);\r\n\r\n  return rect;\r\n};\r\n\r\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection) {\r\n\r\n  var line = createLine(connection.waypoints, this.CONNECTION_STYLE);\r\n  svgAppend(visuals, line);\r\n\r\n  return line;\r\n};\r\n\r\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\r\n\r\n  var x = shape.x,\r\n      y = shape.y,\r\n      width = shape.width,\r\n      height = shape.height;\r\n\r\n  var shapePath = [\r\n    ['M', x, y],\r\n    ['l', width, 0],\r\n    ['l', 0, height],\r\n    ['l', -width, 0],\r\n    ['z']\r\n  ];\r\n\r\n  return componentsToPath(shapePath);\r\n};\r\n\r\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\r\n  var waypoints = connection.waypoints;\r\n\r\n  var idx, point, connectionPath = [];\r\n\r\n  for (idx = 0; (point = waypoints[idx]); idx++) {\r\n\r\n    // take invisible docking into account\r\n    // when creating the path\r\n    point = point.original || point;\r\n\r\n    connectionPath.push([ idx === 0 ? 'M' : 'L', point.x, point.y ]);\r\n  }\r\n\r\n  return componentsToPath(connectionPath);\r\n};\r\n\r\n\r\nDefaultRenderer.$inject = [ 'eventBus', 'styles' ];\r\n","import {\r\n  isArray,\r\n  assign,\r\n  reduce\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * A component that manages shape styles\r\n */\r\nexport default function Styles() {\r\n\r\n  var defaultTraits = {\r\n\r\n    'no-fill': {\r\n      fill: 'none'\r\n    },\r\n    'no-border': {\r\n      strokeOpacity: 0.0\r\n    },\r\n    'no-events': {\r\n      pointerEvents: 'none'\r\n    }\r\n  };\r\n\r\n  var self = this;\r\n\r\n  /**\r\n   * Builds a style definition from a className, a list of traits and an object of additional attributes.\r\n   *\r\n   * @param  {String} className\r\n   * @param  {Array<String>} traits\r\n   * @param  {Object} additionalAttrs\r\n   *\r\n   * @return {Object} the style defintion\r\n   */\r\n  this.cls = function(className, traits, additionalAttrs) {\r\n    var attrs = this.style(traits, additionalAttrs);\r\n\r\n    return assign(attrs, { 'class': className });\r\n  };\r\n\r\n  /**\r\n   * Builds a style definition from a list of traits and an object of additional attributes.\r\n   *\r\n   * @param  {Array<String>} traits\r\n   * @param  {Object} additionalAttrs\r\n   *\r\n   * @return {Object} the style defintion\r\n   */\r\n  this.style = function(traits, additionalAttrs) {\r\n\r\n    if (!isArray(traits) && !additionalAttrs) {\r\n      additionalAttrs = traits;\r\n      traits = [];\r\n    }\r\n\r\n    var attrs = reduce(traits, function(attrs, t) {\r\n      return assign(attrs, defaultTraits[t] || {});\r\n    }, {});\r\n\r\n    return additionalAttrs ? assign(attrs, additionalAttrs) : attrs;\r\n  };\r\n\r\n  this.computeStyle = function(custom, traits, defaultStyles) {\r\n    if (!isArray(traits)) {\r\n      defaultStyles = traits;\r\n      traits = [];\r\n    }\r\n\r\n    return self.style(traits || [], assign({}, defaultStyles, custom || {}));\r\n  };\r\n}\r\n","import DefaultRenderer from './DefaultRenderer';\r\nimport Styles from './Styles';\r\n\r\nexport default {\r\n  __init__: [ 'defaultRenderer' ],\r\n  defaultRenderer: [ 'type', DefaultRenderer ],\r\n  styles: [ 'type', Styles ]\r\n};\r\n","import {\r\n  filter,\r\n  forEach,\r\n  sortBy\r\n} from 'min-dash';\r\n\r\nfunction last(arr) {\r\n  return arr && arr[arr.length - 1];\r\n}\r\n\r\nfunction sortTopOrMiddle(element) {\r\n  return element.y;\r\n}\r\n\r\nfunction sortLeftOrCenter(element) {\r\n  return element.x;\r\n}\r\n\r\n/**\r\n * Sorting functions for different types of alignment\r\n *\r\n * @type {Object}\r\n *\r\n * @return {Function}\r\n */\r\nvar ALIGNMENT_SORTING = {\r\n  left: sortLeftOrCenter,\r\n  center: sortLeftOrCenter,\r\n  right: function(element) {\r\n    return element.x + element.width;\r\n  },\r\n  top: sortTopOrMiddle,\r\n  middle: sortTopOrMiddle,\r\n  bottom: function(element) {\r\n    return element.y + element.height;\r\n  }\r\n};\r\n\r\n\r\nexport default function AlignElements(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nAlignElements.$inject = [ 'modeling' ];\r\n\r\n\r\n/**\r\n * Get the relevant \"axis\" and \"dimension\" related to the current type of alignment\r\n *\r\n * @param  {String} type left|right|center|top|bottom|middle\r\n *\r\n * @return {Object} { axis, dimension }\r\n */\r\nAlignElements.prototype._getOrientationDetails = function(type) {\r\n  var vertical = [ 'top', 'bottom', 'middle' ],\r\n      axis = 'x',\r\n      dimension = 'width';\r\n\r\n  if (vertical.indexOf(type) !== -1) {\r\n    axis = 'y';\r\n    dimension = 'height';\r\n  }\r\n\r\n  return {\r\n    axis: axis,\r\n    dimension: dimension\r\n  };\r\n};\r\n\r\nAlignElements.prototype._isType = function(type, types) {\r\n  return types.indexOf(type) !== -1;\r\n};\r\n\r\n/**\r\n * Get a point on the relevant axis where elements should align to\r\n *\r\n * @param  {String} type left|right|center|top|bottom|middle\r\n * @param  {Array} sortedElements\r\n *\r\n * @return {Object}\r\n */\r\nAlignElements.prototype._alignmentPosition = function(type, sortedElements) {\r\n  var orientation = this._getOrientationDetails(type),\r\n      axis = orientation.axis,\r\n      dimension = orientation.dimension,\r\n      alignment = {},\r\n      centers = {},\r\n      hasSharedCenters = false,\r\n      centeredElements,\r\n      firstElement,\r\n      lastElement;\r\n\r\n  function getMiddleOrTop(first, last) {\r\n    return Math.round((first[axis] + last[axis] + last[dimension]) / 2);\r\n  }\r\n\r\n  if (this._isType(type, [ 'left', 'top' ])) {\r\n    alignment[type] = sortedElements[0][axis];\r\n\r\n  } else if (this._isType(type, [ 'right', 'bottom' ])) {\r\n    lastElement = last(sortedElements);\r\n\r\n    alignment[type] = lastElement[axis] + lastElement[dimension];\r\n\r\n  } else if (this._isType(type, [ 'center', 'middle' ])) {\r\n\r\n    // check if there is a center shared by more than one shape\r\n    // if not, just take the middle of the range\r\n    forEach(sortedElements, function(element) {\r\n      var center = element[axis] + Math.round(element[dimension] / 2);\r\n\r\n      if (centers[center]) {\r\n        centers[center].elements.push(element);\r\n      } else {\r\n        centers[center] = {\r\n          elements: [ element ],\r\n          center: center\r\n        };\r\n      }\r\n    });\r\n\r\n    centeredElements = sortBy(centers, function(center) {\r\n      if (center.elements.length > 1) {\r\n        hasSharedCenters = true;\r\n      }\r\n\r\n      return center.elements.length;\r\n    });\r\n\r\n    if (hasSharedCenters) {\r\n      alignment[type] = last(centeredElements).center;\r\n\r\n      return alignment;\r\n    }\r\n\r\n    firstElement = sortedElements[0];\r\n\r\n    sortedElements = sortBy(sortedElements, function(element) {\r\n      return element[axis] + element[dimension];\r\n    });\r\n\r\n    lastElement = last(sortedElements);\r\n\r\n    alignment[type] = getMiddleOrTop(firstElement, lastElement);\r\n  }\r\n\r\n  return alignment;\r\n};\r\n\r\n/**\r\n * Executes the alignment of a selection of elements\r\n *\r\n * @param  {Array} elements [description]\r\n * @param  {String} type left|right|center|top|bottom|middle\r\n */\r\nAlignElements.prototype.trigger = function(elements, type) {\r\n  var modeling = this._modeling;\r\n\r\n  var filteredElements = filter(elements, function(element) {\r\n    return !(element.waypoints || element.host || element.labelTarget);\r\n  });\r\n\r\n  var sortFn = ALIGNMENT_SORTING[type];\r\n\r\n  var sortedElements = sortBy(filteredElements, sortFn);\r\n\r\n  var alignment = this._alignmentPosition(type, sortedElements);\r\n\r\n  modeling.alignElements(sortedElements, alignment);\r\n};\r\n","import AlignElements from './AlignElements';\r\n\r\nexport default {\r\n  __init__: [ 'alignElements' ],\r\n  alignElements: [ 'type', AlignElements ]\r\n};\r\n","import {\r\n  flatten,\r\n  filter,\r\n  forEach,\r\n  groupBy,\r\n  map,\r\n  unionBy\r\n} from 'min-dash';\r\n\r\nimport { saveClear } from '../../util/Removal';\r\n\r\nimport {\r\n  remove as collectionRemove\r\n} from '../../util/Collections';\r\n\r\nimport { getNewAttachShapeDelta } from '../../util/AttachUtil';\r\n\r\nimport inherits from 'inherits';\r\n\r\nvar LOW_PRIORITY = 251,\r\n    HIGH_PRIORITY = 1401;\r\n\r\nimport CommandInterceptor from '../../command/CommandInterceptor';\r\n\r\n\r\n/**\r\n * Adds the notion of attached elements to the modeler.\r\n *\r\n * Optionally depends on `diagram-js/lib/features/move` to render\r\n * the attached elements during move preview.\r\n *\r\n * Optionally depends on `diagram-js/lib/features/label-support`\r\n * to render attached labels during move preview.\r\n *\r\n * @param {didi.Injector} injector\r\n * @param {EventBus} eventBus\r\n * @param {Rules} rules\r\n * @param {Modeling} modeling\r\n */\r\nexport default function AttachSupport(injector, eventBus, rules, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  var movePreview = injector.get('movePreview', false);\r\n\r\n\r\n  // remove all the attached elements from the shapes to be validated\r\n  // add all the attached shapes to the overall list of moved shapes\r\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        validatedShapes = context.validatedShapes;\r\n\r\n    context.shapes = addAttached(shapes);\r\n\r\n    context.validatedShapes = removeAttached(validatedShapes);\r\n  });\r\n\r\n  // add attachers to the visual's group\r\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        attachers = getAttachers(shapes);\r\n\r\n    forEach(attachers, function(attacher) {\r\n      movePreview.makeDraggable(context, attacher, true);\r\n\r\n      forEach(attacher.labels, function(label) {\r\n        movePreview.makeDraggable(context, label, true);\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  // add all attachers to move closure\r\n  this.preExecuted('elements.move', HIGH_PRIORITY, function(e) {\r\n    var context = e.context,\r\n        closure = context.closure,\r\n        shapes = context.shapes,\r\n        attachers = getAttachers(shapes);\r\n\r\n    forEach(attachers, function(attacher) {\r\n      closure.add(attacher, closure.topLevel[attacher.host.id]);\r\n    });\r\n  });\r\n\r\n  // perform the attaching after shapes are done moving\r\n  this.postExecuted('elements.move', function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        newHost = context.newHost,\r\n        attachers;\r\n\r\n    // we only support attachment / detachment of one element\r\n    if (shapes.length > 1) {\r\n      return;\r\n    }\r\n\r\n    if (newHost) {\r\n\r\n      attachers = shapes;\r\n    } else {\r\n\r\n      attachers = filter(shapes, function(s) {\r\n        return !!s.host;\r\n      });\r\n    }\r\n\r\n    forEach(attachers, function(attacher) {\r\n      modeling.updateAttachment(attacher, newHost);\r\n    });\r\n  });\r\n\r\n  // ensure invalid attachment connections are removed\r\n  this.postExecuted('elements.move', function(e) {\r\n\r\n    var shapes = e.context.shapes;\r\n\r\n    forEach(shapes, function(shape) {\r\n\r\n      forEach(shape.attachers, function(attacher) {\r\n\r\n        // remove invalid outgoing connections\r\n        forEach(attacher.outgoing.slice(), function(connection) {\r\n          var allowed = rules.allowed('connection.reconnectStart', {\r\n            connection: connection,\r\n            source: connection.source,\r\n            target: connection.target\r\n          });\r\n\r\n          if (!allowed) {\r\n            modeling.removeConnection(connection);\r\n          }\r\n        });\r\n\r\n        // remove invalid incoming connections\r\n        forEach(attacher.incoming.slice(), function(connection) {\r\n          var allowed = rules.allowed('connection.reconnectEnd', {\r\n            connection: connection,\r\n            source: connection.source,\r\n            target: connection.target\r\n          });\r\n\r\n          if (!allowed) {\r\n            modeling.removeConnection(connection);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  this.postExecute('shape.create', function(e) {\r\n    var context = e.context,\r\n        shape = context.shape,\r\n        host = context.host;\r\n\r\n    if (host) {\r\n      modeling.updateAttachment(shape, host);\r\n    }\r\n  });\r\n\r\n  // update attachments if the host is replaced\r\n  this.postExecute('shape.replace', function(e) {\r\n\r\n    var context = e.context,\r\n        oldShape = context.oldShape,\r\n        newShape = context.newShape;\r\n\r\n    // move the attachers to the new host\r\n    saveClear(oldShape.attachers, function(attacher) {\r\n      var allowed = rules.allowed('elements.move', {\r\n        target: newShape,\r\n        shapes: [attacher]\r\n      });\r\n\r\n      if (allowed === 'attach') {\r\n        modeling.updateAttachment(attacher, newShape);\r\n      } else {\r\n        modeling.removeShape(attacher);\r\n      }\r\n    });\r\n\r\n    // move attachers if new host has different size\r\n    if (newShape.attachers.length) {\r\n\r\n      forEach(newShape.attachers, function(attacher) {\r\n        var delta = getNewAttachShapeDelta(attacher, oldShape, newShape);\r\n        modeling.moveShape(attacher, delta, attacher.parent);\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  // move shape on host resize\r\n  this.postExecute('shape.resize', function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        oldBounds = context.oldBounds,\r\n        newBounds = context.newBounds,\r\n        attachers = shape.attachers;\r\n\r\n    forEach(attachers, function(attacher) {\r\n      var delta = getNewAttachShapeDelta(attacher, oldBounds, newBounds);\r\n\r\n      modeling.moveShape(attacher, delta, attacher.parent);\r\n\r\n      forEach(attacher.labels, function(label) {\r\n        modeling.moveShape(label, delta, label.parent);\r\n      });\r\n    });\r\n  });\r\n\r\n  // remove attachments\r\n  this.preExecute('shape.delete', function(event) {\r\n\r\n    var shape = event.context.shape;\r\n\r\n    saveClear(shape.attachers, function(attacher) {\r\n      modeling.removeShape(attacher);\r\n    });\r\n\r\n    if (shape.host) {\r\n      modeling.updateAttachment(shape, null);\r\n    }\r\n  });\r\n\r\n\r\n  // Prevent attachers and their labels from moving, when the space tool is performed.\r\n  // Otherwise the attachers and their labels would be moved twice.\r\n  eventBus.on('spaceTool.move', function(event) {\r\n\r\n    var context = event.context,\r\n        initialized = context.initialized,\r\n        attachSupportInitialized = context.attachSupportInitialized;\r\n\r\n    if (!initialized || attachSupportInitialized) {\r\n      return;\r\n    }\r\n\r\n    var movingShapes = context.movingShapes;\r\n\r\n    // collect attachers whose host is not being moved using the space tool\r\n    var staticAttachers = filter(movingShapes, function(shape) {\r\n      var host = shape.host;\r\n\r\n      return host && movingShapes.indexOf(host) === -1;\r\n    });\r\n\r\n    // remove attachers that are not going to be moved from moving shapes\r\n    forEach(staticAttachers, function(shape) {\r\n      collectionRemove(movingShapes, shape);\r\n\r\n      forEach(shape.labels, function(label) {\r\n        collectionRemove(movingShapes, shape.label);\r\n      });\r\n    });\r\n\r\n    context.attachSupportInitialized = true;\r\n  });\r\n}\r\n\r\ninherits(AttachSupport, CommandInterceptor);\r\n\r\nAttachSupport.$inject = [\r\n  'injector',\r\n  'eventBus',\r\n  'rules',\r\n  'modeling'\r\n];\r\n\r\n\r\n/**\r\n * Return attachers of the given shapes\r\n *\r\n * @param {Array<djs.model.Base>} shapes\r\n * @return {Array<djs.model.Base>}\r\n */\r\nfunction getAttachers(shapes) {\r\n  return flatten(map(shapes, function(s) {\r\n    return s.attachers || [];\r\n  }));\r\n}\r\n\r\n/**\r\n * Return a combined list of elements and\r\n * attachers.\r\n *\r\n * @param {Array<djs.model.Base>} elements\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction addAttached(elements) {\r\n  var attachers = getAttachers(elements);\r\n\r\n  return unionBy('id', elements, attachers);\r\n}\r\n\r\n/**\r\n * Return a filtered list of elements that do not\r\n * contain attached elements with hosts being part\r\n * of the selection.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n *\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction removeAttached(elements) {\r\n\r\n  var ids = groupBy(elements, 'id');\r\n\r\n  return filter(elements, function(element) {\r\n    while (element) {\r\n\r\n      // host in selection\r\n      if (element.host && ids[element.host.id]) {\r\n        return false;\r\n      }\r\n\r\n      element = element.parent;\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n","import RulesModule from '../rules';\r\n\r\nimport AttachSupport from './AttachSupport';\r\n\r\nexport default {\r\n  __depends__: [\r\n    RulesModule\r\n  ],\r\n  __init__: [ 'attachSupport' ],\r\n  attachSupport: [ 'type', AttachSupport ]\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport { getBBox as getBoundingBox } from '../../util/Elements';\r\n\r\nimport {\r\n  asTRBL,\r\n  asBounds\r\n} from '../../layout/LayoutUtil';\r\n\r\nimport {\r\n  assign,\r\n  flatten,\r\n  forEach,\r\n  isArray,\r\n  values,\r\n  groupBy\r\n} from 'min-dash';\r\n\r\nimport CommandInterceptor from '../../command/CommandInterceptor';\r\n\r\n\r\n/**\r\n * An auto resize component that takes care of expanding a parent element\r\n * if child elements are created or moved close the parents edge.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Modeling} modeling\r\n * @param {Rules} rules\r\n */\r\nexport default function AutoResize(eventBus, elementRegistry, modeling, rules) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this._elementRegistry = elementRegistry;\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n\r\n  var self = this;\r\n\r\n  this.postExecuted([ 'shape.create' ], function(event) {\r\n    var context = event.context,\r\n        hints = context.hints,\r\n        shape = context.shape,\r\n        parent = context.parent || context.newParent;\r\n\r\n    if (hints && (hints.root === false || hints.autoResize === false)) {\r\n      return;\r\n    }\r\n\r\n    self._expand([ shape ], parent);\r\n  });\r\n\r\n  this.postExecuted([ 'elements.move' ], function(event) {\r\n    var context = event.context,\r\n        elements = flatten(values(context.closure.topLevel)),\r\n        hints = context.hints;\r\n\r\n    var autoResize = hints ? hints.autoResize : true;\r\n\r\n    if (autoResize === false) {\r\n      return;\r\n    }\r\n\r\n    var expandings = groupBy(elements, function(element) {\r\n      return element.parent.id;\r\n    });\r\n\r\n    forEach(expandings, function(elements, parentId) {\r\n\r\n      // optionally filter elements to be considered when resizing\r\n      if (isArray(autoResize)) {\r\n        elements = elements.filter(function(element) {\r\n          return autoResize.indexOf(element) !== -1;\r\n        });\r\n      }\r\n\r\n      self._expand(elements, parentId);\r\n    });\r\n  });\r\n\r\n  this.postExecuted([ 'shape.toggleCollapse' ], function(event) {\r\n    var context = event.context,\r\n        hints = context.hints,\r\n        shape = context.shape;\r\n\r\n    if (hints && (hints.root === false || hints.autoResize === false)) {\r\n      return;\r\n    }\r\n\r\n    if (shape.collapsed) {\r\n      return;\r\n    }\r\n\r\n    self._expand(shape.children || [], shape);\r\n  });\r\n\r\n  this.postExecuted([ 'shape.resize' ], function(event) {\r\n    var context = event.context,\r\n        hints = context.hints,\r\n        shape = context.shape,\r\n        parent = shape.parent;\r\n\r\n    if (hints && (hints.root === false || hints.autoResize === false)) {\r\n      return;\r\n    }\r\n\r\n    if (parent) {\r\n      self._expand([ shape ], parent);\r\n    }\r\n  });\r\n\r\n}\r\n\r\nAutoResize.$inject = [\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'modeling',\r\n  'rules'\r\n];\r\n\r\ninherits(AutoResize, CommandInterceptor);\r\n\r\n\r\n/**\r\n * Calculate the new bounds of the target shape, given\r\n * a number of elements have been moved or added into the parent.\r\n *\r\n * This method considers the current size, the added elements as well as\r\n * the provided padding for the new bounds.\r\n *\r\n * @param {Array<djs.model.Shape>} elements\r\n * @param {djs.model.Shape} target\r\n */\r\nAutoResize.prototype._getOptimalBounds = function(elements, target) {\r\n\r\n  var offset = this.getOffset(target),\r\n      padding = this.getPadding(target);\r\n\r\n  var elementsTrbl = asTRBL(getBoundingBox(elements)),\r\n      targetTrbl = asTRBL(target);\r\n\r\n  var newTrbl = {};\r\n\r\n  if (elementsTrbl.top - targetTrbl.top < padding.top) {\r\n    newTrbl.top = elementsTrbl.top - offset.top;\r\n  }\r\n\r\n  if (elementsTrbl.left - targetTrbl.left < padding.left) {\r\n    newTrbl.left = elementsTrbl.left - offset.left;\r\n  }\r\n\r\n  if (targetTrbl.right - elementsTrbl.right < padding.right) {\r\n    newTrbl.right = elementsTrbl.right + offset.right;\r\n  }\r\n\r\n  if (targetTrbl.bottom - elementsTrbl.bottom < padding.bottom) {\r\n    newTrbl.bottom = elementsTrbl.bottom + offset.bottom;\r\n  }\r\n\r\n  return asBounds(assign({}, targetTrbl, newTrbl));\r\n};\r\n\r\n\r\n/**\r\n * Expand the target shape respecting rules, offset and padding\r\n *\r\n * @param {Array<djs.model.Shape>} elements\r\n * @param {djs.model.Shape|String} target|targetId\r\n */\r\nAutoResize.prototype._expand = function(elements, target) {\r\n\r\n  if (typeof target === 'string') {\r\n    target = this._elementRegistry.get(target);\r\n  }\r\n\r\n  var allowed = this._rules.allowed('element.autoResize', {\r\n    elements: elements,\r\n    target: target\r\n  });\r\n\r\n  if (!allowed) {\r\n    return;\r\n  }\r\n\r\n  // calculate the new bounds\r\n  var newBounds = this._getOptimalBounds(elements, target);\r\n\r\n  if (!boundsChanged(newBounds, target)) {\r\n    return;\r\n  }\r\n\r\n  // resize the parent shape\r\n  this.resize(target, newBounds);\r\n\r\n  var parent = target.parent;\r\n\r\n  // recursively expand parent elements\r\n  if (parent) {\r\n    this._expand([ target ], parent);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Get the amount to expand the given shape in each direction.\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {Object} {top, bottom, left, right}\r\n */\r\nAutoResize.prototype.getOffset = function(shape) {\r\n  return { top: 60, bottom: 60, left: 100, right: 100 };\r\n};\r\n\r\n\r\n/**\r\n * Get the activation threshold for each side for which\r\n * resize triggers.\r\n *\r\n * @param {djs.model.Shape} shape\r\n *\r\n * @return {Object} {top, bottom, left, right}\r\n */\r\nAutoResize.prototype.getPadding = function(shape) {\r\n  return { top: 2, bottom: 2, left: 15, right: 15 };\r\n};\r\n\r\n\r\n/**\r\n * Perform the actual resize operation.\r\n *\r\n * @param {djs.model.Shape} target\r\n * @param {Object} newBounds\r\n */\r\nAutoResize.prototype.resize = function(target, newBounds) {\r\n  this._modeling.resizeShape(target, newBounds);\r\n};\r\n\r\n\r\nfunction boundsChanged(newBounds, oldBounds) {\r\n  return (\r\n    newBounds.x !== oldBounds.x ||\r\n    newBounds.y !== oldBounds.y ||\r\n    newBounds.width !== oldBounds.width ||\r\n    newBounds.height !== oldBounds.height\r\n  );\r\n}","import RuleProvider from '../rules/RuleProvider';\r\n\r\nimport inherits from 'inherits';\r\n\r\n/**\r\n * This is a base rule provider for the element.autoResize rule.\r\n */\r\nexport default function AutoResizeProvider(eventBus) {\r\n\r\n  RuleProvider.call(this, eventBus);\r\n\r\n  var self = this;\r\n\r\n  this.addRule('element.autoResize', function(context) {\r\n    return self.canResize(context.elements, context.target);\r\n  });\r\n}\r\n\r\nAutoResizeProvider.$inject = [ 'eventBus' ];\r\n\r\ninherits(AutoResizeProvider, RuleProvider);\r\n\r\n/**\r\n * Needs to be implemented by sub classes to allow actual auto resize\r\n *\r\n * @param  {Array<djs.model.Shape>} elements\r\n * @param  {djs.model.Shape} target\r\n *\r\n * @return {Boolean}\r\n */\r\nAutoResizeProvider.prototype.canResize = function(elements, target) {\r\n  return false;\r\n};","import { assign } from 'min-dash';\r\n\r\nimport {\r\n  toPoint\r\n} from '../../util/Event';\r\n\r\n\r\n/**\r\n * Initiates canvas scrolling if current cursor point is close to a border.\r\n * Cancelled when current point moves back inside the scrolling borders\r\n * or cancelled manually.\r\n *\r\n * Default options :\r\n *   scrollThresholdIn: [ 20, 20, 20, 20 ],\r\n *   scrollThresholdOut: [ 0, 0, 0, 0 ],\r\n *   scrollRepeatTimeout: 15,\r\n *   scrollStep: 10\r\n *\r\n * Threshold order:\r\n *   [ left, top, right, bottom ]\r\n */\r\nexport default function AutoScroll(config, eventBus, canvas, mouseTracking) {\r\n\r\n  this._canvas = canvas;\r\n  this._mouseTracking = mouseTracking;\r\n\r\n  this._opts = assign({\r\n    scrollThresholdIn: [ 20, 20, 20, 20 ],\r\n    scrollThresholdOut: [ 0, 0, 0, 0 ],\r\n    scrollRepeatTimeout: 15,\r\n    scrollStep: 10\r\n  }, config);\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('drag.move', function(e) {\r\n    var point = self._toBorderPoint(e);\r\n\r\n    self.startScroll(point);\r\n  });\r\n\r\n  eventBus.on([ 'drag.cleanup' ], function() {\r\n    self.stopScroll();\r\n  });\r\n}\r\n\r\nAutoScroll.$inject = [\r\n  'config.autoScroll',\r\n  'eventBus',\r\n  'canvas',\r\n  'mouseTracking'\r\n];\r\n\r\n\r\n/**\r\n * Starts scrolling loop.\r\n * Point is given in global scale in canvas container box plane.\r\n *\r\n * @param  {Object} point { x: X, y: Y }\r\n */\r\nAutoScroll.prototype.startScroll = function(point) {\r\n\r\n  var canvas = this._canvas;\r\n  var opts = this._opts;\r\n  var self = this;\r\n\r\n  var clientRect = canvas.getContainer().getBoundingClientRect();\r\n\r\n  var diff = [\r\n    point.x,\r\n    point.y,\r\n    clientRect.width - point.x,\r\n    clientRect.height - point.y\r\n  ];\r\n\r\n  this.stopScroll();\r\n\r\n  var dx = 0,\r\n      dy = 0;\r\n\r\n  for (var i = 0; i < 4; i++) {\r\n    if (between(diff[i], opts.scrollThresholdOut[i], opts.scrollThresholdIn[i])) {\r\n      if (i === 0) {\r\n        dx = opts.scrollStep;\r\n      } else if (i == 1) {\r\n        dy = opts.scrollStep;\r\n      } else if (i == 2) {\r\n        dx = -opts.scrollStep;\r\n      } else if (i == 3) {\r\n        dy = -opts.scrollStep;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dx !== 0 || dy !== 0) {\r\n    canvas.scroll({ dx: dx, dy: dy });\r\n\r\n    this._scrolling = setTimeout(function() {\r\n      self.startScroll(point);\r\n    }, opts.scrollRepeatTimeout);\r\n  }\r\n};\r\n\r\nfunction between(val, start, end) {\r\n  if (start < val && val < end) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Stops scrolling loop.\r\n */\r\nAutoScroll.prototype.stopScroll = function() {\r\n  clearTimeout(this._scrolling);\r\n};\r\n\r\n\r\n/**\r\n * Overrides defaults options.\r\n *\r\n * @param  {Object} options\r\n */\r\nAutoScroll.prototype.setOptions = function(options) {\r\n  this._opts = assign({}, this._opts, options);\r\n};\r\n\r\n\r\n/**\r\n * Converts event to a point in canvas container plane in global scale.\r\n *\r\n * @param  {Event} event\r\n * @return {Point}\r\n */\r\nAutoScroll.prototype._toBorderPoint = function(event) {\r\n  var clientRect = this._canvas._container.getBoundingClientRect();\r\n\r\n  var globalPosition = toPoint(event.originalEvent);\r\n\r\n  return {\r\n    x: globalPosition.x - clientRect.left,\r\n    y: globalPosition.y - clientRect.top\r\n  };\r\n};","import DraggingModule from '../dragging';\r\nimport MouseTrackingModule from '../mouse-tracking';\r\n\r\nimport AutoScroll from './AutoScroll';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    DraggingModule,\r\n    MouseTrackingModule\r\n  ],\r\n  __init__: [ 'autoScroll' ],\r\n  autoScroll: [ 'type', AutoScroll ]\r\n};","import {\r\n  pointDistance,\r\n  pointsOnLine\r\n} from '../../util/Geometry';\r\n\r\nimport {\r\n  addBendpoint\r\n} from './BendpointUtil';\r\n\r\nvar MARKER_OK = 'connect-ok',\r\n    MARKER_NOT_OK = 'connect-not-ok',\r\n    MARKER_CONNECT_HOVER = 'connect-hover',\r\n    MARKER_CONNECT_UPDATING = 'djs-updating';\r\n\r\nvar COMMAND_BENDPOINT_UPDATE = 'connection.updateWaypoints',\r\n    COMMAND_RECONNECT_START = 'connection.reconnectStart',\r\n    COMMAND_RECONNECT_END = 'connection.reconnectEnd';\r\n\r\nvar round = Math.round;\r\n\r\nimport {\r\n  classes as svgClasses,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport { translate } from '../../util/SvgTransformUtil';\r\n\r\n\r\n/**\r\n * A component that implements moving of bendpoints\r\n */\r\nexport default function BendpointMove(\r\n    injector, eventBus, canvas,\r\n    dragging, graphicsFactory, rules,\r\n    modeling) {\r\n\r\n\r\n  // optional connection docking integration\r\n  var connectionDocking = injector.get('connectionDocking', false);\r\n\r\n\r\n  // API\r\n\r\n  this.start = function(event, connection, bendpointIndex, insert) {\r\n\r\n    var type,\r\n        context,\r\n        waypoints = connection.waypoints,\r\n        gfx = canvas.getGraphics(connection);\r\n\r\n    if (!insert && bendpointIndex === 0) {\r\n      type = COMMAND_RECONNECT_START;\r\n    } else\r\n    if (!insert && bendpointIndex === waypoints.length - 1) {\r\n      type = COMMAND_RECONNECT_END;\r\n    } else {\r\n      type = COMMAND_BENDPOINT_UPDATE;\r\n    }\r\n\r\n    context = {\r\n      connection: connection,\r\n      bendpointIndex: bendpointIndex,\r\n      insert: insert,\r\n      type: type\r\n    };\r\n\r\n    dragging.init(event, 'bendpoint.move', {\r\n      data: {\r\n        connection: connection,\r\n        connectionGfx: gfx,\r\n        context: context\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  // DRAGGING IMPLEMENTATION\r\n\r\n\r\n  function redrawConnection(data) {\r\n    graphicsFactory.update('connection', data.connection, data.connectionGfx);\r\n  }\r\n\r\n  function filterRedundantWaypoints(waypoints) {\r\n\r\n    // alter copy of waypoints, not original\r\n    waypoints = waypoints.slice();\r\n\r\n    var idx = 0,\r\n        point,\r\n        previousPoint,\r\n        nextPoint;\r\n\r\n    while (waypoints[idx]) {\r\n      point = waypoints[idx];\r\n      previousPoint = waypoints[idx - 1];\r\n      nextPoint = waypoints[idx + 1];\r\n\r\n      if (pointDistance(point, nextPoint) === 0 ||\r\n          pointsOnLine(previousPoint, nextPoint, point)) {\r\n\r\n        // remove point, if overlapping with {nextPoint}\r\n        // or on line with {previousPoint} -> {point} -> {nextPoint}\r\n        waypoints.splice(idx, 1);\r\n      } else {\r\n        idx++;\r\n      }\r\n    }\r\n\r\n    return waypoints;\r\n  }\r\n\r\n  eventBus.on('bendpoint.move.start', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        originalWaypoints = connection.waypoints,\r\n        waypoints = originalWaypoints.slice(),\r\n        insert = context.insert,\r\n        idx = context.bendpointIndex;\r\n\r\n    context.originalWaypoints = originalWaypoints;\r\n\r\n    if (insert) {\r\n      // insert placeholder for bendpoint to-be-added\r\n      waypoints.splice(idx, 0, null);\r\n    }\r\n\r\n    connection.waypoints = waypoints;\r\n\r\n    // add dragger gfx\r\n    context.draggerGfx = addBendpoint(canvas.getLayer('overlays'));\r\n    svgClasses(context.draggerGfx).add('djs-dragging');\r\n\r\n    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.hover', function(e) {\r\n    var context = e.context;\r\n\r\n    context.hover = e.hover;\r\n\r\n    if (e.hover) {\r\n      canvas.addMarker(e.hover, MARKER_CONNECT_HOVER);\r\n\r\n      // asks whether reconnect / bendpoint move / bendpoint add\r\n      // is allowed at the given position\r\n      var allowed = context.allowed = rules.allowed(context.type, context);\r\n\r\n      if (allowed) {\r\n        canvas.removeMarker(context.hover, MARKER_NOT_OK);\r\n        canvas.addMarker(context.hover, MARKER_OK);\r\n\r\n        context.target = context.hover;\r\n      } else if (allowed === false) {\r\n        canvas.removeMarker(context.hover, MARKER_OK);\r\n        canvas.addMarker(context.hover, MARKER_NOT_OK);\r\n\r\n        context.target = null;\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on([\r\n    'bendpoint.move.out',\r\n    'bendpoint.move.cleanup'\r\n  ], function(e) {\r\n\r\n    // remove connect marker\r\n    // if it was added\r\n    var hover = e.context.hover;\r\n\r\n    if (hover) {\r\n      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);\r\n      canvas.removeMarker(hover, e.context.target ? MARKER_OK : MARKER_NOT_OK);\r\n    }\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.move', function(e) {\r\n\r\n    var context = e.context,\r\n        moveType = context.type,\r\n        connection = e.connection,\r\n        source, target;\r\n\r\n    connection.waypoints[context.bendpointIndex] = { x: e.x, y: e.y };\r\n\r\n    if (connectionDocking) {\r\n\r\n      if (context.hover) {\r\n        if (moveType === COMMAND_RECONNECT_START) {\r\n          source = context.hover;\r\n        }\r\n\r\n        if (moveType === COMMAND_RECONNECT_END) {\r\n          target = context.hover;\r\n        }\r\n      }\r\n\r\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection, source, target);\r\n    }\r\n\r\n    // add dragger gfx\r\n    translate(context.draggerGfx, e.x, e.y);\r\n\r\n    redrawConnection(e);\r\n  });\r\n\r\n  eventBus.on([\r\n    'bendpoint.move.end',\r\n    'bendpoint.move.cancel'\r\n  ], function(e) {\r\n\r\n    var context = e.context,\r\n        hover = context.hover,\r\n        connection = context.connection;\r\n\r\n    // remove dragger gfx\r\n    svgRemove(context.draggerGfx);\r\n    context.newWaypoints = connection.waypoints.slice();\r\n    connection.waypoints = context.originalWaypoints;\r\n    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);\r\n\r\n    if (hover) {\r\n      canvas.removeMarker(hover, MARKER_OK);\r\n      canvas.removeMarker(hover, MARKER_NOT_OK);\r\n    }\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.end', function(e) {\r\n\r\n    var context = e.context,\r\n        waypoints = context.newWaypoints,\r\n        bendpointIndex = context.bendpointIndex,\r\n        bendpoint = waypoints[bendpointIndex],\r\n        allowed = context.allowed,\r\n        hints;\r\n\r\n    // ensure we have actual pixel values bendpoint\r\n    // coordinates (important when zoom level was > 1 during move)\r\n    bendpoint.x = round(bendpoint.x);\r\n    bendpoint.y = round(bendpoint.y);\r\n\r\n    if (allowed && context.type === COMMAND_RECONNECT_START) {\r\n      modeling.reconnectStart(context.connection, context.target, bendpoint);\r\n    } else\r\n    if (allowed && context.type === COMMAND_RECONNECT_END) {\r\n      modeling.reconnectEnd(context.connection, context.target, bendpoint);\r\n    } else\r\n    if (allowed !== false && context.type === COMMAND_BENDPOINT_UPDATE) {\r\n\r\n      // pass hints on the actual moved bendpoint\r\n      // this is useful for connection and label layouting\r\n      hints = {\r\n        bendpointMove: {\r\n          insert: e.context.insert,\r\n          bendpointIndex: bendpointIndex\r\n        }\r\n      };\r\n\r\n      modeling.updateWaypoints(context.connection, filterRedundantWaypoints(waypoints), hints);\r\n    } else {\r\n      redrawConnection(e);\r\n\r\n      return false;\r\n    }\r\n  });\r\n\r\n  eventBus.on('bendpoint.move.cancel', function(e) {\r\n    redrawConnection(e);\r\n  });\r\n}\r\n\r\nBendpointMove.$inject = [\r\n  'injector',\r\n  'eventBus',\r\n  'canvas',\r\n  'dragging',\r\n  'graphicsFactory',\r\n  'rules',\r\n  'modeling'\r\n];","import {\r\n  assign,\r\n  forEach,\r\n  isArray\r\n} from 'min-dash';\r\n\r\nvar abs= Math.abs,\r\n    round = Math.round;\r\n\r\nvar TOLERANCE = 10;\r\n\r\n\r\nexport default function BendpointSnapping(eventBus) {\r\n\r\n  function snapTo(values, value) {\r\n\r\n    if (isArray(values)) {\r\n      var i = values.length;\r\n\r\n      while (i--) if (abs(values[i] - value) <= TOLERANCE) {\r\n        return values[i];\r\n      }\r\n    } else {\r\n      values = +values;\r\n      var rem = value % values;\r\n\r\n      if (rem < TOLERANCE) {\r\n        return value - rem;\r\n      }\r\n\r\n      if (rem > values - TOLERANCE) {\r\n        return value - rem + values;\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function mid(element) {\r\n    if (element.width) {\r\n      return {\r\n        x: round(element.width / 2 + element.x),\r\n        y: round(element.height / 2 + element.y)\r\n      };\r\n    }\r\n  }\r\n\r\n  // connection segment snapping //////////////////////\r\n\r\n  function getConnectionSegmentSnaps(context) {\r\n\r\n    var snapPoints = context.snapPoints,\r\n        connection = context.connection,\r\n        waypoints = connection.waypoints,\r\n        segmentStart = context.segmentStart,\r\n        segmentStartIndex = context.segmentStartIndex,\r\n        segmentEnd = context.segmentEnd,\r\n        segmentEndIndex = context.segmentEndIndex,\r\n        axis = context.axis;\r\n\r\n    if (snapPoints) {\r\n      return snapPoints;\r\n    }\r\n\r\n    var referenceWaypoints = [\r\n      waypoints[segmentStartIndex - 1],\r\n      segmentStart,\r\n      segmentEnd,\r\n      waypoints[segmentEndIndex + 1]\r\n    ];\r\n\r\n    if (segmentStartIndex < 2) {\r\n      referenceWaypoints.unshift(mid(connection.source));\r\n    }\r\n\r\n    if (segmentEndIndex > waypoints.length - 3) {\r\n      referenceWaypoints.unshift(mid(connection.target));\r\n    }\r\n\r\n    context.snapPoints = snapPoints = { horizontal: [] , vertical: [] };\r\n\r\n    forEach(referenceWaypoints, function(p) {\r\n      // we snap on existing bendpoints only,\r\n      // not placeholders that are inserted during add\r\n      if (p) {\r\n        p = p.original || p;\r\n\r\n        if (axis === 'y') {\r\n          snapPoints.horizontal.push(p.y);\r\n        }\r\n\r\n        if (axis === 'x') {\r\n          snapPoints.vertical.push(p.x);\r\n        }\r\n      }\r\n    });\r\n\r\n    return snapPoints;\r\n  }\r\n\r\n  eventBus.on('connectionSegment.move.move', 1500, function(event) {\r\n    var context = event.context,\r\n        snapPoints = getConnectionSegmentSnaps(context),\r\n        x = event.x,\r\n        y = event.y,\r\n        sx, sy;\r\n\r\n    if (!snapPoints) {\r\n      return;\r\n    }\r\n\r\n    // snap\r\n    sx = snapTo(snapPoints.vertical, x);\r\n    sy = snapTo(snapPoints.horizontal, y);\r\n\r\n\r\n    // correction x/y\r\n    var cx = (x - sx),\r\n        cy = (y - sy);\r\n\r\n    // update delta\r\n    assign(event, {\r\n      dx: event.dx - cx,\r\n      dy: event.dy - cy,\r\n      x: sx,\r\n      y: sy\r\n    });\r\n  });\r\n\r\n\r\n  // bendpoint snapping //////////////////////\r\n\r\n  function getBendpointSnaps(context) {\r\n\r\n    var snapPoints = context.snapPoints,\r\n        waypoints = context.connection.waypoints,\r\n        bendpointIndex = context.bendpointIndex;\r\n\r\n    if (snapPoints) {\r\n      return snapPoints;\r\n    }\r\n\r\n    var referenceWaypoints = [ waypoints[bendpointIndex - 1], waypoints[bendpointIndex + 1] ];\r\n\r\n    context.snapPoints = snapPoints = { horizontal: [] , vertical: [] };\r\n\r\n    forEach(referenceWaypoints, function(p) {\r\n      // we snap on existing bendpoints only,\r\n      // not placeholders that are inserted during add\r\n      if (p) {\r\n        p = p.original || p;\r\n\r\n        snapPoints.horizontal.push(p.y);\r\n        snapPoints.vertical.push(p.x);\r\n      }\r\n    });\r\n\r\n    return snapPoints;\r\n  }\r\n\r\n\r\n  eventBus.on('bendpoint.move.move', 1500, function(event) {\r\n\r\n    var context = event.context,\r\n        snapPoints = getBendpointSnaps(context),\r\n        target = context.target,\r\n        targetMid = target && mid(target),\r\n        x = event.x,\r\n        y = event.y,\r\n        sx, sy;\r\n\r\n    if (!snapPoints) {\r\n      return;\r\n    }\r\n\r\n    // snap\r\n    sx = snapTo(targetMid ? snapPoints.vertical.concat([ targetMid.x ]) : snapPoints.vertical, x);\r\n    sy = snapTo(targetMid ? snapPoints.horizontal.concat([ targetMid.y ]) : snapPoints.horizontal, y);\r\n\r\n\r\n    // correction x/y\r\n    var cx = (x - sx),\r\n        cy = (y - sy);\r\n\r\n    // update delta\r\n    assign(event, {\r\n      dx: event.dx - cx,\r\n      dy: event.dy - cy,\r\n      x: event.x - cx,\r\n      y: event.y - cy\r\n    });\r\n  });\r\n}\r\n\r\n\r\nBendpointSnapping.$inject = [ 'eventBus' ];","import {\r\n  toPoint\r\n} from '../../util/Event';\r\n\r\nimport {\r\n  getMidPoint,\r\n  pointsAligned\r\n} from '../../util/Geometry';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  rotate,\r\n  translate\r\n} from '../../util/SvgTransformUtil';\r\n\r\n\r\nexport var BENDPOINT_CLS = 'djs-bendpoint';\r\nexport var SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\r\n\r\nexport function toCanvasCoordinates(canvas, event) {\r\n\r\n  var position = toPoint(event),\r\n      clientRect = canvas._container.getBoundingClientRect(),\r\n      offset;\r\n\r\n  // canvas relative position\r\n\r\n  offset = {\r\n    x: clientRect.left,\r\n    y: clientRect.top\r\n  };\r\n\r\n  // update actual event payload with canvas relative measures\r\n\r\n  var viewbox = canvas.viewbox();\r\n\r\n  return {\r\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\r\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\r\n  };\r\n}\r\n\r\nexport function addBendpoint(parentGfx, cls) {\r\n  var groupGfx = svgCreate('g');\r\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\r\n\r\n  svgAppend(parentGfx, groupGfx);\r\n\r\n  var visual = svgCreate('circle');\r\n  svgAttr(visual, {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 4\r\n  });\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(groupGfx, visual);\r\n\r\n  var hit = svgCreate('circle');\r\n  svgAttr(hit, {\r\n    cx: 0,\r\n    cy: 0,\r\n    r: 10\r\n  });\r\n  svgClasses(hit).add('djs-hit');\r\n\r\n  svgAppend(groupGfx, hit);\r\n\r\n  if (cls) {\r\n    svgClasses(groupGfx).add(cls);\r\n  }\r\n\r\n  return groupGfx;\r\n}\r\n\r\nfunction createParallelDragger(parentGfx, position, alignment) {\r\n  var draggerGfx = svgCreate('g');\r\n\r\n  svgAppend(parentGfx, draggerGfx);\r\n\r\n  var width = 14,\r\n      height = 3,\r\n      padding = 6,\r\n      hitWidth = width + padding,\r\n      hitHeight = height + padding;\r\n\r\n  var visual = svgCreate('rect');\r\n  svgAttr(visual, {\r\n    x: -width / 2,\r\n    y: -height / 2,\r\n    width: width,\r\n    height: height\r\n  });\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(draggerGfx, visual);\r\n\r\n  var hit = svgCreate('rect');\r\n  svgAttr(hit, {\r\n    x: -hitWidth / 2,\r\n    y: -hitHeight / 2,\r\n    width: hitWidth,\r\n    height: hitHeight\r\n  });\r\n  svgClasses(hit).add('djs-hit');\r\n\r\n  svgAppend(draggerGfx, hit);\r\n\r\n  rotate(draggerGfx, alignment === 'h' ? 90 : 0, 0, 0);\r\n\r\n  return draggerGfx;\r\n}\r\n\r\n\r\nexport function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {\r\n\r\n  var groupGfx = svgCreate('g'),\r\n      mid = getMidPoint(segmentStart, segmentEnd),\r\n      alignment = pointsAligned(segmentStart, segmentEnd);\r\n\r\n  svgAppend(parentGfx, groupGfx);\r\n\r\n  createParallelDragger(groupGfx, mid, alignment);\r\n\r\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\r\n  svgClasses(groupGfx).add(alignment === 'h' ? 'vertical' : 'horizontal');\r\n\r\n  translate(groupGfx, mid.x, mid.y);\r\n\r\n  return groupGfx;\r\n}\r\n","import { forEach } from 'min-dash';\r\n\r\nimport {\r\n  event as domEvent,\r\n  query as domQuery,\r\n  queryAll as domQueryAll\r\n} from 'min-dom';\r\n\r\nimport {\r\n  BENDPOINT_CLS,\r\n  SEGMENT_DRAGGER_CLS,\r\n  addBendpoint,\r\n  addSegmentDragger,\r\n  toCanvasCoordinates\r\n} from './BendpointUtil';\r\n\r\nimport cssEscape from 'css.escape';\r\n\r\nimport {\r\n  pointsAligned,\r\n  getMidPoint\r\n} from '../../util/Geometry';\r\n\r\nimport {\r\n  getApproxIntersection\r\n} from '../../util/LineIntersection';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport { translate } from '../../util/SvgTransformUtil';\r\n\r\n\r\n/**\r\n * A service that adds editable bendpoints to connections.\r\n */\r\nexport default function Bendpoints(\r\n    eventBus, canvas, interactionEvents,\r\n    bendpointMove, connectionSegmentMove) {\r\n\r\n  function getConnectionIntersection(waypoints, event) {\r\n    var localPosition = toCanvasCoordinates(canvas, event),\r\n        intersection = getApproxIntersection(waypoints, localPosition);\r\n\r\n    return intersection;\r\n  }\r\n\r\n  function isIntersectionMiddle(intersection, waypoints, treshold) {\r\n    var idx = intersection.index,\r\n        p = intersection.point,\r\n        p0, p1, mid, aligned, xDelta, yDelta;\r\n\r\n    if (idx <= 0 || intersection.bendpoint) {\r\n      return false;\r\n    }\r\n\r\n    p0 = waypoints[idx - 1];\r\n    p1 = waypoints[idx];\r\n    mid = getMidPoint(p0, p1),\r\n    aligned = pointsAligned(p0, p1);\r\n    xDelta = Math.abs(p.x - mid.x);\r\n    yDelta = Math.abs(p.y - mid.y);\r\n\r\n    return aligned && xDelta <= treshold && yDelta <= treshold;\r\n  }\r\n\r\n  function activateBendpointMove(event, connection) {\r\n    var waypoints = connection.waypoints,\r\n        intersection = getConnectionIntersection(waypoints, event);\r\n\r\n    if (!intersection) {\r\n      return;\r\n    }\r\n\r\n    if (isIntersectionMiddle(intersection, waypoints, 10)) {\r\n      connectionSegmentMove.start(event, connection, intersection.index);\r\n    } else {\r\n      bendpointMove.start(event, connection, intersection.index, !intersection.bendpoint);\r\n    }\r\n\r\n    // we've handled the event\r\n    return true;\r\n  }\r\n\r\n  function bindInteractionEvents(node, eventName, element) {\r\n\r\n    domEvent.bind(node, eventName, function(event) {\r\n      interactionEvents.triggerMouseEvent(eventName, event, element);\r\n      event.stopPropagation();\r\n    });\r\n  }\r\n\r\n  function getBendpointsContainer(element, create) {\r\n\r\n    var layer = canvas.getLayer('overlays'),\r\n        gfx = domQuery('.djs-bendpoints[data-element-id=\"' + cssEscape(element.id) + '\"]', layer);\r\n\r\n    if (!gfx && create) {\r\n      gfx = svgCreate('g');\r\n      svgAttr(gfx, { 'data-element-id': element.id });\r\n      svgClasses(gfx).add('djs-bendpoints');\r\n\r\n      svgAppend(layer, gfx);\r\n\r\n      bindInteractionEvents(gfx, 'mousedown', element);\r\n      bindInteractionEvents(gfx, 'click', element);\r\n      bindInteractionEvents(gfx, 'dblclick', element);\r\n    }\r\n\r\n    return gfx;\r\n  }\r\n\r\n  function createBendpoints(gfx, connection) {\r\n    connection.waypoints.forEach(function(p, idx) {\r\n      var bendpoint = addBendpoint(gfx);\r\n\r\n      svgAppend(gfx, bendpoint);\r\n\r\n      translate(bendpoint, p.x, p.y);\r\n    });\r\n\r\n    // add floating bendpoint\r\n    addBendpoint(gfx, 'floating');\r\n  }\r\n\r\n  function createSegmentDraggers(gfx, connection) {\r\n\r\n    var waypoints = connection.waypoints;\r\n\r\n    var segmentStart,\r\n        segmentEnd;\r\n\r\n    for (var i = 1; i < waypoints.length; i++) {\r\n\r\n      segmentStart = waypoints[i - 1];\r\n      segmentEnd = waypoints[i];\r\n\r\n      if (pointsAligned(segmentStart, segmentEnd)) {\r\n        addSegmentDragger(gfx, segmentStart, segmentEnd);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearBendpoints(gfx) {\r\n    forEach(domQueryAll('.' + BENDPOINT_CLS, gfx), function(node) {\r\n      svgRemove(node);\r\n    });\r\n  }\r\n\r\n  function clearSegmentDraggers(gfx) {\r\n    forEach(domQueryAll('.' + SEGMENT_DRAGGER_CLS, gfx), function(node) {\r\n      svgRemove(node);\r\n    });\r\n  }\r\n\r\n  function addHandles(connection) {\r\n\r\n    var gfx = getBendpointsContainer(connection);\r\n\r\n    if (!gfx) {\r\n      gfx = getBendpointsContainer(connection, true);\r\n\r\n      createBendpoints(gfx, connection);\r\n      createSegmentDraggers(gfx, connection);\r\n    }\r\n\r\n    return gfx;\r\n  }\r\n\r\n  function updateHandles(connection) {\r\n\r\n    var gfx = getBendpointsContainer(connection);\r\n\r\n    if (gfx) {\r\n      clearSegmentDraggers(gfx);\r\n      clearBendpoints(gfx);\r\n      createSegmentDraggers(gfx, connection);\r\n      createBendpoints(gfx, connection);\r\n    }\r\n  }\r\n\r\n  eventBus.on('connection.changed', function(event) {\r\n    updateHandles(event.element);\r\n  });\r\n\r\n  eventBus.on('connection.remove', function(event) {\r\n    var gfx = getBendpointsContainer(event.element);\r\n\r\n    if (gfx) {\r\n      svgRemove(gfx);\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.marker.update', function(event) {\r\n\r\n    var element = event.element,\r\n        bendpointsGfx;\r\n\r\n    if (!element.waypoints) {\r\n      return;\r\n    }\r\n\r\n    bendpointsGfx = addHandles(element);\r\n\r\n    if (event.add) {\r\n      svgClasses(bendpointsGfx).add(event.marker);\r\n    } else {\r\n      svgClasses(bendpointsGfx).remove(event.marker);\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.mousemove', function(event) {\r\n\r\n    var element = event.element,\r\n        waypoints = element.waypoints,\r\n        bendpointsGfx,\r\n        floating,\r\n        intersection;\r\n\r\n    if (waypoints) {\r\n      bendpointsGfx = getBendpointsContainer(element, true);\r\n      floating = domQuery('.floating', bendpointsGfx);\r\n\r\n      if (!floating) {\r\n        return;\r\n      }\r\n\r\n      intersection = getConnectionIntersection(waypoints, event.originalEvent);\r\n\r\n      if (intersection) {\r\n        translate(floating, intersection.point.x, intersection.point.y);\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.mousedown', function(event) {\r\n\r\n    var originalEvent = event.originalEvent,\r\n        element = event.element,\r\n        waypoints = element.waypoints;\r\n\r\n    if (!waypoints) {\r\n      return;\r\n    }\r\n\r\n    return activateBendpointMove(originalEvent, element, waypoints);\r\n  });\r\n\r\n  eventBus.on('selection.changed', function(event) {\r\n    var newSelection = event.newSelection,\r\n        primary = newSelection[0];\r\n\r\n    if (primary && primary.waypoints) {\r\n      addHandles(primary);\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.hover', function(event) {\r\n    var element = event.element;\r\n\r\n    if (element.waypoints) {\r\n      addHandles(element);\r\n      interactionEvents.registerEvent(event.gfx, 'mousemove', 'element.mousemove');\r\n    }\r\n  });\r\n\r\n  eventBus.on('element.out', function(event) {\r\n    interactionEvents.unregisterEvent(event.gfx, 'mousemove', 'element.mousemove');\r\n  });\r\n\r\n  // update bendpoint container data attribute on element ID change\r\n  eventBus.on('element.updateId', function(context) {\r\n    var element = context.element,\r\n        newId = context.newId;\r\n\r\n    if (element.waypoints) {\r\n      var bendpointContainer = getBendpointsContainer(element);\r\n\r\n      if (bendpointContainer) {\r\n        svgAttr(bendpointContainer, { 'data-element-id': newId });\r\n      }\r\n    }\r\n  });\r\n\r\n  // API\r\n\r\n  this.addHandles = addHandles;\r\n  this.updateHandles = updateHandles;\r\n  this.getBendpointsContainer = getBendpointsContainer;\r\n}\r\n\r\nBendpoints.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'interactionEvents',\r\n  'bendpointMove',\r\n  'connectionSegmentMove'\r\n];\r\n","import {\r\n  pointsAligned,\r\n  pointsOnLine\r\n} from '../../util/Geometry';\r\n\r\nimport {\r\n  addSegmentDragger\r\n} from './BendpointUtil';\r\n\r\nimport {\r\n  getMid,\r\n  getOrientation\r\n} from '../../layout/LayoutUtil';\r\n\r\nvar MARKER_CONNECT_HOVER = 'connect-hover',\r\n    MARKER_CONNECT_UPDATING = 'djs-updating';\r\n\r\nimport {\r\n  classes as svgClasses,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  translate\r\n} from '../../util/SvgTransformUtil';\r\n\r\n\r\nfunction axisAdd(point, axis, delta) {\r\n  return axisSet(point, axis, point[axis] + delta);\r\n}\r\n\r\nfunction axisSet(point, axis, value) {\r\n  return {\r\n    x: (axis === 'x' ? value : point.x),\r\n    y: (axis === 'y' ? value : point.y)\r\n  };\r\n}\r\n\r\nfunction axisFenced(position, segmentStart, segmentEnd, axis) {\r\n\r\n  var maxValue = Math.max(segmentStart[axis], segmentEnd[axis]),\r\n      minValue = Math.min(segmentStart[axis], segmentEnd[axis]);\r\n\r\n  var padding = 20;\r\n\r\n  var fencedValue = Math.min(Math.max(minValue + padding, position[axis]), maxValue - padding);\r\n\r\n  return axisSet(segmentStart, axis, fencedValue);\r\n}\r\n\r\nfunction flipAxis(axis) {\r\n  return axis === 'x' ? 'y' : 'x';\r\n}\r\n\r\n/**\r\n * Get the docking point on the given element.\r\n *\r\n * Compute a reasonable docking, if non exists.\r\n *\r\n * @param  {Point} point\r\n * @param  {djs.model.Shape} referenceElement\r\n * @param  {String} moveAxis (x|y)\r\n *\r\n * @return {Point}\r\n */\r\nfunction getDocking(point, referenceElement, moveAxis) {\r\n\r\n  var referenceMid,\r\n      inverseAxis;\r\n\r\n  if (point.original) {\r\n    return point.original;\r\n  } else {\r\n    referenceMid = getMid(referenceElement);\r\n    inverseAxis = flipAxis(moveAxis);\r\n\r\n    return axisSet(point, inverseAxis, referenceMid[inverseAxis]);\r\n  }\r\n}\r\n\r\n/**\r\n * A component that implements moving of bendpoints\r\n */\r\nexport default function ConnectionSegmentMove(\r\n    injector, eventBus, canvas,\r\n    dragging, graphicsFactory, rules,\r\n    modeling) {\r\n\r\n  // optional connection docking integration\r\n  var connectionDocking = injector.get('connectionDocking', false);\r\n\r\n\r\n  // API\r\n\r\n  this.start = function(event, connection, idx) {\r\n\r\n    var context,\r\n        gfx = canvas.getGraphics(connection),\r\n        segmentStartIndex = idx - 1,\r\n        segmentEndIndex = idx,\r\n        waypoints = connection.waypoints,\r\n        segmentStart = waypoints[segmentStartIndex],\r\n        segmentEnd = waypoints[segmentEndIndex],\r\n        direction,\r\n        axis;\r\n\r\n    direction = pointsAligned(segmentStart, segmentEnd);\r\n\r\n    // do not move diagonal connection\r\n    if (!direction) {\r\n      return;\r\n    }\r\n\r\n    // the axis where we are going to move things\r\n    axis = direction === 'v' ? 'y' : 'x';\r\n\r\n    if (segmentStartIndex === 0) {\r\n      segmentStart = getDocking(segmentStart, connection.source, axis);\r\n    }\r\n\r\n    if (segmentEndIndex === waypoints.length - 1) {\r\n      segmentEnd = getDocking(segmentEnd, connection.target, axis);\r\n    }\r\n\r\n    context = {\r\n      connection: connection,\r\n      segmentStartIndex: segmentStartIndex,\r\n      segmentEndIndex: segmentEndIndex,\r\n      segmentStart: segmentStart,\r\n      segmentEnd: segmentEnd,\r\n      axis: axis\r\n    };\r\n\r\n    dragging.init(event, {\r\n      x: (segmentStart.x + segmentEnd.x)/2,\r\n      y: (segmentStart.y + segmentEnd.y)/2\r\n    }, 'connectionSegment.move', {\r\n      cursor: axis === 'x' ? 'resize-ew' : 'resize-ns',\r\n      data: {\r\n        connection: connection,\r\n        connectionGfx: gfx,\r\n        context: context\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Crop connection if connection cropping is provided.\r\n   *\r\n   * @param {Connection} connection\r\n   * @param {Array<Point>} newWaypoints\r\n   *\r\n   * @return {Array<Point>} cropped connection waypoints\r\n   */\r\n  function cropConnection(connection, newWaypoints) {\r\n\r\n    // crop connection, if docking service is provided only\r\n    if (!connectionDocking) {\r\n      return newWaypoints;\r\n    }\r\n\r\n    var oldWaypoints = connection.waypoints,\r\n        croppedWaypoints;\r\n\r\n    // temporary set new waypoints\r\n    connection.waypoints = newWaypoints;\r\n\r\n    croppedWaypoints = connectionDocking.getCroppedWaypoints(connection);\r\n\r\n    // restore old waypoints\r\n    connection.waypoints = oldWaypoints;\r\n\r\n    return croppedWaypoints;\r\n  }\r\n\r\n  // DRAGGING IMPLEMENTATION\r\n\r\n  function redrawConnection(data) {\r\n    graphicsFactory.update('connection', data.connection, data.connectionGfx);\r\n  }\r\n\r\n  function updateDragger(context, segmentOffset, event) {\r\n\r\n    var newWaypoints = context.newWaypoints,\r\n        segmentStartIndex = context.segmentStartIndex + segmentOffset,\r\n        segmentStart = newWaypoints[segmentStartIndex],\r\n        segmentEndIndex = context.segmentEndIndex + segmentOffset,\r\n        segmentEnd = newWaypoints[segmentEndIndex],\r\n        axis = flipAxis(context.axis);\r\n\r\n    // make sure the dragger does not move\r\n    // outside the connection\r\n    var draggerPosition = axisFenced(event, segmentStart, segmentEnd, axis);\r\n\r\n    // update dragger\r\n    translate(context.draggerGfx, draggerPosition.x, draggerPosition.y);\r\n  }\r\n\r\n  /**\r\n   * Filter waypoints for redundant ones (i.e. on the same axis).\r\n   * Returns the filtered waypoints and the offset related to the segment move.\r\n   *\r\n   * @param {Array<Point>} waypoints\r\n   * @param {Integer} segmentStartIndex of moved segment start\r\n   *\r\n   * @return {Object} { filteredWaypoints, segmentOffset }\r\n   */\r\n  function filterRedundantWaypoints(waypoints, segmentStartIndex) {\r\n\r\n    var segmentOffset = 0;\r\n\r\n    var filteredWaypoints = waypoints.filter(function(r, idx) {\r\n      if (pointsOnLine(waypoints[idx - 1], waypoints[idx + 1], r)) {\r\n\r\n        // remove point and increment offset\r\n        segmentOffset = idx <= segmentStartIndex ? segmentOffset - 1 : segmentOffset;\r\n        return false;\r\n      }\r\n\r\n      // dont remove point\r\n      return true;\r\n    });\r\n\r\n    return {\r\n      waypoints: filteredWaypoints,\r\n      segmentOffset: segmentOffset\r\n    };\r\n  }\r\n\r\n  eventBus.on('connectionSegment.move.start', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = e.connection,\r\n        layer = canvas.getLayer('overlays');\r\n\r\n    context.originalWaypoints = connection.waypoints.slice();\r\n\r\n    // add dragger gfx\r\n    context.draggerGfx = addSegmentDragger(layer, context.segmentStart, context.segmentEnd);\r\n    svgClasses(context.draggerGfx).add('djs-dragging');\r\n\r\n    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.move', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        segmentStartIndex = context.segmentStartIndex,\r\n        segmentEndIndex = context.segmentEndIndex,\r\n        segmentStart = context.segmentStart,\r\n        segmentEnd = context.segmentEnd,\r\n        axis = context.axis;\r\n\r\n    var newWaypoints = context.originalWaypoints.slice(),\r\n        newSegmentStart = axisAdd(segmentStart, axis, e['d' + axis]),\r\n        newSegmentEnd = axisAdd(segmentEnd, axis, e['d' + axis]);\r\n\r\n    // original waypoint count and added / removed\r\n    // from start waypoint delta. We use the later\r\n    // to retrieve the updated segmentStartIndex / segmentEndIndex\r\n    var waypointCount = newWaypoints.length,\r\n        segmentOffset = 0;\r\n\r\n    // move segment start / end by axis delta\r\n    newWaypoints[segmentStartIndex] = newSegmentStart;\r\n    newWaypoints[segmentEndIndex] = newSegmentEnd;\r\n\r\n    var sourceToSegmentOrientation,\r\n        targetToSegmentOrientation;\r\n\r\n    // handle first segment\r\n    if (segmentStartIndex < 2) {\r\n      sourceToSegmentOrientation = getOrientation(connection.source, newSegmentStart);\r\n\r\n      // first bendpoint, remove first segment if intersecting\r\n      if (segmentStartIndex === 1) {\r\n\r\n        if (sourceToSegmentOrientation === 'intersect') {\r\n          newWaypoints.shift();\r\n          newWaypoints[0] = newSegmentStart;\r\n          segmentOffset--;\r\n        }\r\n      }\r\n\r\n      // docking point, add segment if not intersecting anymore\r\n      else {\r\n        if (sourceToSegmentOrientation !== 'intersect') {\r\n          newWaypoints.unshift(segmentStart);\r\n          segmentOffset++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // handle last segment\r\n    if (segmentEndIndex > waypointCount - 3) {\r\n      targetToSegmentOrientation = getOrientation(connection.target, newSegmentEnd);\r\n\r\n      // last bendpoint, remove last segment if intersecting\r\n      if (segmentEndIndex === waypointCount - 2) {\r\n\r\n        if (targetToSegmentOrientation === 'intersect') {\r\n          newWaypoints.pop();\r\n          newWaypoints[newWaypoints.length - 1] = newSegmentEnd;\r\n        }\r\n      }\r\n\r\n      // last bendpoint, remove last segment if intersecting\r\n      else {\r\n        if (targetToSegmentOrientation !== 'intersect') {\r\n          newWaypoints.push(segmentEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n    // update connection waypoints\r\n    context.newWaypoints = connection.waypoints = cropConnection(connection, newWaypoints);\r\n\r\n    // update dragger position\r\n    updateDragger(context, segmentOffset, e);\r\n\r\n    // save segmentOffset in context\r\n    context.newSegmentStartIndex = segmentStartIndex + segmentOffset;\r\n\r\n    // redraw connection\r\n    redrawConnection(e);\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.hover', function(e) {\r\n\r\n    e.context.hover = e.hover;\r\n    canvas.addMarker(e.hover, MARKER_CONNECT_HOVER);\r\n  });\r\n\r\n  eventBus.on([\r\n    'connectionSegment.move.out',\r\n    'connectionSegment.move.cleanup'\r\n  ], function(e) {\r\n\r\n    // remove connect marker\r\n    // if it was added\r\n    var hover = e.context.hover;\r\n\r\n    if (hover) {\r\n      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);\r\n    }\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.cleanup', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection;\r\n\r\n    // remove dragger gfx\r\n    if (context.draggerGfx) {\r\n      svgRemove(context.draggerGfx);\r\n    }\r\n\r\n    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);\r\n  });\r\n\r\n  eventBus.on([\r\n    'connectionSegment.move.cancel',\r\n    'connectionSegment.move.end'\r\n  ], function(e) {\r\n    var context = e.context,\r\n        connection = context.connection;\r\n\r\n    connection.waypoints = context.originalWaypoints;\r\n\r\n    redrawConnection(e);\r\n  });\r\n\r\n  eventBus.on('connectionSegment.move.end', function(e) {\r\n\r\n    var context = e.context,\r\n        connection = context.connection,\r\n        newWaypoints = context.newWaypoints,\r\n        newSegmentStartIndex = context.newSegmentStartIndex;\r\n\r\n    // ensure we have actual pixel values bendpoint\r\n    // coordinates (important when zoom level was > 1 during move)\r\n    newWaypoints = newWaypoints.map(function(p) {\r\n      return {\r\n        original: p.original,\r\n        x: Math.round(p.x),\r\n        y: Math.round(p.y)\r\n      };\r\n    });\r\n\r\n    // apply filter redunant waypoints\r\n    var filtered = filterRedundantWaypoints(newWaypoints, newSegmentStartIndex);\r\n\r\n    // get filtered waypoints\r\n    var filteredWaypoints = filtered.waypoints,\r\n        croppedWaypoints = cropConnection(connection, filteredWaypoints),\r\n        segmentOffset = filtered.segmentOffset;\r\n\r\n    var hints = {\r\n      segmentMove: {\r\n        segmentStartIndex: context.segmentStartIndex,\r\n        newSegmentStartIndex: newSegmentStartIndex + segmentOffset\r\n      }\r\n    };\r\n\r\n    modeling.updateWaypoints(connection, croppedWaypoints, hints);\r\n  });\r\n}\r\n\r\nConnectionSegmentMove.$inject = [\r\n  'injector',\r\n  'eventBus',\r\n  'canvas',\r\n  'dragging',\r\n  'graphicsFactory',\r\n  'rules',\r\n  'modeling'\r\n];\r\n","import DraggingModule from '../dragging';\r\nimport RulesModule from '../rules';\r\n\r\nimport Bendpoints from './Bendpoints';\r\nimport BendpointMove from './BendpointMove';\r\nimport ConnectionSegmentMove from './ConnectionSegmentMove';\r\nimport BendpointSnapping from './BendpointSnapping';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    DraggingModule,\r\n    RulesModule\r\n  ],\r\n  __init__: [ 'bendpoints', 'bendpointSnapping' ],\r\n  bendpoints: [ 'type', Bendpoints ],\r\n  bendpointMove: [ 'type', BendpointMove ],\r\n  connectionSegmentMove: [ 'type', ConnectionSegmentMove ],\r\n  bendpointSnapping: [ 'type', BendpointSnapping ]\r\n};\r\n","import {\r\n  getType as getElementType\r\n} from '../../util/Elements';\r\n\r\n/**\r\n * Adds change support to the diagram, including\r\n *\r\n * <ul>\r\n *   <li>redrawing shapes and connections on change</li>\r\n * </ul>\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {GraphicsFactory} graphicsFactory\r\n */\r\nexport default function ChangeSupport(\r\n    eventBus, canvas, elementRegistry,\r\n    graphicsFactory) {\r\n\r\n\r\n  // redraw shapes / connections on change\r\n\r\n  eventBus.on('element.changed', function(event) {\r\n\r\n    var element = event.element;\r\n\r\n    // element might have been deleted and replaced by new element with same ID\r\n    // thus check for parent of element except for root element\r\n    if (element.parent || element === canvas.getRootElement()) {\r\n      event.gfx = elementRegistry.getGraphics(element);\r\n    }\r\n\r\n    // shape + gfx may have been deleted\r\n    if (!event.gfx) {\r\n      return;\r\n    }\r\n\r\n    eventBus.fire(getElementType(element) + '.changed', event);\r\n  });\r\n\r\n  eventBus.on('elements.changed', function(event) {\r\n\r\n    var elements = event.elements;\r\n\r\n    elements.forEach(function(e) {\r\n      eventBus.fire('element.changed', { element: e });\r\n    });\r\n\r\n    graphicsFactory.updateContainments(elements);\r\n  });\r\n\r\n  eventBus.on('shape.changed', function(event) {\r\n    graphicsFactory.update('shape', event.element, event.gfx);\r\n  });\r\n\r\n  eventBus.on('connection.changed', function(event) {\r\n    graphicsFactory.update('connection', event.element, event.gfx);\r\n  });\r\n}\r\n\r\nChangeSupport.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'elementRegistry',\r\n  'graphicsFactory'\r\n];","import ChangeSupport from './ChangeSupport';\r\n\r\nexport default {\r\n  __init__: [ 'changeSupport'],\r\n  changeSupport: [ 'type', ChangeSupport ]\r\n};","/**\r\n * A clip board stub\r\n */\r\nexport default function Clipboard() {}\r\n\r\n\r\nClipboard.prototype.get = function() {\r\n  return this._data;\r\n};\r\n\r\nClipboard.prototype.set = function(data) {\r\n  this._data = data;\r\n};\r\n\r\nClipboard.prototype.clear = function() {\r\n  var data = this._data;\r\n\r\n  delete this._data;\r\n\r\n  return data;\r\n};\r\n\r\nClipboard.prototype.isEmpty = function() {\r\n  return !this._data;\r\n};","import Clipboard from './Clipboard';\r\n\r\nexport default {\r\n  clipboard: [ 'type', Clipboard ]\r\n};\r\n","import {\r\n  getElementLineIntersection\r\n} from '../../layout/LayoutUtil';\r\n\r\nimport {\r\n  getMid\r\n} from '../../layout/LayoutUtil';\r\n\r\nvar MARKER_OK = 'connect-ok',\r\n    MARKER_NOT_OK = 'connect-not-ok';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\n\r\nexport default function Connect(\r\n    eventBus, dragging, modeling,\r\n    rules, canvas, graphicsFactory) {\r\n\r\n  // TODO(nre): separate UI and events\r\n\r\n  // rules\r\n\r\n  function canConnect(source, target) {\r\n    return rules.allowed('connection.create', {\r\n      source: source,\r\n      target: target\r\n    });\r\n  }\r\n\r\n\r\n  // layouting\r\n\r\n  function crop(start, end, source, target) {\r\n\r\n    var sourcePath = graphicsFactory.getShapePath(source),\r\n        targetPath = target && graphicsFactory.getShapePath(target),\r\n        connectionPath = graphicsFactory.getConnectionPath({ waypoints: [ start, end ] });\r\n\r\n    start = getElementLineIntersection(sourcePath, connectionPath, true) || start;\r\n    end = (target && getElementLineIntersection(targetPath, connectionPath, false)) || end;\r\n\r\n    return [ start, end ];\r\n  }\r\n\r\n\r\n  // event handlers\r\n\r\n  eventBus.on('connect.move', function(event) {\r\n\r\n    var context = event.context,\r\n        source = context.source,\r\n        target = context.target,\r\n        visual = context.visual,\r\n        sourcePosition = context.sourcePosition,\r\n        endPosition,\r\n        waypoints;\r\n\r\n    // update connection visuals during drag\r\n\r\n    endPosition = {\r\n      x: event.x,\r\n      y: event.y\r\n    };\r\n\r\n    waypoints = crop(sourcePosition, endPosition, source, target);\r\n\r\n    svgAttr(visual, { 'points': [ waypoints[0].x, waypoints[0].y, waypoints[1].x, waypoints[1].y ] });\r\n  });\r\n\r\n  eventBus.on('connect.hover', function(event) {\r\n    var context = event.context,\r\n        source = context.source,\r\n        hover = event.hover,\r\n        canExecute;\r\n\r\n    canExecute = context.canExecute = canConnect(source, hover);\r\n\r\n    // simply ignore hover\r\n    if (canExecute === null) {\r\n      return;\r\n    }\r\n\r\n    context.target = hover;\r\n\r\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\r\n  });\r\n\r\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], function(event) {\r\n    var context = event.context;\r\n\r\n    if (context.target) {\r\n      canvas.removeMarker(context.target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\r\n    }\r\n\r\n    context.target = null;\r\n    context.canExecute = false;\r\n  });\r\n\r\n  eventBus.on('connect.cleanup', function(event) {\r\n    var context = event.context;\r\n\r\n    if (context.visual) {\r\n      svgRemove(context.visual);\r\n    }\r\n  });\r\n\r\n  eventBus.on('connect.start', function(event) {\r\n    var context = event.context,\r\n        visual;\r\n\r\n    visual = svgCreate('polyline');\r\n    svgAttr(visual, {\r\n      'stroke': '#333',\r\n      'strokeDasharray': [ 1 ],\r\n      'strokeWidth': 2,\r\n      'pointer-events': 'none'\r\n    });\r\n\r\n    svgAppend(canvas.getDefaultLayer(), visual);\r\n\r\n    context.visual = visual;\r\n  });\r\n\r\n  eventBus.on('connect.end', function(event) {\r\n\r\n    var context = event.context,\r\n        source = context.source,\r\n        sourcePosition = context.sourcePosition,\r\n        target = context.target,\r\n        targetPosition = {\r\n          x: event.x,\r\n          y: event.y\r\n        },\r\n        canExecute = context.canExecute || canConnect(source, target);\r\n\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n\r\n    var attrs = null,\r\n        hints = {\r\n          connectionStart: sourcePosition,\r\n          connectionEnd: targetPosition\r\n        };\r\n\r\n    if (typeof canExecute === 'object') {\r\n      attrs = canExecute;\r\n    }\r\n\r\n    modeling.connect(source, target, attrs, hints);\r\n  });\r\n\r\n\r\n  // API\r\n\r\n  /**\r\n   * Start connect operation.\r\n   *\r\n   * @param {DOMEvent} event\r\n   * @param {djs.model.Base} source\r\n   * @param {Point} [sourcePosition]\r\n   * @param {Boolean} [autoActivate=false]\r\n   */\r\n  this.start = function(event, source, sourcePosition, autoActivate) {\r\n\r\n    if (typeof sourcePosition !== 'object') {\r\n      autoActivate = sourcePosition;\r\n      sourcePosition = getMid(source);\r\n    }\r\n\r\n    dragging.init(event, 'connect', {\r\n      autoActivate: autoActivate,\r\n      data: {\r\n        shape: source,\r\n        context: {\r\n          source: source,\r\n          sourcePosition: sourcePosition\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nConnect.$inject = [\r\n  'eventBus',\r\n  'dragging',\r\n  'modeling',\r\n  'rules',\r\n  'canvas',\r\n  'graphicsFactory'\r\n];","import SelectionModule from '../selection';\r\nimport RulesModule from '../rules';\r\nimport DraggingModule from '../dragging';\r\n\r\nimport Connect from './Connect';\r\n\r\nexport default {\r\n  __depends__: [\r\n    SelectionModule,\r\n    RulesModule,\r\n    DraggingModule\r\n  ],\r\n  connect: [ 'type', Connect ]\r\n};\r\n","import {\r\n  assign,\r\n  isFunction,\r\n  isArray,\r\n  forEach,\r\n  isDefined\r\n} from 'min-dash';\r\n\r\nimport {\r\n  delegate as domDelegate,\r\n  event as domEvent,\r\n  attr as domAttr,\r\n  query as domQuery,\r\n  classes as domClasses,\r\n  domify as domify\r\n} from 'min-dom';\r\n\r\nvar entrySelector = '.entry';\r\n\r\n\r\n/**\r\n * A context pad that displays element specific, contextual actions next\r\n * to a diagram element.\r\n *\r\n * @param {Object} config\r\n * @param {Boolean|Object} [config.scale={ min: 1.0, max: 1.5 }]\r\n * @param {Number} [config.scale.min]\r\n * @param {Number} [config.scale.max]\r\n * @param {EventBus} eventBus\r\n * @param {Overlays} overlays\r\n */\r\nexport default function ContextPad(config, eventBus, overlays) {\r\n\r\n  this._providers = [];\r\n\r\n  this._eventBus = eventBus;\r\n  this._overlays = overlays;\r\n\r\n  var scale = isDefined(config && config.scale) ? config.scale : {\r\n    min: 1,\r\n    max: 1.5\r\n  };\r\n\r\n  this._overlaysConfig = {\r\n    position: {\r\n      right: -9,\r\n      top: -6\r\n    },\r\n    scale: scale\r\n  };\r\n\r\n  this._current = null;\r\n\r\n  this._init();\r\n}\r\n\r\nContextPad.$inject = [\r\n  'config.contextPad',\r\n  'eventBus',\r\n  'overlays'\r\n];\r\n\r\n\r\n/**\r\n * Registers events needed for interaction with other components\r\n */\r\nContextPad.prototype._init = function() {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('selection.changed', function(e) {\r\n\r\n    var selection = e.newSelection;\r\n\r\n    if (selection.length === 1) {\r\n      self.open(selection[0]);\r\n    } else {\r\n      self.close();\r\n    }\r\n  });\r\n\r\n  eventBus.on('elements.delete', function(event) {\r\n    var elements = event.elements;\r\n\r\n    forEach(elements, function(e) {\r\n      if (self.isOpen(e)) {\r\n        self.close();\r\n      }\r\n    });\r\n  });\r\n\r\n  eventBus.on('element.changed', function(event) {\r\n    var element = event.element,\r\n        current = self._current;\r\n\r\n    // force reopen if element for which we are currently opened changed\r\n    if (current && current.element === element) {\r\n      self.open(element, true);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Register a provider with the context pad\r\n *\r\n * @param  {ContextPadProvider} provider\r\n */\r\nContextPad.prototype.registerProvider = function(provider) {\r\n  this._providers.push(provider);\r\n};\r\n\r\n\r\n/**\r\n * Returns the context pad entries for a given element\r\n *\r\n * @param {djs.element.Base} element\r\n *\r\n * @return {Array<ContextPadEntryDescriptor>} list of entries\r\n */\r\nContextPad.prototype.getEntries = function(element) {\r\n  var entries = {};\r\n\r\n  // loop through all providers and their entries.\r\n  // group entries by id so that overriding an entry is possible\r\n  forEach(this._providers, function(provider) {\r\n    var e = provider.getContextPadEntries(element);\r\n\r\n    forEach(e, function(entry, id) {\r\n      entries[id] = entry;\r\n    });\r\n  });\r\n\r\n  return entries;\r\n};\r\n\r\n\r\n/**\r\n * Trigger an action available on the opened context pad\r\n *\r\n * @param  {String} action\r\n * @param  {Event} event\r\n * @param  {Boolean} [autoActivate=false]\r\n */\r\nContextPad.prototype.trigger = function(action, event, autoActivate) {\r\n\r\n  var element = this._current.element,\r\n      entries = this._current.entries,\r\n      entry,\r\n      handler,\r\n      originalEvent,\r\n      button = event.delegateTarget || event.target;\r\n\r\n  if (!button) {\r\n    return event.preventDefault();\r\n  }\r\n\r\n  entry = entries[domAttr(button, 'data-action')];\r\n  handler = entry.action;\r\n\r\n  originalEvent = event.originalEvent || event;\r\n\r\n  // simple action (via callback function)\r\n  if (isFunction(handler)) {\r\n    if (action === 'click') {\r\n      return handler(originalEvent, element, autoActivate);\r\n    }\r\n  } else {\r\n    if (handler[action]) {\r\n      return handler[action](originalEvent, element, autoActivate);\r\n    }\r\n  }\r\n\r\n  // silence other actions\r\n  event.preventDefault();\r\n};\r\n\r\n\r\n/**\r\n * Open the context pad for the given element\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {Boolean} force if true, force reopening the context pad\r\n */\r\nContextPad.prototype.open = function(element, force) {\r\n  if (!force && this.isOpen(element)) {\r\n    return;\r\n  }\r\n\r\n  this.close();\r\n  this._updateAndOpen(element);\r\n};\r\n\r\n\r\nContextPad.prototype._updateAndOpen = function(element) {\r\n\r\n  var entries = this.getEntries(element),\r\n      pad = this.getPad(element),\r\n      html = pad.html;\r\n\r\n  forEach(entries, function(entry, id) {\r\n    var grouping = entry.group || 'default',\r\n        control = domify(entry.html || '<div class=\"entry\" draggable=\"true\"></div>'),\r\n        container;\r\n\r\n    domAttr(control, 'data-action', id);\r\n\r\n    container = domQuery('[data-group=' + grouping + ']', html);\r\n    if (!container) {\r\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\r\n      html.appendChild(container);\r\n    }\r\n\r\n    container.appendChild(control);\r\n\r\n    if (entry.className) {\r\n      addClasses(control, entry.className);\r\n    }\r\n\r\n    if (entry.title) {\r\n      domAttr(control, 'title', entry.title);\r\n    }\r\n\r\n    if (entry.imageUrl) {\r\n      control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\r\n    }\r\n  });\r\n\r\n  domClasses(html).add('open');\r\n\r\n  this._current = {\r\n    element: element,\r\n    pad: pad,\r\n    entries: entries\r\n  };\r\n\r\n  this._eventBus.fire('contextPad.open', { current: this._current });\r\n};\r\n\r\n\r\nContextPad.prototype.getPad = function(element) {\r\n  if (this.isOpen()) {\r\n    return this._current.pad;\r\n  }\r\n\r\n  var self = this;\r\n\r\n  var overlays = this._overlays;\r\n\r\n  var html = domify('<div class=\"djs-context-pad\"></div>');\r\n\r\n  var overlaysConfig = assign({\r\n    html: html\r\n  }, this._overlaysConfig);\r\n\r\n  domDelegate.bind(html, entrySelector, 'click', function(event) {\r\n    self.trigger('click', event);\r\n  });\r\n\r\n  domDelegate.bind(html, entrySelector, 'dragstart', function(event) {\r\n    self.trigger('dragstart', event);\r\n  });\r\n\r\n  // stop propagation of mouse events\r\n  domEvent.bind(html, 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  this._overlayId = overlays.add(element, 'context-pad', overlaysConfig);\r\n\r\n  var pad = overlays.get(this._overlayId);\r\n\r\n  this._eventBus.fire('contextPad.create', { element: element, pad: pad });\r\n\r\n  return pad;\r\n};\r\n\r\n\r\n/**\r\n * Close the context pad\r\n */\r\nContextPad.prototype.close = function() {\r\n  if (!this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._overlays.remove(this._overlayId);\r\n\r\n  this._overlayId = null;\r\n\r\n  this._eventBus.fire('contextPad.close', { current: this._current });\r\n\r\n  this._current = null;\r\n};\r\n\r\n/**\r\n * Check if pad is open. If element is given, will check\r\n * if pad is opened with given element.\r\n *\r\n * @param {Element} element\r\n * @return {Boolean}\r\n */\r\nContextPad.prototype.isOpen = function(element) {\r\n  return !!this._current && (!element ? true : this._current.element === element);\r\n};\r\n\r\n\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction addClasses(element, classNames) {\r\n\r\n  var classes = domClasses(element);\r\n\r\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\r\n  actualClassNames.forEach(function(cls) {\r\n    classes.add(cls);\r\n  });\r\n}","import InteractionEventsModule from '../interaction-events';\r\nimport OverlaysModule from '../overlays';\r\n\r\nimport ContextPad from './ContextPad';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    InteractionEventsModule,\r\n    OverlaysModule\r\n  ],\r\n  contextPad: [ 'type', ContextPad ]\r\n};","import {\r\n  isArray,\r\n  forEach,\r\n  map,\r\n  matchPattern,\r\n  find,\r\n  findIndex,\r\n  sortBy,\r\n  reduce\r\n} from 'min-dash';\r\n\r\nimport { getBBox } from '../../util/Elements';\r\n\r\nimport {\r\n  center,\r\n  delta as posDelta\r\n} from '../../util/PositionUtil';\r\n\r\nimport {\r\n  getTopLevel\r\n} from '../../util/CopyPasteUtil';\r\n\r\nimport {\r\n  eachElement\r\n} from '../../util/Elements';\r\n\r\n\r\nexport default function CopyPaste(\r\n    eventBus, modeling, elementFactory,\r\n    rules, clipboard, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._modeling = modeling;\r\n  this._elementFactory = elementFactory;\r\n  this._rules = rules;\r\n  this._canvas = canvas;\r\n\r\n  this._clipboard = clipboard;\r\n\r\n  this._descriptors = [];\r\n\r\n\r\n  // Element creation priorities:\r\n  // - 1: Independent shapes\r\n  // - 2: Attached shapes\r\n  // - 3: Connections\r\n  // - 4: labels\r\n  this.registerDescriptor(function(element, descriptor) {\r\n    // Base priority\r\n    descriptor.priority = 1;\r\n\r\n    descriptor.id = element.id;\r\n\r\n    if (element.parent) {\r\n      descriptor.parent = element.parent.id;\r\n    }\r\n\r\n    if (element.labelTarget) {\r\n      // Labels priority\r\n      descriptor.priority = 4;\r\n      descriptor.labelTarget = element.labelTarget.id;\r\n    }\r\n\r\n    if (element.host) {\r\n      // Attached shapes priority\r\n      descriptor.priority = 2;\r\n      descriptor.host = element.host.id;\r\n    }\r\n\r\n    if (typeof element.x === 'number') {\r\n      descriptor.x = element.x;\r\n      descriptor.y = element.y;\r\n    }\r\n\r\n    if (element.width) {\r\n      descriptor.width = element.width;\r\n      descriptor.height = element.height;\r\n    }\r\n\r\n    if (element.waypoints) {\r\n      // Connections priority\r\n      descriptor.priority = 3;\r\n      descriptor.waypoints = [];\r\n\r\n      forEach(element.waypoints, function(waypoint) {\r\n        var wp = {\r\n          x: waypoint.x,\r\n          y: waypoint.y\r\n        };\r\n\r\n        if (waypoint.original) {\r\n          wp.original = {\r\n            x: waypoint.original.x,\r\n            y: waypoint.original.y\r\n          };\r\n        }\r\n\r\n        descriptor.waypoints.push(wp);\r\n      });\r\n    }\r\n\r\n    if (element.source && element.target) {\r\n      descriptor.source = element.source.id;\r\n      descriptor.target = element.target.id;\r\n    }\r\n\r\n    return descriptor;\r\n  });\r\n}\r\n\r\nCopyPaste.$inject = [\r\n  'eventBus',\r\n  'modeling',\r\n  'elementFactory',\r\n  'rules',\r\n  'clipboard',\r\n  'canvas'\r\n];\r\n\r\n\r\n/**\r\n * Copy a number of elements.\r\n *\r\n * @param {djs.model.Base} selectedElements\r\n *\r\n * @return {Object} the copied tree\r\n */\r\nCopyPaste.prototype.copy = function(selectedElements) {\r\n  var clipboard = this._clipboard,\r\n      tree, bbox;\r\n\r\n  if (!isArray(selectedElements)) {\r\n    selectedElements = selectedElements ? [ selectedElements ] : [];\r\n  }\r\n\r\n  if (!selectedElements.length) {\r\n    return;\r\n  }\r\n\r\n  tree = this.createTree(selectedElements);\r\n\r\n  bbox = this._bbox = center(getBBox(tree.allShapes));\r\n\r\n  // not needed after computing the center position of the copied elements\r\n  delete tree.allShapes;\r\n\r\n  forEach(tree, function(elements) {\r\n\r\n    forEach(elements, function(element) {\r\n      var delta, labelTarget;\r\n\r\n      // set label's relative position to their label target\r\n      if (element.labelTarget) {\r\n        labelTarget = find(elements, matchPattern({ id: element.labelTarget }));\r\n\r\n        // just grab the delta from the first waypoint\r\n        if (labelTarget.waypoints) {\r\n          delta = posDelta(element, labelTarget.waypoints[0]);\r\n        } else {\r\n          delta = posDelta(element, labelTarget);\r\n        }\r\n\r\n      } else\r\n      if (element.priority === 3) {\r\n        // connections have priority 3\r\n        delta = [];\r\n\r\n        forEach(element.waypoints, function(waypoint) {\r\n          var waypointDelta = posDelta(waypoint, bbox);\r\n\r\n          delta.push(waypointDelta);\r\n        });\r\n      } else {\r\n        delta = posDelta(element, bbox);\r\n      }\r\n\r\n      element.delta = delta;\r\n    });\r\n  });\r\n\r\n  this._eventBus.fire('elements.copy', { context: { tree: tree } });\r\n\r\n  // if tree is empty, means that nothing can be or is allowed to be copied\r\n  if (Object.keys(tree).length === 0) {\r\n    clipboard.clear();\r\n  } else {\r\n    clipboard.set(tree);\r\n  }\r\n\r\n  this._eventBus.fire('elements.copied', { context: { tree: tree } });\r\n\r\n  return tree;\r\n};\r\n\r\n\r\n// Allow pasting under the cursor\r\nCopyPaste.prototype.paste = function(context) {\r\n  var clipboard = this._clipboard,\r\n      modeling = this._modeling,\r\n      eventBus = this._eventBus,\r\n      rules = this._rules;\r\n\r\n  var tree = clipboard.get(),\r\n      topParent = context.element,\r\n      position = context.point,\r\n      newTree, canPaste;\r\n\r\n  if (clipboard.isEmpty()) {\r\n    return;\r\n  }\r\n\r\n  newTree = reduce(tree, function(pasteTree, elements, depthStr) {\r\n    var depth = parseInt(depthStr, 10);\r\n\r\n    if (isNaN(depth)) {\r\n      return pasteTree;\r\n    }\r\n\r\n    pasteTree[depth] = elements;\r\n\r\n    return pasteTree;\r\n  }, {});\r\n\r\n\r\n  canPaste = rules.allowed('elements.paste', {\r\n    tree: newTree,\r\n    target: topParent\r\n  });\r\n\r\n  if (!canPaste) {\r\n    eventBus.fire('elements.paste.rejected', {\r\n      context: {\r\n        tree: newTree,\r\n        position: position,\r\n        target: topParent\r\n      }\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  modeling.pasteElements(newTree, topParent, position);\r\n};\r\n\r\n\r\nCopyPaste.prototype._computeDelta = function(elements, element) {\r\n  var bbox = this._bbox,\r\n      delta = {};\r\n\r\n  // set label's relative position to their label target\r\n  if (element.labelTarget) {\r\n    return posDelta(element, element.labelTarget);\r\n  }\r\n\r\n  // connections have prority 3\r\n  if (element.priority === 3) {\r\n    delta = [];\r\n\r\n    forEach(element.waypoints, function(waypoint) {\r\n      var waypointDelta = posDelta(waypoint, bbox);\r\n\r\n      delta.push(waypointDelta);\r\n    });\r\n  } else {\r\n    delta = posDelta(element, bbox);\r\n  }\r\n\r\n  return delta;\r\n};\r\n\r\n\r\n/**\r\n * Checks if the element in question has a relations to other elements.\r\n * Possible dependants: connections, labels, attachers\r\n *\r\n * @param  {Array} elements\r\n * @param  {Object} element\r\n *\r\n * @return {Boolean}\r\n */\r\nCopyPaste.prototype.hasRelations = function(elements, element) {\r\n  var source, target, labelTarget;\r\n\r\n  if (element.waypoints) {\r\n    source = find(elements, matchPattern({ id: element.source.id }));\r\n    target = find(elements, matchPattern({ id: element.target.id }));\r\n\r\n    if (!source || !target) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (element.labelTarget) {\r\n    labelTarget = find(elements, matchPattern({ id: element.labelTarget.id }));\r\n\r\n    if (!labelTarget) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\nCopyPaste.prototype.registerDescriptor = function(descriptor) {\r\n  if (typeof descriptor !== 'function') {\r\n    throw new Error('the descriptor must be a function');\r\n  }\r\n\r\n  if (this._descriptors.indexOf(descriptor) !== -1) {\r\n    throw new Error('this descriptor is already registered');\r\n  }\r\n\r\n  this._descriptors.push(descriptor);\r\n};\r\n\r\n\r\nCopyPaste.prototype._executeDescriptors = function(data) {\r\n  if (!data.descriptor) {\r\n    data.descriptor = {};\r\n  }\r\n\r\n  forEach(this._descriptors, function(descriptor) {\r\n    data.descriptor = descriptor(data.element, data.descriptor);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n * Creates a tree like structure from an arbitrary collection of elements\r\n *\r\n * @example\r\n * tree: {\r\n *\t0: [\r\n *\t\t{ id: 'shape_12da', priority: 1, ... },\r\n *\t\t{ id: 'shape_01bj', priority: 1, ... },\r\n *\t\t{ id: 'connection_79fa', source: 'shape_12da', target: 'shape_01bj', priority: 3, ... },\r\n *\t],\r\n *\t1: [ ... ]\r\n * };\r\n *\r\n * @param  {Array} elements\r\n * @return {Object}\r\n */\r\nCopyPaste.prototype.createTree = function(elements) {\r\n  var rules = this._rules,\r\n      self = this;\r\n\r\n  var tree = {},\r\n      includedElements = [],\r\n      _elements;\r\n\r\n  var topLevel = getTopLevel(elements);\r\n\r\n  tree.allShapes = [];\r\n\r\n  function canCopy(collection, element) {\r\n    return rules.allowed('element.copy', {\r\n      collection: collection,\r\n      element: element\r\n    });\r\n  }\r\n\r\n  function includeElement(data) {\r\n    var idx = findIndex(includedElements, matchPattern({ element: data.element })),\r\n        element;\r\n\r\n    if (idx !== -1) {\r\n      element = includedElements[idx];\r\n    } else {\r\n      return includedElements.push(data);\r\n    }\r\n\r\n    // makes sure that it has the correct depth\r\n    if (element.depth < data.depth) {\r\n      includedElements.splice(idx, 1);\r\n\r\n      includedElements.push(data);\r\n    }\r\n  }\r\n\r\n\r\n  eachElement(topLevel, function(element, i, depth) {\r\n    var nestedChildren = element.children;\r\n\r\n    // don't add labels directly\r\n    if (element.labelTarget) {\r\n      return;\r\n    }\r\n\r\n    function getNested(lists) {\r\n      forEach(lists, function(list) {\r\n        if (list && list.length) {\r\n\r\n          forEach(list, function(elem) {\r\n\r\n            forEach(elem.labels, function(label) {\r\n              includeElement({\r\n                element: label,\r\n                depth: depth\r\n              });\r\n            });\r\n\r\n            includeElement({\r\n              element: elem,\r\n              depth: depth\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // fetch element's labels\r\n    forEach(element.labels, function(label) {\r\n\r\n      includeElement({\r\n        element: label,\r\n        depth: depth\r\n      });\r\n    });\r\n\r\n    getNested([ element.attachers, element.incoming, element.outgoing ]);\r\n\r\n    includeElement({\r\n      element: element,\r\n      depth: depth\r\n    });\r\n\r\n    if (nestedChildren) {\r\n      return nestedChildren;\r\n    }\r\n  });\r\n\r\n  includedElements = map(includedElements, function(data) {\r\n    // this is where other registered descriptors hook in\r\n    return self._executeDescriptors(data);\r\n  });\r\n\r\n  // order the elements to check if the ones dependant on others (by relationship)\r\n  // can be copied. f.ex: label needs it's label target\r\n  includedElements = sortBy(includedElements, function(data) {\r\n    return data.descriptor.priority;\r\n  });\r\n\r\n  _elements = map(includedElements, function(data) {\r\n    return data.element;\r\n  });\r\n\r\n  forEach(includedElements, function(data) {\r\n    var depth = data.depth;\r\n\r\n    if (!self.hasRelations(tree.allShapes, data.element)) {\r\n      return;\r\n    }\r\n\r\n    if (!canCopy(_elements, data.element)) {\r\n      return;\r\n    }\r\n\r\n    tree.allShapes.push(data.element);\r\n\r\n    // create depth branches\r\n    if (!tree[depth]) {\r\n      tree[depth] = [];\r\n    }\r\n\r\n    tree[depth].push(data.descriptor);\r\n  });\r\n\r\n  return tree;\r\n};\r\n","import ClipboardModule from '../clipboard';\r\nimport RulesModule from '../rules';\r\nimport MouseTrackingModule from '../mouse-tracking';\r\n\r\nimport CopyPaste from './CopyPaste';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    ClipboardModule,\r\n    RulesModule,\r\n    MouseTrackingModule\r\n  ],\r\n  __init__: [ 'copyPaste' ],\r\n  copyPaste: [ 'type', CopyPaste ]\r\n};\r\n","var LOW_PRIORITY = 750;\r\n\r\nvar MARKER_OK = 'drop-ok',\r\n    MARKER_NOT_OK = 'drop-not-ok',\r\n    MARKER_ATTACH = 'attach-ok',\r\n    MARKER_NEW_PARENT = 'new-parent';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  translate\r\n} from '../../util/SvgTransformUtil';\r\n\r\n\r\n/**\r\n * Adds the ability to create new shapes via drag and drop.\r\n *\r\n * Create must be activated via {@link Create#start}. From that\r\n * point on, create will invoke `shape.create` and `shape.attach`\r\n * rules to query whether or not creation or attachment on a certain\r\n * position is allowed.\r\n *\r\n * If create or attach is allowed and a source is given, Create it\r\n * will invoke `connection.create` rules to query whether a connection\r\n * can be drawn between source and new shape. During rule evaluation\r\n * the target is not attached yet, however\r\n *\r\n *   hints = { targetParent, targetAttach }\r\n *\r\n * are passed to the evaluating rules.\r\n *\r\n *\r\n * ## Rule Return Values\r\n *\r\n * Return values interpreted from  `shape.create`:\r\n *\r\n *   * `true`: create is allowed\r\n *   * `false`: create is disallowed\r\n *   * `null`: create is not allowed but should be ignored visually\r\n *\r\n * Return values interpreted from `shape.attach`:\r\n *\r\n *   * `true`: attach is allowed\r\n *   * `Any`: attach is allowed with the constraints\r\n *   * `false`: attach is disallowed\r\n *\r\n * Return values interpreted from `connection.create`:\r\n *\r\n *   * `true`: connection can be created\r\n *   * `Any`: connection with the given attributes can be created\r\n *   * `false`: connection can't be created\r\n *\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Dragging} dragging\r\n * @param {Rules} rules\r\n * @param {Modeling} modeling\r\n * @param {Canvas} canvas\r\n * @param {Styles} styles\r\n * @param {GraphicsFactory} graphicsFactory\r\n */\r\nexport default function Create(\r\n    eventBus, dragging, rules, modeling,\r\n    canvas, styles, graphicsFactory) {\r\n\r\n  // rules\r\n\r\n  function canCreate(shape, target, source, position) {\r\n\r\n    if (!target) {\r\n      return false;\r\n    }\r\n\r\n    var ctx = {\r\n      source: source,\r\n      shape: shape,\r\n      target: target,\r\n      position: position\r\n    };\r\n\r\n    var create,\r\n        attach,\r\n        connect;\r\n\r\n    attach = rules.allowed('shape.attach', ctx);\r\n\r\n    if (!attach) {\r\n      create = rules.allowed('shape.create', ctx);\r\n    }\r\n\r\n    if (create || attach) {\r\n\r\n      connect = source && rules.allowed('connection.create', {\r\n        source: source,\r\n        target: shape,\r\n        hints: {\r\n          targetParent: target,\r\n          targetAttach: attach\r\n        }\r\n      });\r\n    }\r\n\r\n    if (create || attach) {\r\n      return {\r\n        attach: attach,\r\n        connect: connect\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  /** set drop marker on an element */\r\n  function setMarker(element, marker) {\r\n\r\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\r\n\r\n      if (m === marker) {\r\n        canvas.addMarker(element, m);\r\n      } else {\r\n        canvas.removeMarker(element, m);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // visual helpers\r\n\r\n  function createVisual(shape) {\r\n    var group, preview, visual;\r\n\r\n    group = svgCreate('g');\r\n    svgAttr(group, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n    svgAppend(canvas.getDefaultLayer(), group);\r\n\r\n    preview = svgCreate('g');\r\n    svgClasses(preview).add('djs-dragger');\r\n\r\n    svgAppend(group, preview);\r\n\r\n    translate(preview, shape.width / -2, shape.height / -2);\r\n\r\n    var visualGroup = svgCreate('g');\r\n    svgClasses(visualGroup).add('djs-visual');\r\n\r\n    svgAppend(preview, visualGroup);\r\n\r\n    visual = visualGroup;\r\n\r\n    // hijack renderer to draw preview\r\n    graphicsFactory.drawShape(visual, shape);\r\n\r\n    return group;\r\n  }\r\n\r\n\r\n  // event handlers\r\n\r\n  eventBus.on('create.move', function(event) {\r\n\r\n    var context = event.context,\r\n        hover = event.hover,\r\n        shape = context.shape,\r\n        source = context.source,\r\n        canExecute;\r\n\r\n    var position = {\r\n      x: event.x,\r\n      y: event.y\r\n    };\r\n\r\n    canExecute = context.canExecute = hover && canCreate(shape, hover, source, position);\r\n\r\n    // ignore hover visually if canExecute is null\r\n    if (hover && canExecute !== null) {\r\n      context.target = hover;\r\n\r\n      if (canExecute && canExecute.attach) {\r\n        setMarker(hover, MARKER_ATTACH);\r\n      } else {\r\n        setMarker(hover, canExecute ? MARKER_NEW_PARENT : MARKER_NOT_OK);\r\n      }\r\n    }\r\n  });\r\n\r\n  eventBus.on('create.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        visual = context.visual;\r\n\r\n    // lazy init drag visual once we received the first real\r\n    // drag move event (this allows us to get the proper canvas local coordinates)\r\n    if (!visual) {\r\n      visual = context.visual = createVisual(shape);\r\n    }\r\n\r\n    translate(visual, event.x, event.y);\r\n  });\r\n\r\n\r\n  eventBus.on([ 'create.end', 'create.out', 'create.cleanup' ], function(event) {\r\n    var context = event.context,\r\n        target = context.target;\r\n\r\n    if (target) {\r\n      setMarker(target, null);\r\n    }\r\n  });\r\n\r\n  eventBus.on('create.end', function(event) {\r\n    var context = event.context,\r\n        source = context.source,\r\n        shape = context.shape,\r\n        target = context.target,\r\n        canExecute = context.canExecute,\r\n        attach = canExecute && canExecute.attach,\r\n        connect = canExecute && canExecute.connect,\r\n        position = {\r\n          x: event.x,\r\n          y: event.y\r\n        };\r\n\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n\r\n    if (connect) {\r\n      // invoke append if connect is set via rules\r\n      shape = modeling.appendShape(source, shape, position, target, {\r\n        attach: attach,\r\n        connection: connect === true ? {} : connect\r\n      });\r\n    } else {\r\n      // invoke create, if connect is not set\r\n      shape = modeling.createShape(shape, position, target, {\r\n        attach: attach\r\n      });\r\n    }\r\n\r\n    // make sure we provide the actual attached\r\n    // shape with the context so that selection and\r\n    // other components can use it right after the create\r\n    // operation ends\r\n    context.shape = shape;\r\n  });\r\n\r\n\r\n  eventBus.on('create.cleanup', function(event) {\r\n    var context = event.context;\r\n\r\n    if (context.visual) {\r\n      svgRemove(context.visual);\r\n    }\r\n  });\r\n\r\n  // API\r\n\r\n  this.start = function(event, shape, source) {\r\n\r\n    dragging.init(event, 'create', {\r\n      cursor: 'grabbing',\r\n      autoActivate: true,\r\n      data: {\r\n        shape: shape,\r\n        context: {\r\n          shape: shape,\r\n          source: source\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nCreate.$inject = [\r\n  'eventBus',\r\n  'dragging',\r\n  'rules',\r\n  'modeling',\r\n  'canvas',\r\n  'styles',\r\n  'graphicsFactory'\r\n];","import DraggingModule from '../dragging';\r\nimport SelectionModule from '../selection';\r\nimport RulesModule from '../rules';\r\n\r\nimport Create from './Create';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    DraggingModule,\r\n    SelectionModule,\r\n    RulesModule\r\n  ],\r\n  create: [ 'type', Create ]\r\n};\r\n","import {\r\n  sortBy,\r\n  forEach,\r\n  filter\r\n} from 'min-dash';\r\n\r\nvar AXIS_DIMENSIONS = {\r\n  horizontal: [ 'x', 'width' ],\r\n  vertical: [ 'y', 'height' ]\r\n};\r\n\r\nvar THRESHOLD = 5;\r\n\r\n\r\n/**\r\n * Groups and filters elements and then trigger even distribution.\r\n */\r\nexport default function DistributeElements(modeling) {\r\n  this._modeling = modeling;\r\n\r\n  this._filters = [];\r\n\r\n  // register filter for filtering big elements\r\n  this.registerFilter(function(elements, axis, dimension) {\r\n    var elementsSize = 0,\r\n        numOfShapes = 0,\r\n        avgDimension;\r\n\r\n    forEach(elements, function(element) {\r\n      if (element.waypoints || element.labelTarget) {\r\n        return;\r\n      }\r\n\r\n      elementsSize += element[dimension];\r\n\r\n      numOfShapes += 1;\r\n    });\r\n\r\n    avgDimension = Math.round(elementsSize / numOfShapes);\r\n\r\n    return filter(elements, function(element) {\r\n      return element[dimension] < (avgDimension + 50);\r\n    });\r\n  });\r\n\r\n}\r\n\r\nDistributeElements.$inject = [ 'modeling' ];\r\n\r\n\r\n/**\r\n * Registers filter functions that allow external parties to filter\r\n * out certain elements.\r\n *\r\n * @param  {Function} filterFn\r\n */\r\nDistributeElements.prototype.registerFilter = function(filterFn) {\r\n  if (typeof filterFn !== 'function') {\r\n    throw new Error('the filter has to be a function');\r\n  }\r\n\r\n  this._filters.push(filterFn);\r\n};\r\n\r\n/**\r\n * Distributes the elements with a given orientation\r\n *\r\n * @param  {Array} elements    [description]\r\n * @param  {String} orientation [description]\r\n */\r\nDistributeElements.prototype.trigger = function(elements, orientation) {\r\n  var modeling = this._modeling;\r\n\r\n  var groups,\r\n      distributableElements;\r\n\r\n  if (elements.length < 3) {\r\n    return;\r\n  }\r\n\r\n  this._setOrientation(orientation);\r\n\r\n  distributableElements = this._filterElements(elements);\r\n\r\n  groups = this._createGroups(distributableElements);\r\n\r\n  // nothing to distribute\r\n  if (groups.length <= 2) {\r\n    return;\r\n  }\r\n\r\n  modeling.distributeElements(groups, this._axis, this._dimension);\r\n\r\n  return groups;\r\n};\r\n\r\n/**\r\n * Filters the elements with provided filters by external parties\r\n *\r\n * @param  {Array[Elements]} elements\r\n *\r\n * @return {Array[Elements]}\r\n */\r\nDistributeElements.prototype._filterElements = function(elements) {\r\n  var filters = this._filters,\r\n      axis = this._axis,\r\n      dimension = this._dimension,\r\n      distributableElements = [].concat(elements);\r\n\r\n  if (!filters.length) {\r\n    return elements;\r\n  }\r\n\r\n  forEach(filters, function(filterFn) {\r\n    distributableElements = filterFn(distributableElements, axis, dimension);\r\n  });\r\n\r\n  return distributableElements;\r\n};\r\n\r\n\r\n/**\r\n * Create range (min, max) groups. Also tries to group elements\r\n * together that share the same range.\r\n *\r\n * @example\r\n * \tvar distributableElements = [\r\n * \t\t{\r\n * \t\t\trange: {\r\n * \t\t\t\tmin: 100,\r\n * \t\t\t\tmax: 200\r\n * \t\t\t},\r\n * \t\t\telements: [ { id: 'shape1', .. }]\r\n * \t\t}\r\n * \t]\r\n *\r\n * @param  {Array} elements\r\n *\r\n * @return {Array[Objects]}\r\n */\r\nDistributeElements.prototype._createGroups = function(elements) {\r\n  var rangeGroups = [],\r\n      self = this,\r\n      axis = this._axis,\r\n      dimension = this._dimension;\r\n\r\n  if (!axis) {\r\n    throw new Error('must have a defined \"axis\" and \"dimension\"');\r\n  }\r\n\r\n  // sort by 'left->right' or 'top->bottom'\r\n  var sortedElements = sortBy(elements, axis);\r\n\r\n  forEach(sortedElements, function(element, idx) {\r\n    var elementRange = self._findRange(element, axis, dimension),\r\n        range;\r\n\r\n    var previous = rangeGroups[rangeGroups.length - 1];\r\n\r\n    if (previous && self._hasIntersection(previous.range, elementRange)) {\r\n      rangeGroups[rangeGroups.length - 1].elements.push(element);\r\n    } else {\r\n      range = { range: elementRange, elements: [ element ] };\r\n\r\n      rangeGroups.push(range);\r\n    }\r\n  });\r\n\r\n  return rangeGroups;\r\n};\r\n\r\n\r\n/**\r\n * Maps a direction to the according axis and dimension\r\n *\r\n * @param  {String} direction 'horizontal' or 'vertical'\r\n */\r\nDistributeElements.prototype._setOrientation = function(direction) {\r\n  var orientation = AXIS_DIMENSIONS[direction];\r\n\r\n  this._axis = orientation[0];\r\n  this._dimension = orientation[1];\r\n};\r\n\r\n\r\n/**\r\n * Checks if the two ranges intercept each other\r\n *\r\n * @param  {Object} rangeA {min, max}\r\n * @param  {Object} rangeB {min, max}\r\n *\r\n * @return {Boolean}\r\n */\r\nDistributeElements.prototype._hasIntersection = function(rangeA, rangeB) {\r\n  return Math.max(rangeA.min, rangeA.max) >= Math.min(rangeB.min, rangeB.max) &&\r\n         Math.min(rangeA.min, rangeA.max) <= Math.max(rangeB.min, rangeB.max);\r\n};\r\n\r\n\r\n/**\r\n * Returns the min and max values for an element\r\n *\r\n * @param  {[type]} element   [description]\r\n * @param  {[type]} axis      [description]\r\n * @param  {[type]} dimension [description]\r\n *\r\n * @return {[type]}           [description]\r\n */\r\nDistributeElements.prototype._findRange = function(element) {\r\n  var axis = element[this._axis],\r\n      dimension = element[this._dimension];\r\n\r\n  return {\r\n    min: axis + THRESHOLD,\r\n    max: axis + dimension - THRESHOLD\r\n  };\r\n};\r\n","import DistributeElements from './DistributeElements';\r\n\r\nexport default {\r\n  __init__: [ 'distributeElements' ],\r\n  distributeElements: [ 'type', DistributeElements ]\r\n};\r\n","/* global TouchEvent */\r\n\r\nvar round = Math.round;\r\n\r\nimport { assign } from 'min-dash';\r\n\r\nimport {\r\n  event as domEvent\r\n} from 'min-dom';\r\n\r\nimport {\r\n  getOriginal,\r\n  toPoint,\r\n  stopPropagation\r\n} from '../../util/Event';\r\n\r\nimport {\r\n  set as cursorSet,\r\n  unset as cursorUnset\r\n} from '../../util/Cursor';\r\n\r\nimport {\r\n  install as installClickTrap\r\n} from '../../util/ClickTrap';\r\n\r\nimport {\r\n  delta as deltaPos\r\n} from '../../util/PositionUtil';\r\n\r\nvar DRAG_ACTIVE_CLS = 'djs-drag-active';\r\n\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nfunction isTouchEvent(event) {\r\n  // check for TouchEvent being available first\r\n  // (i.e. not available on desktop Firefox)\r\n  return typeof TouchEvent !== 'undefined' && event instanceof TouchEvent;\r\n}\r\n\r\nfunction getLength(point) {\r\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\r\n}\r\n\r\n/**\r\n * A helper that fires canvas localized drag events and realizes\r\n * the general \"drag-and-drop\" look and feel.\r\n *\r\n * Calling {@link Dragging#activate} activates dragging on a canvas.\r\n *\r\n * It provides the following:\r\n *\r\n *   * emits life cycle events, namespaced with a prefix assigned\r\n *     during dragging activation\r\n *   * sets and restores the cursor\r\n *   * sets and restores the selection\r\n *   * ensures there can be only one drag operation active at a time\r\n *\r\n * Dragging may be canceled manually by calling {@link Dragging#cancel}\r\n * or by pressing ESC.\r\n *\r\n *\r\n * ## Life-cycle events\r\n *\r\n * Dragging can be in three different states, off, initialized\r\n * and active.\r\n *\r\n * (1) off: no dragging operation is in progress\r\n * (2) initialized: a new drag operation got initialized but not yet\r\n *                  started (i.e. because of no initial move)\r\n * (3) started: dragging is in progress\r\n *\r\n * Eventually dragging will be off again after a drag operation has\r\n * been ended or canceled via user click or ESC key press.\r\n *\r\n * To indicate transitions between these states dragging emits generic\r\n * life-cycle events with the `drag.` prefix _and_ events namespaced\r\n * to a prefix choosen by a user during drag initialization.\r\n *\r\n * The following events are emitted (appropriately prefixed) via\r\n * the {@link EventBus}.\r\n *\r\n * * `init`\r\n * * `start`\r\n * * `move`\r\n * * `end`\r\n * * `ended` (dragging already in off state)\r\n * * `cancel` (only if previously started)\r\n * * `canceled` (dragging already in off state, only if previously started)\r\n * * `cleanup`\r\n *\r\n *\r\n * @example\r\n *\r\n * function MyDragComponent(eventBus, dragging) {\r\n *\r\n *   eventBus.on('mydrag.start', function(event) {\r\n *     console.log('yes, we start dragging');\r\n *   });\r\n *\r\n *   eventBus.on('mydrag.move', function(event) {\r\n *     console.log('canvas local coordinates', event.x, event.y, event.dx, event.dy);\r\n *\r\n *     // local drag data is passed with the event\r\n *     event.context.foo; // \"BAR\"\r\n *\r\n *     // the original mouse event, too\r\n *     event.originalEvent; // MouseEvent(...)\r\n *   });\r\n *\r\n *   eventBus.on('element.click', function(event) {\r\n *     dragging.init(event, 'mydrag', {\r\n *       cursor: 'grabbing',\r\n *       data: {\r\n *         context: {\r\n *           foo: \"BAR\"\r\n *         }\r\n *       }\r\n *     });\r\n *   });\r\n * }\r\n */\r\nexport default function Dragging(eventBus, canvas, selection) {\r\n\r\n  var defaultOptions = {\r\n    threshold: 5,\r\n    trapClick: true\r\n  };\r\n\r\n  // the currently active drag operation\r\n  // dragging is active as soon as this context exists.\r\n  //\r\n  // it is visually _active_ only when a context.active flag is set to true.\r\n  var context;\r\n\r\n  /* convert a global event into local coordinates */\r\n  function toLocalPoint(globalPosition) {\r\n\r\n    var viewbox = canvas.viewbox();\r\n\r\n    var clientRect = canvas._container.getBoundingClientRect();\r\n\r\n    return {\r\n      x: viewbox.x + (globalPosition.x - clientRect.left) / viewbox.scale,\r\n      y: viewbox.y + (globalPosition.y - clientRect.top) / viewbox.scale\r\n    };\r\n  }\r\n\r\n  // helpers\r\n\r\n  function fire(type, dragContext) {\r\n    dragContext = dragContext || context;\r\n\r\n    var event = eventBus.createEvent(\r\n      assign(\r\n        {},\r\n        dragContext.payload,\r\n        dragContext.data,\r\n        { isTouch: dragContext.isTouch }\r\n      )\r\n    );\r\n\r\n    // default integration\r\n    if (eventBus.fire('drag.' + type, event) === false) {\r\n      return false;\r\n    }\r\n\r\n    return eventBus.fire(dragContext.prefix + '.' + type, event);\r\n  }\r\n\r\n  // event listeners\r\n\r\n  function move(event, activate) {\r\n    var payload = context.payload,\r\n        displacement = context.displacement;\r\n\r\n    var globalStart = context.globalStart,\r\n        globalCurrent = toPoint(event),\r\n        globalDelta = deltaPos(globalCurrent, globalStart);\r\n\r\n    var localStart = context.localStart,\r\n        localCurrent = toLocalPoint(globalCurrent),\r\n        localDelta = deltaPos(localCurrent, localStart);\r\n\r\n\r\n    // activate context explicitly or once threshold is reached\r\n    if (!context.active && (activate || getLength(globalDelta) > context.threshold)) {\r\n\r\n      // fire start event with original\r\n      // starting coordinates\r\n\r\n      assign(payload, {\r\n        x: round(localStart.x + displacement.x),\r\n        y: round(localStart.y + displacement.y),\r\n        dx: 0,\r\n        dy: 0\r\n      }, { originalEvent: event });\r\n\r\n      if (false === fire('start')) {\r\n        return cancel();\r\n      }\r\n\r\n      context.active = true;\r\n\r\n      // unset selection and remember old selection\r\n      // the previous (old) selection will always passed\r\n      // with the event via the event.previousSelection property\r\n      if (!context.keepSelection) {\r\n        payload.previousSelection = selection.get();\r\n        selection.select(null);\r\n      }\r\n\r\n      // allow custom cursor\r\n      if (context.cursor) {\r\n        cursorSet(context.cursor);\r\n      }\r\n\r\n      // indicate dragging via marker on root element\r\n      canvas.addMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\r\n    }\r\n\r\n    stopPropagation(event);\r\n\r\n    if (context.active) {\r\n\r\n      // update payload with actual coordinates\r\n      assign(payload, {\r\n        x: round(localCurrent.x + displacement.x),\r\n        y: round(localCurrent.y + displacement.y),\r\n        dx: round(localDelta.x),\r\n        dy: round(localDelta.y)\r\n      }, { originalEvent: event });\r\n\r\n      // emit move event\r\n      fire('move');\r\n    }\r\n  }\r\n\r\n  function end(event) {\r\n    var previousContext,\r\n        returnValue = true;\r\n\r\n    if (context.active) {\r\n\r\n      if (event) {\r\n        context.payload.originalEvent = event;\r\n\r\n        // suppress original event (click, ...)\r\n        // because we just ended a drag operation\r\n        stopPropagation(event);\r\n      }\r\n\r\n      // implementations may stop restoring the\r\n      // original state (selections, ...) by preventing the\r\n      // end events default action\r\n      returnValue = fire('end');\r\n    }\r\n\r\n    if (returnValue === false) {\r\n      fire('rejected');\r\n    }\r\n\r\n    previousContext = cleanup(returnValue !== true);\r\n\r\n    // last event to be fired when all drag operations are done\r\n    // at this point in time no drag operation is in progress anymore\r\n    fire('ended', previousContext);\r\n  }\r\n\r\n\r\n  // cancel active drag operation if the user presses\r\n  // the ESC key on the keyboard\r\n\r\n  function checkCancel(event) {\r\n\r\n    if (event.which === 27) {\r\n      preventDefault(event);\r\n\r\n      cancel();\r\n    }\r\n  }\r\n\r\n\r\n  // prevent ghost click that might occur after a finished\r\n  // drag and drop session\r\n\r\n  function trapClickAndEnd(event) {\r\n\r\n    var untrap;\r\n\r\n    // trap the click in case we are part of an active\r\n    // drag operation. This will effectively prevent\r\n    // the ghost click that cannot be canceled otherwise.\r\n    if (context.active) {\r\n\r\n      untrap = installClickTrap(eventBus);\r\n\r\n      // remove trap after minimal delay\r\n      setTimeout(untrap, 400);\r\n\r\n      // prevent default action (click)\r\n      preventDefault(event);\r\n    }\r\n\r\n    end(event);\r\n  }\r\n\r\n  function trapTouch(event) {\r\n    move(event);\r\n  }\r\n\r\n  // update the drag events hover (djs.model.Base) and hoverGfx (Snap<SVGElement>)\r\n  // properties during hover and out and fire {prefix}.hover and {prefix}.out properties\r\n  // respectively\r\n\r\n  function hover(event) {\r\n    var payload = context.payload;\r\n\r\n    payload.hoverGfx = event.gfx;\r\n    payload.hover = event.element;\r\n\r\n    fire('hover');\r\n  }\r\n\r\n  function out(event) {\r\n    fire('out');\r\n\r\n    var payload = context.payload;\r\n\r\n    payload.hoverGfx = null;\r\n    payload.hover = null;\r\n  }\r\n\r\n\r\n  // life-cycle methods\r\n\r\n  function cancel(restore) {\r\n    var previousContext;\r\n\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    var wasActive = context.active;\r\n\r\n    if (wasActive) {\r\n      fire('cancel');\r\n    }\r\n\r\n    previousContext = cleanup(restore);\r\n\r\n    if (wasActive) {\r\n      // last event to be fired when all drag operations are done\r\n      // at this point in time no drag operation is in progress anymore\r\n      fire('canceled', previousContext);\r\n    }\r\n  }\r\n\r\n  function cleanup(restore) {\r\n    var previousContext,\r\n        endDrag;\r\n\r\n    fire('cleanup');\r\n\r\n    // reset cursor\r\n    cursorUnset();\r\n\r\n    if (context.trapClick) {\r\n      endDrag = trapClickAndEnd;\r\n    } else {\r\n      endDrag = end;\r\n    }\r\n\r\n    // reset dom listeners\r\n    domEvent.unbind(document, 'mousemove', move);\r\n\r\n    domEvent.unbind(document, 'dragstart', preventDefault);\r\n    domEvent.unbind(document, 'selectstart', preventDefault);\r\n\r\n    domEvent.unbind(document, 'mousedown', endDrag, true);\r\n    domEvent.unbind(document, 'mouseup', endDrag, true);\r\n\r\n    domEvent.unbind(document, 'keyup', checkCancel);\r\n\r\n    domEvent.unbind(document, 'touchstart', trapTouch, true);\r\n    domEvent.unbind(document, 'touchcancel', cancel, true);\r\n    domEvent.unbind(document, 'touchmove', move, true);\r\n    domEvent.unbind(document, 'touchend', end, true);\r\n\r\n    eventBus.off('element.hover', hover);\r\n    eventBus.off('element.out', out);\r\n\r\n    // remove drag marker on root element\r\n    canvas.removeMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\r\n\r\n    // restore selection, unless it has changed\r\n    var previousSelection = context.payload.previousSelection;\r\n\r\n    if (restore !== false && previousSelection && !selection.get().length) {\r\n      selection.select(previousSelection);\r\n    }\r\n\r\n    previousContext = context;\r\n\r\n    context = null;\r\n\r\n    return previousContext;\r\n  }\r\n\r\n  /**\r\n   * Initialize a drag operation.\r\n   *\r\n   * If `localPosition` is given, drag events will be emitted\r\n   * relative to it.\r\n   *\r\n   * @param {MouseEvent|TouchEvent} [event]\r\n   * @param {Point} [localPosition] actual diagram local position this drag operation should start at\r\n   * @param {String} prefix\r\n   * @param {Object} [options]\r\n   */\r\n  function init(event, relativeTo, prefix, options) {\r\n\r\n    // only one drag operation may be active, at a time\r\n    if (context) {\r\n      cancel(false);\r\n    }\r\n\r\n    if (typeof relativeTo === 'string') {\r\n      options = prefix;\r\n      prefix = relativeTo;\r\n      relativeTo = null;\r\n    }\r\n\r\n    options = assign({}, defaultOptions, options || {});\r\n\r\n    var data = options.data || {},\r\n        originalEvent,\r\n        globalStart,\r\n        localStart,\r\n        endDrag,\r\n        isTouch;\r\n\r\n    if (options.trapClick) {\r\n      endDrag = trapClickAndEnd;\r\n    } else {\r\n      endDrag = end;\r\n    }\r\n\r\n    if (event) {\r\n      originalEvent = getOriginal(event) || event;\r\n      globalStart = toPoint(event);\r\n\r\n      stopPropagation(event);\r\n\r\n      // prevent default browser dragging behavior\r\n      if (originalEvent.type === 'dragstart') {\r\n        preventDefault(originalEvent);\r\n      }\r\n    } else {\r\n      originalEvent = null;\r\n      globalStart = { x: 0, y: 0 };\r\n    }\r\n\r\n    localStart = toLocalPoint(globalStart);\r\n\r\n    if (!relativeTo) {\r\n      relativeTo = localStart;\r\n    }\r\n\r\n    isTouch = isTouchEvent(originalEvent);\r\n\r\n    context = assign({\r\n      prefix: prefix,\r\n      data: data,\r\n      payload: {},\r\n      globalStart: globalStart,\r\n      displacement: deltaPos(relativeTo, localStart),\r\n      localStart: localStart,\r\n      isTouch: isTouch\r\n    }, options);\r\n\r\n    // skip dom registration if trigger\r\n    // is set to manual (during testing)\r\n    if (!options.manual) {\r\n\r\n      // add dom listeners\r\n\r\n      if (isTouch) {\r\n        domEvent.bind(document, 'touchstart', trapTouch, true);\r\n        domEvent.bind(document, 'touchcancel', cancel, true);\r\n        domEvent.bind(document, 'touchmove', move, true);\r\n        domEvent.bind(document, 'touchend', end, true);\r\n      } else {\r\n        // assume we use the mouse to interact per default\r\n        domEvent.bind(document, 'mousemove', move);\r\n\r\n        // prevent default browser drag and text selection behavior\r\n        domEvent.bind(document, 'dragstart', preventDefault);\r\n        domEvent.bind(document, 'selectstart', preventDefault);\r\n\r\n        domEvent.bind(document, 'mousedown', endDrag, true);\r\n        domEvent.bind(document, 'mouseup', endDrag, true);\r\n      }\r\n\r\n      domEvent.bind(document, 'keyup', checkCancel);\r\n\r\n      eventBus.on('element.hover', hover);\r\n      eventBus.on('element.out', out);\r\n    }\r\n\r\n    fire('init');\r\n\r\n    if (options.autoActivate) {\r\n      move(event, true);\r\n    }\r\n  }\r\n\r\n  // cancel on diagram destruction\r\n  eventBus.on('diagram.destroy', cancel);\r\n\r\n\r\n  // API\r\n\r\n  this.init = init;\r\n  this.move = move;\r\n  this.hover = hover;\r\n  this.out = out;\r\n  this.end = end;\r\n\r\n  this.cancel = cancel;\r\n\r\n  // for introspection\r\n\r\n  this.context = function() {\r\n    return context;\r\n  };\r\n\r\n  this.setOptions = function(options) {\r\n    assign(defaultOptions, options);\r\n  };\r\n}\r\n\r\nDragging.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'selection'\r\n];\r\n","import {\r\n  closest as domClosest\r\n} from 'min-dom';\r\n\r\nimport {\r\n  toPoint\r\n} from '../../util/Event';\r\n\r\nfunction getGfx(target) {\r\n  var node = domClosest(target, 'svg, .djs-element', true);\r\n  return node;\r\n}\r\n\r\n\r\n/**\r\n * Browsers may swallow the hover event if users are to\r\n * fast with the mouse.\r\n *\r\n * @see http://stackoverflow.com/questions/7448468/why-cant-i-reliably-capture-a-mouseout-event\r\n *\r\n * The fix implemented in this component ensure that we\r\n * have a hover state after a successive drag.move event.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Dragging} dragging\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function HoverFix(eventBus, dragging, elementRegistry) {\r\n\r\n  var self = this;\r\n\r\n  // we wait for a specific sequence of events before\r\n  // emitting a fake drag.hover event.\r\n  //\r\n  // Event Sequence:\r\n  //\r\n  // drag.start\r\n  // drag.move\r\n  // drag.move >> ensure we are hovering\r\n  //\r\n  eventBus.on('drag.start', function(event) {\r\n\r\n    eventBus.once('drag.move', function() {\r\n\r\n      eventBus.once('drag.move', function(event) {\r\n\r\n        self.ensureHover(event);\r\n      });\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Make sure we are god damn hovering!\r\n   *\r\n   * @param {Event} dragging event\r\n   */\r\n  this.ensureHover = function(event) {\r\n\r\n    if (event.hover) {\r\n      return;\r\n    }\r\n\r\n    var originalEvent = event.originalEvent,\r\n        position,\r\n        target,\r\n        element,\r\n        gfx;\r\n\r\n    if (!(originalEvent instanceof MouseEvent)) {\r\n      return;\r\n    }\r\n\r\n    position = toPoint(originalEvent);\r\n\r\n    // damn expensive operation, ouch!\r\n    target = document.elementFromPoint(position.x, position.y);\r\n\r\n    gfx = getGfx(target);\r\n\r\n    if (gfx) {\r\n      element = elementRegistry.get(gfx);\r\n\r\n      dragging.hover({ element: element, gfx: gfx });\r\n    }\r\n  };\r\n\r\n}\r\n\r\nHoverFix.$inject = [\r\n  'eventBus',\r\n  'dragging',\r\n  'elementRegistry'\r\n];\r\n","import SelectionModule from '../selection';\r\n\r\nimport Dragging from './Dragging';\r\nimport HoverFix from './HoverFix';\r\n\r\nexport default {\r\n  __init__: [\r\n    'hoverFix'\r\n  ],\r\n  __depends__: [\r\n    SelectionModule\r\n  ],\r\n  dragging: [ 'type', Dragging ],\r\n  hoverFix: [ 'type', HoverFix ]\r\n};","import {\r\n  forEach,\r\n  isArray\r\n} from 'min-dash';\r\n\r\nvar NOT_REGISTERED_ERROR = 'is not a registered action',\r\n    IS_REGISTERED_ERROR = 'is already registered';\r\n\r\n\r\n/**\r\n * An interface that provides access to modeling actions by decoupling\r\n * the one who requests the action to be triggered and the trigger itself.\r\n *\r\n * It's possible to add new actions by registering them with ´registerAction´\r\n * and likewise unregister existing ones with ´unregisterAction´.\r\n *\r\n *\r\n * ## Life-Cycle and configuration\r\n *\r\n * The editor actions will wait for diagram initialization before\r\n * registering default actions _and_ firing an `editorActions.init` event.\r\n *\r\n * Interested parties may listen to the `editorActions.init` event with\r\n * low priority to check, which actions got registered. Other components\r\n * may use the event to register their own actions via `registerAction`.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Injector} injector\r\n */\r\nexport default function EditorActions(eventBus, injector) {\r\n\r\n  // initialize actions\r\n  this._actions = {};\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('diagram.init', function() {\r\n\r\n    // all diagram modules got loaded; check which ones\r\n    // are available and register the respective default actions\r\n    self._registerDefaultActions(injector);\r\n\r\n    // ask interested parties to register available editor\r\n    // actions on diagram initialization\r\n    eventBus.fire('editorActions.init', {\r\n      editorActions: self\r\n    });\r\n  });\r\n\r\n}\r\n\r\nEditorActions.$inject = [\r\n  'eventBus',\r\n  'injector'\r\n];\r\n\r\n/**\r\n * Register default actions.\r\n *\r\n * @param {Injector} injector\r\n */\r\nEditorActions.prototype._registerDefaultActions = function(injector) {\r\n\r\n  // (1) retrieve optional components to integrate with\r\n\r\n  var commandStack = injector.get('commandStack', false);\r\n  var modeling = injector.get('modeling', false);\r\n  var selection = injector.get('selection', false);\r\n  var zoomScroll = injector.get('zoomScroll', false);\r\n  var copyPaste = injector.get('copyPaste', false);\r\n  var canvas = injector.get('canvas', false);\r\n  var rules = injector.get('rules', false);\r\n  var mouseTracking = injector.get('mouseTracking', false);\r\n  var keyboardMove = injector.get('keyboardMove', false);\r\n  var keyboardMoveSelection = injector.get('keyboardMoveSelection', false);\r\n\r\n  // (2) check components and register actions\r\n\r\n  if (commandStack) {\r\n    this.register('undo', function() {\r\n      commandStack.undo();\r\n    });\r\n\r\n    this.register('redo', function() {\r\n      commandStack.redo();\r\n    });\r\n  }\r\n\r\n  if (copyPaste && selection) {\r\n    this.register('copy', function() {\r\n      var selectedElements = selection.get();\r\n\r\n      copyPaste.copy(selectedElements);\r\n    });\r\n  }\r\n\r\n  if (mouseTracking && copyPaste) {\r\n    this.register('paste', function() {\r\n      var context = mouseTracking.getHoverContext();\r\n\r\n      copyPaste.paste(context);\r\n    });\r\n  }\r\n\r\n  if (zoomScroll) {\r\n    this.register('stepZoom', function(opts) {\r\n      zoomScroll.stepZoom(opts.value);\r\n    });\r\n  }\r\n\r\n  if (canvas) {\r\n    this.register('zoom', function(opts) {\r\n      canvas.zoom(opts.value);\r\n    });\r\n  }\r\n\r\n  if (modeling && selection && rules) {\r\n    this.register('removeSelection', function() {\r\n\r\n      var selectedElements = selection.get();\r\n\r\n      if (!selectedElements.length) {\r\n        return;\r\n      }\r\n\r\n      var allowed = rules.allowed('elements.delete', { elements: selectedElements }),\r\n          removableElements;\r\n\r\n      if (allowed === false) {\r\n        return;\r\n      }\r\n      else if (isArray(allowed)) {\r\n        removableElements = allowed;\r\n      }\r\n      else {\r\n        removableElements = selectedElements;\r\n      }\r\n\r\n      if (removableElements.length) {\r\n        modeling.removeElements(removableElements.slice());\r\n      }\r\n    });\r\n  }\r\n\r\n  if (keyboardMove) {\r\n    this.register('moveCanvas', function(opts) {\r\n      keyboardMove.moveCanvas(opts);\r\n    });\r\n  }\r\n\r\n  if (keyboardMoveSelection) {\r\n    this.register('moveSelection', function(opts) {\r\n      keyboardMoveSelection.moveSelection(opts.direction, opts.accelerated);\r\n    });\r\n  }\r\n\r\n};\r\n\r\n\r\n/**\r\n * Triggers a registered action\r\n *\r\n * @param  {String} action\r\n * @param  {Object} opts\r\n *\r\n * @return {Unknown} Returns what the registered listener returns\r\n */\r\nEditorActions.prototype.trigger = function(action, opts) {\r\n  if (!this._actions[action]) {\r\n    throw error(action, NOT_REGISTERED_ERROR);\r\n  }\r\n\r\n  return this._actions[action](opts);\r\n};\r\n\r\n\r\n/**\r\n * Registers a collections of actions.\r\n * The key of the object will be the name of the action.\r\n *\r\n * @example\r\n * ´´´\r\n * var actions = {\r\n *   spaceTool: function() {\r\n *     spaceTool.activateSelection();\r\n *   },\r\n *   lassoTool: function() {\r\n *     lassoTool.activateSelection();\r\n *   }\r\n * ];\r\n *\r\n * editorActions.register(actions);\r\n *\r\n * editorActions.isRegistered('spaceTool'); // true\r\n * ´´´\r\n *\r\n * @param  {Object} actions\r\n */\r\nEditorActions.prototype.register = function(actions, listener) {\r\n  var self = this;\r\n\r\n  if (typeof actions === 'string') {\r\n    return this._registerAction(actions, listener);\r\n  }\r\n\r\n  forEach(actions, function(listener, action) {\r\n    self._registerAction(action, listener);\r\n  });\r\n};\r\n\r\n/**\r\n * Registers a listener to an action key\r\n *\r\n * @param  {String} action\r\n * @param  {Function} listener\r\n */\r\nEditorActions.prototype._registerAction = function(action, listener) {\r\n  if (this.isRegistered(action)) {\r\n    throw error(action, IS_REGISTERED_ERROR);\r\n  }\r\n\r\n  this._actions[action] = listener;\r\n};\r\n\r\n/**\r\n * Unregister an existing action\r\n *\r\n * @param {String} action\r\n */\r\nEditorActions.prototype.unregister = function(action) {\r\n  if (!this.isRegistered(action)) {\r\n    throw error(action, NOT_REGISTERED_ERROR);\r\n  }\r\n\r\n  this._actions[action] = undefined;\r\n};\r\n\r\n/**\r\n * Returns the number of actions that are currently registered\r\n *\r\n * @return {Number}\r\n */\r\nEditorActions.prototype.getActions = function() {\r\n  return Object.keys(this._actions);\r\n};\r\n\r\n/**\r\n * Checks wether the given action is registered\r\n *\r\n * @param {String} action\r\n *\r\n * @return {Boolean}\r\n */\r\nEditorActions.prototype.isRegistered = function(action) {\r\n  return !!this._actions[action];\r\n};\r\n\r\n\r\nfunction error(action, message) {\r\n  return new Error(action + ' ' + message);\r\n}\r\n","import EditorActions from './EditorActions';\r\n\r\nexport default {\r\n  __init__: [ 'editorActions' ],\r\n  editorActions: [ 'type', EditorActions ]\r\n};\r\n","var MARKER_OK = 'connect-ok',\r\n    MARKER_NOT_OK = 'connect-not-ok';\r\n\r\n/**\r\n * @class\r\n * @constructor\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Dragging} dragging\r\n * @param {Connect} connect\r\n * @param {Canvas} canvas\r\n * @param {ToolManager} toolManager\r\n * @param {Rules} rules\r\n */\r\nexport default function GlobalConnect(\r\n    eventBus, dragging, connect,\r\n    canvas, toolManager, rules) {\r\n\r\n  var self = this;\r\n\r\n  this._dragging = dragging;\r\n  this._rules = rules;\r\n\r\n  toolManager.registerTool('global-connect', {\r\n    tool: 'global-connect',\r\n    dragging: 'global-connect.drag'\r\n  });\r\n\r\n  eventBus.on('global-connect.hover', function(event) {\r\n    var context = event.context,\r\n        startTarget = event.hover;\r\n\r\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget);\r\n\r\n    // simply ignore hover\r\n    if (canStartConnect === null) {\r\n      return;\r\n    }\r\n\r\n    context.startTarget = startTarget;\r\n\r\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\r\n  });\r\n\r\n\r\n  eventBus.on([ 'global-connect.out', 'global-connect.cleanup' ], function(event) {\r\n    var startTarget = event.context.startTarget,\r\n        canStartConnect = event.context.canStartConnect;\r\n\r\n    if (startTarget) {\r\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on([ 'global-connect.ended' ], function(event) {\r\n    var context = event.context,\r\n        startTarget = context.startTarget,\r\n        startPosition = {\r\n          x: event.x,\r\n          y: event.y\r\n        };\r\n\r\n    var canStartConnect = self.canStartConnect(startTarget);\r\n\r\n    if (!canStartConnect) {\r\n      return;\r\n    }\r\n\r\n    eventBus.once('element.out', function() {\r\n      eventBus.once([ 'connect.ended', 'connect.canceled' ], function() {\r\n        eventBus.fire('global-connect.drag.ended');\r\n      });\r\n\r\n      connect.start(null, startTarget, startPosition);\r\n    });\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\nGlobalConnect.$inject = [\r\n  'eventBus',\r\n  'dragging',\r\n  'connect',\r\n  'canvas',\r\n  'toolManager',\r\n  'rules'\r\n];\r\n\r\n/**\r\n * Initiates tool activity.\r\n */\r\nGlobalConnect.prototype.start = function(event) {\r\n  this._dragging.init(event, 'global-connect', {\r\n    trapClick: false,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\nGlobalConnect.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.start();\r\n  }\r\n};\r\n\r\nGlobalConnect.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^global-connect/.test(context.prefix);\r\n};\r\n\r\n/**\r\n * Check if source shape can initiate connection.\r\n *\r\n * @param  {Shape} startTarget\r\n * @return {Boolean}\r\n */\r\nGlobalConnect.prototype.canStartConnect = function(startTarget) {\r\n  return this._rules.allowed('connection.start', { source: startTarget });\r\n};\r\n","import ConnectModule from '../connect';\r\nimport RulesModule from '../rules';\r\nimport DraggingModule from '../dragging';\r\nimport ToolManagerModule from '../tool-manager';\r\n\r\nimport GlobalConnect from './GlobalConnect';\r\n\r\nexport default {\r\n  __depends__: [\r\n    ConnectModule,\r\n    RulesModule,\r\n    DraggingModule,\r\n    ToolManagerModule\r\n  ],\r\n  globalConnect: [ 'type', GlobalConnect ]\r\n};\r\n","import { hasPrimaryModifier } from '../../util/Mouse';\r\n\r\nvar HIGH_PRIORITY = 1500;\r\nvar HAND_CURSOR = 'grab';\r\n\r\n\r\nexport default function HandTool(eventBus, canvas, dragging, toolManager) {\r\n  this._dragging = dragging;\r\n\r\n\r\n  toolManager.registerTool('hand', {\r\n    tool: 'hand',\r\n    dragging: 'hand.move'\r\n  });\r\n\r\n  eventBus.on('element.mousedown', HIGH_PRIORITY, function(event) {\r\n    if (hasPrimaryModifier(event)) {\r\n      this.activateMove(event.originalEvent);\r\n\r\n      return false;\r\n    }\r\n  }, this);\r\n\r\n\r\n  eventBus.on('hand.end', function(event) {\r\n    var target = event.originalEvent.target;\r\n\r\n    // only reactive on diagram click\r\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\r\n    if (!event.hover && !(target instanceof SVGElement)) {\r\n      return false;\r\n    }\r\n\r\n    eventBus.once('hand.ended', function() {\r\n      this.activateMove(event.originalEvent, { reactivate: true });\r\n    }, this);\r\n\r\n  }, this);\r\n\r\n\r\n  eventBus.on('hand.move.move', function(event) {\r\n    var scale = canvas.viewbox().scale;\r\n\r\n    canvas.scroll({\r\n      dx: event.dx * scale,\r\n      dy: event.dy * scale\r\n    });\r\n  });\r\n\r\n  eventBus.on('hand.move.end', function(event) {\r\n    var context = event.context,\r\n        reactivate = context.reactivate;\r\n\r\n    // Don't reactivate if the user is using the keyboard keybinding\r\n    if (!hasPrimaryModifier(event) && reactivate) {\r\n\r\n      eventBus.once('hand.move.ended', function(event) {\r\n        this.activateHand(event.originalEvent, true, true);\r\n      }, this);\r\n\r\n    }\r\n\r\n    return false;\r\n  }, this);\r\n\r\n}\r\n\r\nHandTool.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'dragging',\r\n  'toolManager'\r\n];\r\n\r\n\r\nHandTool.prototype.activateMove = function(event, autoActivate, context) {\r\n  if (typeof autoActivate === 'object') {\r\n    context = autoActivate;\r\n    autoActivate = false;\r\n  }\r\n\r\n  this._dragging.init(event, 'hand.move', {\r\n    autoActivate: autoActivate,\r\n    cursor: HAND_CURSOR,\r\n    data: {\r\n      context: context || {}\r\n    }\r\n  });\r\n};\r\n\r\nHandTool.prototype.activateHand = function(event, autoActivate, reactivate) {\r\n  this._dragging.init(event, 'hand', {\r\n    trapClick: false,\r\n    autoActivate: autoActivate,\r\n    cursor: HAND_CURSOR,\r\n    data: {\r\n      context: {\r\n        reactivate: reactivate\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nHandTool.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.activateHand();\r\n  }\r\n};\r\n\r\nHandTool.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^hand/.test(context.prefix);\r\n};\r\n","import ToolManagerModule from '../tool-manager';\r\n\r\nimport HandTool from './HandTool';\r\n\r\nexport default {\r\n  __depends__: [\r\n    ToolManagerModule\r\n  ],\r\n  __init__: [ 'handTool' ],\r\n  handTool: [ 'type', HandTool ]\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  delegate as domDelegate,\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\nimport { isPrimaryButton } from '../../util/Mouse';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  createLine,\r\n  updateLine\r\n} from '../../util/RenderUtil';\r\n\r\nfunction allowAll(e) { return true; }\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n/**\r\n * A plugin that provides interaction events for diagram elements.\r\n *\r\n * It emits the following events:\r\n *\r\n *   * element.hover\r\n *   * element.out\r\n *   * element.click\r\n *   * element.dblclick\r\n *   * element.mousedown\r\n *   * element.contextmenu\r\n *\r\n * Each event is a tuple { element, gfx, originalEvent }.\r\n *\r\n * Canceling the event via Event#preventDefault()\r\n * prevents the original DOM operation.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\r\n\r\n  var HIT_STYLE = styles.cls('djs-hit', [ 'no-fill', 'no-border' ], {\r\n    stroke: 'white',\r\n    strokeWidth: 15\r\n  });\r\n\r\n  /**\r\n   * Fire an interaction event.\r\n   *\r\n   * @param {String} type local event name, e.g. element.click.\r\n   * @param {DOMEvent} event native event\r\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\r\n   *                                   defaults to the event target\r\n   */\r\n  function fire(type, event, element) {\r\n\r\n    if (isIgnored(type, event)) {\r\n      return;\r\n    }\r\n\r\n    var target, gfx, returnValue;\r\n\r\n    if (!element) {\r\n      target = event.delegateTarget || event.target;\r\n\r\n      if (target) {\r\n        gfx = target;\r\n        element = elementRegistry.get(gfx);\r\n      }\r\n    } else {\r\n      gfx = elementRegistry.getGraphics(element);\r\n    }\r\n\r\n    if (!gfx || !element) {\r\n      return;\r\n    }\r\n\r\n    returnValue = eventBus.fire(type, {\r\n      element: element,\r\n      gfx: gfx,\r\n      originalEvent: event\r\n    });\r\n\r\n    if (returnValue === false) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // TODO(nikku): document this\r\n  var handlers = {};\r\n\r\n  function mouseHandler(localEventName) {\r\n    return handlers[localEventName];\r\n  }\r\n\r\n  function isIgnored(localEventName, event) {\r\n\r\n    var filter = ignoredFilters[localEventName] || isPrimaryButton;\r\n\r\n    // only react on left mouse button interactions\r\n    // except for interaction events that are enabled\r\n    // for secundary mouse button\r\n    return !filter(event);\r\n  }\r\n\r\n  var bindings = {\r\n    mouseover: 'element.hover',\r\n    mouseout: 'element.out',\r\n    click: 'element.click',\r\n    dblclick: 'element.dblclick',\r\n    mousedown: 'element.mousedown',\r\n    mouseup: 'element.mouseup',\r\n    contextmenu: 'element.contextmenu'\r\n  };\r\n\r\n  var ignoredFilters = {\r\n    'element.contextmenu': allowAll\r\n  };\r\n\r\n\r\n  // manual event trigger\r\n\r\n  /**\r\n   * Trigger an interaction event (based on a native dom event)\r\n   * on the target shape or connection.\r\n   *\r\n   * @param {String} eventName the name of the triggered DOM event\r\n   * @param {MouseEvent} event\r\n   * @param {djs.model.Base} targetElement\r\n   */\r\n  function triggerMouseEvent(eventName, event, targetElement) {\r\n\r\n    // i.e. element.mousedown...\r\n    var localEventName = bindings[eventName];\r\n\r\n    if (!localEventName) {\r\n      throw new Error('unmapped DOM event name <' + eventName + '>');\r\n    }\r\n\r\n    return fire(localEventName, event, targetElement);\r\n  }\r\n\r\n\r\n  var elementSelector = 'svg, .djs-element';\r\n\r\n  // event registration\r\n\r\n  function registerEvent(node, event, localEvent, ignoredFilter) {\r\n\r\n    var handler = handlers[localEvent] = function(event) {\r\n      fire(localEvent, event);\r\n    };\r\n\r\n    if (ignoredFilter) {\r\n      ignoredFilters[localEvent] = ignoredFilter;\r\n    }\r\n\r\n    handler.$delegate = domDelegate.bind(node, elementSelector, event, handler);\r\n  }\r\n\r\n  function unregisterEvent(node, event, localEvent) {\r\n\r\n    var handler = mouseHandler(localEvent);\r\n\r\n    if (!handler) {\r\n      return;\r\n    }\r\n\r\n    domDelegate.unbind(node, event, handler.$delegate);\r\n  }\r\n\r\n  function registerEvents(svg) {\r\n    forEach(bindings, function(val, key) {\r\n      registerEvent(svg, key, val);\r\n    });\r\n  }\r\n\r\n  function unregisterEvents(svg) {\r\n    forEach(bindings, function(val, key) {\r\n      unregisterEvent(svg, key, val);\r\n    });\r\n  }\r\n\r\n  eventBus.on('canvas.destroy', function(event) {\r\n    unregisterEvents(event.svg);\r\n  });\r\n\r\n  eventBus.on('canvas.init', function(event) {\r\n    registerEvents(event.svg);\r\n  });\r\n\r\n\r\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\r\n    var element = event.element,\r\n        gfx = event.gfx,\r\n        hit;\r\n\r\n    if (element.waypoints) {\r\n      hit = createLine(element.waypoints);\r\n    } else {\r\n      hit = svgCreate('rect');\r\n      svgAttr(hit, {\r\n        x: 0,\r\n        y: 0,\r\n        width: element.width,\r\n        height: element.height\r\n      });\r\n    }\r\n\r\n    svgAttr(hit, HIT_STYLE);\r\n\r\n    svgAppend(gfx, hit);\r\n  });\r\n\r\n  // Update djs-hit on change.\r\n  // A low priortity is necessary, because djs-hit of labels has to be updated\r\n  // after the label bounds have been updated in the renderer.\r\n  eventBus.on('shape.changed', LOW_PRIORITY, function(event) {\r\n\r\n    var element = event.element,\r\n        gfx = event.gfx,\r\n        hit = domQuery('.djs-hit', gfx);\r\n\r\n    svgAttr(hit, {\r\n      width: element.width,\r\n      height: element.height\r\n    });\r\n  });\r\n\r\n  eventBus.on('connection.changed', function(event) {\r\n\r\n    var element = event.element,\r\n        gfx = event.gfx,\r\n        hit = domQuery('.djs-hit', gfx);\r\n\r\n    updateLine(hit, element.waypoints);\r\n  });\r\n\r\n\r\n  // API\r\n\r\n  this.fire = fire;\r\n\r\n  this.triggerMouseEvent = triggerMouseEvent;\r\n\r\n  this.mouseHandler = mouseHandler;\r\n\r\n  this.registerEvent = registerEvent;\r\n  this.unregisterEvent = unregisterEvent;\r\n}\r\n\r\n\r\nInteractionEvents.$inject = [\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'styles'\r\n];\r\n\r\n\r\n/**\r\n * An event indicating that the mouse hovered over an element\r\n *\r\n * @event element.hover\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has left an element\r\n *\r\n * @event element.out\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has clicked an element\r\n *\r\n * @event element.click\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has double clicked an element\r\n *\r\n * @event element.dblclick\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has gone down on an element.\r\n *\r\n * @event element.mousedown\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has gone up on an element.\r\n *\r\n * @event element.mouseup\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the context menu action is triggered\r\n * via mouse or touch controls.\r\n *\r\n * @event element.contextmenu\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {SVGElement} gfx\r\n * @property {Event} originalEvent\r\n */","import InteractionEvents from './InteractionEvents';\r\n\r\nexport default {\r\n  __init__: [ 'interactionEvents' ],\r\n  interactionEvents: [ 'type', InteractionEvents ]\r\n};","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\n\r\nvar DEFAULT_CONFIG = {\r\n  moveSpeed: 1,\r\n  moveSpeedAccelerated: 10\r\n};\r\n\r\nvar HIGHER_PRIORITY = 1500;\r\n\r\nvar LEFT = 'left';\r\nvar UP = 'up';\r\nvar RIGHT = 'right';\r\nvar DOWN = 'down';\r\n\r\nvar KEY_TO_DIRECTION = {\r\n  ArrowLeft: LEFT,\r\n  Left: LEFT,\r\n  ArrowUp: UP,\r\n  Up: UP,\r\n  ArrowRight: RIGHT,\r\n  Right: RIGHT,\r\n  ArrowDown: DOWN,\r\n  Down: DOWN\r\n};\r\n\r\nvar DIRECTIONS_DELTA = {\r\n  left: function(speed) {\r\n    return {\r\n      x: -speed,\r\n      y: 0\r\n    };\r\n  },\r\n  up: function(speed) {\r\n    return {\r\n      x: 0,\r\n      y: -speed\r\n    };\r\n  },\r\n  right: function(speed) {\r\n    return {\r\n      x: speed,\r\n      y: 0\r\n    };\r\n  },\r\n  down: function(speed) {\r\n    return {\r\n      x: 0,\r\n      y: speed\r\n    };\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Enables to move selection with keyboard arrows.\r\n * Use with Shift for modified speed (default=1, with Shift=10).\r\n * Pressed Cmd/Ctrl turns the feature off.\r\n *\r\n * @param {Object} config\r\n * @param {Number} [config.moveSpeed=1]\r\n * @param {Number} [config.moveSpeedAccelerated=10]\r\n * @param {Keyboard} keyboard\r\n * @param {Modeling} modeling\r\n * @param {Selection} selection\r\n */\r\nexport default function KeyboardMoveSelection(\r\n    config, keyboard,\r\n    modeling, selection\r\n) {\r\n\r\n  var self = this;\r\n\r\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\r\n\r\n  keyboard.addListener(HIGHER_PRIORITY, function(event) {\r\n\r\n    var keyEvent = event.keyEvent;\r\n\r\n    var direction = KEY_TO_DIRECTION[keyEvent.key];\r\n\r\n    if (!direction) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isCmd(keyEvent)) {\r\n      return;\r\n    }\r\n\r\n    var accelerated = keyboard.isShift(keyEvent);\r\n\r\n    self.moveSelection(direction, accelerated);\r\n\r\n    return true;\r\n  });\r\n\r\n\r\n  /**\r\n   * Move selected elements in the given direction,\r\n   * optionally specifying accelerated movement.\r\n   *\r\n   * @param {String} direction\r\n   * @param {Boolean} [accelerated=false]\r\n   */\r\n  this.moveSelection = function(direction, accelerated) {\r\n\r\n    var selectedElements = selection.get();\r\n\r\n    if (!selectedElements.length) {\r\n      return;\r\n    }\r\n\r\n    var speed = this._config[\r\n      accelerated ?\r\n        'moveSpeedAccelerated' :\r\n        'moveSpeed'\r\n    ];\r\n\r\n    var delta = DIRECTIONS_DELTA[direction](speed);\r\n\r\n    modeling.moveElements(selectedElements, delta);\r\n  };\r\n\r\n}\r\n\r\nKeyboardMoveSelection.$inject = [\r\n  'config.keyboardMoveSelection',\r\n  'keyboard',\r\n  'modeling',\r\n  'selection'\r\n];","import KeyboardModule from '../keyboard';\r\nimport SelectionModule from '../selection';\r\n\r\nimport KeyboardMoveSelection from './KeyboardMoveSelection';\r\n\r\nexport default {\r\n  __depends__: [\r\n    KeyboardModule,\r\n    SelectionModule\r\n  ],\r\n  __init__: [\r\n    'keyboardMoveSelection'\r\n  ],\r\n  keyboardMoveSelection: [ 'type', KeyboardMoveSelection ]\r\n};\r\n","import {\r\n  isFunction\r\n} from 'min-dash';\r\n\r\nimport {\r\n  event as domEvent,\r\n  matches as domMatches\r\n} from 'min-dom';\r\n\r\nimport {\r\n  hasModifier,\r\n  isCmd,\r\n  isKey,\r\n  isShift\r\n} from './KeyboardUtil';\r\n\r\nvar KEYDOWN_EVENT = 'keyboard.keydown';\r\n\r\nvar DEFAULT_PRIORITY = 1000;\r\n\r\n\r\n/**\r\n * A keyboard abstraction that may be activated and\r\n * deactivated by users at will, consuming key events\r\n * and triggering diagram actions.\r\n *\r\n * For keys pressed down, keyboard fires `keyboard.keydown` event.\r\n * The event context contains one field which is `KeyboardEvent` event.\r\n *\r\n * The implementation fires the following key events that allow\r\n * other components to hook into key handling:\r\n *\r\n *  - keyboard.bind\r\n *  - keyboard.unbind\r\n *  - keyboard.init\r\n *  - keyboard.destroy\r\n *\r\n * All events contain one field which is node.\r\n *\r\n * A default binding for the keyboard may be specified via the\r\n * `keyboard.bindTo` configuration option.\r\n *\r\n * @param {Config} config\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function Keyboard(config, eventBus) {\r\n  var self = this;\r\n\r\n  this._config = config || {};\r\n  this._eventBus = eventBus;\r\n\r\n  this._keyHandler = this._keyHandler.bind(this);\r\n\r\n  // properly clean dom registrations\r\n  eventBus.on('diagram.destroy', function() {\r\n    self._fire('destroy');\r\n\r\n    self.unbind();\r\n  });\r\n\r\n  eventBus.on('diagram.init', function() {\r\n    self._fire('init');\r\n  });\r\n\r\n  eventBus.on('attach', function() {\r\n    if (config && config.bindTo) {\r\n      self.bind(config.bindTo);\r\n    }\r\n  });\r\n\r\n  eventBus.on('detach', function() {\r\n    self.unbind();\r\n  });\r\n}\r\n\r\nKeyboard.$inject = [\r\n  'config.keyboard',\r\n  'eventBus'\r\n];\r\n\r\nKeyboard.prototype._keyHandler = function(event) {\r\n\r\n  var target = event.target,\r\n      eventBusResult;\r\n\r\n  if (isInput(target)) {\r\n    return;\r\n  }\r\n\r\n  var context = {\r\n    keyEvent: event\r\n  };\r\n\r\n  eventBusResult = this._eventBus.fire(KEYDOWN_EVENT, context);\r\n\r\n  if (eventBusResult) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nKeyboard.prototype.bind = function(node) {\r\n\r\n  // make sure that the keyboard is only bound once to the DOM\r\n  this.unbind();\r\n\r\n  this._node = node;\r\n\r\n  // bind key events\r\n  domEvent.bind(node, 'keydown', this._keyHandler, true);\r\n\r\n  this._fire('bind');\r\n};\r\n\r\nKeyboard.prototype.getBinding = function() {\r\n  return this._node;\r\n};\r\n\r\nKeyboard.prototype.unbind = function() {\r\n  var node = this._node;\r\n\r\n  if (node) {\r\n    this._fire('unbind');\r\n\r\n    // unbind key events\r\n    domEvent.unbind(node, 'keydown', this._keyHandler, true);\r\n  }\r\n\r\n  this._node = null;\r\n};\r\n\r\nKeyboard.prototype._fire = function(event) {\r\n  this._eventBus.fire('keyboard.' + event, { node: this._node });\r\n};\r\n\r\n/**\r\n * Add a listener function that is notified with `KeyboardEvent` whenever\r\n * the keyboard is bound and the user presses a key. If no priority is\r\n * provided, the default value of 1000 is used.\r\n *\r\n * @param {Number} priority\r\n * @param {Function} listener\r\n */\r\nKeyboard.prototype.addListener = function(priority, listener) {\r\n  if (isFunction(priority)) {\r\n    listener = priority;\r\n    priority = DEFAULT_PRIORITY;\r\n  }\r\n\r\n  this._eventBus.on(KEYDOWN_EVENT, priority, listener);\r\n};\r\n\r\nKeyboard.prototype.hasModifier = hasModifier;\r\nKeyboard.prototype.isCmd = isCmd;\r\nKeyboard.prototype.isShift = isShift;\r\nKeyboard.prototype.isKey = isKey;\r\n\r\n\r\n\r\n// helpers ///////\r\n\r\nfunction isInput(target) {\r\n  return target && (domMatches(target, 'input, textarea') || target.contentEditable === 'true');\r\n}\r\n","import {\r\n  isCmd,\r\n  isKey,\r\n  isShift\r\n} from './KeyboardUtil';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\n/**\r\n * Adds default keyboard bindings.\r\n *\r\n * This does not pull in any features will bind only actions that\r\n * have previously been registered against the editorActions component.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Keyboard} keyboard\r\n */\r\nexport default function KeyboardBindings(eventBus, keyboard) {\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('editorActions.init', LOW_PRIORITY, function(event) {\r\n\r\n    var editorActions = event.editorActions;\r\n\r\n    self.registerBindings(keyboard, editorActions);\r\n  });\r\n}\r\n\r\nKeyboardBindings.$inject = [\r\n  'eventBus',\r\n  'keyboard'\r\n];\r\n\r\n\r\n/**\r\n * Register available keyboard bindings.\r\n *\r\n * @param {Keyboard} keyboard\r\n * @param {EditorActions} editorActions\r\n */\r\nKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {\r\n\r\n  /**\r\n   * Add keyboard binding if respective editor action\r\n   * is registered.\r\n   *\r\n   * @param {String} action name\r\n   * @param {Function} fn that implements the key binding\r\n   */\r\n  function addListener(action, fn) {\r\n\r\n    if (editorActions.isRegistered(action)) {\r\n      keyboard.addListener(fn);\r\n    }\r\n  }\r\n\r\n\r\n  // undo\r\n  // (CTRL|CMD) + Z\r\n  addListener('undo', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isCmd(event) && !isShift(event) && isKey(['z', 'Z'], event)) {\r\n      editorActions.trigger('undo');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // redo\r\n  // CTRL + Y\r\n  // CMD + SHIFT + Z\r\n  addListener('redo', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isCmd(event) && (isKey(['y', 'Y'], event) || (isKey(['z', 'Z'], event) && isShift(event)))) {\r\n      editorActions.trigger('redo');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // copy\r\n  // CTRL/CMD + C\r\n  addListener('copy', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isCmd(event) && isKey(['c', 'C'], event)) {\r\n      editorActions.trigger('copy');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // paste\r\n  // CTRL/CMD + V\r\n  addListener('paste', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isCmd(event) && isKey(['v', 'V'], event)) {\r\n      editorActions.trigger('paste');\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // zoom in one step\r\n  // CTRL/CMD + +\r\n  addListener('stepZoom', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isKey([ '+', 'Add' ], event) && isCmd(event)) {\r\n      editorActions.trigger('stepZoom', { value: 1 });\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // zoom out one step\r\n  // CTRL + -\r\n  addListener('stepZoom', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isKey([ '-', 'Subtract' ], event) && isCmd(event)) {\r\n      editorActions.trigger('stepZoom', { value: -1 });\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // zoom to the default level\r\n  // CTRL + 0\r\n  addListener('zoom', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isKey('0', event) && isCmd(event)) {\r\n      editorActions.trigger('zoom', { value: 1 });\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  // delete selected element\r\n  // DEL\r\n  addListener('removeSelection', function(context) {\r\n\r\n    var event = context.keyEvent;\r\n\r\n    if (isKey([ 'Delete', 'Del' ], event)) {\r\n      editorActions.trigger('removeSelection');\r\n\r\n      return true;\r\n    }\r\n  });\r\n};","import { isArray } from 'min-dash';\r\n\r\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function hasModifier(event) {\r\n  return (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey);\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isCmd(event) {\r\n\r\n  // ensure we don't react to AltGr\r\n  // (mapped to CTRL + ALT)\r\n  if (event.altKey) {\r\n    return false;\r\n  }\r\n\r\n  return event.ctrlKey || event.metaKey;\r\n}\r\n\r\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {String|String[]} keys\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isKey(keys, event) {\r\n  keys = isArray(keys) ? keys : [ keys ];\r\n\r\n  return keys.indexOf(event.key) > -1;\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isShift(event) {\r\n  return event.shiftKey;\r\n}","import Keyboard from './Keyboard';\r\nimport KeyboardBindings from './KeyboardBindings';\r\n\r\nexport default {\r\n  __init__: [ 'keyboard', 'keyboardBindings' ],\r\n  keyboard: [ 'type', Keyboard ],\r\n  keyboardBindings: [ 'type', KeyboardBindings ]\r\n};\r\n","import {\r\n  forEach,\r\n  filter\r\n} from 'min-dash';\r\n\r\nimport inherits from 'inherits';\r\n\r\nvar LOW_PRIORITY = 250,\r\n    HIGH_PRIORITY = 1400;\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  indexOf as collectionIdx\r\n} from '../../util/Collections';\r\n\r\nimport { saveClear } from '../../util/Removal';\r\n\r\nimport CommandInterceptor from '../../command/CommandInterceptor';\r\n\r\n\r\n/**\r\n * A handler that makes sure labels are properly moved with\r\n * their label targets.\r\n *\r\n * @param {didi.Injector} injector\r\n * @param {EventBus} eventBus\r\n * @param {Modeling} modeling\r\n */\r\nexport default function LabelSupport(injector, eventBus, modeling) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  var movePreview = injector.get('movePreview', false);\r\n\r\n  // remove labels from the collection that are being\r\n  // moved with other elements anyway\r\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes,\r\n        validatedShapes = context.validatedShapes;\r\n\r\n    context.shapes = removeLabels(shapes);\r\n    context.validatedShapes = removeLabels(validatedShapes);\r\n  });\r\n\r\n  // add labels to visual's group\r\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\r\n\r\n    var context = e.context,\r\n        shapes = context.shapes;\r\n\r\n    var labels = [];\r\n\r\n    forEach(shapes, function(element) {\r\n\r\n      forEach(element.labels, function(label) {\r\n\r\n        if (!label.hidden && context.shapes.indexOf(label) === -1) {\r\n          labels.push(label);\r\n        }\r\n\r\n        if (element.labelTarget) {\r\n          labels.push(element);\r\n        }\r\n      });\r\n    });\r\n\r\n    forEach(labels, function(label) {\r\n      movePreview.makeDraggable(context, label, true);\r\n    });\r\n\r\n  });\r\n\r\n  // add all labels to move closure\r\n  this.preExecuted('elements.move', HIGH_PRIORITY, function(e) {\r\n    var context = e.context,\r\n        closure = context.closure,\r\n        enclosedElements = closure.enclosedElements;\r\n\r\n    var enclosedLabels = [];\r\n\r\n    // find labels that are not part of\r\n    // move closure yet and add them\r\n    forEach(enclosedElements, function(element) {\r\n      forEach(element.labels, function(label) {\r\n\r\n        if (!enclosedElements[label.id]) {\r\n          enclosedLabels.push(label);\r\n        }\r\n      });\r\n    });\r\n\r\n    closure.addAll(enclosedLabels);\r\n  });\r\n\r\n\r\n  this.preExecute([\r\n    'connection.delete',\r\n    'shape.delete'\r\n  ], function(e) {\r\n\r\n    var context = e.context,\r\n        element = context.connection || context.shape;\r\n\r\n    saveClear(element.labels, function(label) {\r\n      modeling.removeShape(label, { nested: true });\r\n    });\r\n  });\r\n\r\n\r\n  this.execute('shape.delete', function(e) {\r\n\r\n    var context = e.context,\r\n        shape = context.shape,\r\n        labelTarget = shape.labelTarget;\r\n\r\n    // unset labelTarget\r\n    if (labelTarget) {\r\n      context.labelTargetIndex = collectionIdx(labelTarget.labels, shape);\r\n      context.labelTarget = labelTarget;\r\n\r\n      shape.labelTarget = null;\r\n    }\r\n  });\r\n\r\n  this.revert('shape.delete', function(e) {\r\n\r\n    var context = e.context,\r\n        shape = context.shape,\r\n        labelTarget = context.labelTarget,\r\n        labelTargetIndex = context.labelTargetIndex;\r\n\r\n    // restore labelTarget\r\n    if (labelTarget) {\r\n      collectionAdd(labelTarget.labels, shape, labelTargetIndex);\r\n\r\n      shape.labelTarget = labelTarget;\r\n    }\r\n  });\r\n\r\n}\r\n\r\ninherits(LabelSupport, CommandInterceptor);\r\n\r\nLabelSupport.$inject = [\r\n  'injector',\r\n  'eventBus',\r\n  'modeling'\r\n];\r\n\r\n\r\n/**\r\n * Return a filtered list of elements that do not\r\n * contain attached elements with hosts being part\r\n * of the selection.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n *\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction removeLabels(elements) {\r\n\r\n  return filter(elements, function(element) {\r\n\r\n    // filter out labels that are move together\r\n    // with their label targets\r\n    return elements.indexOf(element.labelTarget) === -1;\r\n  });\r\n}\r\n","import LabelSupport from './LabelSupport';\r\n\r\nexport default {\r\n  __init__: [ 'labelSupport'],\r\n  labelSupport: [ 'type', LabelSupport ]\r\n};\r\n","import { values } from 'min-dash';\r\n\r\nimport { getEnclosedElements } from '../../util/Elements';\r\n\r\nimport { hasSecondaryModifier } from '../../util/Mouse';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nvar LASSO_TOOL_CURSOR = 'crosshair';\r\n\r\n\r\nexport default function LassoTool(\r\n    eventBus, canvas, dragging,\r\n    elementRegistry, selection, toolManager) {\r\n\r\n  this._selection = selection;\r\n  this._dragging = dragging;\r\n\r\n  var self = this;\r\n\r\n  // lasso visuals implementation\r\n\r\n  /**\r\n  * A helper that realizes the selection box visual\r\n  */\r\n  var visuals = {\r\n\r\n    create: function(context) {\r\n      var container = canvas.getDefaultLayer(),\r\n          frame;\r\n\r\n      frame = context.frame = svgCreate('rect');\r\n      svgAttr(frame, {\r\n        class: 'djs-lasso-overlay',\r\n        width:  1,\r\n        height: 1,\r\n        x: 0,\r\n        y: 0\r\n      });\r\n\r\n      svgAppend(container, frame);\r\n    },\r\n\r\n    update: function(context) {\r\n      var frame = context.frame,\r\n          bbox = context.bbox;\r\n\r\n      svgAttr(frame, {\r\n        x: bbox.x,\r\n        y: bbox.y,\r\n        width: bbox.width,\r\n        height: bbox.height\r\n      });\r\n    },\r\n\r\n    remove: function(context) {\r\n\r\n      if (context.frame) {\r\n        svgRemove(context.frame);\r\n      }\r\n    }\r\n  };\r\n\r\n  toolManager.registerTool('lasso', {\r\n    tool: 'lasso.selection',\r\n    dragging: 'lasso'\r\n  });\r\n\r\n  eventBus.on('lasso.selection.end', function(event) {\r\n    var target = event.originalEvent.target;\r\n\r\n    // only reactive on diagram click\r\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\r\n    if (!event.hover && !(target instanceof SVGElement)) {\r\n      return;\r\n    }\r\n\r\n    eventBus.once('lasso.selection.ended', function() {\r\n      self.activateLasso(event.originalEvent, true);\r\n    });\r\n  });\r\n\r\n  // lasso interaction implementation\r\n\r\n  eventBus.on('lasso.end', function(event) {\r\n\r\n    var bbox = toBBox(event);\r\n\r\n    var elements = elementRegistry.filter(function(element) {\r\n      return element;\r\n    });\r\n\r\n    self.select(elements, bbox);\r\n  });\r\n\r\n  eventBus.on('lasso.start', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    context.bbox = toBBox(event);\r\n    visuals.create(context);\r\n  });\r\n\r\n  eventBus.on('lasso.move', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    context.bbox = toBBox(event);\r\n    visuals.update(context);\r\n  });\r\n\r\n  eventBus.on('lasso.cleanup', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    visuals.remove(context);\r\n  });\r\n\r\n\r\n  // event integration\r\n\r\n  eventBus.on('element.mousedown', 1500, function(event) {\r\n\r\n    if (hasSecondaryModifier(event)) {\r\n      self.activateLasso(event.originalEvent);\r\n\r\n      // we've handled the event\r\n      return true;\r\n    }\r\n  });\r\n}\r\n\r\nLassoTool.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'dragging',\r\n  'elementRegistry',\r\n  'selection',\r\n  'toolManager'\r\n];\r\n\r\n\r\nLassoTool.prototype.activateLasso = function(event, autoActivate) {\r\n\r\n  this._dragging.init(event, 'lasso', {\r\n    autoActivate: autoActivate,\r\n    cursor: LASSO_TOOL_CURSOR,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\nLassoTool.prototype.activateSelection = function(event) {\r\n\r\n  this._dragging.init(event, 'lasso.selection', {\r\n    trapClick: false,\r\n    cursor: LASSO_TOOL_CURSOR,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\nLassoTool.prototype.select = function(elements, bbox) {\r\n  var selectedElements = getEnclosedElements(elements, bbox);\r\n\r\n  this._selection.select(values(selectedElements));\r\n};\r\n\r\nLassoTool.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.activateSelection();\r\n  }\r\n};\r\n\r\nLassoTool.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^lasso/.test(context.prefix);\r\n};\r\n\r\n\r\n\r\nfunction toBBox(event) {\r\n\r\n  var start = {\r\n\r\n    x: event.x - event.dx,\r\n    y: event.y - event.dy\r\n  };\r\n\r\n  var end = {\r\n    x: event.x,\r\n    y: event.y\r\n  };\r\n\r\n  var bbox;\r\n\r\n  if ((start.x <= end.x && start.y < end.y) ||\r\n      (start.x < end.x && start.y <= end.y)) {\r\n\r\n    bbox = {\r\n      x: start.x,\r\n      y: start.y,\r\n      width:  end.x - start.x,\r\n      height: end.y - start.y\r\n    };\r\n  } else if ((start.x >= end.x && start.y < end.y) ||\r\n             (start.x > end.x && start.y <= end.y)) {\r\n\r\n    bbox = {\r\n      x: end.x,\r\n      y: start.y,\r\n      width:  start.x - end.x,\r\n      height: end.y - start.y\r\n    };\r\n  } else if ((start.x <= end.x && start.y > end.y) ||\r\n             (start.x < end.x && start.y >= end.y)) {\r\n\r\n    bbox = {\r\n      x: start.x,\r\n      y: end.y,\r\n      width:  end.x - start.x,\r\n      height: start.y - end.y\r\n    };\r\n  } else if ((start.x >= end.x && start.y > end.y) ||\r\n             (start.x > end.x && start.y >= end.y)) {\r\n\r\n    bbox = {\r\n      x: end.x,\r\n      y: end.y,\r\n      width:  start.x - end.x,\r\n      height: start.y - end.y\r\n    };\r\n  } else {\r\n\r\n    bbox = {\r\n      x: end.x,\r\n      y: end.y,\r\n      width:  0,\r\n      height: 0\r\n    };\r\n  }\r\n  return bbox;\r\n}\r\n","import ToolManagerModule from '../tool-manager';\r\n\r\nimport LassoTool from './LassoTool';\r\n\r\nexport default {\r\n  __depends__: [\r\n    ToolManagerModule\r\n  ],\r\n  __init__: [ 'lassoTool' ],\r\n  lassoTool: [ 'type', LassoTool ]\r\n};\r\n","import { forEach } from 'min-dash';\r\n\r\nimport {\r\n  Base\r\n} from '../../model';\r\n\r\nimport AppendShapeHandler from './cmd/AppendShapeHandler';\r\nimport CreateShapeHandler from './cmd/CreateShapeHandler';\r\nimport DeleteShapeHandler from './cmd/DeleteShapeHandler';\r\nimport MoveShapeHandler from './cmd/MoveShapeHandler';\r\nimport ResizeShapeHandler from './cmd/ResizeShapeHandler';\r\nimport ReplaceShapeHandler from './cmd/ReplaceShapeHandler';\r\nimport ToggleShapeCollapseHandler from './cmd/ToggleShapeCollapseHandler';\r\nimport SpaceToolHandler from './cmd/SpaceToolHandler';\r\nimport CreateLabelHandler from './cmd/CreateLabelHandler';\r\nimport CreateConnectionHandler from './cmd/CreateConnectionHandler';\r\nimport DeleteConnectionHandler from './cmd/DeleteConnectionHandler';\r\nimport MoveConnectionHandler from './cmd/MoveConnectionHandler';\r\nimport LayoutConnectionHandler from './cmd/LayoutConnectionHandler';\r\nimport UpdateWaypointsHandler from './cmd/UpdateWaypointsHandler';\r\nimport ReconnectConnectionHandler from './cmd/ReconnectConnectionHandler';\r\nimport MoveElementsHandler from './cmd/MoveElementsHandler';\r\nimport DeleteElementsHandler from './cmd/DeleteElementsHandler';\r\nimport DistributeElementsHandler from './cmd/DistributeElementsHandler';\r\nimport AlignElementsHandler from './cmd/AlignElementsHandler';\r\nimport UpdateAttachmentHandler from './cmd/UpdateAttachmentHandler';\r\nimport PasteHandler from './cmd/PasteHandler';\r\n\r\n\r\n/**\r\n * The basic modeling entry point.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementFactory} elementFactory\r\n * @param {CommandStack} commandStack\r\n */\r\nexport default function Modeling(eventBus, elementFactory, commandStack) {\r\n  this._eventBus = eventBus;\r\n  this._elementFactory = elementFactory;\r\n  this._commandStack = commandStack;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('diagram.init', function() {\r\n    // register modeling handlers\r\n    self.registerHandlers(commandStack);\r\n  });\r\n}\r\n\r\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack' ];\r\n\r\n\r\nModeling.prototype.getHandlers = function() {\r\n  return {\r\n    'shape.append': AppendShapeHandler,\r\n    'shape.create': CreateShapeHandler,\r\n    'shape.delete': DeleteShapeHandler,\r\n    'shape.move': MoveShapeHandler,\r\n    'shape.resize': ResizeShapeHandler,\r\n    'shape.replace': ReplaceShapeHandler,\r\n    'shape.toggleCollapse': ToggleShapeCollapseHandler,\r\n\r\n    'spaceTool': SpaceToolHandler,\r\n\r\n    'label.create': CreateLabelHandler,\r\n\r\n    'connection.create': CreateConnectionHandler,\r\n    'connection.delete': DeleteConnectionHandler,\r\n    'connection.move': MoveConnectionHandler,\r\n    'connection.layout': LayoutConnectionHandler,\r\n\r\n    'connection.updateWaypoints': UpdateWaypointsHandler,\r\n\r\n    'connection.reconnectStart': ReconnectConnectionHandler,\r\n    'connection.reconnectEnd': ReconnectConnectionHandler,\r\n\r\n    'elements.move': MoveElementsHandler,\r\n    'elements.delete': DeleteElementsHandler,\r\n\r\n    'elements.distribute': DistributeElementsHandler,\r\n    'elements.align': AlignElementsHandler,\r\n\r\n    'element.updateAttachment': UpdateAttachmentHandler,\r\n\r\n    'elements.paste': PasteHandler\r\n  };\r\n};\r\n\r\n/**\r\n * Register handlers with the command stack\r\n *\r\n * @param {CommandStack} commandStack\r\n */\r\nModeling.prototype.registerHandlers = function(commandStack) {\r\n  forEach(this.getHandlers(), function(handler, id) {\r\n    commandStack.registerHandler(id, handler);\r\n  });\r\n};\r\n\r\n\r\n// modeling helpers //////////////////////\r\n\r\nModeling.prototype.moveShape = function(shape, delta, newParent, newParentIndex, hints) {\r\n\r\n  if (typeof newParentIndex === 'object') {\r\n    hints = newParentIndex;\r\n    newParentIndex = null;\r\n  }\r\n\r\n  var context = {\r\n    shape: shape,\r\n    delta:  delta,\r\n    newParent: newParent,\r\n    newParentIndex: newParentIndex,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.move', context);\r\n};\r\n\r\n\r\n/**\r\n * Update the attachment of the given shape.\r\n *\r\n * @param {djs.mode.Base} shape\r\n * @param {djs.model.Base} [newHost]\r\n */\r\nModeling.prototype.updateAttachment = function(shape, newHost) {\r\n  var context = {\r\n    shape: shape,\r\n    newHost: newHost\r\n  };\r\n\r\n  this._commandStack.execute('element.updateAttachment', context);\r\n};\r\n\r\n\r\n/**\r\n * Move a number of shapes to a new target, either setting it as\r\n * the new parent or attaching it.\r\n *\r\n * @param {Array<djs.mode.Base>} shapes\r\n * @param {Point} delta\r\n * @param {djs.model.Base} [target]\r\n * @param {Object} [hints]\r\n * @param {Boolean} [hints.attach=false]\r\n */\r\nModeling.prototype.moveElements = function(shapes, delta, target, hints) {\r\n\r\n  hints = hints || {};\r\n\r\n  var attach = hints.attach;\r\n\r\n  var newParent = target,\r\n      newHost;\r\n\r\n  if (attach === true) {\r\n    newHost = target;\r\n    newParent = target.parent;\r\n  } else\r\n\r\n  if (attach === false) {\r\n    newHost = null;\r\n  }\r\n\r\n  var context = {\r\n    shapes: shapes,\r\n    delta: delta,\r\n    newParent: newParent,\r\n    newHost: newHost,\r\n    hints: hints\r\n  };\r\n\r\n  this._commandStack.execute('elements.move', context);\r\n};\r\n\r\n\r\nModeling.prototype.moveConnection = function(connection, delta, newParent, newParentIndex, hints) {\r\n\r\n  if (typeof newParentIndex === 'object') {\r\n    hints = newParentIndex;\r\n    newParentIndex = undefined;\r\n  }\r\n\r\n  var context = {\r\n    connection: connection,\r\n    delta: delta,\r\n    newParent: newParent,\r\n    newParentIndex: newParentIndex,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.move', context);\r\n};\r\n\r\n\r\nModeling.prototype.layoutConnection = function(connection, hints) {\r\n  var context = {\r\n    connection: connection,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.layout', context);\r\n};\r\n\r\n\r\n/**\r\n * Create connection.\r\n *\r\n * @param {djs.model.Base} source\r\n * @param {djs.model.Base} target\r\n * @param {Number} [targetIndex]\r\n * @param {Object|djs.model.Connection} connection\r\n * @param {djs.model.Base} parent\r\n * @param {Object} hints\r\n *\r\n * @return {djs.model.Connection} the created connection.\r\n */\r\nModeling.prototype.createConnection = function(source, target, parentIndex, connection, parent, hints) {\r\n\r\n  if (typeof parentIndex === 'object') {\r\n    hints = parent;\r\n    parent = connection;\r\n    connection = parentIndex;\r\n    parentIndex = undefined;\r\n  }\r\n\r\n  connection = this._create('connection', connection);\r\n\r\n  var context = {\r\n    source: source,\r\n    target: target,\r\n    parent: parent,\r\n    parentIndex: parentIndex,\r\n    connection: connection,\r\n    hints: hints\r\n  };\r\n\r\n  this._commandStack.execute('connection.create', context);\r\n\r\n  return context.connection;\r\n};\r\n\r\n\r\n/**\r\n * Create a shape at the specified position.\r\n *\r\n * @param {djs.model.Shape|Object} shape\r\n * @param {Point} position\r\n * @param {djs.model.Shape|djs.model.Root} target\r\n * @param {Number} [parentIndex] position in parents children list\r\n * @param {Object} [hints]\r\n * @param {Boolean} [hints.attach] whether to attach to target or become a child\r\n *\r\n * @return {djs.model.Shape} the created shape\r\n */\r\nModeling.prototype.createShape = function(shape, position, target, parentIndex, hints) {\r\n\r\n  if (typeof parentIndex !== 'number') {\r\n    hints = parentIndex;\r\n    parentIndex = undefined;\r\n  }\r\n\r\n  hints = hints || {};\r\n\r\n  var attach = hints.attach,\r\n      parent,\r\n      host;\r\n\r\n  shape = this._create('shape', shape);\r\n\r\n  if (attach) {\r\n    parent = target.parent;\r\n    host = target;\r\n  } else {\r\n    parent = target;\r\n  }\r\n\r\n  var context = {\r\n    position: position,\r\n    shape: shape,\r\n    parent: parent,\r\n    parentIndex: parentIndex,\r\n    host: host,\r\n    hints: hints\r\n  };\r\n\r\n  this._commandStack.execute('shape.create', context);\r\n\r\n  return context.shape;\r\n};\r\n\r\n\r\nModeling.prototype.createLabel = function(labelTarget, position, label, parent) {\r\n\r\n  label = this._create('label', label);\r\n\r\n  var context = {\r\n    labelTarget: labelTarget,\r\n    position: position,\r\n    parent: parent || labelTarget.parent,\r\n    shape: label\r\n  };\r\n\r\n  this._commandStack.execute('label.create', context);\r\n\r\n  return context.shape;\r\n};\r\n\r\n\r\n/**\r\n * Append shape to given source, drawing a connection\r\n * between source and the newly created shape.\r\n *\r\n * @param {djs.model.Shape} source\r\n * @param {djs.model.Shape|Object} shape\r\n * @param {Point} position\r\n * @param {djs.model.Shape} target\r\n * @param {Object} [hints]\r\n * @param {Boolean} [hints.attach]\r\n * @param {djs.model.Connection|Object} [hints.connection]\r\n * @param {djs.model.Base} [hints.connectionParent]\r\n *\r\n * @return {djs.model.Shape} the newly created shape\r\n */\r\nModeling.prototype.appendShape = function(source, shape, position, target, hints) {\r\n\r\n  hints = hints || {};\r\n\r\n  shape = this._create('shape', shape);\r\n\r\n  var context = {\r\n    source: source,\r\n    position: position,\r\n    target: target,\r\n    shape: shape,\r\n    connection: hints.connection,\r\n    connectionParent: hints.connectionParent,\r\n    attach: hints.attach\r\n  };\r\n\r\n  this._commandStack.execute('shape.append', context);\r\n\r\n  return context.shape;\r\n};\r\n\r\n\r\nModeling.prototype.removeElements = function(elements) {\r\n  var context = {\r\n    elements: elements\r\n  };\r\n\r\n  this._commandStack.execute('elements.delete', context);\r\n};\r\n\r\n\r\nModeling.prototype.distributeElements = function(groups, axis, dimension) {\r\n  var context = {\r\n    groups: groups,\r\n    axis: axis,\r\n    dimension: dimension\r\n  };\r\n\r\n  this._commandStack.execute('elements.distribute', context);\r\n};\r\n\r\n\r\nModeling.prototype.removeShape = function(shape, hints) {\r\n  var context = {\r\n    shape: shape,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.delete', context);\r\n};\r\n\r\n\r\nModeling.prototype.removeConnection = function(connection, hints) {\r\n  var context = {\r\n    connection: connection,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.delete', context);\r\n};\r\n\r\nModeling.prototype.replaceShape = function(oldShape, newShape, hints) {\r\n  var context = {\r\n    oldShape: oldShape,\r\n    newData: newShape,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.replace', context);\r\n\r\n  return context.newShape;\r\n};\r\n\r\nModeling.prototype.pasteElements = function(tree, topParent, position) {\r\n  var context = {\r\n    tree: tree,\r\n    topParent: topParent,\r\n    position: position\r\n  };\r\n\r\n  this._commandStack.execute('elements.paste', context);\r\n};\r\n\r\nModeling.prototype.alignElements = function(elements, alignment) {\r\n  var context = {\r\n    elements: elements,\r\n    alignment: alignment\r\n  };\r\n\r\n  this._commandStack.execute('elements.align', context);\r\n};\r\n\r\nModeling.prototype.resizeShape = function(shape, newBounds, minBounds) {\r\n  var context = {\r\n    shape: shape,\r\n    newBounds: newBounds,\r\n    minBounds: minBounds\r\n  };\r\n\r\n  this._commandStack.execute('shape.resize', context);\r\n};\r\n\r\nModeling.prototype.createSpace = function(movingShapes, resizingShapes, delta, direction) {\r\n  var context = {\r\n    movingShapes: movingShapes,\r\n    resizingShapes: resizingShapes,\r\n    delta: delta,\r\n    direction: direction\r\n  };\r\n\r\n  this._commandStack.execute('spaceTool', context);\r\n};\r\n\r\nModeling.prototype.updateWaypoints = function(connection, newWaypoints, hints) {\r\n  var context = {\r\n    connection: connection,\r\n    newWaypoints: newWaypoints,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('connection.updateWaypoints', context);\r\n};\r\n\r\nModeling.prototype.reconnectStart = function(connection, newSource, dockingOrPoints) {\r\n  var context = {\r\n    connection: connection,\r\n    newSource: newSource,\r\n    dockingOrPoints: dockingOrPoints\r\n  };\r\n\r\n  this._commandStack.execute('connection.reconnectStart', context);\r\n};\r\n\r\nModeling.prototype.reconnectEnd = function(connection, newTarget, dockingOrPoints) {\r\n  var context = {\r\n    connection: connection,\r\n    newTarget: newTarget,\r\n    dockingOrPoints: dockingOrPoints\r\n  };\r\n\r\n  this._commandStack.execute('connection.reconnectEnd', context);\r\n};\r\n\r\nModeling.prototype.connect = function(source, target, attrs, hints) {\r\n  return this.createConnection(source, target, attrs || {}, source.parent, hints);\r\n};\r\n\r\nModeling.prototype._create = function(type, attrs) {\r\n  if (attrs instanceof Base) {\r\n    return attrs;\r\n  } else {\r\n    return this._elementFactory.create(type, attrs);\r\n  }\r\n};\r\n\r\nModeling.prototype.toggleCollapse = function(shape, hints) {\r\n  var context = {\r\n    shape: shape,\r\n    hints: hints || {}\r\n  };\r\n\r\n  this._commandStack.execute('shape.toggleCollapse', context);\r\n};\r\n","import { forEach } from 'min-dash';\r\n\r\n/**\r\n * A handler that align elements in a certain way.\r\n *\r\n */\r\nexport default function AlignElements(modeling, canvas) {\r\n  this._modeling = modeling;\r\n  this._canvas = canvas;\r\n}\r\n\r\nAlignElements.$inject = [ 'modeling', 'canvas' ];\r\n\r\n\r\nAlignElements.prototype.preExecute = function(context) {\r\n  var modeling = this._modeling;\r\n\r\n  var elements = context.elements,\r\n      alignment = context.alignment;\r\n\r\n\r\n  forEach(elements, function(element) {\r\n    var delta = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n\r\n    if (alignment.left) {\r\n      delta.x = alignment.left - element.x;\r\n\r\n    } else if (alignment.right) {\r\n      delta.x = (alignment.right - element.width) - element.x;\r\n\r\n    } else if (alignment.center) {\r\n      delta.x = (alignment.center - Math.round(element.width / 2)) - element.x;\r\n\r\n    } else if (alignment.top) {\r\n      delta.y = alignment.top - element.y;\r\n\r\n    } else if (alignment.bottom) {\r\n      delta.y = (alignment.bottom - element.height) - element.y;\r\n\r\n    } else if (alignment.middle) {\r\n      delta.y = (alignment.middle - Math.round(element.height / 2)) - element.y;\r\n    }\r\n\r\n    modeling.moveElements([ element ], delta, element.parent);\r\n  });\r\n};\r\n\r\nAlignElements.prototype.postExecute = function(context) {\r\n\r\n};\r\n","import { some } from 'min-dash';\r\n\r\n\r\n/**\r\n * A handler that implements reversible appending of shapes\r\n * to a source shape.\r\n *\r\n * @param {canvas} Canvas\r\n * @param {elementFactory} ElementFactory\r\n * @param {modeling} Modeling\r\n */\r\nexport default function AppendShapeHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nAppendShapeHandler.$inject = [ 'modeling' ];\r\n\r\n\r\n// api //////////////////////\r\n\r\n\r\n/**\r\n * Creates a new shape\r\n *\r\n * @param {Object} context\r\n * @param {ElementDescriptor} context.shape the new shape\r\n * @param {ElementDescriptor} context.source the source object\r\n * @param {ElementDescriptor} context.parent the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nAppendShapeHandler.prototype.preExecute = function(context) {\r\n\r\n  var source = context.source;\r\n\r\n  if (!source) {\r\n    throw new Error('source required');\r\n  }\r\n\r\n  var target = context.target || source.parent,\r\n      shape = context.shape;\r\n\r\n  shape = context.shape =\r\n    this._modeling.createShape(\r\n      shape,\r\n      context.position,\r\n      target, { attach: context.attach });\r\n\r\n  context.shape = shape;\r\n};\r\n\r\nAppendShapeHandler.prototype.postExecute = function(context) {\r\n  var parent = context.connectionParent || context.shape.parent;\r\n\r\n  if (!existsConnection(context.source, context.shape)) {\r\n\r\n    // create connection\r\n    this._modeling.connect(context.source, context.shape, context.connection, parent);\r\n  }\r\n};\r\n\r\n\r\nfunction existsConnection(source, target) {\r\n  return some(source.outgoing, function(c) {\r\n    return c.target === target;\r\n  });\r\n}","export default function CreateConnectionHandler(canvas, layouter) {\r\n  this._canvas = canvas;\r\n  this._layouter = layouter;\r\n}\r\n\r\nCreateConnectionHandler.$inject = [ 'canvas', 'layouter' ];\r\n\r\n\r\n// api //////////////////////\r\n\r\n\r\n/**\r\n * Appends a shape to a target shape\r\n *\r\n * @param {Object} context\r\n * @param {djs.element.Base} context.source the source object\r\n * @param {djs.element.Base} context.target the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nCreateConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      source = context.source,\r\n      target = context.target,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex,\r\n      hints = context.hints;\r\n\r\n  if (!source || !target) {\r\n    throw new Error('source and target required');\r\n  }\r\n\r\n  if (!parent) {\r\n    throw new Error('parent required');\r\n  }\r\n\r\n  connection.source = source;\r\n  connection.target = target;\r\n\r\n  if (!connection.waypoints) {\r\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\r\n  }\r\n\r\n  // add connection\r\n  this._canvas.addConnection(connection, parent, parentIndex);\r\n\r\n  return connection;\r\n};\r\n\r\nCreateConnectionHandler.prototype.revert = function(context) {\r\n  var connection = context.connection;\r\n\r\n  this._canvas.removeConnection(connection);\r\n\r\n  connection.source = null;\r\n  connection.target = null;\r\n};","import inherits from 'inherits';\r\n\r\nimport CreateShapeHandler from './CreateShapeHandler';\r\n\r\n\r\n/**\r\n * A handler that attaches a label to a given target shape.\r\n *\r\n * @param {Canvas} canvas\r\n */\r\nexport default function CreateLabelHandler(canvas) {\r\n  CreateShapeHandler.call(this, canvas);\r\n}\r\n\r\ninherits(CreateLabelHandler, CreateShapeHandler);\r\n\r\nCreateLabelHandler.$inject = [ 'canvas' ];\r\n\r\n\r\n// api //////////////////////\r\n\r\n\r\nvar originalExecute = CreateShapeHandler.prototype.execute;\r\n\r\n/**\r\n * Appends a label to a target shape.\r\n *\r\n * @method CreateLabelHandler#execute\r\n *\r\n * @param {Object} context\r\n * @param {ElementDescriptor} context.target the element the label is attached to\r\n * @param {ElementDescriptor} context.parent the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nCreateLabelHandler.prototype.execute = function(context) {\r\n\r\n  var label = context.shape;\r\n\r\n  ensureValidDimensions(label);\r\n\r\n  label.labelTarget = context.labelTarget;\r\n\r\n  return originalExecute.call(this, context);\r\n};\r\n\r\nvar originalRevert = CreateShapeHandler.prototype.revert;\r\n\r\n/**\r\n * Undo append by removing the shape\r\n */\r\nCreateLabelHandler.prototype.revert = function(context) {\r\n  context.shape.labelTarget = null;\r\n\r\n  return originalRevert.call(this, context);\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction ensureValidDimensions(label) {\r\n  // make sure a label has valid { width, height } dimensions\r\n  [ 'width', 'height' ].forEach(function(prop) {\r\n    if (typeof label[prop] === 'undefined') {\r\n      label[prop] = 0;\r\n    }\r\n  });\r\n}","import { assign } from 'min-dash';\r\n\r\nvar round = Math.round;\r\n\r\n\r\n/**\r\n * A handler that implements reversible addition of shapes.\r\n *\r\n * @param {canvas} Canvas\r\n */\r\nexport default function CreateShapeHandler(canvas) {\r\n  this._canvas = canvas;\r\n}\r\n\r\nCreateShapeHandler.$inject = [ 'canvas' ];\r\n\r\n\r\n// api //////////////////////\r\n\r\n\r\n/**\r\n * Appends a shape to a target shape\r\n *\r\n * @param {Object} context\r\n * @param {djs.model.Base} context.parent the parent object\r\n * @param {Point} context.position position of the new element\r\n */\r\nCreateShapeHandler.prototype.execute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      positionOrBounds = context.position,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex;\r\n\r\n  if (!parent) {\r\n    throw new Error('parent required');\r\n  }\r\n\r\n  if (!positionOrBounds) {\r\n    throw new Error('position required');\r\n  }\r\n\r\n  // (1) add at event center position _or_ at given bounds\r\n  if (positionOrBounds.width !== undefined) {\r\n    assign(shape, positionOrBounds);\r\n  } else {\r\n    assign(shape, {\r\n      x: positionOrBounds.x - round(shape.width / 2),\r\n      y: positionOrBounds.y - round(shape.height / 2)\r\n    });\r\n  }\r\n\r\n  // (2) add to canvas\r\n  this._canvas.addShape(shape, parent, parentIndex);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\n/**\r\n * Undo append by removing the shape\r\n */\r\nCreateShapeHandler.prototype.revert = function(context) {\r\n\r\n  // (3) remove form canvas\r\n  this._canvas.removeShape(context.shape);\r\n};","import {\r\n  add as collectionAdd,\r\n  indexOf as collectionIdx\r\n} from '../../../util/Collections';\r\n\r\n\r\n/**\r\n * A handler that implements reversible deletion of Connections.\r\n */\r\nexport default function DeleteConnectionHandler(canvas, modeling) {\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n}\r\n\r\nDeleteConnectionHandler.$inject = [\r\n  'canvas',\r\n  'modeling'\r\n];\r\n\r\n\r\nDeleteConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      parent = connection.parent;\r\n\r\n  context.parent = parent;\r\n\r\n  // remember containment\r\n  context.parentIndex = collectionIdx(parent.children, connection);\r\n\r\n  context.source = connection.source;\r\n  context.target = connection.target;\r\n\r\n  this._canvas.removeConnection(connection);\r\n\r\n  connection.source = null;\r\n  connection.target = null;\r\n\r\n  return connection;\r\n};\r\n\r\n/**\r\n * Command revert implementation.\r\n */\r\nDeleteConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex;\r\n\r\n  connection.source = context.source;\r\n  connection.target = context.target;\r\n\r\n  // restore containment\r\n  collectionAdd(parent.children, connection, parentIndex);\r\n\r\n  this._canvas.addConnection(connection, parent);\r\n\r\n  return connection;\r\n};\r\n","import { forEach } from 'min-dash';\r\n\r\n\r\nexport default function DeleteElementsHandler(modeling, elementRegistry) {\r\n  this._modeling = modeling;\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nDeleteElementsHandler.$inject = [\r\n  'modeling',\r\n  'elementRegistry'\r\n];\r\n\r\n\r\nDeleteElementsHandler.prototype.postExecute = function(context) {\r\n\r\n  var modeling = this._modeling,\r\n      elementRegistry = this._elementRegistry,\r\n      elements = context.elements;\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    // element may have been removed with previous\r\n    // remove operations already (e.g. in case of nesting)\r\n    if (!elementRegistry.get(element.id)) {\r\n      return;\r\n    }\r\n\r\n    if (element.waypoints) {\r\n      modeling.removeConnection(element);\r\n    } else {\r\n      modeling.removeShape(element);\r\n    }\r\n  });\r\n};","import {\r\n  add as collectionAdd,\r\n  indexOf as collectionIdx\r\n} from '../../../util/Collections';\r\n\r\nimport { saveClear } from '../../../util/Removal';\r\n\r\n\r\n/**\r\n * A handler that implements reversible deletion of shapes.\r\n *\r\n */\r\nexport default function DeleteShapeHandler(canvas, modeling) {\r\n  this._canvas = canvas;\r\n  this._modeling = modeling;\r\n}\r\n\r\nDeleteShapeHandler.$inject = [ 'canvas', 'modeling' ];\r\n\r\n\r\n/**\r\n * - Remove connections\r\n * - Remove all direct children\r\n */\r\nDeleteShapeHandler.prototype.preExecute = function(context) {\r\n\r\n  var modeling = this._modeling;\r\n\r\n  var shape = context.shape;\r\n\r\n  // remove connections\r\n  saveClear(shape.incoming, function(connection) {\r\n    // To make sure that the connection isn't removed twice\r\n    // For example if a container is removed\r\n    modeling.removeConnection(connection, { nested: true });\r\n  });\r\n\r\n  saveClear(shape.outgoing, function(connection) {\r\n    modeling.removeConnection(connection, { nested: true });\r\n  });\r\n\r\n  // remove child shapes and connections\r\n  saveClear(shape.children, function(child) {\r\n    if (isConnection(child)) {\r\n      modeling.removeConnection(child, { nested: true });\r\n    } else {\r\n      modeling.removeShape(child, { nested: true });\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Remove shape and remember the parent\r\n */\r\nDeleteShapeHandler.prototype.execute = function(context) {\r\n  var canvas = this._canvas;\r\n\r\n  var shape = context.shape,\r\n      oldParent = shape.parent;\r\n\r\n  context.oldParent = oldParent;\r\n\r\n  // remove containment\r\n  context.oldParentIndex = collectionIdx(oldParent.children, shape);\r\n\r\n  // remove shape\r\n  canvas.removeShape(shape);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\n/**\r\n * Command revert implementation\r\n */\r\nDeleteShapeHandler.prototype.revert = function(context) {\r\n\r\n  var canvas = this._canvas;\r\n\r\n  var shape = context.shape,\r\n      oldParent = context.oldParent,\r\n      oldParentIndex = context.oldParentIndex;\r\n\r\n  // restore containment\r\n  collectionAdd(oldParent.children, shape, oldParentIndex);\r\n\r\n  canvas.addShape(shape, oldParent);\r\n\r\n  return shape;\r\n};\r\n\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","import {\r\n  forEach,\r\n  sortBy\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * A handler that distributes elements evenly.\r\n */\r\nexport default function DistributeElements(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nDistributeElements.$inject = [ 'modeling' ];\r\n\r\nvar OFF_AXIS = {\r\n  x: 'y',\r\n  y: 'x'\r\n};\r\n\r\nDistributeElements.prototype.preExecute = function(context) {\r\n  var modeling = this._modeling;\r\n\r\n  var groups = context.groups,\r\n      axis = context.axis,\r\n      dimension = context.dimension;\r\n\r\n  function updateRange(group, element) {\r\n    group.range.min = Math.min(element[axis], group.range.min);\r\n    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);\r\n  }\r\n\r\n  function center(element) {\r\n    return element[axis] + element[dimension] / 2;\r\n  }\r\n\r\n  function lastIdx(arr) {\r\n    return arr.length - 1;\r\n  }\r\n\r\n  function rangeDiff(range) {\r\n    return range.max - range.min;\r\n  }\r\n\r\n  function centerElement(refCenter, element) {\r\n    var delta = { y: 0 };\r\n\r\n    delta[axis] = refCenter - center(element);\r\n\r\n    if (delta[axis]) {\r\n\r\n      delta[OFF_AXIS[axis]] = 0;\r\n\r\n      modeling.moveElements([ element ], delta, element.parent);\r\n    }\r\n  }\r\n\r\n  var firstGroup = groups[0],\r\n      lastGroupIdx = lastIdx(groups),\r\n      lastGroup = groups[ lastGroupIdx ];\r\n\r\n  var margin,\r\n      spaceInBetween,\r\n      groupsSize = 0; // the size of each range\r\n\r\n  forEach(groups, function(group, idx) {\r\n    var sortedElements,\r\n        refElem,\r\n        refCenter;\r\n\r\n    if (group.elements.length < 2) {\r\n      if (idx && idx !== groups.length - 1) {\r\n        updateRange(group, group.elements[0]);\r\n\r\n        groupsSize += rangeDiff(group.range);\r\n      }\r\n      return;\r\n    }\r\n\r\n    sortedElements = sortBy(group.elements, axis);\r\n\r\n    refElem = sortedElements[0];\r\n\r\n    if (idx === lastGroupIdx) {\r\n      refElem = sortedElements[lastIdx(sortedElements)];\r\n    }\r\n\r\n    refCenter = center(refElem);\r\n\r\n    // wanna update the ranges after the shapes have been centered\r\n    group.range = null;\r\n\r\n    forEach(sortedElements, function(element) {\r\n\r\n      centerElement(refCenter, element);\r\n\r\n      if (group.range === null) {\r\n        group.range = {\r\n          min: element[axis],\r\n          max: element[axis] + element[dimension]\r\n        };\r\n\r\n        return;\r\n      }\r\n\r\n      // update group's range after centering the range elements\r\n      updateRange(group, element);\r\n    });\r\n\r\n    if (idx && idx !== groups.length - 1) {\r\n      groupsSize += rangeDiff(group.range);\r\n    }\r\n  });\r\n\r\n  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);\r\n\r\n  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));\r\n\r\n  if (margin < groups.length - 1) {\r\n    return;\r\n  }\r\n\r\n  forEach(groups, function(group, groupIdx) {\r\n    var delta = {},\r\n        prevGroup;\r\n\r\n    if (group === firstGroup || group === lastGroup) {\r\n      return;\r\n    }\r\n\r\n    prevGroup = groups[groupIdx - 1];\r\n\r\n    group.range.max = 0;\r\n\r\n    forEach(group.elements, function(element, idx) {\r\n      delta[OFF_AXIS[axis]] = 0;\r\n      delta[axis] = (prevGroup.range.max - element[axis]) + margin;\r\n\r\n      if (group.range.min !== element[axis]) {\r\n        delta[axis] += element[axis] - group.range.min;\r\n      }\r\n\r\n      if (delta[axis]) {\r\n        modeling.moveElements([ element ], delta, element.parent);\r\n      }\r\n\r\n      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);\r\n    });\r\n  });\r\n};\r\n\r\nDistributeElements.prototype.postExecute = function(context) {\r\n\r\n};\r\n","import { assign } from 'min-dash';\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of shapes.\r\n */\r\nexport default function LayoutConnectionHandler(layouter, canvas) {\r\n  this._layouter = layouter;\r\n  this._canvas = canvas;\r\n}\r\n\r\nLayoutConnectionHandler.$inject = [ 'layouter', 'canvas' ];\r\n\r\nLayoutConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection;\r\n\r\n  var oldWaypoints = connection.waypoints;\r\n\r\n  assign(context, {\r\n    oldWaypoints: oldWaypoints\r\n  });\r\n\r\n  connection.waypoints = this._layouter.layoutConnection(connection, context.hints);\r\n\r\n  return connection;\r\n};\r\n\r\nLayoutConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection;\r\n\r\n  connection.waypoints = context.oldWaypoints;\r\n\r\n  return connection;\r\n};\r\n","import { forEach } from 'min-dash';\r\n\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from '../../../util/Collections';\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of connections.\r\n *\r\n * The handler differs from the layout connection handler in a sense\r\n * that it preserves the connection layout.\r\n */\r\nexport default function MoveConnectionHandler() { }\r\n\r\n\r\nMoveConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      delta = context.delta;\r\n\r\n  var newParent = context.newParent || connection.parent,\r\n      newParentIndex = context.newParentIndex,\r\n      oldParent = connection.parent;\r\n\r\n  // save old parent in context\r\n  context.oldParent = oldParent;\r\n  context.oldParentIndex = collectionRemove(oldParent.children, connection);\r\n\r\n  // add to new parent at position\r\n  collectionAdd(newParent.children, connection, newParentIndex);\r\n\r\n  // update parent\r\n  connection.parent = newParent;\r\n\r\n  // update waypoint positions\r\n  forEach(connection.waypoints, function(p) {\r\n    p.x += delta.x;\r\n    p.y += delta.y;\r\n\r\n    if (p.original) {\r\n      p.original.x += delta.x;\r\n      p.original.y += delta.y;\r\n    }\r\n  });\r\n\r\n  return connection;\r\n};\r\n\r\nMoveConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection,\r\n      newParent = connection.parent,\r\n      oldParent = context.oldParent,\r\n      oldParentIndex = context.oldParentIndex,\r\n      delta = context.delta;\r\n\r\n  // remove from newParent\r\n  collectionRemove(newParent.children, connection);\r\n\r\n  // restore previous location in old parent\r\n  collectionAdd(oldParent.children, connection, oldParentIndex);\r\n\r\n  // restore parent\r\n  connection.parent = oldParent;\r\n\r\n  // revert to old waypoint positions\r\n  forEach(connection.waypoints, function(p) {\r\n    p.x -= delta.x;\r\n    p.y -= delta.y;\r\n\r\n    if (p.original) {\r\n      p.original.x -= delta.x;\r\n      p.original.y -= delta.y;\r\n    }\r\n  });\r\n\r\n  return connection;\r\n};","import MoveHelper from './helper/MoveHelper';\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of shapes.\r\n */\r\nexport default function MoveElementsHandler(modeling) {\r\n  this._helper = new MoveHelper(modeling);\r\n}\r\n\r\nMoveElementsHandler.$inject = [ 'modeling' ];\r\n\r\nMoveElementsHandler.prototype.preExecute = function(context) {\r\n  context.closure = this._helper.getClosure(context.shapes);\r\n};\r\n\r\nMoveElementsHandler.prototype.postExecute = function(context) {\r\n\r\n  var hints = context.hints,\r\n      primaryShape;\r\n\r\n  if (hints && hints.primaryShape) {\r\n    primaryShape = hints.primaryShape;\r\n    hints.oldParent = primaryShape.parent;\r\n  }\r\n\r\n  this._helper.moveClosure(\r\n    context.closure,\r\n    context.delta,\r\n    context.newParent,\r\n    context.newHost,\r\n    primaryShape\r\n  );\r\n};","import {\r\n  assign,\r\n  forEach,\r\n  pick\r\n} from 'min-dash';\r\n\r\nimport MoveHelper from './helper/MoveHelper';\r\n\r\nimport {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from '../../../util/Collections';\r\n\r\nimport {\r\n  getMovedSourceAnchor,\r\n  getMovedTargetAnchor\r\n} from './helper/AnchorsHelper';\r\n\r\n\r\n/**\r\n * A handler that implements reversible moving of shapes.\r\n */\r\nexport default function MoveShapeHandler(modeling) {\r\n  this._modeling = modeling;\r\n\r\n  this._helper = new MoveHelper(modeling);\r\n}\r\n\r\nMoveShapeHandler.$inject = [ 'modeling' ];\r\n\r\n\r\nMoveShapeHandler.prototype.execute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      delta = context.delta,\r\n      newParent = context.newParent || shape.parent,\r\n      newParentIndex = context.newParentIndex,\r\n      oldParent = shape.parent;\r\n\r\n  context.oldBounds = pick(shape, [ 'x', 'y', 'width', 'height']);\r\n\r\n  // save old parent in context\r\n  context.oldParent = oldParent;\r\n  context.oldParentIndex = collectionRemove(oldParent.children, shape);\r\n\r\n  // add to new parent at position\r\n  collectionAdd(newParent.children, shape, newParentIndex);\r\n\r\n  // update shape parent + position\r\n  assign(shape, {\r\n    parent: newParent,\r\n    x: shape.x + delta.x,\r\n    y: shape.y + delta.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n\r\nMoveShapeHandler.prototype.postExecute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      delta = context.delta,\r\n      hints = context.hints;\r\n\r\n  var modeling = this._modeling;\r\n\r\n  if (hints.layout !== false) {\r\n\r\n    forEach(shape.incoming, function(c) {\r\n      modeling.layoutConnection(c, {\r\n        connectionEnd: getMovedTargetAnchor(c, shape, delta)\r\n      });\r\n    });\r\n\r\n    forEach(shape.outgoing, function(c) {\r\n      modeling.layoutConnection(c, {\r\n        connectionStart: getMovedSourceAnchor(c, shape, delta)\r\n      });\r\n    });\r\n  }\r\n\r\n  if (hints.recurse !== false) {\r\n    this.moveChildren(context);\r\n  }\r\n};\r\n\r\nMoveShapeHandler.prototype.revert = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldParent = context.oldParent,\r\n      oldParentIndex = context.oldParentIndex,\r\n      delta = context.delta;\r\n\r\n  // restore previous location in old parent\r\n  collectionAdd(oldParent.children, shape, oldParentIndex);\r\n\r\n  // revert to old position and parent\r\n  assign(shape, {\r\n    parent: oldParent,\r\n    x: shape.x - delta.x,\r\n    y: shape.y - delta.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n\r\nMoveShapeHandler.prototype.moveChildren = function(context) {\r\n\r\n  var delta = context.delta,\r\n      shape = context.shape;\r\n\r\n  this._helper.moveRecursive(shape.children, delta, null);\r\n};\r\n\r\nMoveShapeHandler.prototype.getNewParent = function(context) {\r\n  return context.newParent || context.shape.parent;\r\n};\r\n","import {\r\n  forEach,\r\n  map,\r\n  sortBy,\r\n  assign,\r\n} from 'min-dash';\r\n\r\nfunction removeProperties(element, properties) {\r\n  forEach(properties, function(prop) {\r\n    if (element[prop]) {\r\n      delete element[prop];\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * A handler that implements pasting of elements onto the diagram.\r\n *\r\n * @param {eventBus} EventBus\r\n * @param {canvas} Canvas\r\n * @param {selection} Selection\r\n * @param {elementFactory} ElementFactory\r\n * @param {modeling} Modeling\r\n * @param {rules} Rules\r\n */\r\nexport default function PasteHandler(\r\n    eventBus, canvas, selection,\r\n    elementFactory, modeling, rules) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._selection = selection;\r\n  this._elementFactory = elementFactory;\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n}\r\n\r\n\r\nPasteHandler.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'selection',\r\n  'elementFactory',\r\n  'modeling',\r\n  'rules'\r\n];\r\n\r\n\r\n// api //////////////////////\r\n\r\n/**\r\n * Creates a new shape\r\n *\r\n * @param {Object} context\r\n * @param {Object} context.tree the new shape\r\n * @param {Element} context.topParent the paste target\r\n */\r\nPasteHandler.prototype.preExecute = function(context) {\r\n  var eventBus = this._eventBus,\r\n      self = this;\r\n\r\n  var tree = context.tree,\r\n      topParent = context.topParent,\r\n      position = context.position;\r\n\r\n  tree.createdElements = {};\r\n\r\n  tree.labels = [];\r\n\r\n  forEach(tree, function(elements, depthStr) {\r\n    var depth = parseInt(depthStr, 10);\r\n\r\n    if (isNaN(depth)) {\r\n      return;\r\n    }\r\n\r\n    // set the parent on the top level elements\r\n    if (!depth) {\r\n      elements = map(elements, function(descriptor) {\r\n        descriptor.parent = topParent;\r\n\r\n        return descriptor;\r\n      });\r\n    }\r\n\r\n    // Order by priority for element creation\r\n    elements = sortBy(elements, 'priority');\r\n\r\n    forEach(elements, function(descriptor) {\r\n      var id = descriptor.id,\r\n          parent = descriptor.parent,\r\n          hints = {},\r\n          newPosition;\r\n\r\n      var element = assign({}, descriptor);\r\n\r\n      if (depth) {\r\n        element.parent = self._getCreatedElement(parent, tree);\r\n      }\r\n\r\n      // this happens when shapes have not been created due to rules\r\n      if (!parent) {\r\n        return;\r\n      }\r\n\r\n      eventBus.fire('element.paste', {\r\n        createdElements: tree.createdElements,\r\n        descriptor: element\r\n      });\r\n\r\n      // in case the parent changed during 'element.paste'\r\n      parent = element.parent;\r\n\r\n      if (element.waypoints) {\r\n        element = self._createConnection(element, parent, position, tree);\r\n\r\n        if (element) {\r\n          tree.createdElements[id] = {\r\n            element: element,\r\n            descriptor: descriptor\r\n          };\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n\r\n      // supply not-root information as hint\r\n      if (element.parent !== topParent) {\r\n        hints.root = false;\r\n      }\r\n\r\n      // set host\r\n      if (element.host) {\r\n        hints.attach = true;\r\n\r\n        parent = self._getCreatedElement(element.host, tree);\r\n      }\r\n\r\n      // handle labels\r\n      if (element.labelTarget) {\r\n        return tree.labels.push(element);\r\n      }\r\n\r\n      newPosition = {\r\n        x: Math.round(position.x + element.delta.x + (element.width / 2)),\r\n        y: Math.round(position.y + element.delta.y + (element.height / 2))\r\n      };\r\n\r\n      removeProperties(element, [\r\n        'id',\r\n        'parent',\r\n        'delta',\r\n        'host',\r\n        'priority'\r\n      ]);\r\n\r\n      element = self._createShape(element, parent, newPosition, hints);\r\n\r\n      if (element) {\r\n        tree.createdElements[id] = {\r\n          element: element,\r\n          descriptor: descriptor\r\n        };\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n// move label's to their relative position\r\nPasteHandler.prototype.postExecute = function(context) {\r\n  var modeling = this._modeling,\r\n      selection = this._selection,\r\n      self = this;\r\n\r\n  var tree = context.tree,\r\n      labels = tree.labels,\r\n      topLevelElements = [];\r\n\r\n  forEach(labels, function(labelDescriptor) {\r\n    var labelTarget = self._getCreatedElement(labelDescriptor.labelTarget, tree),\r\n        labels, labelTargetPos, newPosition;\r\n\r\n    if (!labelTarget) {\r\n      return;\r\n    }\r\n\r\n    labels = labelTarget.labels;\r\n\r\n    if (!labels || !labels.length) {\r\n      return;\r\n    }\r\n\r\n    labelTargetPos = {\r\n      x: labelTarget.x,\r\n      y: labelTarget.y\r\n    };\r\n\r\n    if (labelTarget.waypoints) {\r\n      labelTargetPos = labelTarget.waypoints[0];\r\n    }\r\n\r\n    forEach(labels, function(label) {\r\n      newPosition = {\r\n        x: Math.round((labelTargetPos.x - label.x) + labelDescriptor.delta.x),\r\n        y: Math.round((labelTargetPos.y - label.y) + labelDescriptor.delta.y)\r\n      };\r\n\r\n      modeling.moveShape(label, newPosition, labelTarget.parent);\r\n    });\r\n  });\r\n\r\n  forEach(tree[0], function(descriptor) {\r\n    var id = descriptor.id,\r\n        toplevel = tree.createdElements[id];\r\n\r\n    if (toplevel) {\r\n      topLevelElements.push(toplevel.element);\r\n    }\r\n  });\r\n\r\n  selection.select(topLevelElements);\r\n};\r\n\r\n\r\nPasteHandler.prototype._createConnection = function(element, parent, parentCenter, tree) {\r\n  var modeling = this._modeling,\r\n      rules = this._rules;\r\n\r\n  var connection, source, target, canPaste;\r\n\r\n  element.waypoints = map(element.waypoints, function(waypoint, idx) {\r\n    return {\r\n      x: Math.round(parentCenter.x + element.delta[idx].x),\r\n      y: Math.round(parentCenter.y + element.delta[idx].y)\r\n    };\r\n  });\r\n\r\n  source = this._getCreatedElement(element.source, tree);\r\n  target = this._getCreatedElement(element.target, tree);\r\n\r\n  if (!source || !target) {\r\n    return null;\r\n  }\r\n\r\n  canPaste = rules.allowed('element.paste', {\r\n    source: source,\r\n    target: target\r\n  });\r\n\r\n  if (!canPaste) {\r\n    return null;\r\n  }\r\n\r\n  removeProperties(element, [\r\n    'id',\r\n    'parent',\r\n    'delta',\r\n    'source',\r\n    'target',\r\n    'width',\r\n    'height',\r\n    'priority'\r\n  ]);\r\n\r\n  connection = modeling.createConnection(source, target, element, parent);\r\n\r\n  return connection;\r\n};\r\n\r\n\r\nPasteHandler.prototype._createShape = function(element, parent, position, isAttach, hints) {\r\n  var modeling = this._modeling,\r\n      elementFactory = this._elementFactory,\r\n      rules = this._rules;\r\n\r\n  var canPaste = rules.allowed('element.paste', {\r\n    element: element,\r\n    position: position,\r\n    parent: parent\r\n  });\r\n\r\n  if (!canPaste) {\r\n    return null;\r\n  }\r\n\r\n  var shape = elementFactory.createShape(element);\r\n\r\n  modeling.createShape(shape, position, parent, isAttach, hints);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\nPasteHandler.prototype._getCreatedElement = function(id, tree) {\r\n  return tree.createdElements[id] && tree.createdElements[id].element;\r\n};\r\n","import { isArray } from 'min-dash';\r\n\r\n\r\n/**\r\n * Reconnect connection handler\r\n */\r\nexport default function ReconnectConnectionHandler() { }\r\n\r\nReconnectConnectionHandler.$inject = [ ];\r\n\r\nReconnectConnectionHandler.prototype.execute = function(context) {\r\n\r\n  var newSource = context.newSource,\r\n      newTarget = context.newTarget,\r\n      connection = context.connection,\r\n      dockingOrPoints = context.dockingOrPoints,\r\n      oldWaypoints = connection.waypoints,\r\n      newWaypoints;\r\n\r\n  if (!newSource && !newTarget) {\r\n    throw new Error('newSource or newTarget are required');\r\n  }\r\n\r\n  if (newSource && newTarget) {\r\n    throw new Error('must specify either newSource or newTarget');\r\n  }\r\n\r\n  context.oldWaypoints = oldWaypoints;\r\n\r\n  if (isArray(dockingOrPoints)) {\r\n    newWaypoints = dockingOrPoints;\r\n  } else {\r\n    newWaypoints = oldWaypoints.slice();\r\n\r\n    newWaypoints.splice(newSource ? 0 : -1, 1, dockingOrPoints);\r\n  }\r\n\r\n  if (newSource) {\r\n    context.oldSource = connection.source;\r\n    connection.source = newSource;\r\n  }\r\n\r\n  if (newTarget) {\r\n    context.oldTarget = connection.target;\r\n    connection.target = newTarget;\r\n  }\r\n\r\n  connection.waypoints = newWaypoints;\r\n\r\n  return connection;\r\n};\r\n\r\nReconnectConnectionHandler.prototype.revert = function(context) {\r\n\r\n  var newSource = context.newSource,\r\n      newTarget = context.newTarget,\r\n      connection = context.connection;\r\n\r\n  if (newSource) {\r\n    connection.source = context.oldSource;\r\n  }\r\n\r\n  if (newTarget) {\r\n    connection.target = context.oldTarget;\r\n  }\r\n\r\n  connection.waypoints = context.oldWaypoints;\r\n\r\n  return connection;\r\n};","import { forEach } from 'min-dash';\r\n\r\n\r\n/**\r\n * A handler that implements reversible replacing of shapes.\r\n * Internally the old shape will be removed and the new shape will be added.\r\n *\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @param {canvas} Canvas\r\n */\r\nexport default function ReplaceShapeHandler(modeling, rules) {\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n}\r\n\r\nReplaceShapeHandler.$inject = [ 'modeling', 'rules' ];\r\n\r\n\r\n// api //////////////////////\r\n\r\n\r\n/**\r\n * Replaces a shape with an replacement Element.\r\n *\r\n * The newData object should contain type, x, y.\r\n *\r\n * If possible also the incoming/outgoing connection\r\n * will be restored.\r\n *\r\n * @param {Object} context\r\n */\r\nReplaceShapeHandler.prototype.preExecute = function(context) {\r\n\r\n  var self = this,\r\n      modeling = this._modeling,\r\n      rules = this._rules;\r\n\r\n  var oldShape = context.oldShape,\r\n      newData = context.newData,\r\n      hints = context.hints,\r\n      newShape;\r\n\r\n  function canReconnect(type, source, target, connection) {\r\n    return rules.allowed(type, {\r\n      source: source,\r\n      target: target,\r\n      connection: connection\r\n    });\r\n  }\r\n\r\n\r\n  // (1) place a new shape at the given position\r\n\r\n  var position = {\r\n    x: newData.x,\r\n    y: newData.y\r\n  };\r\n\r\n  newShape = context.newShape =\r\n    context.newShape ||\r\n    self.createShape(newData, position, oldShape.parent, hints);\r\n\r\n\r\n  // (2) update the host\r\n\r\n  if (oldShape.host) {\r\n    modeling.updateAttachment(newShape, oldShape.host);\r\n  }\r\n\r\n\r\n  // (3) adopt all children from the old shape\r\n\r\n  var children;\r\n\r\n  if (hints.moveChildren !== false) {\r\n    children = oldShape.children.slice();\r\n\r\n    modeling.moveElements(children, { x: 0, y: 0 }, newShape);\r\n  }\r\n\r\n  // (4) reconnect connections to the new shape (where allowed)\r\n\r\n  var incoming = oldShape.incoming.slice(),\r\n      outgoing = oldShape.outgoing.slice();\r\n\r\n  forEach(incoming, function(connection) {\r\n    var waypoints = connection.waypoints,\r\n        docking = waypoints[waypoints.length - 1],\r\n        source = connection.source,\r\n        allowed = canReconnect('connection.reconnectEnd', source, newShape, connection);\r\n\r\n    if (allowed) {\r\n      self.reconnectEnd(connection, newShape, docking);\r\n    }\r\n  });\r\n\r\n  forEach(outgoing, function(connection) {\r\n    var waypoints = connection.waypoints,\r\n        docking = waypoints[0],\r\n        target = connection.target,\r\n        allowed = canReconnect('connection.reconnectStart', newShape, target, connection);\r\n\r\n    if (allowed) {\r\n      self.reconnectStart(connection, newShape, docking);\r\n    }\r\n\r\n  });\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.postExecute = function(context) {\r\n  var modeling = this._modeling;\r\n\r\n  var oldShape = context.oldShape,\r\n      newShape = context.newShape;\r\n\r\n  // if an element gets resized on replace, layout the connection again\r\n  forEach(newShape.incoming, function(c) {\r\n    modeling.layoutConnection(c, { endChanged: true });\r\n  });\r\n\r\n  forEach(newShape.outgoing, function(c) {\r\n    modeling.layoutConnection(c, { startChanged: true });\r\n  });\r\n\r\n  modeling.removeShape(oldShape);\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.execute = function(context) {};\r\n\r\nReplaceShapeHandler.prototype.revert = function(context) {};\r\n\r\n\r\nReplaceShapeHandler.prototype.createShape = function(shape, position, target, hints) {\r\n  var modeling = this._modeling;\r\n  return modeling.createShape(shape, position, target, hints);\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.reconnectStart = function(connection, newSource, dockingPoint) {\r\n  var modeling = this._modeling;\r\n  modeling.reconnectStart(connection, newSource, dockingPoint);\r\n};\r\n\r\n\r\nReplaceShapeHandler.prototype.reconnectEnd = function(connection, newTarget, dockingPoint) {\r\n  var modeling = this._modeling;\r\n  modeling.reconnectEnd(connection, newTarget, dockingPoint);\r\n};\r\n","import {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getResizedSourceAnchor,\r\n  getResizedTargetAnchor\r\n} from './helper/AnchorsHelper';\r\n\r\n\r\n/**\r\n * A handler that implements reversible resizing of shapes.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nexport default function ResizeShapeHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nResizeShapeHandler.$inject = [ 'modeling' ];\r\n\r\n/**\r\n * {\r\n *   shape: {....}\r\n *   newBounds: {\r\n *     width:  20,\r\n *     height: 40,\r\n *     x:       5,\r\n *     y:      10\r\n *   }\r\n *\r\n * }\r\n */\r\nResizeShapeHandler.prototype.execute = function(context) {\r\n  var shape = context.shape,\r\n      newBounds = context.newBounds,\r\n      minBounds = context.minBounds;\r\n\r\n  if (newBounds.x === undefined || newBounds.y === undefined ||\r\n      newBounds.width === undefined || newBounds.height === undefined) {\r\n    throw new Error('newBounds must have {x, y, width, height} properties');\r\n  }\r\n\r\n  if (minBounds && (newBounds.width < minBounds.width\r\n    || newBounds.height < minBounds.height)) {\r\n    throw new Error('width and height cannot be less than minimum height and width');\r\n  } else if (!minBounds\r\n    && newBounds.width < 10 || newBounds.height < 10) {\r\n    throw new Error('width and height cannot be less than 10px');\r\n  }\r\n\r\n  // save old bbox in context\r\n  context.oldBounds = {\r\n    width:  shape.width,\r\n    height: shape.height,\r\n    x:      shape.x,\r\n    y:      shape.y\r\n  };\r\n\r\n  // update shape\r\n  assign(shape, {\r\n    width:  newBounds.width,\r\n    height: newBounds.height,\r\n    x:      newBounds.x,\r\n    y:      newBounds.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n\r\nResizeShapeHandler.prototype.postExecute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldBounds = context.oldBounds;\r\n\r\n  var modeling = this._modeling;\r\n\r\n  forEach(shape.incoming, function(c) {\r\n    modeling.layoutConnection(c, {\r\n      connectionEnd: getResizedTargetAnchor(c, shape, oldBounds)\r\n    });\r\n  });\r\n\r\n  forEach(shape.outgoing, function(c) {\r\n    modeling.layoutConnection(c, {\r\n      connectionStart: getResizedSourceAnchor(c, shape, oldBounds)\r\n    });\r\n  });\r\n\r\n};\r\n\r\nResizeShapeHandler.prototype.revert = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldBounds = context.oldBounds;\r\n\r\n  // restore previous bbox\r\n  assign(shape, {\r\n    width:  oldBounds.width,\r\n    height: oldBounds.height,\r\n    x:      oldBounds.x,\r\n    y:      oldBounds.y\r\n  });\r\n\r\n  return shape;\r\n};\r\n","import { forEach } from 'min-dash';\r\n\r\nimport {\r\n  resizeBounds\r\n} from '../../space-tool/SpaceUtil';\r\n\r\n\r\n/**\r\n * A handler that implements reversible creating and removing of space.\r\n *\r\n * It executes in two phases:\r\n *\r\n *  (1) resize all affected resizeShapes\r\n *  (2) move all affected moveElements\r\n */\r\nexport default function SpaceToolHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nSpaceToolHandler.$inject = [ 'modeling' ];\r\n\r\n\r\nSpaceToolHandler.prototype.preExecute = function(context) {\r\n\r\n  // resize\r\n  var modeling = this._modeling,\r\n      resizingShapes = context.resizingShapes,\r\n      delta = context.delta,\r\n      direction = context.direction;\r\n\r\n  forEach(resizingShapes, function(shape) {\r\n    var newBounds = resizeBounds(shape, direction, delta);\r\n\r\n    modeling.resizeShape(shape, newBounds);\r\n  });\r\n};\r\n\r\nSpaceToolHandler.prototype.postExecute = function(context) {\r\n  // move\r\n  var modeling = this._modeling,\r\n      movingShapes = context.movingShapes,\r\n      delta = context.delta;\r\n\r\n  modeling.moveElements(movingShapes, delta, undefined, { autoResize: false, attach: false });\r\n};\r\n\r\nSpaceToolHandler.prototype.execute = function(context) {};\r\nSpaceToolHandler.prototype.revert = function(context) {};\r\n","/**\r\n * A handler that toggles the collapsed state of an element\r\n * and the visibility of all its children.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nexport default function ToggleShapeCollapseHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nToggleShapeCollapseHandler.$inject = [ 'modeling' ];\r\n\r\n\r\nToggleShapeCollapseHandler.prototype.execute = function(context) {\r\n\r\n  var shape = context.shape,\r\n      children = shape.children;\r\n\r\n  // remember previous visibility of children\r\n  context.oldChildrenVisibility = getElementsVisibility(children);\r\n\r\n  // toggle state\r\n  shape.collapsed = !shape.collapsed;\r\n\r\n  // hide/show children\r\n  setHidden(children, shape.collapsed);\r\n\r\n  return [shape].concat(children);\r\n};\r\n\r\n\r\nToggleShapeCollapseHandler.prototype.revert = function(context) {\r\n\r\n  var shape = context.shape,\r\n      oldChildrenVisibility = context.oldChildrenVisibility;\r\n\r\n  var children = shape.children;\r\n\r\n  // set old visability of children\r\n  restoreVisibility(children, oldChildrenVisibility);\r\n\r\n  // retoggle state\r\n  shape.collapsed = !shape.collapsed;\r\n\r\n  return [shape].concat(children);\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Return a map { elementId -> hiddenState}.\r\n *\r\n * @param {Array<djs.model.Shape>} elements\r\n *\r\n * @return {Object}\r\n */\r\nfunction getElementsVisibility(elements) {\r\n\r\n  var result = {};\r\n\r\n  elements.forEach(function(e) {\r\n    result[e.id] = e.hidden;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\nfunction setHidden(elements, newHidden) {\r\n  elements.forEach(function(element) {\r\n    element.hidden = newHidden;\r\n  });\r\n}\r\n\r\nfunction restoreVisibility(elements, lastState) {\r\n  elements.forEach(function(e) {\r\n    e.hidden = lastState[e.id];\r\n  });\r\n}\r\n","import {\r\n  add as collectionAdd,\r\n  remove as collectionRemove\r\n} from '../../../util/Collections';\r\n\r\n/**\r\n * A handler that implements reversible attaching/detaching of shapes.\r\n */\r\nexport default function UpdateAttachmentHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nUpdateAttachmentHandler.$inject = [ 'modeling' ];\r\n\r\n\r\nUpdateAttachmentHandler.prototype.execute = function(context) {\r\n  var shape = context.shape,\r\n      newHost = context.newHost,\r\n      oldHost = shape.host;\r\n\r\n  // (0) detach from old host\r\n  context.oldHost = oldHost;\r\n  context.attacherIdx = removeAttacher(oldHost, shape);\r\n\r\n  // (1) attach to new host\r\n  addAttacher(newHost, shape);\r\n\r\n  // (2) update host\r\n  shape.host = newHost;\r\n\r\n  return shape;\r\n};\r\n\r\nUpdateAttachmentHandler.prototype.revert = function(context) {\r\n  var shape = context.shape,\r\n      newHost = context.newHost,\r\n      oldHost = context.oldHost,\r\n      attacherIdx = context.attacherIdx;\r\n\r\n  // (2) update host\r\n  shape.host = oldHost;\r\n\r\n  // (1) attach to new host\r\n  removeAttacher(newHost, shape);\r\n\r\n  // (0) detach from old host\r\n  addAttacher(oldHost, shape, attacherIdx);\r\n\r\n  return shape;\r\n};\r\n\r\n\r\nfunction removeAttacher(host, attacher) {\r\n  // remove attacher from host\r\n  return collectionRemove(host && host.attachers, attacher);\r\n}\r\n\r\nfunction addAttacher(host, attacher, idx) {\r\n\r\n  if (!host) {\r\n    return;\r\n  }\r\n\r\n  var attachers = host.attachers;\r\n\r\n  if (!attachers) {\r\n    host.attachers = attachers = [];\r\n  }\r\n\r\n  collectionAdd(attachers, attacher, idx);\r\n}\r\n","export default function UpdateWaypointsHandler() { }\r\n\r\nUpdateWaypointsHandler.prototype.execute = function(context) {\r\n\r\n  var connection = context.connection,\r\n      newWaypoints = context.newWaypoints;\r\n\r\n  context.oldWaypoints = connection.waypoints;\r\n\r\n  connection.waypoints = newWaypoints;\r\n\r\n  return connection;\r\n};\r\n\r\nUpdateWaypointsHandler.prototype.revert = function(context) {\r\n\r\n  var connection = context.connection,\r\n      oldWaypoints = context.oldWaypoints;\r\n\r\n  connection.waypoints = oldWaypoints;\r\n\r\n  return connection;\r\n};","import {\r\n  getNewAttachPoint\r\n} from '../../../../util/AttachUtil';\r\n\r\n\r\nexport function getResizedSourceAnchor(connection, shape, oldBounds) {\r\n\r\n  var waypoints = safeGetWaypoints(connection),\r\n      oldAnchor = waypoints[0];\r\n\r\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\r\n}\r\n\r\n\r\nexport function getResizedTargetAnchor(connection, shape, oldBounds) {\r\n\r\n  var waypoints = safeGetWaypoints(connection),\r\n      oldAnchor = waypoints[waypoints.length - 1];\r\n\r\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\r\n}\r\n\r\n\r\nexport function getMovedSourceAnchor(connection, source, moveDelta) {\r\n  return getResizedSourceAnchor(connection, source, substractPosition(source, moveDelta));\r\n}\r\n\r\n\r\nexport function getMovedTargetAnchor(connection, target, moveDelta) {\r\n  return getResizedTargetAnchor(connection, target, substractPosition(target, moveDelta));\r\n}\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction substractPosition(bounds, delta) {\r\n  return {\r\n    x: bounds.x - delta.x,\r\n    y: bounds.y - delta.y,\r\n    width: bounds.width,\r\n    height: bounds.height\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Return waypoints of given connection; throw if non exists (should not happen!!).\r\n *\r\n * @param {Connection} connection\r\n *\r\n * @return {Array<Point>}\r\n */\r\nfunction safeGetWaypoints(connection) {\r\n\r\n  var waypoints = connection.waypoints;\r\n\r\n  if (!waypoints.length) {\r\n    throw new Error('connection#' + connection.id + ': no waypoints');\r\n  }\r\n\r\n  return waypoints;\r\n}\r\n","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getClosure\r\n} from '../../../../util/Elements';\r\n\r\n\r\nexport default function MoveClosure() {\r\n\r\n  this.allShapes = {};\r\n  this.allConnections = {};\r\n\r\n  this.enclosedElements = {};\r\n  this.enclosedConnections = {};\r\n\r\n  this.topLevel = {};\r\n}\r\n\r\n\r\nMoveClosure.prototype.add = function(element, isTopLevel) {\r\n  return this.addAll([ element ], isTopLevel);\r\n};\r\n\r\n\r\nMoveClosure.prototype.addAll = function(elements, isTopLevel) {\r\n\r\n  var newClosure = getClosure(elements, !!isTopLevel, this);\r\n\r\n  assign(this, newClosure);\r\n\r\n  return this;\r\n};","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getMovedSourceAnchor,\r\n  getMovedTargetAnchor\r\n} from './AnchorsHelper';\r\n\r\nimport MoveClosure from './MoveClosure';\r\n\r\n\r\n/**\r\n * A helper that is able to carry out serialized move\r\n * operations on multiple elements.\r\n *\r\n * @param {Modeling} modeling\r\n */\r\nexport default function MoveHelper(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\n/**\r\n * Move the specified elements and all children by the given delta.\r\n *\r\n * This moves all enclosed connections, too and layouts all affected\r\n * external connections.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n * @param  {Point} delta\r\n * @param  {djs.model.Base} newParent applied to the first level of shapes\r\n *\r\n * @return {Array<djs.model.Base>} list of touched elements\r\n */\r\nMoveHelper.prototype.moveRecursive = function(elements, delta, newParent) {\r\n  if (!elements) {\r\n    return [];\r\n  } else {\r\n    return this.moveClosure(this.getClosure(elements), delta, newParent);\r\n  }\r\n};\r\n\r\n/**\r\n * Move the given closure of elmements.\r\n *\r\n * @param {Object} closure\r\n * @param {Point} delta\r\n * @param {djs.model.Base} [newParent]\r\n * @param {djs.model.Base} [newHost]\r\n */\r\nMoveHelper.prototype.moveClosure = function(closure, delta, newParent, newHost, primaryShape) {\r\n  var modeling = this._modeling;\r\n\r\n  var allShapes = closure.allShapes,\r\n      allConnections = closure.allConnections,\r\n      enclosedConnections = closure.enclosedConnections,\r\n      topLevel = closure.topLevel,\r\n      keepParent = false;\r\n\r\n  if (primaryShape && primaryShape.parent === newParent) {\r\n    keepParent = true;\r\n  }\r\n\r\n  // move all shapes\r\n  forEach(allShapes, function(shape) {\r\n\r\n    // move the element according to the given delta\r\n    modeling.moveShape(shape, delta, topLevel[shape.id] && !keepParent && newParent, {\r\n      recurse: false,\r\n      layout: false\r\n    });\r\n  });\r\n\r\n  // move all child connections / layout external connections\r\n  forEach(allConnections, function(c) {\r\n\r\n    var sourceMoved = !!allShapes[c.source.id],\r\n        targetMoved = !!allShapes[c.target.id];\r\n\r\n    if (enclosedConnections[c.id] && sourceMoved && targetMoved) {\r\n      modeling.moveConnection(c, delta, topLevel[c.id] && !keepParent && newParent);\r\n    } else {\r\n      modeling.layoutConnection(c, {\r\n        connectionStart: sourceMoved && getMovedSourceAnchor(c, c.source, delta),\r\n        connectionEnd: targetMoved && getMovedTargetAnchor(c, c.target, delta)\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Returns the closure for the selected elements\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n * @return {MoveClosure} closure\r\n */\r\nMoveHelper.prototype.getClosure = function(elements) {\r\n  return new MoveClosure().addAll(elements, true);\r\n};","import { bind } from 'min-dash';\r\n\r\n\r\nexport default function MouseTracking(eventBus, canvas) {\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  this._init();\r\n}\r\n\r\nMouseTracking.$inject = [\r\n  'eventBus',\r\n  'canvas'\r\n];\r\n\r\n\r\nMouseTracking.prototype.getHoverContext = function() {\r\n  var viewbox = this._canvas.viewbox();\r\n\r\n  return {\r\n    element: this._hoverElement,\r\n    point: {\r\n      x: viewbox.x + Math.round(this._mouseX / viewbox.scale),\r\n      y: viewbox.y + Math.round(this._mouseY / viewbox.scale)\r\n    }\r\n  };\r\n};\r\n\r\nMouseTracking.prototype._init = function() {\r\n  var eventBus = this._eventBus,\r\n      canvas = this._canvas;\r\n\r\n  var container = canvas.getContainer();\r\n\r\n  this._setMousePosition = bind(this._setMousePosition, this);\r\n\r\n  container.addEventListener('mousemove', this._setMousePosition);\r\n\r\n  eventBus.on('diagram.destroy', function() {\r\n    container.removeEventListener('mousemove', this._setMousePosition);\r\n  }, this);\r\n\r\n  eventBus.on('element.hover', this._setHoverElement, this);\r\n};\r\n\r\n\r\nMouseTracking.prototype._setHoverElement = function(event) {\r\n  this._hoverElement = event.element;\r\n};\r\n\r\n\r\nMouseTracking.prototype._setMousePosition = function(event) {\r\n  this._mouseX = event.layerX;\r\n  this._mouseY = event.layerY;\r\n};\r\n","import MouseTracking from './MouseTracking';\r\n\r\nexport default {\r\n  __init__: [ 'mouseTracking' ],\r\n  mouseTracking: [ 'type', MouseTracking ]\r\n};\r\n","import {\r\n  assign,\r\n  filter,\r\n  groupBy\r\n} from 'min-dash';\r\n\r\nvar LOW_PRIORITY = 500,\r\n    MEDIUM_PRIORITY = 1250,\r\n    HIGH_PRIORITY = 1500;\r\n\r\nimport { getOriginal as getOriginalEvent } from '../../util/Event';\r\n\r\nvar round = Math.round;\r\n\r\nfunction mid(element) {\r\n  return {\r\n    x: element.x + round(element.width / 2),\r\n    y: element.y + round(element.height / 2)\r\n  };\r\n}\r\n\r\n/**\r\n * A plugin that makes shapes draggable / droppable.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Dragging} dragging\r\n * @param {Modeling} modeling\r\n * @param {Selection} selection\r\n * @param {Rules} rules\r\n */\r\nexport default function MoveEvents(\r\n    eventBus, dragging, modeling,\r\n    selection, rules) {\r\n\r\n  // rules\r\n\r\n  function canMove(shapes, delta, position, target) {\r\n\r\n    return rules.allowed('elements.move', {\r\n      shapes: shapes,\r\n      delta: delta,\r\n      position: position,\r\n      target: target\r\n    });\r\n  }\r\n\r\n\r\n  // move events\r\n\r\n  // assign a high priority to this handler to setup the environment\r\n  // others may hook up later, e.g. at default priority and modify\r\n  // the move environment.\r\n  //\r\n  // This sets up the context with\r\n  //\r\n  // * shape: the primary shape being moved\r\n  // * shapes: a list of shapes to be moved\r\n  // * validatedShapes: a list of shapes that are being checked\r\n  //                    against the rules before and during move\r\n  //\r\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        shape = event.shape,\r\n        shapes = selection.get().slice();\r\n\r\n    // move only single shape if the dragged element\r\n    // is not part of the current selection\r\n    if (shapes.indexOf(shape) === -1) {\r\n      shapes = [ shape ];\r\n    }\r\n\r\n    // ensure we remove nested elements in the collection\r\n    // and add attachers for a proper dragger\r\n    shapes = removeNested(shapes);\r\n\r\n    // attach shapes to drag context\r\n    assign(context, {\r\n      shapes: shapes,\r\n      validatedShapes: shapes,\r\n      shape: shape\r\n    });\r\n  });\r\n\r\n\r\n  // assign a high priority to this handler to setup the environment\r\n  // others may hook up later, e.g. at default priority and modify\r\n  // the move environment\r\n  //\r\n  eventBus.on('shape.move.start', MEDIUM_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        validatedShapes = context.validatedShapes,\r\n        canExecute;\r\n\r\n    canExecute = context.canExecute = canMove(validatedShapes);\r\n\r\n    // check if we can move the elements\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  // assign a low priority to this handler\r\n  // to let others modify the move event before we update\r\n  // the context\r\n  //\r\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        validatedShapes = context.validatedShapes,\r\n        hover = event.hover,\r\n        delta = { x: event.dx, y: event.dy },\r\n        position = { x: event.x, y: event.y },\r\n        canExecute;\r\n\r\n    // check if we can move the elements\r\n    canExecute = canMove(validatedShapes, delta, position, hover);\r\n\r\n    context.delta = delta;\r\n    context.canExecute = canExecute;\r\n\r\n    // simply ignore move over\r\n    if (canExecute === null) {\r\n      context.target = null;\r\n\r\n      return;\r\n    }\r\n\r\n    context.target = hover;\r\n  });\r\n\r\n  eventBus.on('shape.move.end', function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    var delta = context.delta,\r\n        canExecute = context.canExecute,\r\n        isAttach = canExecute === 'attach',\r\n        shapes = context.shapes;\r\n\r\n    if (!canExecute) {\r\n      return false;\r\n    }\r\n\r\n    // ensure we have actual pixel values deltas\r\n    // (important when zoom level was > 1 during move)\r\n    delta.x = round(delta.x);\r\n    delta.y = round(delta.y);\r\n\r\n    modeling.moveElements(shapes, delta, context.target, {\r\n      primaryShape: context.shape,\r\n      attach: isAttach\r\n    });\r\n  });\r\n\r\n\r\n  // move activation\r\n\r\n  eventBus.on('element.mousedown', function(event) {\r\n\r\n    var originalEvent = getOriginalEvent(event);\r\n\r\n    if (!originalEvent) {\r\n      throw new Error('must supply DOM mousedown event');\r\n    }\r\n\r\n    return start(originalEvent, event.element);\r\n  });\r\n\r\n\r\n  function start(event, element, activate) {\r\n\r\n    // do not move connections or the root element\r\n    if (element.waypoints || !element.parent) {\r\n      return;\r\n    }\r\n\r\n    var referencePoint = mid(element);\r\n\r\n    dragging.init(event, referencePoint, 'shape.move', {\r\n      cursor: 'grabbing',\r\n      autoActivate: activate,\r\n      data: {\r\n        shape: element,\r\n        context: {}\r\n      }\r\n    });\r\n\r\n    // we've handled the event\r\n    return true;\r\n  }\r\n\r\n  // API\r\n\r\n  this.start = start;\r\n}\r\n\r\nMoveEvents.$inject = [\r\n  'eventBus',\r\n  'dragging',\r\n  'modeling',\r\n  'selection',\r\n  'rules'\r\n];\r\n\r\n\r\n/**\r\n * Return a filtered list of elements that do not contain\r\n * those nested into others.\r\n *\r\n * @param  {Array<djs.model.Base>} elements\r\n *\r\n * @return {Array<djs.model.Base>} filtered\r\n */\r\nfunction removeNested(elements) {\r\n\r\n  var ids = groupBy(elements, 'id');\r\n\r\n  return filter(elements, function(element) {\r\n    while ((element = element.parent)) {\r\n\r\n      // parent in selection\r\n      if (ids[element.id]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n","import {\r\n  flatten,\r\n  forEach,\r\n  filter,\r\n  find,\r\n  groupBy,\r\n  map,\r\n  matchPattern,\r\n  size\r\n} from 'min-dash';\r\n\r\nimport {\r\n  selfAndAllChildren\r\n} from '../../util/Elements';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  clear as svgClear,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\nimport { translate } from '../../util/SvgTransformUtil';\r\n\r\nvar LOW_PRIORITY = 499;\r\n\r\nvar MARKER_DRAGGING = 'djs-dragging',\r\n    MARKER_OK = 'drop-ok',\r\n    MARKER_NOT_OK = 'drop-not-ok',\r\n    MARKER_NEW_PARENT = 'new-parent',\r\n    MARKER_ATTACH = 'attach-ok';\r\n\r\n\r\n/**\r\n * Provides previews for moving shapes when moving.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Canvas} canvas\r\n * @param {Styles} styles\r\n */\r\nexport default function MovePreview(\r\n    eventBus, elementRegistry, canvas,\r\n    styles, previewSupport) {\r\n\r\n  function getVisualDragShapes(shapes) {\r\n    var elements = getAllDraggedElements(shapes);\r\n\r\n    var filteredElements = removeEdges(elements);\r\n\r\n    return filteredElements;\r\n  }\r\n\r\n  function getAllDraggedElements(shapes) {\r\n    var allShapes = selfAndAllChildren(shapes, true);\r\n\r\n    var allConnections = map(allShapes, function(shape) {\r\n      return (shape.incoming || []).concat(shape.outgoing || []);\r\n    });\r\n\r\n    return flatten(allShapes.concat(allConnections));\r\n  }\r\n\r\n  /**\r\n   * Sets drop marker on an element.\r\n   */\r\n  function setMarker(element, marker) {\r\n\r\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\r\n\r\n      if (m === marker) {\r\n        canvas.addMarker(element, m);\r\n      } else {\r\n        canvas.removeMarker(element, m);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Make an element draggable.\r\n   *\r\n   * @param {Object} context\r\n   * @param {djs.model.Base} element\r\n   * @param {Boolean} addMarker\r\n   */\r\n  function makeDraggable(context, element, addMarker) {\r\n\r\n    previewSupport.addDragger(element, context.dragGroup);\r\n\r\n    if (addMarker) {\r\n      canvas.addMarker(element, MARKER_DRAGGING);\r\n    }\r\n\r\n    if (context.allDraggedElements) {\r\n      context.allDraggedElements.push(element);\r\n    } else {\r\n      context.allDraggedElements = [ element ];\r\n    }\r\n  }\r\n\r\n  // assign a low priority to this handler\r\n  // to let others modify the move context before\r\n  // we draw things\r\n  eventBus.on('shape.move.start', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        dragShapes = context.shapes,\r\n        allDraggedElements = context.allDraggedElements;\r\n\r\n    var visuallyDraggedShapes = getVisualDragShapes(dragShapes);\r\n\r\n    if (!context.dragGroup) {\r\n      var dragGroup = svgCreate('g');\r\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n      var defaultLayer = canvas.getDefaultLayer();\r\n\r\n      svgAppend(defaultLayer, dragGroup);\r\n\r\n      context.dragGroup = dragGroup;\r\n    }\r\n\r\n    // add previews\r\n    visuallyDraggedShapes.forEach(function(shape) {\r\n      previewSupport.addDragger(shape, context.dragGroup);\r\n    });\r\n\r\n    // cache all dragged elements / gfx\r\n    // so that we can quickly undo their state changes later\r\n    if (!allDraggedElements) {\r\n      allDraggedElements = getAllDraggedElements(dragShapes);\r\n    } else {\r\n      allDraggedElements = flatten([\r\n        allDraggedElements,\r\n        getAllDraggedElements(dragShapes)\r\n      ]);\r\n    }\r\n\r\n    // add dragging marker\r\n    forEach(allDraggedElements, function(e) {\r\n      canvas.addMarker(e, MARKER_DRAGGING);\r\n    });\r\n\r\n    context.allDraggedElements = allDraggedElements;\r\n\r\n    // determine, if any of the dragged elements have different parents\r\n    context.differentParents = haveDifferentParents(dragShapes);\r\n  });\r\n\r\n  // update previews\r\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        dragGroup = context.dragGroup,\r\n        target = context.target,\r\n        parent = context.shape.parent,\r\n        canExecute = context.canExecute;\r\n\r\n    if (target) {\r\n      if (canExecute === 'attach') {\r\n        setMarker(target, MARKER_ATTACH);\r\n      } else if (context.canExecute && target && target.id !== parent.id) {\r\n        setMarker(target, MARKER_NEW_PARENT);\r\n      } else {\r\n        setMarker(target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\r\n      }\r\n    }\r\n\r\n    translate(dragGroup, event.dx, event.dy);\r\n  });\r\n\r\n  eventBus.on([ 'shape.move.out', 'shape.move.cleanup' ], function(event) {\r\n    var context = event.context,\r\n        target = context.target;\r\n\r\n    if (target) {\r\n      setMarker(target, null);\r\n    }\r\n  });\r\n\r\n  // remove previews\r\n  eventBus.on('shape.move.cleanup', function(event) {\r\n\r\n    var context = event.context,\r\n        allDraggedElements = context.allDraggedElements,\r\n        dragGroup = context.dragGroup;\r\n\r\n\r\n    // remove dragging marker\r\n    forEach(allDraggedElements, function(e) {\r\n      canvas.removeMarker(e, MARKER_DRAGGING);\r\n    });\r\n\r\n    if (dragGroup) {\r\n      svgClear(dragGroup);\r\n    }\r\n  });\r\n\r\n\r\n  // API //////////////////////\r\n\r\n  /**\r\n   * Make an element draggable.\r\n   *\r\n   * @param {Object} context\r\n   * @param {djs.model.Base} element\r\n   * @param {Boolean} addMarker\r\n   */\r\n  this.makeDraggable = makeDraggable;\r\n}\r\n\r\nMovePreview.$inject = [\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'canvas',\r\n  'styles',\r\n  'previewSupport'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * returns elements minus all connections\r\n * where source or target is not elements\r\n */\r\nfunction removeEdges(elements) {\r\n\r\n  var filteredElements = filter(elements, function(element) {\r\n\r\n    if (!isConnection(element)) {\r\n      return true;\r\n    } else {\r\n\r\n      return (\r\n        find(elements, matchPattern({ id: element.source.id })) &&\r\n        find(elements, matchPattern({ id: element.target.id }))\r\n      );\r\n    }\r\n  });\r\n\r\n  return filteredElements;\r\n}\r\n\r\nfunction haveDifferentParents(elements) {\r\n  return size(groupBy(elements, function(e) { return e.parent && e.parent.id; })) !== 1;\r\n}\r\n\r\n/**\r\n * Checks if an element is a connection.\r\n */\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","import InteractionEventsModule from '../interaction-events';\r\nimport SelectionModule from '../selection';\r\nimport OutlineModule from '../outline';\r\nimport RulesModule from '../rules';\r\nimport DraggingModule from '../dragging';\r\nimport PreviewSupportModule from '../preview-support';\r\n\r\nimport Move from './Move';\r\nimport MovePreview from './MovePreview';\r\n\r\nexport default {\r\n  __depends__: [\r\n    InteractionEventsModule,\r\n    SelectionModule,\r\n    OutlineModule,\r\n    RulesModule,\r\n    DraggingModule,\r\n    PreviewSupportModule\r\n  ],\r\n  __init__: [\r\n    'move',\r\n    'movePreview'\r\n  ],\r\n  move: [ 'type', Move ],\r\n  movePreview: [ 'type', MovePreview ]\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from '../../command/CommandInterceptor';\r\n\r\n\r\n/**\r\n * An abstract provider that allows modelers to implement a custom\r\n * ordering of diagram elements on the canvas.\r\n *\r\n * It makes sure that the order is always preserved during element\r\n * creation and move operations.\r\n *\r\n * In order to use this behavior, inherit from it and override\r\n * the method {@link OrderingProvider#getOrdering}.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * function CustomOrderingProvider(eventBus) {\r\n *   OrderingProvider.call(this, eventBus);\r\n *\r\n *   this.getOrdering = function(element, newParent) {\r\n *     // always insert elements at the front\r\n *     // when moving\r\n *     return {\r\n *       index: 0,\r\n *       parent: newParent\r\n *     };\r\n *   };\r\n * }\r\n * ```\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function OrderingProvider(eventBus) {\r\n\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n\r\n  var self = this;\r\n\r\n  this.preExecute([ 'shape.create', 'connection.create' ], function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape || context.connection,\r\n        parent = context.parent;\r\n\r\n    var ordering = self.getOrdering(element, parent);\r\n\r\n    if (ordering) {\r\n\r\n      if (ordering.parent !== undefined) {\r\n        context.parent = ordering.parent;\r\n      }\r\n\r\n      context.parentIndex = ordering.index;\r\n    }\r\n  });\r\n\r\n  this.preExecute([ 'shape.move', 'connection.move' ], function(event) {\r\n\r\n    var context = event.context,\r\n        element = context.shape || context.connection,\r\n        parent = context.newParent || element.parent;\r\n\r\n    var ordering = self.getOrdering(element, parent);\r\n\r\n    if (ordering) {\r\n\r\n      if (ordering.parent !== undefined) {\r\n        context.newParent = ordering.parent;\r\n      }\r\n\r\n      context.newParentIndex = ordering.index;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Return a custom ordering of the element, both in terms\r\n * of parent element and index in the new parent.\r\n *\r\n * Implementors of this method must return an object with\r\n * `parent` _and_ `index` in it.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {djs.model.Shape} newParent\r\n *\r\n * @return {Object} ordering descriptor\r\n */\r\nOrderingProvider.prototype.getOrdering = function(element, newParent) {\r\n  return null;\r\n};\r\n\r\ninherits(OrderingProvider, CommandInterceptor);","import { getBBox } from '../../util/Elements';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\nimport {\r\n  assign\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A plugin that adds an outline to shapes and connections that may be activated and styled\r\n * via CSS classes.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Styles} styles\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function Outline(eventBus, styles, elementRegistry) {\r\n\r\n  this.offset = 6;\r\n\r\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\r\n\r\n  var self = this;\r\n\r\n  function createOutline(gfx, bounds) {\r\n    var outline = svgCreate('rect');\r\n\r\n    svgAttr(outline, assign({\r\n      x: 10,\r\n      y: 10,\r\n      width: 100,\r\n      height: 100\r\n    }, OUTLINE_STYLE));\r\n\r\n    svgAppend(gfx, outline);\r\n\r\n    return outline;\r\n  }\r\n\r\n  // A low priortity is necessary, because outlines of labels have to be updated\r\n  // after the label bounds have been updated in the renderer.\r\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\r\n    var element = event.element,\r\n        gfx = event.gfx;\r\n\r\n    var outline = domQuery('.djs-outline', gfx);\r\n\r\n    if (!outline) {\r\n      outline = createOutline(gfx, element);\r\n    }\r\n\r\n    self.updateShapeOutline(outline, element);\r\n  });\r\n\r\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\r\n    var element = event.element,\r\n        gfx = event.gfx;\r\n\r\n    var outline = domQuery('.djs-outline', gfx);\r\n\r\n    if (!outline) {\r\n      outline = createOutline(gfx, element);\r\n    }\r\n\r\n    self.updateConnectionOutline(outline, element);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Updates the outline of a shape respecting the dimension of the\r\n * element and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\r\nOutline.prototype.updateShapeOutline = function(outline, element) {\r\n\r\n  svgAttr(outline, {\r\n    x: -this.offset,\r\n    y: -this.offset,\r\n    width: element.width + this.offset * 2,\r\n    height: element.height + this.offset * 2\r\n  });\r\n\r\n};\r\n\r\n\r\n/**\r\n * Updates the outline of a connection respecting the bounding box of\r\n * the connection and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\r\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\r\n\r\n  var bbox = getBBox(connection);\r\n\r\n  svgAttr(outline, {\r\n    x: bbox.x - this.offset,\r\n    y: bbox.y - this.offset,\r\n    width: bbox.width + this.offset * 2,\r\n    height: bbox.height + this.offset * 2\r\n  });\r\n\r\n};\r\n\r\n\r\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];","import Outline from './Outline';\r\n\r\nexport default {\r\n  __init__: [ 'outline' ],\r\n  outline: [ 'type', Outline ]\r\n};","import {\r\n  isArray,\r\n  isString,\r\n  isObject,\r\n  assign,\r\n  forEach,\r\n  find,\r\n  filter,\r\n  matchPattern,\r\n  isDefined\r\n} from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  classes as domClasses,\r\n  attr as domAttr,\r\n  remove as domRemove,\r\n  clear as domClear\r\n} from 'min-dom';\r\n\r\nimport {\r\n  getBBox\r\n} from '../../util/Elements';\r\n\r\nimport Ids from '../../util/IdGenerator';\r\n\r\n// document wide unique overlay ids\r\nvar ids = new Ids('ov');\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\n\r\n/**\r\n * A service that allows users to attach overlays to diagram elements.\r\n *\r\n * The overlay service will take care of overlay positioning during updates.\r\n *\r\n * @example\r\n *\r\n * // add a pink badge on the top left of the shape\r\n * overlays.add(someShape, {\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   },\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n * // or add via shape id\r\n *\r\n * overlays.add('some-element-id', {\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   }\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n * // or add with optional type\r\n *\r\n * overlays.add(someShape, 'badge', {\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   }\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n *\r\n * // remove an overlay\r\n *\r\n * var id = overlays.add(...);\r\n * overlays.remove(id);\r\n *\r\n *\r\n * You may configure overlay defaults during tool by providing a `config` module\r\n * with `overlays.defaults` as an entry:\r\n *\r\n * {\r\n *   overlays: {\r\n *     defaults: {\r\n *       show: {\r\n *         minZoom: 0.7,\r\n *         maxZoom: 5.0\r\n *       },\r\n *       scale: {\r\n *         min: 1\r\n *       }\r\n *     }\r\n * }\r\n *\r\n * @param {Object} config\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._elementRegistry = elementRegistry;\r\n\r\n  this._ids = ids;\r\n\r\n  this._overlayDefaults = assign({\r\n    // no show constraints\r\n    show: null,\r\n\r\n    // always scale\r\n    scale: true\r\n  }, config && config.defaults);\r\n\r\n  /**\r\n   * Mapping overlayId -> overlay\r\n   */\r\n  this._overlays = {};\r\n\r\n  /**\r\n   * Mapping elementId -> overlay container\r\n   */\r\n  this._overlayContainers = [];\r\n\r\n  // root html element for all overlays\r\n  this._overlayRoot = createRoot(canvas.getContainer());\r\n\r\n  this._init();\r\n}\r\n\r\n\r\nOverlays.$inject = [\r\n  'config.overlays',\r\n  'eventBus',\r\n  'canvas',\r\n  'elementRegistry'\r\n];\r\n\r\n\r\n/**\r\n * Returns the overlay with the specified id or a list of overlays\r\n * for an element with a given type.\r\n *\r\n * @example\r\n *\r\n * // return the single overlay with the given id\r\n * overlays.get('some-id');\r\n *\r\n * // return all overlays for the shape\r\n * overlays.get({ element: someShape });\r\n *\r\n * // return all overlays on shape with type 'badge'\r\n * overlays.get({ element: someShape, type: 'badge' });\r\n *\r\n * // shape can also be specified as id\r\n * overlays.get({ element: 'element-id', type: 'badge' });\r\n *\r\n *\r\n * @param {Object} search\r\n * @param {String} [search.id]\r\n * @param {String|djs.model.Base} [search.element]\r\n * @param {String} [search.type]\r\n *\r\n * @return {Object|Array<Object>} the overlay(s)\r\n */\r\nOverlays.prototype.get = function(search) {\r\n\r\n  if (isString(search)) {\r\n    search = { id: search };\r\n  }\r\n\r\n  if (isString(search.element)) {\r\n    search.element = this._elementRegistry.get(search.element);\r\n  }\r\n\r\n  if (search.element) {\r\n    var container = this._getOverlayContainer(search.element, true);\r\n\r\n    // return a list of overlays when searching by element (+type)\r\n    if (container) {\r\n      return search.type ? filter(container.overlays, matchPattern({ type: search.type })) : container.overlays.slice();\r\n    } else {\r\n      return [];\r\n    }\r\n  } else\r\n  if (search.type) {\r\n    return filter(this._overlays, matchPattern({ type: search.type }));\r\n  } else {\r\n    // return single element when searching by id\r\n    return search.id ? this._overlays[search.id] : null;\r\n  }\r\n};\r\n\r\n/**\r\n * Adds a HTML overlay to an element.\r\n *\r\n * @param {String|djs.model.Base}   element   attach overlay to this shape\r\n * @param {String}                  [type]    optional type to assign to the overlay\r\n * @param {Object}                  overlay   the overlay configuration\r\n *\r\n * @param {String|DOMElement}       overlay.html                 html element to use as an overlay\r\n * @param {Object}                  [overlay.show]               show configuration\r\n * @param {Number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\r\n * @param {Number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\r\n * @param {Object}                  overlay.position             where to attach the overlay\r\n * @param {Number}                  [overlay.position.left]      relative to element bbox left attachment\r\n * @param {Number}                  [overlay.position.top]       relative to element bbox top attachment\r\n * @param {Number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\r\n * @param {Number}                  [overlay.position.right]     relative to element bbox right attachment\r\n * @param {Boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\r\n *                                                               diagram zoom\r\n * @param {Number}                  [overlay.scale.min]\r\n * @param {Number}                  [overlay.scale.max]\r\n *\r\n * @return {String}                 id that may be used to reference the overlay for update or removal\r\n */\r\nOverlays.prototype.add = function(element, type, overlay) {\r\n\r\n  if (isObject(type)) {\r\n    overlay = type;\r\n    type = null;\r\n  }\r\n\r\n  if (!element.id) {\r\n    element = this._elementRegistry.get(element);\r\n  }\r\n\r\n  if (!overlay.position) {\r\n    throw new Error('must specifiy overlay position');\r\n  }\r\n\r\n  if (!overlay.html) {\r\n    throw new Error('must specifiy overlay html');\r\n  }\r\n\r\n  if (!element) {\r\n    throw new Error('invalid element specified');\r\n  }\r\n\r\n  var id = this._ids.next();\r\n\r\n  overlay = assign({}, this._overlayDefaults, overlay, {\r\n    id: id,\r\n    type: type,\r\n    element: element,\r\n    html: overlay.html\r\n  });\r\n\r\n  this._addOverlay(overlay);\r\n\r\n  return id;\r\n};\r\n\r\n\r\n/**\r\n * Remove an overlay with the given id or all overlays matching the given filter.\r\n *\r\n * @see Overlays#get for filter options.\r\n *\r\n * @param {String} [id]\r\n * @param {Object} [filter]\r\n */\r\nOverlays.prototype.remove = function(filter) {\r\n\r\n  var overlays = this.get(filter) || [];\r\n\r\n  if (!isArray(overlays)) {\r\n    overlays = [ overlays ];\r\n  }\r\n\r\n  var self = this;\r\n\r\n  forEach(overlays, function(overlay) {\r\n\r\n    var container = self._getOverlayContainer(overlay.element, true);\r\n\r\n    if (overlay) {\r\n      domRemove(overlay.html);\r\n      domRemove(overlay.htmlContainer);\r\n\r\n      delete overlay.htmlContainer;\r\n      delete overlay.element;\r\n\r\n      delete self._overlays[overlay.id];\r\n    }\r\n\r\n    if (container) {\r\n      var idx = container.overlays.indexOf(overlay);\r\n      if (idx !== -1) {\r\n        container.overlays.splice(idx, 1);\r\n      }\r\n    }\r\n  });\r\n\r\n};\r\n\r\n\r\nOverlays.prototype.show = function() {\r\n  setVisible(this._overlayRoot);\r\n};\r\n\r\n\r\nOverlays.prototype.hide = function() {\r\n  setVisible(this._overlayRoot, false);\r\n};\r\n\r\nOverlays.prototype.clear = function() {\r\n  this._overlays = {};\r\n\r\n  this._overlayContainers = [];\r\n\r\n  domClear(this._overlayRoot);\r\n};\r\n\r\nOverlays.prototype._updateOverlayContainer = function(container) {\r\n  var element = container.element,\r\n      html = container.html;\r\n\r\n  // update container left,top according to the elements x,y coordinates\r\n  // this ensures we can attach child elements relative to this container\r\n\r\n  var x = element.x,\r\n      y = element.y;\r\n\r\n  if (element.waypoints) {\r\n    var bbox = getBBox(element);\r\n    x = bbox.x;\r\n    y = bbox.y;\r\n  }\r\n\r\n  setPosition(html, x, y);\r\n\r\n  domAttr(container.html, 'data-container-id', element.id);\r\n};\r\n\r\n\r\nOverlays.prototype._updateOverlay = function(overlay) {\r\n\r\n  var position = overlay.position,\r\n      htmlContainer = overlay.htmlContainer,\r\n      element = overlay.element;\r\n\r\n  // update overlay html relative to shape because\r\n  // it is already positioned on the element\r\n\r\n  // update relative\r\n  var left = position.left,\r\n      top = position.top;\r\n\r\n  if (position.right !== undefined) {\r\n\r\n    var width;\r\n\r\n    if (element.waypoints) {\r\n      width = getBBox(element).width;\r\n    } else {\r\n      width = element.width;\r\n    }\r\n\r\n    left = position.right * -1 + width;\r\n  }\r\n\r\n  if (position.bottom !== undefined) {\r\n\r\n    var height;\r\n\r\n    if (element.waypoints) {\r\n      height = getBBox(element).height;\r\n    } else {\r\n      height = element.height;\r\n    }\r\n\r\n    top = position.bottom * -1 + height;\r\n  }\r\n\r\n  setPosition(htmlContainer, left || 0, top || 0);\r\n};\r\n\r\n\r\nOverlays.prototype._createOverlayContainer = function(element) {\r\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\r\n\r\n  this._overlayRoot.appendChild(html);\r\n\r\n  var container = {\r\n    html: html,\r\n    element: element,\r\n    overlays: []\r\n  };\r\n\r\n  this._updateOverlayContainer(container);\r\n\r\n  this._overlayContainers.push(container);\r\n\r\n  return container;\r\n};\r\n\r\n\r\nOverlays.prototype._updateRoot = function(viewbox) {\r\n  var scale = viewbox.scale || 1;\r\n\r\n  var matrix = 'matrix(' +\r\n  [\r\n    scale,\r\n    0,\r\n    0,\r\n    scale,\r\n    -1 * viewbox.x * scale,\r\n    -1 * viewbox.y * scale\r\n  ].join(',') +\r\n  ')';\r\n\r\n  setTransform(this._overlayRoot, matrix);\r\n};\r\n\r\n\r\nOverlays.prototype._getOverlayContainer = function(element, raw) {\r\n  var container = find(this._overlayContainers, function(c) {\r\n    return c.element === element;\r\n  });\r\n\r\n\r\n  if (!container && !raw) {\r\n    return this._createOverlayContainer(element);\r\n  }\r\n\r\n  return container;\r\n};\r\n\r\n\r\nOverlays.prototype._addOverlay = function(overlay) {\r\n\r\n  var id = overlay.id,\r\n      element = overlay.element,\r\n      html = overlay.html,\r\n      htmlContainer,\r\n      overlayContainer;\r\n\r\n  // unwrap jquery (for those who need it)\r\n  if (html.get && html.constructor.prototype.jquery) {\r\n    html = html.get(0);\r\n  }\r\n\r\n  // create proper html elements from\r\n  // overlay HTML strings\r\n  if (isString(html)) {\r\n    html = domify(html);\r\n  }\r\n\r\n  overlayContainer = this._getOverlayContainer(element);\r\n\r\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\r\n\r\n  htmlContainer.appendChild(html);\r\n\r\n  if (overlay.type) {\r\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\r\n  }\r\n\r\n  overlay.htmlContainer = htmlContainer;\r\n\r\n  overlayContainer.overlays.push(overlay);\r\n  overlayContainer.html.appendChild(htmlContainer);\r\n\r\n  this._overlays[id] = overlay;\r\n\r\n  this._updateOverlay(overlay);\r\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\r\n};\r\n\r\n\r\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\r\n  var show = overlay.show,\r\n      minZoom = show && show.minZoom,\r\n      maxZoom = show && show.maxZoom,\r\n      htmlContainer = overlay.htmlContainer,\r\n      visible = true;\r\n\r\n  if (show) {\r\n    if (\r\n      (isDefined(minZoom) && minZoom > viewbox.scale) ||\r\n      (isDefined(maxZoom) && maxZoom < viewbox.scale)\r\n    ) {\r\n      visible = false;\r\n    }\r\n\r\n    setVisible(htmlContainer, visible);\r\n  }\r\n\r\n  this._updateOverlayScale(overlay, viewbox);\r\n};\r\n\r\n\r\nOverlays.prototype._updateOverlayScale = function(overlay, viewbox) {\r\n  var shouldScale = overlay.scale,\r\n      minScale,\r\n      maxScale,\r\n      htmlContainer = overlay.htmlContainer;\r\n\r\n  var scale, transform = '';\r\n\r\n  if (shouldScale !== true) {\r\n\r\n    if (shouldScale === false) {\r\n      minScale = 1;\r\n      maxScale = 1;\r\n    } else {\r\n      minScale = shouldScale.min;\r\n      maxScale = shouldScale.max;\r\n    }\r\n\r\n    if (isDefined(minScale) && viewbox.scale < minScale) {\r\n      scale = (1 / viewbox.scale || 1) * minScale;\r\n    }\r\n\r\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\r\n      scale = (1 / viewbox.scale || 1) * maxScale;\r\n    }\r\n  }\r\n\r\n  if (isDefined(scale)) {\r\n    transform = 'scale(' + scale + ',' + scale + ')';\r\n  }\r\n\r\n  setTransform(htmlContainer, transform);\r\n};\r\n\r\n\r\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\r\n\r\n  var self = this;\r\n\r\n  forEach(this._overlays, function(overlay) {\r\n    self._updateOverlayVisibilty(overlay, viewbox);\r\n  });\r\n};\r\n\r\n\r\nOverlays.prototype._init = function() {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  var self = this;\r\n\r\n\r\n  // scroll/zoom integration\r\n\r\n  function updateViewbox(viewbox) {\r\n    self._updateRoot(viewbox);\r\n    self._updateOverlaysVisibilty(viewbox);\r\n\r\n    self.show();\r\n  }\r\n\r\n  eventBus.on('canvas.viewbox.changing', function(event) {\r\n    self.hide();\r\n  });\r\n\r\n  eventBus.on('canvas.viewbox.changed', function(event) {\r\n    updateViewbox(event.viewbox);\r\n  });\r\n\r\n\r\n  // remove integration\r\n\r\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\r\n    var element = e.element;\r\n    var overlays = self.get({ element: element });\r\n\r\n    forEach(overlays, function(o) {\r\n      self.remove(o.id);\r\n    });\r\n\r\n    var container = self._getOverlayContainer(element);\r\n\r\n    if (container) {\r\n      domRemove(container.html);\r\n      var i = self._overlayContainers.indexOf(container);\r\n      if (i !== -1) {\r\n        self._overlayContainers.splice(i, 1);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  // move integration\r\n\r\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\r\n    var element = e.element;\r\n\r\n    var container = self._getOverlayContainer(element, true);\r\n\r\n    if (container) {\r\n      forEach(container.overlays, function(overlay) {\r\n        self._updateOverlay(overlay);\r\n      });\r\n\r\n      self._updateOverlayContainer(container);\r\n    }\r\n  });\r\n\r\n\r\n  // marker integration, simply add them on the overlays as classes, too.\r\n\r\n  eventBus.on('element.marker.update', function(e) {\r\n    var container = self._getOverlayContainer(e.element, true);\r\n    if (container) {\r\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\r\n    }\r\n  });\r\n\r\n\r\n  // clear overlays with diagram\r\n\r\n  eventBus.on('diagram.clear', this.clear, this);\r\n};\r\n\r\n\r\n\r\n// helpers /////////////////////////////\r\n\r\nfunction createRoot(parentNode) {\r\n  var root = domify(\r\n    '<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />'\r\n  );\r\n\r\n  parentNode.insertBefore(root, parentNode.firstChild);\r\n\r\n  return root;\r\n}\r\n\r\nfunction setPosition(el, x, y) {\r\n  assign(el.style, { left: x + 'px', top: y + 'px' });\r\n}\r\n\r\nfunction setVisible(el, visible) {\r\n  el.style.display = visible === false ? 'none' : '';\r\n}\r\n\r\nfunction setTransform(el, transform) {\r\n\r\n  el.style['transform-origin'] = 'top left';\r\n\r\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\r\n    el.style[prefix + 'transform'] = transform;\r\n  });\r\n}","import Overlays from './Overlays';\r\n\r\nexport default {\r\n  __init__: [ 'overlays' ],\r\n  overlays: [ 'type', Overlays ]\r\n};","import {\r\n  isFunction,\r\n  isArray,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  query as domQuery,\r\n  attr as domAttr,\r\n  clear as domClear,\r\n  classes as domClasses,\r\n  matches as domMatches,\r\n  delegate as domDelegate,\r\n  event as domEvent\r\n} from 'min-dom';\r\n\r\n\r\nvar TOGGLE_SELECTOR = '.djs-palette-toggle',\r\n    ENTRY_SELECTOR = '.entry',\r\n    ELEMENT_SELECTOR = TOGGLE_SELECTOR + ', ' + ENTRY_SELECTOR;\r\n\r\nvar PALETTE_OPEN_CLS = 'open',\r\n    PALETTE_TWO_COLUMN_CLS = 'two-column';\r\n\r\n\r\n/**\r\n * A palette containing modeling elements.\r\n */\r\nexport default function Palette(eventBus, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  this._providers = [];\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('tool-manager.update', function(event) {\r\n    var tool = event.tool;\r\n\r\n    self.updateToolHighlight(tool);\r\n  });\r\n\r\n  eventBus.on('i18n.changed', function() {\r\n    self._update();\r\n  });\r\n\r\n  eventBus.on('diagram.init', function() {\r\n\r\n    self._diagramInitialized = true;\r\n\r\n    // initialize + update once diagram is ready\r\n    if (self._providers.length) {\r\n      self._init();\r\n\r\n      self._update();\r\n    }\r\n  });\r\n}\r\n\r\nPalette.$inject = [ 'eventBus', 'canvas' ];\r\n\r\n\r\n/**\r\n * Register a provider with the palette\r\n *\r\n * @param  {PaletteProvider} provider\r\n */\r\nPalette.prototype.registerProvider = function(provider) {\r\n  this._providers.push(provider);\r\n\r\n  // postpone init / update until diagram is initialized\r\n  if (!this._diagramInitialized) {\r\n    return;\r\n  }\r\n\r\n  if (!this._container) {\r\n    this._init();\r\n  }\r\n\r\n  this._update();\r\n};\r\n\r\n\r\n/**\r\n * Returns the palette entries for a given element\r\n *\r\n * @return {Array<PaletteEntryDescriptor>} list of entries\r\n */\r\nPalette.prototype.getEntries = function() {\r\n\r\n  var entries = {};\r\n\r\n  // loop through all providers and their entries.\r\n  // group entries by id so that overriding an entry is possible\r\n  forEach(this._providers, function(provider) {\r\n    var e = provider.getPaletteEntries();\r\n\r\n    forEach(e, function(entry, id) {\r\n      entries[id] = entry;\r\n    });\r\n  });\r\n\r\n  return entries;\r\n};\r\n\r\n\r\n/**\r\n * Initialize\r\n */\r\nPalette.prototype._init = function() {\r\n  var canvas = this._canvas,\r\n      eventBus = this._eventBus;\r\n\r\n  var parent = canvas.getContainer(),\r\n      container = this._container = domify(Palette.HTML_MARKUP),\r\n      self = this;\r\n\r\n  parent.appendChild(container);\r\n\r\n  domDelegate.bind(container, ELEMENT_SELECTOR, 'click', function(event) {\r\n\r\n    var target = event.delegateTarget;\r\n\r\n    if (domMatches(target, TOGGLE_SELECTOR)) {\r\n      return self.toggle();\r\n    }\r\n\r\n    self.trigger('click', event);\r\n  });\r\n\r\n  // prevent drag propagation\r\n  domEvent.bind(container, 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  // prevent drag propagation\r\n  domDelegate.bind(container, ENTRY_SELECTOR, 'dragstart', function(event) {\r\n    self.trigger('dragstart', event);\r\n  });\r\n\r\n  eventBus.on('canvas.resized', this._layoutChanged, this);\r\n\r\n  eventBus.fire('palette.create', {\r\n    container: container\r\n  });\r\n};\r\n\r\n/**\r\n * Update palette state.\r\n *\r\n * @param  {Object} [state] { open, twoColumn }\r\n */\r\nPalette.prototype._toggleState = function(state) {\r\n\r\n  state = state || {};\r\n\r\n  var parent = this._getParentContainer(),\r\n      container = this._container;\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  var twoColumn;\r\n\r\n  var cls = domClasses(container);\r\n\r\n  if ('twoColumn' in state) {\r\n    twoColumn = state.twoColumn;\r\n  } else {\r\n    twoColumn = this._needsCollapse(parent.clientHeight, this._entries || {});\r\n  }\r\n\r\n  // always update two column\r\n  cls.toggle(PALETTE_TWO_COLUMN_CLS, twoColumn);\r\n\r\n  if ('open' in state) {\r\n    cls.toggle(PALETTE_OPEN_CLS, state.open);\r\n  }\r\n\r\n  eventBus.fire('palette.changed', {\r\n    twoColumn: twoColumn,\r\n    open: this.isOpen()\r\n  });\r\n};\r\n\r\nPalette.prototype._update = function() {\r\n\r\n  var entriesContainer = domQuery('.djs-palette-entries', this._container),\r\n      entries = this._entries = this.getEntries();\r\n\r\n  domClear(entriesContainer);\r\n\r\n  forEach(entries, function(entry, id) {\r\n\r\n    var grouping = entry.group || 'default';\r\n\r\n    var container = domQuery('[data-group=' + grouping + ']', entriesContainer);\r\n    if (!container) {\r\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\r\n      entriesContainer.appendChild(container);\r\n    }\r\n\r\n    var html = entry.html || (\r\n      entry.separator ?\r\n        '<hr class=\"separator\" />' :\r\n        '<div class=\"entry\" draggable=\"true\"></div>');\r\n\r\n\r\n    var control = domify(html);\r\n    container.appendChild(control);\r\n\r\n    if (!entry.separator) {\r\n      domAttr(control, 'data-action', id);\r\n\r\n      if (entry.title) {\r\n        domAttr(control, 'title', entry.title);\r\n      }\r\n\r\n      if (entry.className) {\r\n        addClasses(control, entry.className);\r\n      }\r\n\r\n      if (entry.imageUrl) {\r\n        control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\r\n      }\r\n    }\r\n  });\r\n\r\n  // open after update\r\n  this.open();\r\n};\r\n\r\n\r\n/**\r\n * Trigger an action available on the palette\r\n *\r\n * @param  {String} action\r\n * @param  {Event} event\r\n */\r\nPalette.prototype.trigger = function(action, event, autoActivate) {\r\n  var entries = this._entries,\r\n      entry,\r\n      handler,\r\n      originalEvent,\r\n      button = event.delegateTarget || event.target;\r\n\r\n  if (!button) {\r\n    return event.preventDefault();\r\n  }\r\n\r\n  entry = entries[domAttr(button, 'data-action')];\r\n\r\n  // when user clicks on the palette and not on an action\r\n  if (!entry) {\r\n    return;\r\n  }\r\n\r\n  handler = entry.action;\r\n\r\n  originalEvent = event.originalEvent || event;\r\n\r\n  // simple action (via callback function)\r\n  if (isFunction(handler)) {\r\n    if (action === 'click') {\r\n      handler(originalEvent, autoActivate);\r\n    }\r\n  } else {\r\n    if (handler[action]) {\r\n      handler[action](originalEvent, autoActivate);\r\n    }\r\n  }\r\n\r\n  // silence other actions\r\n  event.preventDefault();\r\n};\r\n\r\nPalette.prototype._layoutChanged = function() {\r\n  this._toggleState({});\r\n};\r\n\r\n/**\r\n * Do we need to collapse to two columns?\r\n *\r\n * @param {Number} availableHeight\r\n * @param {Object} entries\r\n *\r\n * @return {Boolean}\r\n */\r\nPalette.prototype._needsCollapse = function(availableHeight, entries) {\r\n\r\n  // top margin + bottom toggle + bottom margin\r\n  // implementors must override this method if they\r\n  // change the palette styles\r\n  var margin = 20 + 10 + 20;\r\n\r\n  var entriesHeight = Object.keys(entries).length * 46;\r\n\r\n  return availableHeight < entriesHeight + margin;\r\n};\r\n\r\n/**\r\n * Close the palette\r\n */\r\nPalette.prototype.close = function() {\r\n\r\n  this._toggleState({\r\n    open: false,\r\n    twoColumn: false\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Open the palette\r\n */\r\nPalette.prototype.open = function() {\r\n  this._toggleState({ open: true });\r\n};\r\n\r\n\r\nPalette.prototype.toggle = function(open) {\r\n  if (this.isOpen()) {\r\n    this.close();\r\n  } else {\r\n    this.open();\r\n  }\r\n};\r\n\r\nPalette.prototype.isActiveTool = function(tool) {\r\n  return tool && this._activeTool === tool;\r\n};\r\n\r\nPalette.prototype.updateToolHighlight = function(name) {\r\n  var entriesContainer,\r\n      toolsContainer;\r\n\r\n  if (!this._toolsContainer) {\r\n    entriesContainer = domQuery('.djs-palette-entries', this._container);\r\n\r\n    this._toolsContainer = domQuery('[data-group=tools]', entriesContainer);\r\n  }\r\n\r\n  toolsContainer = this._toolsContainer;\r\n\r\n  forEach(toolsContainer.children, function(tool) {\r\n    var actionName = tool.getAttribute('data-action');\r\n\r\n    if (!actionName) {\r\n      return;\r\n    }\r\n\r\n    var toolClasses = domClasses(tool);\r\n\r\n    actionName = actionName.replace('-tool', '');\r\n\r\n    if (toolClasses.contains('entry') && actionName === name) {\r\n      toolClasses.add('highlighted-entry');\r\n    } else {\r\n      toolClasses.remove('highlighted-entry');\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Return true if the palette is opened.\r\n *\r\n * @example\r\n *\r\n * palette.open();\r\n *\r\n * if (palette.isOpen()) {\r\n *   // yes, we are open\r\n * }\r\n *\r\n * @return {boolean} true if palette is opened\r\n */\r\nPalette.prototype.isOpen = function() {\r\n  return domClasses(this._container).has(PALETTE_OPEN_CLS);\r\n};\r\n\r\n/**\r\n * Get container the palette lives in.\r\n *\r\n * @return {Element}\r\n */\r\nPalette.prototype._getParentContainer = function() {\r\n  return this._canvas.getContainer();\r\n};\r\n\r\n\r\n/* markup definition */\r\n\r\nPalette.HTML_MARKUP =\r\n  '<div class=\"djs-palette\">' +\r\n    '<div class=\"djs-palette-entries\"></div>' +\r\n    '<div class=\"djs-palette-toggle\"></div>' +\r\n  '</div>';\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction addClasses(element, classNames) {\r\n\r\n  var classes = domClasses(element);\r\n\r\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\r\n  actualClassNames.forEach(function(cls) {\r\n    classes.add(cls);\r\n  });\r\n}\r\n","import Palette from './Palette';\r\n\r\nexport default {\r\n  __init__: [ 'palette' ],\r\n  palette: [ 'type', Palette ]\r\n};\r\n","import {\r\n  forEach,\r\n  assign,\r\n  find,\r\n  matchPattern,\r\n  isDefined\r\n} from 'min-dash';\r\n\r\nimport {\r\n  delegate as domDelegate,\r\n  domify as domify,\r\n  classes as domClasses,\r\n  attr as domAttr,\r\n  remove as domRemove\r\n} from 'min-dom';\r\n\r\nvar DATA_REF = 'data-id';\r\n\r\n\r\n/**\r\n * A popup menu that can be used to display a list of actions anywhere in the canvas.\r\n *\r\n * @param {Object} config\r\n * @param {Boolean|Object} [config.scale={ min: 1.0, max: 1.5 }]\r\n * @param {Number} [config.scale.min]\r\n * @param {Number} [config.scale.max]\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n *\r\n * @class\r\n * @constructor\r\n */\r\nexport default function PopupMenu(config, eventBus, canvas) {\r\n\r\n  var scale = isDefined(config && config.scale) ? config.scale : {\r\n    min: 1,\r\n    max: 1.5\r\n  };\r\n\r\n  this._config = {\r\n    scale: scale\r\n  };\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._providers = {};\r\n  this._current = {};\r\n}\r\n\r\nPopupMenu.$inject = [\r\n  'config.popupMenu',\r\n  'eventBus',\r\n  'canvas'\r\n];\r\n\r\n/**\r\n * Registers a popup menu provider\r\n *\r\n * @param  {String} id\r\n * @param  {Object} provider\r\n *\r\n * @example\r\n *\r\n * popupMenu.registerProvider('myMenuID', {\r\n *   getEntries: function(element) {\r\n *     return [\r\n *       {\r\n *         id: 'entry-1',\r\n *         label: 'My Entry',\r\n *         action: 'alert(\"I have been clicked!\")'\r\n *       }\r\n *     ];\r\n *   }\r\n * });\r\n */\r\nPopupMenu.prototype.registerProvider = function(id, provider) {\r\n  this._providers[id] = provider;\r\n};\r\n\r\n\r\n/**\r\n * Determine if the popup menu has entries.\r\n *\r\n * @return {Boolean} true if empty\r\n */\r\nPopupMenu.prototype.isEmpty = function(element, providerId) {\r\n  if (!element) {\r\n    throw new Error('element parameter is missing');\r\n  }\r\n\r\n  if (!providerId) {\r\n    throw new Error('providerId parameter is missing');\r\n  }\r\n\r\n  var provider = this._providers[providerId];\r\n\r\n  var entries = provider.getEntries(element),\r\n      headerEntries = provider.getHeaderEntries && provider.getHeaderEntries(element);\r\n\r\n  var hasEntries = entries.length > 0,\r\n      hasHeaderEntries = headerEntries && headerEntries.length > 0;\r\n\r\n  return !hasEntries && !hasHeaderEntries;\r\n};\r\n\r\n\r\n/**\r\n * Create entries and open popup menu at given position\r\n *\r\n * @param  {Object} element\r\n * @param  {String} id provider id\r\n * @param  {Object} position\r\n *\r\n * @return {Object} popup menu instance\r\n */\r\nPopupMenu.prototype.open = function(element, id, position) {\r\n\r\n  var provider = this._providers[id];\r\n\r\n  if (!element) {\r\n    throw new Error('Element is missing');\r\n  }\r\n\r\n  if (!provider) {\r\n    throw new Error('Provider is not registered: ' + id);\r\n  }\r\n\r\n  if (!position) {\r\n    throw new Error('the position argument is missing');\r\n  }\r\n\r\n  if (this.isOpen()) {\r\n    this.close();\r\n  }\r\n\r\n  this._emit('open');\r\n\r\n  var current = this._current = {\r\n    provider: provider,\r\n    className: id,\r\n    element: element,\r\n    position: position\r\n  };\r\n\r\n  if (provider.getHeaderEntries) {\r\n    current.headerEntries = provider.getHeaderEntries(element);\r\n  }\r\n\r\n  current.entries = provider.getEntries(element);\r\n\r\n  current.container = this._createContainer();\r\n\r\n  var headerEntries = current.headerEntries || [],\r\n      entries = current.entries || [];\r\n\r\n  if (headerEntries.length) {\r\n    current.container.appendChild(\r\n      this._createEntries(current.headerEntries, 'djs-popup-header')\r\n    );\r\n  }\r\n\r\n  if (entries.length) {\r\n    current.container.appendChild(\r\n      this._createEntries(current.entries, 'djs-popup-body')\r\n    );\r\n  }\r\n\r\n  var canvas = this._canvas,\r\n      parent = canvas.getContainer();\r\n\r\n  this._attachContainer(current.container, parent, position.cursor);\r\n};\r\n\r\n\r\n/**\r\n * Removes the popup menu and unbinds the event handlers.\r\n */\r\nPopupMenu.prototype.close = function() {\r\n\r\n  if (!this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._emit('close');\r\n\r\n  this._unbindHandlers();\r\n  domRemove(this._current.container);\r\n  this._current.container = null;\r\n};\r\n\r\n\r\n/**\r\n * Determine if an open popup menu exist.\r\n *\r\n * @return {Boolean} true if open\r\n */\r\nPopupMenu.prototype.isOpen = function() {\r\n  return !!this._current.container;\r\n};\r\n\r\n\r\n/**\r\n * Trigger an action associated with an entry.\r\n *\r\n * @param {Object} event\r\n *\r\n * @return the result of the action callback, if any\r\n */\r\nPopupMenu.prototype.trigger = function(event) {\r\n\r\n  // silence other actions\r\n  event.preventDefault();\r\n\r\n  var element = event.delegateTarget || event.target,\r\n      entryId = domAttr(element, DATA_REF);\r\n\r\n  var entry = this._getEntry(entryId);\r\n\r\n  if (entry.action) {\r\n    return entry.action.call(null, event, entry);\r\n  }\r\n};\r\n\r\n/**\r\n * Gets an entry instance (either entry or headerEntry) by id.\r\n *\r\n * @param  {String} entryId\r\n *\r\n * @return {Object} entry instance\r\n */\r\nPopupMenu.prototype._getEntry = function(entryId) {\r\n\r\n  var search = matchPattern({ id: entryId });\r\n\r\n  var entry = find(this._current.entries, search) || find(this._current.headerEntries, search);\r\n\r\n  if (!entry) {\r\n    throw new Error('entry not found');\r\n  }\r\n\r\n  return entry;\r\n};\r\n\r\nPopupMenu.prototype._emit = function(eventName) {\r\n  this._eventBus.fire('popupMenu.' + eventName);\r\n};\r\n\r\n/**\r\n * Creates the popup menu container.\r\n *\r\n * @return {Object} a DOM container\r\n */\r\nPopupMenu.prototype._createContainer = function() {\r\n  var container = domify('<div class=\"djs-popup\">'),\r\n      position = this._current.position,\r\n      className = this._current.className;\r\n\r\n  assign(container.style, {\r\n    position: 'absolute',\r\n    left: position.x + 'px',\r\n    top: position.y + 'px',\r\n    visibility: 'hidden'\r\n  });\r\n\r\n  domClasses(container).add(className);\r\n\r\n  return container;\r\n};\r\n\r\n\r\n/**\r\n * Attaches the container to the DOM and binds the event handlers.\r\n *\r\n * @param {Object} container\r\n * @param {Object} parent\r\n */\r\nPopupMenu.prototype._attachContainer = function(container, parent, cursor) {\r\n  var self = this;\r\n\r\n  // Event handler\r\n  domDelegate.bind(container, '.entry' ,'click', function(event) {\r\n    self.trigger(event);\r\n  });\r\n\r\n  this._updateScale(container);\r\n\r\n  // Attach to DOM\r\n  parent.appendChild(container);\r\n\r\n  if (cursor) {\r\n    this._assureIsInbounds(container, cursor);\r\n  }\r\n\r\n  // Add Handler\r\n  this._bindHandlers();\r\n};\r\n\r\n\r\n/**\r\n * Updates popup style.transform with respect to the config and zoom level.\r\n *\r\n * @method _updateScale\r\n *\r\n * @param {Object} container\r\n */\r\nPopupMenu.prototype._updateScale = function(container) {\r\n  var zoom = this._canvas.zoom();\r\n\r\n  var scaleConfig = this._config.scale,\r\n      minScale,\r\n      maxScale,\r\n      scale = zoom;\r\n\r\n  if (scaleConfig !== true) {\r\n\r\n    if (scaleConfig === false) {\r\n      minScale = 1;\r\n      maxScale = 1;\r\n    } else {\r\n      minScale = scaleConfig.min;\r\n      maxScale = scaleConfig.max;\r\n    }\r\n\r\n    if (isDefined(minScale) && zoom < minScale) {\r\n      scale = minScale;\r\n    }\r\n\r\n    if (isDefined(maxScale) && zoom > maxScale) {\r\n      scale = maxScale;\r\n    }\r\n\r\n  }\r\n\r\n  setTransform(container, 'scale(' + scale + ')');\r\n};\r\n\r\n\r\n/**\r\n * Make sure that the menu is always fully shown\r\n *\r\n * @method function\r\n *\r\n * @param  {Object} container\r\n * @param  {Position} cursor {x, y}\r\n */\r\nPopupMenu.prototype._assureIsInbounds = function(container, cursor) {\r\n  var canvas = this._canvas,\r\n      clientRect = canvas._container.getBoundingClientRect();\r\n\r\n  var containerX = container.offsetLeft,\r\n      containerY = container.offsetTop,\r\n      containerWidth = container.scrollWidth,\r\n      containerHeight = container.scrollHeight,\r\n      overAxis = {},\r\n      left, top;\r\n\r\n  var cursorPosition = {\r\n    x: cursor.x - clientRect.left,\r\n    y: cursor.y - clientRect.top\r\n  };\r\n\r\n  if (containerX + containerWidth > clientRect.width) {\r\n    overAxis.x = true;\r\n  }\r\n\r\n  if (containerY + containerHeight > clientRect.height) {\r\n    overAxis.y = true;\r\n  }\r\n\r\n  if (overAxis.x && overAxis.y) {\r\n    left = cursorPosition.x - containerWidth + 'px';\r\n    top = cursorPosition.y - containerHeight + 'px';\r\n  } else if (overAxis.x) {\r\n    left = cursorPosition.x - containerWidth + 'px';\r\n    top = cursorPosition.y + 'px';\r\n  } else if (overAxis.y && cursorPosition.y < containerHeight) {\r\n    left = cursorPosition.x + 'px';\r\n    top = 10 + 'px';\r\n  } else if (overAxis.y) {\r\n    left = cursorPosition.x + 'px';\r\n    top = cursorPosition.y - containerHeight + 'px';\r\n  }\r\n\r\n  assign(container.style, { left: left, top: top }, { visibility: 'visible', 'z-index': 1000 });\r\n};\r\n\r\n\r\n/**\r\n * Creates a list of entries and returns them as a DOM container.\r\n *\r\n * @param {Array<Object>} entries an array of entry objects\r\n * @param {String} className the class name of the entry container\r\n *\r\n * @return {Object} a DOM container\r\n */\r\nPopupMenu.prototype._createEntries = function(entries, className) {\r\n\r\n  var entriesContainer = domify('<div>'),\r\n      self = this;\r\n\r\n  domClasses(entriesContainer).add(className);\r\n\r\n  forEach(entries, function(entry) {\r\n    var entryContainer = self._createEntry(entry, entriesContainer);\r\n    entriesContainer.appendChild(entryContainer);\r\n  });\r\n\r\n  return entriesContainer;\r\n};\r\n\r\n\r\n/**\r\n * Creates a single entry and returns it as a DOM container.\r\n *\r\n * @param  {Object} entry\r\n *\r\n * @return {Object} a DOM container\r\n */\r\nPopupMenu.prototype._createEntry = function(entry) {\r\n\r\n  if (!entry.id) {\r\n    throw new Error ('every entry must have the id property set');\r\n  }\r\n\r\n  var entryContainer = domify('<div>'),\r\n      entryClasses = domClasses(entryContainer);\r\n\r\n  entryClasses.add('entry');\r\n\r\n  if (entry.className) {\r\n    entry.className.split(' ').forEach(function(className) {\r\n      entryClasses.add(className);\r\n    });\r\n  }\r\n\r\n  domAttr(entryContainer, DATA_REF, entry.id);\r\n\r\n  if (entry.label) {\r\n    var label = domify('<span>');\r\n    label.textContent = entry.label;\r\n    entryContainer.appendChild(label);\r\n  }\r\n\r\n  if (entry.imageUrl) {\r\n    entryContainer.appendChild(domify('<img src=\"' + entry.imageUrl + '\" />'));\r\n  }\r\n\r\n  if (entry.active === true) {\r\n    entryClasses.add('active');\r\n  }\r\n\r\n  if (entry.disabled === true) {\r\n    entryClasses.add('disabled');\r\n  }\r\n\r\n  if (entry.title) {\r\n    entryContainer.title = entry.title;\r\n  }\r\n\r\n  return entryContainer;\r\n};\r\n\r\n\r\n/**\r\n * Binds the `close` method to 'contextPad.close' & 'canvas.viewbox.changed'.\r\n */\r\nPopupMenu.prototype._bindHandlers = function() {\r\n\r\n  var eventBus = this._eventBus,\r\n      self = this;\r\n\r\n  function close() {\r\n    self.close();\r\n  }\r\n\r\n  eventBus.once('contextPad.close', close);\r\n  eventBus.once('canvas.viewbox.changing', close);\r\n  eventBus.once('commandStack.changed', close);\r\n};\r\n\r\n\r\n/**\r\n * Unbinds the `close` method to 'contextPad.close' & 'canvas.viewbox.changing'.\r\n */\r\nPopupMenu.prototype._unbindHandlers = function() {\r\n\r\n  var eventBus = this._eventBus,\r\n      self = this;\r\n\r\n  function close() {\r\n    self.close();\r\n  }\r\n\r\n  eventBus.off('contextPad.close', close);\r\n  eventBus.off('canvas.viewbox.changed', close);\r\n  eventBus.off('commandStack.changed', close);\r\n};\r\n\r\n\r\n\r\n// helpers /////////////////////////////\r\n\r\nfunction setTransform(element, transform) {\r\n  element.style['transform-origin'] = 'top left';\r\n\r\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\r\n    element.style[prefix + 'transform'] = transform;\r\n  });\r\n}","import PopupMenu from './PopupMenu';\r\n\r\nexport default {\r\n  __init__: [ 'popupMenu' ],\r\n  popupMenu: [ 'type', PopupMenu ]\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  clone as svgClone,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * Adds support for previews of moving/resizing elements.\r\n */\r\nexport default function PreviewSupport(elementRegistry, canvas, styles) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._canvas = canvas;\r\n  this._styles = styles;\r\n}\r\n\r\nPreviewSupport.$inject = [\r\n  'elementRegistry',\r\n  'canvas',\r\n  'styles'\r\n];\r\n\r\n\r\n/**\r\n * Returns graphics of an element.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {SVGElement}\r\n */\r\nPreviewSupport.prototype.getGfx = function(element) {\r\n  return this._elementRegistry.getGraphics(element);\r\n};\r\n\r\n/**\r\n * Adds a move preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n *\r\n * @return {SVGElement} dragger\r\n */\r\nPreviewSupport.prototype.addDragger = function(shape, group) {\r\n  var gfx = this.getGfx(shape);\r\n\r\n  // clone is not included in tsvg for some reason\r\n  var dragger = svgClone(gfx);\r\n  var bbox = gfx.getBoundingClientRect();\r\n\r\n  // remove markers from connections\r\n  if (isConnection(shape)) {\r\n    removeMarkers(dragger);\r\n  }\r\n\r\n  svgAttr(dragger, this._styles.cls('djs-dragger', [], {\r\n    x: bbox.top,\r\n    y: bbox.left\r\n  }));\r\n\r\n  svgAppend(group, dragger);\r\n\r\n  return dragger;\r\n};\r\n\r\n/**\r\n * Adds a resize preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n *\r\n * @return {SVGElement} frame\r\n */\r\nPreviewSupport.prototype.addFrame = function(shape, group) {\r\n\r\n  var frame = svgCreate('rect', {\r\n    class: 'djs-resize-overlay',\r\n    width:  shape.width,\r\n    height: shape.height,\r\n    x: shape.x,\r\n    y: shape.y\r\n  });\r\n\r\n  svgAppend(group, frame);\r\n\r\n  return frame;\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Removes all svg marker references from an SVG.\r\n *\r\n * @param {SVGElement} gfx\r\n */\r\nfunction removeMarkers(gfx) {\r\n\r\n  if (gfx.children) {\r\n\r\n    forEach(gfx.children, function(child) {\r\n\r\n      // recursion\r\n      removeMarkers(child);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  gfx.style.markerStart = '';\r\n  gfx.style.markerEnd = '';\r\n\r\n}\r\n\r\n/**\r\n * Checks if an element is a connection.\r\n */\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","import PreviewSupport from './PreviewSupport';\r\n\r\nexport default {\r\n  __init__: [ 'previewSupport' ],\r\n  previewSupport: [ 'type', PreviewSupport ]\r\n};\r\n","var round = Math.round;\r\n\r\n/**\r\n * Service that allow replacing of elements.\r\n */\r\nexport default function Replace(modeling) {\r\n\r\n  this._modeling = modeling;\r\n}\r\n\r\nReplace.$inject = [ 'modeling' ];\r\n\r\n/**\r\n * @param {Element} oldElement - Element to be replaced\r\n * @param {Object}  newElementData - Containing information about the new Element, for example height, width, type.\r\n * @param {Object}  options - Custom options that will be attached to the context. It can be used to inject data\r\n *                            that is needed in the command chain. For example it could be used in\r\n *                            eventbus.on('commandStack.shape.replace.postExecute') to change shape attributes after\r\n *                            shape creation.\r\n */\r\nReplace.prototype.replaceElement = function(oldElement, newElementData, options) {\r\n\r\n  var modeling = this._modeling;\r\n\r\n  var newElement = null;\r\n\r\n  if (oldElement.waypoints) {\r\n    // TODO\r\n    // modeling.replaceConnection\r\n  } else {\r\n    // set center of element for modeling API\r\n    // if no new width / height is given use old elements size\r\n    newElementData.x = round(oldElement.x + (newElementData.width || oldElement.width) / 2);\r\n    newElementData.y = round(oldElement.y + (newElementData.height || oldElement.height) / 2);\r\n\r\n    newElement = modeling.replaceShape(oldElement, newElementData, options);\r\n  }\r\n\r\n  return newElement;\r\n};\r\n","import Replace from './Replace';\r\n\r\nexport default {\r\n  __init__: [ 'replace' ],\r\n  replace: [ 'type', Replace ]\r\n};","import {\r\n  pick,\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  resizeBounds,\r\n  ensureConstraints,\r\n  computeChildrenBBox,\r\n  getMinResizeBounds\r\n} from './ResizeUtil';\r\n\r\nimport {\r\n  asTRBL,\r\n  roundBounds\r\n} from '../../layout/LayoutUtil';\r\n\r\nvar DEFAULT_MIN_WIDTH = 10;\r\n\r\n\r\n/**\r\n * A component that provides resizing of shapes on the canvas.\r\n *\r\n * The following components are part of shape resize:\r\n *\r\n *  * adding resize handles,\r\n *  * creating a visual during resize\r\n *  * checking resize rules\r\n *  * committing a change once finished\r\n *\r\n *\r\n * ## Customizing\r\n *\r\n * It's possible to customize the resizing behaviour by intercepting 'resize.start'\r\n * and providing the following parameters through the 'context':\r\n *\r\n *   * minDimensions ({ width, height }): minimum shape dimensions\r\n *\r\n *   * childrenBoxPadding ({ left, top, bottom, right } || number):\r\n *     gap between the minimum bounding box and the container\r\n *\r\n * f.ex:\r\n *\r\n * ```javascript\r\n * eventBus.on('resize.start', 1500, function(event) {\r\n *   var context = event.context,\r\n *\r\n *  context.minDimensions = { width: 140, height: 120 };\r\n *\r\n *  // Passing general padding\r\n *  context.childrenBoxPadding = 30;\r\n *\r\n *  // Passing padding to a specific side\r\n *  context.childrenBoxPadding.left = 20;\r\n * });\r\n * ```\r\n */\r\nexport default function Resize(eventBus, rules, modeling, dragging) {\r\n\r\n  this._dragging = dragging;\r\n  this._rules = rules;\r\n\r\n  var self = this;\r\n\r\n\r\n  /**\r\n   * Handle resize move by specified delta.\r\n   *\r\n   * @param {Object} context\r\n   * @param {Point delta\r\n   */\r\n  function handleMove(context, delta) {\r\n\r\n    var shape = context.shape,\r\n        direction = context.direction,\r\n        resizeConstraints = context.resizeConstraints,\r\n        newBounds;\r\n\r\n    context.delta = delta;\r\n\r\n    newBounds = resizeBounds(shape, direction, delta);\r\n\r\n    // ensure constraints during resize\r\n    context.newBounds = ensureConstraints(newBounds, resizeConstraints);\r\n\r\n    // update + cache executable state\r\n    context.canExecute = self.canResize(context);\r\n  }\r\n\r\n  /**\r\n   * Handle resize start.\r\n   *\r\n   * @param  {Object} context\r\n   */\r\n  function handleStart(context) {\r\n\r\n    var resizeConstraints = context.resizeConstraints,\r\n        // evaluate minBounds for backwards compatibility\r\n        minBounds = context.minBounds;\r\n\r\n    if (resizeConstraints !== undefined) {\r\n      return;\r\n    }\r\n\r\n    if (minBounds === undefined) {\r\n      minBounds = self.computeMinResizeBox(context);\r\n    }\r\n\r\n    context.resizeConstraints = {\r\n      min: asTRBL(minBounds)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle resize end.\r\n   *\r\n   * @param  {Object} context\r\n   */\r\n  function handleEnd(context) {\r\n    var shape = context.shape,\r\n        canExecute = context.canExecute,\r\n        newBounds = context.newBounds;\r\n\r\n    if (canExecute) {\r\n      // ensure we have actual pixel values for new bounds\r\n      // (important when zoom level was > 1 during move)\r\n      newBounds = roundBounds(newBounds);\r\n\r\n      // perform the actual resize\r\n      modeling.resizeShape(shape, newBounds);\r\n    }\r\n  }\r\n\r\n\r\n  eventBus.on('resize.start', function(event) {\r\n    handleStart(event.context);\r\n  });\r\n\r\n  eventBus.on('resize.move', function(event) {\r\n    var delta = {\r\n      x: event.dx,\r\n      y: event.dy\r\n    };\r\n\r\n    handleMove(event.context, delta);\r\n  });\r\n\r\n  eventBus.on('resize.end', function(event) {\r\n    handleEnd(event.context);\r\n  });\r\n\r\n}\r\n\r\n\r\nResize.prototype.canResize = function(context) {\r\n  var rules = this._rules;\r\n\r\n  var ctx = pick(context, [ 'newBounds', 'shape', 'delta', 'direction' ]);\r\n\r\n  return rules.allowed('shape.resize', ctx);\r\n};\r\n\r\n/**\r\n * Activate a resize operation.\r\n *\r\n * You may specify additional contextual information and must specify a\r\n * resize direction during activation of the resize event.\r\n *\r\n * @param {MouseEvent} event\r\n * @param {djs.model.Shape} shape\r\n * @param {Object|String} contextOrDirection\r\n */\r\nResize.prototype.activate = function(event, shape, contextOrDirection) {\r\n  var dragging = this._dragging,\r\n      context,\r\n      direction;\r\n\r\n  if (typeof contextOrDirection === 'string') {\r\n    contextOrDirection = {\r\n      direction: contextOrDirection\r\n    };\r\n  }\r\n\r\n  context = assign({ shape: shape }, contextOrDirection);\r\n\r\n  direction = context.direction;\r\n\r\n  if (!direction) {\r\n    throw new Error('must provide a direction (nw|se|ne|sw)');\r\n  }\r\n\r\n  dragging.init(event, 'resize', {\r\n    autoActivate: true,\r\n    cursor: 'resize-' + (/nw|se/.test(direction) ? 'nwse' : 'nesw'),\r\n    data: {\r\n      shape: shape,\r\n      context: context\r\n    }\r\n  });\r\n};\r\n\r\nResize.prototype.computeMinResizeBox = function(context) {\r\n  var shape = context.shape,\r\n      direction = context.direction,\r\n      minDimensions,\r\n      childrenBounds;\r\n\r\n  minDimensions = context.minDimensions || {\r\n    width: DEFAULT_MIN_WIDTH,\r\n    height: DEFAULT_MIN_WIDTH\r\n  };\r\n\r\n  // get children bounds\r\n  childrenBounds = computeChildrenBBox(shape, context.childrenBoxPadding);\r\n\r\n  // get correct minimum bounds from given resize direction\r\n  // basically ensures that the minBounds is max(childrenBounds, minDimensions)\r\n  return getMinResizeBounds(direction, shape, minDimensions, childrenBounds);\r\n};\r\n\r\n\r\nResize.$inject = [\r\n  'eventBus',\r\n  'rules',\r\n  'modeling',\r\n  'dragging'\r\n];","import {\r\n  bind,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nvar HANDLE_OFFSET = -2,\r\n    HANDLE_SIZE = 5,\r\n    HANDLE_HIT_SIZE = 20;\r\n\r\nvar CLS_RESIZER = 'djs-resizer';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  clear as svgClear,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  event as domEvent\r\n} from 'min-dom';\r\n\r\nimport {\r\n  isPrimaryButton\r\n} from '../../util/Mouse';\r\n\r\nimport {\r\n  asTRBL\r\n} from '../../layout/LayoutUtil';\r\n\r\nimport {\r\n  transform\r\n} from '../../util/SvgTransformUtil';\r\n\r\n\r\n/**\r\n * This component is responsible for adding resize handles.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {Selection} selection\r\n * @param {Resize} resize\r\n */\r\nexport default function ResizeHandles(eventBus, canvas, selection, resize) {\r\n\r\n  this._resize = resize;\r\n  this._canvas = canvas;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('selection.changed', function(e) {\r\n    var newSelection = e.newSelection;\r\n\r\n    // remove old selection markers\r\n    self.removeResizers();\r\n\r\n    // add new selection markers ONLY if single selection\r\n    if (newSelection.length === 1) {\r\n      forEach(newSelection, bind(self.addResizer, self));\r\n    }\r\n  });\r\n\r\n  eventBus.on('shape.changed', function(e) {\r\n    var shape = e.element;\r\n\r\n    if (selection.isSelected(shape)) {\r\n      self.removeResizers();\r\n\r\n      self.addResizer(shape);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nResizeHandles.prototype.makeDraggable = function(element, gfx, direction) {\r\n  var resize = this._resize;\r\n\r\n  function startResize(event) {\r\n    // only trigger on left mouse button\r\n    if (isPrimaryButton(event)) {\r\n      resize.activate(event, element, direction);\r\n    }\r\n  }\r\n\r\n  domEvent.bind(gfx, 'mousedown', startResize);\r\n  domEvent.bind(gfx, 'touchstart', startResize);\r\n};\r\n\r\n\r\nResizeHandles.prototype._createResizer = function(element, x, y, rotation, direction) {\r\n  var resizersParent = this._getResizersParent();\r\n\r\n  var group = svgCreate('g');\r\n  svgClasses(group).add(CLS_RESIZER);\r\n  svgClasses(group).add(CLS_RESIZER + '-' + element.id);\r\n  svgClasses(group).add(CLS_RESIZER + '-' + direction);\r\n\r\n  svgAppend(resizersParent, group);\r\n\r\n  var origin = -HANDLE_SIZE + HANDLE_OFFSET;\r\n\r\n  // Create four drag indicators on the outline\r\n  var visual = svgCreate('rect');\r\n  svgAttr(visual, {\r\n    x: origin,\r\n    y: origin,\r\n    width: HANDLE_SIZE,\r\n    height: HANDLE_SIZE\r\n  });\r\n  svgClasses(visual).add(CLS_RESIZER + '-visual');\r\n\r\n  svgAppend(group, visual);\r\n\r\n  var hit = svgCreate('rect');\r\n  svgAttr(hit, {\r\n    x: origin,\r\n    y: origin,\r\n    width: HANDLE_HIT_SIZE,\r\n    height: HANDLE_HIT_SIZE\r\n  });\r\n  svgClasses(hit).add(CLS_RESIZER + '-hit');\r\n\r\n  svgAppend(group, hit);\r\n\r\n  transform(group, x, y, rotation);\r\n\r\n  return group;\r\n};\r\n\r\nResizeHandles.prototype.createResizer = function(element, direction) {\r\n  var resizer;\r\n\r\n  var trbl = asTRBL(element);\r\n\r\n  if (direction === 'nw') {\r\n    resizer = this._createResizer(element, trbl.left, trbl.top, 0, direction);\r\n  } else if (direction === 'ne') {\r\n    resizer = this._createResizer(element, trbl.right, trbl.top, 90, direction);\r\n  } else if (direction === 'se') {\r\n    resizer = this._createResizer(element, trbl.right, trbl.bottom, 180, direction);\r\n  } else {\r\n    resizer = this._createResizer(element, trbl.left, trbl.bottom, 270, direction);\r\n  }\r\n\r\n  this.makeDraggable(element, resizer, direction);\r\n};\r\n\r\n// resize handles implementation ///////////////////////////////\r\n\r\n/**\r\n * Add resizers for a given element.\r\n *\r\n * @param {djs.model.Shape} shape\r\n */\r\nResizeHandles.prototype.addResizer = function(shape) {\r\n  var resize = this._resize;\r\n\r\n  if (!resize.canResize({ shape: shape })) {\r\n    return;\r\n  }\r\n\r\n  this.createResizer(shape, 'nw');\r\n  this.createResizer(shape, 'ne');\r\n  this.createResizer(shape, 'se');\r\n  this.createResizer(shape, 'sw');\r\n};\r\n\r\n/**\r\n * Remove all resizers\r\n */\r\nResizeHandles.prototype.removeResizers = function() {\r\n  var resizersParent = this._getResizersParent();\r\n\r\n  svgClear(resizersParent);\r\n};\r\n\r\nResizeHandles.prototype._getResizersParent = function() {\r\n  return this._canvas.getLayer('resizers');\r\n};\r\n\r\nResizeHandles.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'selection',\r\n  'resize'\r\n];\r\n","var MARKER_RESIZING = 'djs-resizing',\r\n    MARKER_RESIZE_NOT_OK = 'resize-not-ok';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\nimport {\r\n  attr as svgAttr,\r\n  remove as svgRemove,\r\n  classes as svgClasses\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * Provides previews for resizing shapes when resizing.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n * @param {PreviewSupport} previewSupport\r\n */\r\nexport default function ResizePreview(eventBus, canvas, previewSupport) {\r\n\r\n  /**\r\n   * Update resizer frame.\r\n   *\r\n   * @param {Object} context\r\n   */\r\n  function updateFrame(context) {\r\n\r\n    var shape = context.shape,\r\n        bounds = context.newBounds,\r\n        frame = context.frame;\r\n\r\n    if (!frame) {\r\n      frame = context.frame = previewSupport.addFrame(shape, canvas.getDefaultLayer());\r\n\r\n      canvas.addMarker(shape, MARKER_RESIZING);\r\n    }\r\n\r\n    if (bounds.width > 5) {\r\n      svgAttr(frame, { x: bounds.x, width: bounds.width });\r\n    }\r\n\r\n    if (bounds.height > 5) {\r\n      svgAttr(frame, { y: bounds.y, height: bounds.height });\r\n    }\r\n\r\n    if (context.canExecute) {\r\n      svgClasses(frame).remove(MARKER_RESIZE_NOT_OK);\r\n    } else {\r\n      svgClasses(frame).add(MARKER_RESIZE_NOT_OK);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove resizer frame.\r\n   *\r\n   * @param {Object} context\r\n   */\r\n  function removeFrame(context) {\r\n    var shape = context.shape,\r\n        frame = context.frame;\r\n\r\n    if (frame) {\r\n      svgRemove(context.frame);\r\n    }\r\n\r\n    canvas.removeMarker(shape, MARKER_RESIZING);\r\n  }\r\n\r\n  // add and update previews\r\n  eventBus.on('resize.move', LOW_PRIORITY, function(event) {\r\n    updateFrame(event.context);\r\n  });\r\n\r\n  // remove previews\r\n  eventBus.on('resize.cleanup', function(event) {\r\n    removeFrame(event.context);\r\n  });\r\n\r\n}\r\n\r\nResizePreview.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'previewSupport'\r\n];","import {\r\n  filter,\r\n  isNumber\r\n} from 'min-dash';\r\n\r\nvar max = Math.max,\r\n    min = Math.min;\r\n\r\nvar DEFAULT_CHILD_BOX_PADDING = 20;\r\n\r\nimport {\r\n  getBBox\r\n} from '../../util/Elements';\r\n\r\nimport {\r\n  asTRBL,\r\n  asBounds\r\n} from '../../layout/LayoutUtil';\r\n\r\n\r\n/**\r\n * Substract a TRBL from another\r\n *\r\n * @param  {TRBL} trblA\r\n * @param  {TRBL} trblB\r\n *\r\n * @return {TRBL}\r\n */\r\nexport function substractTRBL(trblA, trblB) {\r\n  return {\r\n    top: trblA.top - trblB.top,\r\n    right: trblA.right - trblB.right,\r\n    bottom: trblA.bottom - trblB.bottom,\r\n    left: trblA.left - trblB.left\r\n  };\r\n}\r\n\r\n/**\r\n * Resize the given bounds by the specified delta from a given anchor point.\r\n *\r\n * @param {Bounds} bounds the bounding box that should be resized\r\n * @param {String} direction in which the element is resized (nw, ne, se, sw)\r\n * @param {Point} delta of the resize operation\r\n *\r\n * @return {Bounds} resized bounding box\r\n */\r\nexport function resizeBounds(bounds, direction, delta) {\r\n\r\n  var dx = delta.x,\r\n      dy = delta.y;\r\n\r\n  switch (direction) {\r\n\r\n  case 'nw':\r\n    return {\r\n      x: bounds.x + dx,\r\n      y: bounds.y + dy,\r\n      width: bounds.width - dx,\r\n      height: bounds.height - dy\r\n    };\r\n\r\n  case 'sw':\r\n    return {\r\n      x: bounds.x + dx,\r\n      y: bounds.y,\r\n      width: bounds.width - dx,\r\n      height: bounds.height + dy\r\n    };\r\n\r\n  case 'ne':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y + dy,\r\n      width: bounds.width + dx,\r\n      height: bounds.height - dy\r\n    };\r\n\r\n  case 'se':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width + dx,\r\n      height: bounds.height + dy\r\n    };\r\n\r\n  default:\r\n    throw new Error('unrecognized direction: ' + direction);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Resize the given bounds by applying the passed\r\n * { top, right, bottom, left } delta.\r\n *\r\n * @param {Bounds} bounds\r\n * @param {TRBL} trblResize\r\n *\r\n * @return {Bounds}\r\n */\r\nexport function resizeTRBL(bounds, resize) {\r\n  return {\r\n    x: bounds.x + (resize.left || 0),\r\n    y: bounds.y + (resize.top || 0),\r\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\r\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\r\n  };\r\n}\r\n\r\n\r\nexport function reattachPoint(bounds, newBounds, point) {\r\n\r\n  var sx = bounds.width / newBounds.width,\r\n      sy = bounds.height / newBounds.height;\r\n\r\n  return {\r\n    x: Math.round((newBounds.x + newBounds.width / 2)) - Math.floor(((bounds.x + bounds.width / 2) - point.x) / sx),\r\n    y: Math.round((newBounds.y + newBounds.height / 2)) - Math.floor(((bounds.y + bounds.height / 2) - point.y) / sy)\r\n  };\r\n}\r\n\r\n\r\nfunction applyConstraints(attr, trbl, resizeConstraints) {\r\n\r\n  var value = trbl[attr],\r\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\r\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\r\n\r\n  if (isNumber(minValue)) {\r\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\r\n  }\r\n\r\n  if (isNumber(maxValue)) {\r\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nexport function ensureConstraints(currentBounds, resizeConstraints) {\r\n\r\n  if (!resizeConstraints) {\r\n    return currentBounds;\r\n  }\r\n\r\n  var currentTrbl = asTRBL(currentBounds);\r\n\r\n  return asBounds({\r\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\r\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\r\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\r\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\r\n  });\r\n}\r\n\r\n\r\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\r\n\r\n  var currentBox = asTRBL(currentBounds);\r\n\r\n  var minBox = {\r\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\r\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\r\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\r\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\r\n  };\r\n\r\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\r\n\r\n  var combinedBox = {\r\n    top: min(minBox.top, childrenBox.top),\r\n    left: min(minBox.left, childrenBox.left),\r\n    bottom: max(minBox.bottom, childrenBox.bottom),\r\n    right: max(minBox.right, childrenBox.right)\r\n  };\r\n\r\n  return asBounds(combinedBox);\r\n}\r\n\r\nfunction asPadding(mayBePadding, defaultValue) {\r\n  if (typeof mayBePadding !== 'undefined') {\r\n    return mayBePadding;\r\n  } else {\r\n    return DEFAULT_CHILD_BOX_PADDING;\r\n  }\r\n}\r\n\r\nexport function addPadding(bbox, padding) {\r\n  var left, right, top, bottom;\r\n\r\n  if (typeof padding === 'object') {\r\n    left = asPadding(padding.left);\r\n    right = asPadding(padding.right);\r\n    top = asPadding(padding.top);\r\n    bottom = asPadding(padding.bottom);\r\n  } else {\r\n    left = right = top = bottom = asPadding(padding);\r\n  }\r\n\r\n  return {\r\n    x: bbox.x - left,\r\n    y: bbox.y - top,\r\n    width: bbox.width + left + right,\r\n    height: bbox.height + top + bottom\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Is the given element part of the resize\r\n * targets min boundary box?\r\n *\r\n * This is the default implementation which excludes\r\n * connections and labels.\r\n *\r\n * @param {djs.model.Base} element\r\n */\r\nfunction isBBoxChild(element) {\r\n\r\n  // exclude connections\r\n  if (element.waypoints) {\r\n    return false;\r\n  }\r\n\r\n  // exclude labels\r\n  if (element.type === 'label') {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Return children bounding computed from a shapes children\r\n * or a list of prefiltered children.\r\n *\r\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\r\n * @param  {Number|Object} padding\r\n *\r\n * @return {Bounds}\r\n */\r\nexport function computeChildrenBBox(shapeOrChildren, padding) {\r\n\r\n  var elements;\r\n\r\n  // compute based on shape\r\n  if (shapeOrChildren.length === undefined) {\r\n    // grab all the children that are part of the\r\n    // parents children box\r\n    elements = filter(shapeOrChildren.children, isBBoxChild);\r\n\r\n  } else {\r\n    elements = shapeOrChildren;\r\n  }\r\n\r\n  if (elements.length) {\r\n    return addPadding(getBBox(elements), padding);\r\n  }\r\n}\r\n","import RulesModule from '../rules';\r\nimport DraggingModule from '../dragging';\r\nimport PreviewSupportModule from '../preview-support';\r\n\r\nimport Resize from './Resize';\r\nimport ResizePreview from './ResizePreview';\r\nimport ResizeHandles from './ResizeHandles';\r\n\r\nexport default {\r\n  __depends__: [\r\n    RulesModule,\r\n    DraggingModule,\r\n    PreviewSupportModule\r\n  ],\r\n  __init__: [\r\n    'resize',\r\n    'resizePreview',\r\n    'resizeHandles'\r\n  ],\r\n  resize: [ 'type', Resize ],\r\n  resizePreview: [ 'type', ResizePreview ],\r\n  resizeHandles: [ 'type', ResizeHandles ]\r\n};\r\n","import inherits from 'inherits';\r\n\r\nimport CommandInterceptor from '../../command/CommandInterceptor';\r\n\r\n/**\r\n * A basic provider that may be extended to implement modeling rules.\r\n *\r\n * Extensions should implement the init method to actually add their custom\r\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function RuleProvider(eventBus) {\r\n  CommandInterceptor.call(this, eventBus);\r\n\r\n  this.init();\r\n}\r\n\r\nRuleProvider.$inject = [ 'eventBus' ];\r\n\r\ninherits(RuleProvider, CommandInterceptor);\r\n\r\n\r\n/**\r\n * Adds a modeling rule for the given action, implemented through\r\n * a callback function.\r\n *\r\n * The function will receive the modeling specific action context\r\n * to perform its check. It must return `false` to disallow the\r\n * action from happening or `true` to allow the action.\r\n *\r\n * A rule provider may pass over the evaluation to lower priority\r\n * rules by returning return nothing (or <code>undefined</code>).\r\n *\r\n * @example\r\n *\r\n * ResizableRules.prototype.init = function() {\r\n *\r\n *   \\/**\r\n *    * Return `true`, `false` or nothing to denote\r\n *    * _allowed_, _not allowed_ and _continue evaluating_.\r\n *    *\\/\r\n *   this.addRule('shape.resize', function(context) {\r\n *\r\n *     var shape = context.shape;\r\n *\r\n *     if (!context.newBounds) {\r\n *       // check general resizability\r\n *       if (!shape.resizable) {\r\n *         return false;\r\n *       }\r\n *\r\n *       // not returning anything (read: undefined)\r\n *       // will continue the evaluation of other rules\r\n *       // (with lower priority)\r\n *       return;\r\n *     } else {\r\n *       // element must have minimum size of 10*10 points\r\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\r\n *     }\r\n *   });\r\n * };\r\n *\r\n * @param {String|Array<String>} actions the identifier for the modeling action to check\r\n * @param {Number} [priority] the priority at which this rule is being applied\r\n * @param {Function} fn the callback function that performs the actual check\r\n */\r\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\r\n\r\n  var self = this;\r\n\r\n  if (typeof actions === 'string') {\r\n    actions = [ actions ];\r\n  }\r\n\r\n  actions.forEach(function(action) {\r\n\r\n    self.canExecute(action, priority, function(context, action, event) {\r\n      return fn(context);\r\n    }, true);\r\n  });\r\n};\r\n\r\n/**\r\n * Implement this method to add new rules during provider initialization.\r\n */\r\nRuleProvider.prototype.init = function() {};","/**\r\n * A service that provides rules for certain diagram actions.\r\n *\r\n * The default implementation will hook into the {@link CommandStack}\r\n * to perform the actual rule evaluation. Make sure to provide the\r\n * `commandStack` service with this module if you plan to use it.\r\n *\r\n * Together with this implementation you may use the {@link RuleProvider}\r\n * to implement your own rule checkers.\r\n *\r\n * This module is ment to be easily replaced, thus the tiny foot print.\r\n *\r\n * @param {Injector} injector\r\n */\r\nexport default function Rules(injector) {\r\n  this._commandStack = injector.get('commandStack', false);\r\n}\r\n\r\nRules.$inject = [ 'injector' ];\r\n\r\n\r\n/**\r\n * Returns whether or not a given modeling action can be executed\r\n * in the specified context.\r\n *\r\n * This implementation will respond with allow unless anyone\r\n * objects.\r\n *\r\n * @param {String} action the action to be checked\r\n * @param {Object} [context] the context to check the action in\r\n *\r\n * @return {Boolean} returns true, false or null depending on whether the\r\n *                   operation is allowed, not allowed or should be ignored.\r\n */\r\nRules.prototype.allowed = function(action, context) {\r\n  var allowed = true;\r\n\r\n  var commandStack = this._commandStack;\r\n\r\n  if (commandStack) {\r\n    allowed = commandStack.canExecute(action, context);\r\n  }\r\n\r\n  // map undefined to true, i.e. no rules\r\n  return allowed === undefined ? true : allowed;\r\n};","import Rules from './Rules';\r\n\r\nexport default {\r\n  __init__: [ 'rules' ],\r\n  rules: [ 'type', Rules ]\r\n};\r\n","import {\r\n  clear as domClear,\r\n  delegate as domDelegate,\r\n  query as domQuery,\r\n  classes as domClasses,\r\n  attr as domAttr,\r\n  domify as domify\r\n} from 'min-dom';\r\n\r\nimport {\r\n  getBBox as getBoundingBox\r\n} from '../../util/Elements';\r\n\r\n\r\n/**\r\n * Provides searching infrastructure\r\n */\r\nexport default function SearchPad(canvas, eventBus, overlays, selection) {\r\n  this._open = false;\r\n  this._results = [];\r\n  this._eventMaps = [];\r\n\r\n  this._canvas = canvas;\r\n  this._eventBus = eventBus;\r\n  this._overlays = overlays;\r\n  this._selection = selection;\r\n\r\n  // setup elements\r\n  this._container = domify(SearchPad.BOX_HTML);\r\n  this._searchInput = domQuery(SearchPad.INPUT_SELECTOR, this._container);\r\n  this._resultsContainer = domQuery(SearchPad.RESULTS_CONTAINER_SELECTOR, this._container);\r\n\r\n  // attach search pad\r\n  this._canvas.getContainer().appendChild(this._container);\r\n\r\n  // cleanup on destroy\r\n  eventBus.on([ 'canvas.destroy', 'diagram.destroy' ], this.close, this);\r\n}\r\n\r\n\r\nSearchPad.$inject = [\r\n  'canvas',\r\n  'eventBus',\r\n  'overlays',\r\n  'selection'\r\n];\r\n\r\n\r\n/**\r\n * Binds and keeps track of all event listereners\r\n */\r\nSearchPad.prototype._bindEvents = function() {\r\n  var self = this;\r\n\r\n  function listen(el, selector, type, fn) {\r\n    self._eventMaps.push({\r\n      el: el,\r\n      type: type,\r\n      listener: domDelegate.bind(el, selector, type, fn)\r\n    });\r\n  }\r\n\r\n  // close search on clicking anywhere outside\r\n  listen(document, 'html', 'click', function(e) {\r\n    self.close();\r\n  }, true);\r\n\r\n  // stop event from propagating and closing search\r\n  // focus on input\r\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'click', function(e) {\r\n    e.stopPropagation();\r\n    e.delegateTarget.focus();\r\n  });\r\n\r\n  // preselect result on hover\r\n  listen(this._container, SearchPad.RESULT_SELECTOR, 'mouseover', function(e) {\r\n    e.stopPropagation();\r\n    self._scrollToNode(e.delegateTarget);\r\n    self._preselect(e.delegateTarget);\r\n  });\r\n\r\n  // selects desired result on mouse click\r\n  listen(this._container, SearchPad.RESULT_SELECTOR, 'click', function(e) {\r\n    e.stopPropagation();\r\n    self._select(e.delegateTarget);\r\n  });\r\n\r\n  // prevent cursor in input from going left and right when using up/down to\r\n  // navigate results\r\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'keydown', function(e) {\r\n    // up\r\n    if (e.keyCode === 38) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    // down\r\n    if (e.keyCode === 40) {\r\n      e.preventDefault();\r\n    }\r\n  });\r\n\r\n  // handle keyboard input\r\n  listen(this._container, SearchPad.INPUT_SELECTOR, 'keyup', function(e) {\r\n    // escape\r\n    if (e.keyCode === 27) {\r\n      return self.close();\r\n    }\r\n\r\n    // enter\r\n    if (e.keyCode === 13) {\r\n      var selected = self._getCurrentResult();\r\n\r\n      return selected ? self._select(selected) : self.close();\r\n    }\r\n\r\n    // up\r\n    if (e.keyCode === 38) {\r\n      return self._scrollToDirection(true);\r\n    }\r\n\r\n    // down\r\n    if (e.keyCode === 40) {\r\n      return self._scrollToDirection();\r\n    }\r\n\r\n    // left && right\r\n    // do not search while navigating text input\r\n    if (e.keyCode === 37 || e.keyCode === 39) {\r\n      return;\r\n    }\r\n\r\n    // anything else\r\n    self._search(e.delegateTarget.value);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Unbinds all previously established listeners\r\n */\r\nSearchPad.prototype._unbindEvents = function() {\r\n  this._eventMaps.forEach(function(m) {\r\n    domDelegate.unbind(m.el, m.type, m.listener);\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Performs a search for the given pattern.\r\n *\r\n * @param  {String} pattern\r\n */\r\nSearchPad.prototype._search = function(pattern) {\r\n  var self = this;\r\n\r\n  this._clearResults();\r\n\r\n  // do not search on empty query\r\n  if (!pattern || pattern === '') {\r\n    return;\r\n  }\r\n\r\n  var searchResults = this._searchProvider.find(pattern);\r\n\r\n  if (!searchResults.length) {\r\n    return;\r\n  }\r\n\r\n  // append new results\r\n  searchResults.forEach(function(result) {\r\n    var id = result.element.id;\r\n    var node = self._createResultNode(result, id);\r\n    self._results[id] = {\r\n      element: result.element,\r\n      node: node\r\n    };\r\n  });\r\n\r\n  // preselect first result\r\n  var node = domQuery(SearchPad.RESULT_SELECTOR, this._resultsContainer);\r\n  this._scrollToNode(node);\r\n  this._preselect(node);\r\n};\r\n\r\n\r\n/**\r\n * Navigate to the previous/next result. Defaults to next result.\r\n * @param  {Boolean} previous\r\n */\r\nSearchPad.prototype._scrollToDirection = function(previous) {\r\n  var selected = this._getCurrentResult();\r\n  if (!selected) {\r\n    return;\r\n  }\r\n\r\n  var node = previous ? selected.previousElementSibling : selected.nextElementSibling;\r\n  if (node) {\r\n    this._scrollToNode(node);\r\n    this._preselect(node);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Scroll to the node if it is not visible.\r\n *\r\n * @param  {Element} node\r\n */\r\nSearchPad.prototype._scrollToNode = function(node) {\r\n  if (!node || node === this._getCurrentResult()) {\r\n    return;\r\n  }\r\n\r\n  var nodeOffset = node.offsetTop;\r\n  var containerScroll = this._resultsContainer.scrollTop;\r\n\r\n  var bottomScroll = nodeOffset - this._resultsContainer.clientHeight + node.clientHeight;\r\n\r\n  if (nodeOffset < containerScroll) {\r\n    this._resultsContainer.scrollTop = nodeOffset;\r\n  } else if (containerScroll < bottomScroll) {\r\n    this._resultsContainer.scrollTop = bottomScroll;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Clears all results data.\r\n */\r\nSearchPad.prototype._clearResults = function() {\r\n  domClear(this._resultsContainer);\r\n\r\n  this._results = [];\r\n\r\n  this._resetOverlay();\r\n\r\n  this._eventBus.fire('searchPad.cleared');\r\n};\r\n\r\n\r\n/**\r\n * Get currently selected result.\r\n *\r\n * @return {Element}\r\n */\r\nSearchPad.prototype._getCurrentResult = function() {\r\n  return domQuery(SearchPad.RESULT_SELECTED_SELECTOR, this._resultsContainer);\r\n};\r\n\r\n\r\n/**\r\n * Create result DOM element within results container\r\n * that corresponds to a search result.\r\n *\r\n * 'result' : one of the elements returned by SearchProvider\r\n * 'id' : id attribute value to assign to the new DOM node\r\n * return : created DOM element\r\n *\r\n * @param  {SearchResult} result\r\n * @param  {String} id\r\n * @return {Element}\r\n */\r\nSearchPad.prototype._createResultNode = function(result, id) {\r\n  var node = domify(SearchPad.RESULT_HTML);\r\n\r\n  // create only if available\r\n  if (result.primaryTokens.length > 0) {\r\n    createInnerTextNode(node, result.primaryTokens, SearchPad.RESULT_PRIMARY_HTML);\r\n  }\r\n\r\n  // secondary tokens (represent element ID) are allways available\r\n  createInnerTextNode(node, result.secondaryTokens, SearchPad.RESULT_SECONDARY_HTML);\r\n\r\n  domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE, id);\r\n\r\n  this._resultsContainer.appendChild(node);\r\n\r\n  return node;\r\n};\r\n\r\n\r\n/**\r\n * Register search element provider.\r\n *\r\n * SearchProvider.find - provides search function over own elements\r\n *  (pattern) => [{ text: <String>, element: <Element>}, ...]\r\n *\r\n * @param  {SearchProvider} provider\r\n */\r\nSearchPad.prototype.registerProvider = function(provider) {\r\n  this._searchProvider = provider;\r\n};\r\n\r\n\r\n/**\r\n * Open search pad.\r\n */\r\nSearchPad.prototype.open = function() {\r\n  if (!this._searchProvider) {\r\n    throw new Error('no search provider registered');\r\n  }\r\n\r\n  if (this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._bindEvents();\r\n\r\n  this._open = true;\r\n\r\n  domClasses(this._container).add('open');\r\n\r\n  this._searchInput.focus();\r\n\r\n  this._eventBus.fire('searchPad.opened');\r\n};\r\n\r\n\r\n/**\r\n * Close search pad.\r\n */\r\nSearchPad.prototype.close = function() {\r\n  if (!this.isOpen()) {\r\n    return;\r\n  }\r\n\r\n  this._unbindEvents();\r\n\r\n  this._open = false;\r\n\r\n  domClasses(this._container).remove('open');\r\n\r\n  this._clearResults();\r\n\r\n  this._searchInput.value = '';\r\n  this._searchInput.blur();\r\n\r\n  this._resetOverlay();\r\n\r\n  this._eventBus.fire('searchPad.closed');\r\n};\r\n\r\n\r\n/**\r\n * Toggles search pad on/off.\r\n */\r\nSearchPad.prototype.toggle = function() {\r\n  this.isOpen() ? this.close() : this.open();\r\n};\r\n\r\n\r\n/**\r\n * Report state of search pad.\r\n */\r\nSearchPad.prototype.isOpen = function() {\r\n  return this._open;\r\n};\r\n\r\n\r\n/**\r\n * Preselect result entry.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._preselect = function(node) {\r\n  var selectedNode = this._getCurrentResult();\r\n\r\n  // already selected\r\n  if (node === selectedNode) {\r\n    return;\r\n  }\r\n\r\n  // removing preselection from current node\r\n  if (selectedNode) {\r\n    domClasses(selectedNode).remove(SearchPad.RESULT_SELECTED_CLASS);\r\n  }\r\n\r\n  var id = domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE);\r\n  var element = this._results[id].element;\r\n\r\n  domClasses(node).add(SearchPad.RESULT_SELECTED_CLASS);\r\n\r\n  this._resetOverlay(element);\r\n\r\n  this._centerViewbox(element);\r\n\r\n  this._selection.select(element);\r\n\r\n  this._eventBus.fire('searchPad.preselected', element);\r\n};\r\n\r\n\r\n/**\r\n * Select result node.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._select = function(node) {\r\n  var id = domAttr(node, SearchPad.RESULT_ID_ATTRIBUTE);\r\n  var element = this._results[id].element;\r\n\r\n  this.close();\r\n\r\n  this._resetOverlay();\r\n\r\n  this._centerViewbox(element);\r\n\r\n  this._selection.select(element);\r\n\r\n  this._eventBus.fire('searchPad.selected', element);\r\n};\r\n\r\n\r\n/**\r\n * Center viewbox on the element middle point.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._centerViewbox = function(element) {\r\n  var viewbox = this._canvas.viewbox();\r\n\r\n  var box = getBoundingBox(element);\r\n\r\n  var newViewbox = {\r\n    x: (box.x + box.width/2) - viewbox.outer.width/2,\r\n    y: (box.y + box.height/2) - viewbox.outer.height/2,\r\n    width: viewbox.outer.width,\r\n    height: viewbox.outer.height\r\n  };\r\n\r\n  this._canvas.viewbox(newViewbox);\r\n\r\n  this._canvas.zoom(viewbox.scale);\r\n};\r\n\r\n\r\n/**\r\n * Reset overlay removes and, optionally, set\r\n * overlay to a new element.\r\n *\r\n * @param  {Element} element\r\n */\r\nSearchPad.prototype._resetOverlay = function(element) {\r\n  if (this._overlayId) {\r\n    this._overlays.remove(this._overlayId);\r\n  }\r\n\r\n  if (element) {\r\n    var box = getBoundingBox(element);\r\n    var overlay = constructOverlay(box);\r\n    this._overlayId = this._overlays.add(element, overlay);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Construct overlay object for the given bounding box.\r\n *\r\n * @param  {BoundingBox} box\r\n * @return {Object}\r\n */\r\nfunction constructOverlay(box) {\r\n\r\n  var offset = 6;\r\n  var w = box.width + offset * 2;\r\n  var h = box.height + offset * 2;\r\n\r\n  var styles = [\r\n    'width: '+ w +'px',\r\n    'height: '+ h + 'px'\r\n  ].join('; ');\r\n\r\n  return {\r\n    position: {\r\n      bottom: h - offset,\r\n      right: w - offset\r\n    },\r\n    show: true,\r\n    html: '<div style=\"' + styles + '\" class=\"' + SearchPad.OVERLAY_CLASS + '\"></div>'\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Creates and appends child node from result tokens and HTML template.\r\n *\r\n * @param  {Element} node\r\n * @param  {Array<Object>} tokens\r\n * @param  {String} template\r\n */\r\nfunction createInnerTextNode(parentNode, tokens, template) {\r\n  var text = createHtmlText(tokens);\r\n  var childNode = domify(template);\r\n  childNode.innerHTML = text;\r\n  parentNode.appendChild(childNode);\r\n}\r\n\r\n/**\r\n * Create internal HTML markup from result tokens.\r\n * Caters for highlighting pattern matched tokens.\r\n *\r\n * @param  {Array<Object>} tokens\r\n * @return {String}\r\n */\r\nfunction createHtmlText(tokens) {\r\n  var htmlText = '';\r\n\r\n  tokens.forEach(function(t) {\r\n    if (t.matched) {\r\n      htmlText += '<strong class=\"' + SearchPad.RESULT_HIGHLIGHT_CLASS + '\">' + t.matched + '</strong>';\r\n    } else {\r\n      htmlText += t.normal;\r\n    }\r\n  });\r\n\r\n  return htmlText !== '' ? htmlText : null;\r\n}\r\n\r\n\r\n/**\r\n * CONSTANTS\r\n */\r\nSearchPad.CONTAINER_SELECTOR = '.djs-search-container';\r\nSearchPad.INPUT_SELECTOR = '.djs-search-input input';\r\nSearchPad.RESULTS_CONTAINER_SELECTOR = '.djs-search-results';\r\nSearchPad.RESULT_SELECTOR = '.djs-search-result';\r\nSearchPad.RESULT_SELECTED_CLASS = 'djs-search-result-selected';\r\nSearchPad.RESULT_SELECTED_SELECTOR = '.' + SearchPad.RESULT_SELECTED_CLASS;\r\nSearchPad.RESULT_ID_ATTRIBUTE = 'data-result-id';\r\nSearchPad.RESULT_HIGHLIGHT_CLASS = 'djs-search-highlight';\r\nSearchPad.OVERLAY_CLASS = 'djs-search-overlay';\r\n\r\nSearchPad.BOX_HTML =\r\n  '<div class=\"djs-search-container djs-draggable djs-scrollable\">' +\r\n    '<div class=\"djs-search-input\">' +\r\n      '<input type=\"text\"/>' +\r\n    '</div>' +\r\n    '<div class=\"djs-search-results\"></div>' +\r\n  '</div>';\r\n\r\nSearchPad.RESULT_HTML =\r\n  '<div class=\"djs-search-result\"></div>';\r\n\r\nSearchPad.RESULT_PRIMARY_HTML =\r\n  '<div class=\"djs-search-result-primary\"></div>';\r\n\r\nSearchPad.RESULT_SECONDARY_HTML =\r\n  '<p class=\"djs-search-result-secondary\"></p>';\r\n","import OverlaysModule from '../overlays';\r\nimport SelectionModule from '../selection';\r\n\r\nimport SearchPad from './SearchPad';\r\n\r\nexport default {\r\n  __depends__: [\r\n    OverlaysModule,\r\n    SelectionModule\r\n  ],\r\n  searchPad: [ 'type', SearchPad ]\r\n};\r\n","import {\r\n  isArray,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * A service that offers the current selection in a diagram.\r\n * Offers the api to control the selection, too.\r\n *\r\n * @class\r\n *\r\n * @param {EventBus} eventBus the event bus\r\n */\r\nexport default function Selection(eventBus) {\r\n\r\n  this._eventBus = eventBus;\r\n\r\n  this._selectedElements = [];\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\r\n    var element = e.element;\r\n    self.deselect(element);\r\n  });\r\n\r\n  eventBus.on([ 'diagram.clear' ], function(e) {\r\n    self.select(null);\r\n  });\r\n}\r\n\r\nSelection.$inject = [ 'eventBus' ];\r\n\r\n\r\nSelection.prototype.deselect = function(element) {\r\n  var selectedElements = this._selectedElements;\r\n\r\n  var idx = selectedElements.indexOf(element);\r\n\r\n  if (idx !== -1) {\r\n    var oldSelection = selectedElements.slice();\r\n\r\n    selectedElements.splice(idx, 1);\r\n\r\n    this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\r\n  }\r\n};\r\n\r\n\r\nSelection.prototype.get = function() {\r\n  return this._selectedElements;\r\n};\r\n\r\nSelection.prototype.isSelected = function(element) {\r\n  return this._selectedElements.indexOf(element) !== -1;\r\n};\r\n\r\n\r\n/**\r\n * This method selects one or more elements on the diagram.\r\n *\r\n * By passing an additional add parameter you can decide whether or not the element(s)\r\n * should be added to the already existing selection or not.\r\n *\r\n * @method Selection#select\r\n *\r\n * @param  {Object|Object[]} elements element or array of elements to be selected\r\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\r\n */\r\nSelection.prototype.select = function(elements, add) {\r\n  var selectedElements = this._selectedElements,\r\n      oldSelection = selectedElements.slice();\r\n\r\n  if (!isArray(elements)) {\r\n    elements = elements ? [ elements ] : [];\r\n  }\r\n\r\n  // selection may be cleared by passing an empty array or null\r\n  // to the method\r\n  if (add) {\r\n    forEach(elements, function(element) {\r\n      if (selectedElements.indexOf(element) !== -1) {\r\n        // already selected\r\n        return;\r\n      } else {\r\n        selectedElements.push(element);\r\n      }\r\n    });\r\n  } else {\r\n    this._selectedElements = selectedElements = elements.slice();\r\n  }\r\n\r\n  this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\r\n};\r\n","import {\r\n  hasPrimaryModifier\r\n} from '../../util/Mouse';\r\n\r\nimport {\r\n  find\r\n} from 'min-dash';\r\n\r\n\r\nexport default function SelectionBehavior(\r\n    eventBus, selection, canvas,\r\n    elementRegistry) {\r\n\r\n  eventBus.on('create.end', 500, function(e) {\r\n\r\n    // select the created shape after a\r\n    // successful create operation\r\n    if (e.context.canExecute) {\r\n      selection.select(e.context.shape);\r\n    }\r\n  });\r\n\r\n  eventBus.on('connect.end', 500, function(e) {\r\n\r\n    // select the connect end target\r\n    // after a connect operation\r\n    if (e.context.canExecute && e.context.target) {\r\n      selection.select(e.context.target);\r\n    }\r\n  });\r\n\r\n  eventBus.on('shape.move.end', 500, function(e) {\r\n    var previousSelection = e.previousSelection || [];\r\n\r\n    var shape = elementRegistry.get(e.context.shape.id);\r\n\r\n    // make sure at least the main moved element is being\r\n    // selected after a move operation\r\n    var inSelection = find(previousSelection, function(selectedShape) {\r\n      return shape.id === selectedShape.id;\r\n    });\r\n\r\n    if (!inSelection) {\r\n      selection.select(shape);\r\n    }\r\n  });\r\n\r\n  // Shift + click selection\r\n  eventBus.on('element.click', function(event) {\r\n\r\n    var element = event.element;\r\n\r\n    // do not select the root element\r\n    // or connections\r\n    if (element === canvas.getRootElement()) {\r\n      element = null;\r\n    }\r\n\r\n    var isSelected = selection.isSelected(element),\r\n        isMultiSelect = selection.get().length > 1;\r\n\r\n    // mouse-event: SELECTION_KEY\r\n    var add = hasPrimaryModifier(event);\r\n\r\n    // select OR deselect element in multi selection\r\n    if (isSelected && isMultiSelect) {\r\n      if (add) {\r\n        return selection.deselect(element);\r\n      } else {\r\n        return selection.select(element);\r\n      }\r\n    } else\r\n    if (!isSelected) {\r\n      selection.select(element, add);\r\n    } else {\r\n      selection.deselect(element);\r\n    }\r\n  });\r\n}\r\n\r\nSelectionBehavior.$inject = [\r\n  'eventBus',\r\n  'selection',\r\n  'canvas',\r\n  'elementRegistry'\r\n];\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nvar MARKER_HOVER = 'hover',\r\n    MARKER_SELECTED = 'selected';\r\n\r\n\r\n/**\r\n * A plugin that adds a visible selection UI to shapes and connections\r\n * by appending the <code>hover</code> and <code>selected</code> classes to them.\r\n *\r\n * @class\r\n *\r\n * Makes elements selectable, too.\r\n *\r\n * @param {EventBus} events\r\n * @param {SelectionService} selection\r\n * @param {Canvas} canvas\r\n */\r\nexport default function SelectionVisuals(events, canvas, selection, styles) {\r\n\r\n  this._multiSelectionBox = null;\r\n\r\n  function addMarker(e, cls) {\r\n    canvas.addMarker(e, cls);\r\n  }\r\n\r\n  function removeMarker(e, cls) {\r\n    canvas.removeMarker(e, cls);\r\n  }\r\n\r\n  events.on('element.hover', function(event) {\r\n    addMarker(event.element, MARKER_HOVER);\r\n  });\r\n\r\n  events.on('element.out', function(event) {\r\n    removeMarker(event.element, MARKER_HOVER);\r\n  });\r\n\r\n  events.on('selection.changed', function(event) {\r\n\r\n    function deselect(s) {\r\n      removeMarker(s, MARKER_SELECTED);\r\n    }\r\n\r\n    function select(s) {\r\n      addMarker(s, MARKER_SELECTED);\r\n    }\r\n\r\n    var oldSelection = event.oldSelection,\r\n        newSelection = event.newSelection;\r\n\r\n    forEach(oldSelection, function(e) {\r\n      if (newSelection.indexOf(e) === -1) {\r\n        deselect(e);\r\n      }\r\n    });\r\n\r\n    forEach(newSelection, function(e) {\r\n      if (oldSelection.indexOf(e) === -1) {\r\n        select(e);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nSelectionVisuals.$inject = [\r\n  'eventBus',\r\n  'canvas',\r\n  'selection',\r\n  'styles'\r\n];","import InteractionEventsModule from '../interaction-events';\r\nimport OutlineModule from '../outline';\r\n\r\nimport Selection from './Selection';\r\nimport SelectionVisuals from './SelectionVisuals';\r\nimport SelectionBehavior from './SelectionBehavior';\r\n\r\n\r\nexport default {\r\n  __init__: [ 'selectionVisuals', 'selectionBehavior' ],\r\n  __depends__: [\r\n    InteractionEventsModule,\r\n    OutlineModule\r\n  ],\r\n  selection: [ 'type', Selection ],\r\n  selectionVisuals: [ 'type', SelectionVisuals ],\r\n  selectionBehavior: [ 'type', SelectionBehavior ]\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  snapTo\r\n} from './SnapUtil';\r\n\r\n\r\n/**\r\n * A snap context, containing the (possibly incomplete)\r\n * mappings of drop targets (to identify the snapping)\r\n * to computed snap points.\r\n */\r\nexport default function SnapContext() {\r\n\r\n  /**\r\n   * Map<String, SnapPoints> mapping drop targets to\r\n   * a list of possible snappings.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._targets = {};\r\n\r\n  /**\r\n   * Map<String, Point> initial positioning of element\r\n   * regarding various snap directions.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._snapOrigins = {};\r\n\r\n  /**\r\n   * List of snap locations\r\n   *\r\n   * @type {Array<String>}\r\n   */\r\n  this._snapLocations = [];\r\n\r\n  /**\r\n   * Map<String, Array<Point>> of default snapping locations\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._defaultSnaps = {};\r\n}\r\n\r\n\r\nSnapContext.prototype.getSnapOrigin = function(snapLocation) {\r\n  return this._snapOrigins[snapLocation];\r\n};\r\n\r\n\r\nSnapContext.prototype.setSnapOrigin = function(snapLocation, initialValue) {\r\n  this._snapOrigins[snapLocation] = initialValue;\r\n\r\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\r\n    this._snapLocations.push(snapLocation);\r\n  }\r\n};\r\n\r\n\r\nSnapContext.prototype.addDefaultSnap = function(type, point) {\r\n\r\n  var snapValues = this._defaultSnaps[type];\r\n\r\n  if (!snapValues) {\r\n    snapValues = this._defaultSnaps[type] = [];\r\n  }\r\n\r\n  snapValues.push(point);\r\n};\r\n\r\n/**\r\n * Return a number of initialized snaps, i.e. snap locations such as\r\n * top-left, mid, bottom-right and so forth.\r\n *\r\n * @return {Array<String>} snapLocations\r\n */\r\nSnapContext.prototype.getSnapLocations = function() {\r\n  return this._snapLocations;\r\n};\r\n\r\n/**\r\n * Set the snap locations for this context.\r\n *\r\n * The order of locations determines precedence.\r\n *\r\n * @param {Array<String>} snapLocations\r\n */\r\nSnapContext.prototype.setSnapLocations = function(snapLocations) {\r\n  this._snapLocations = snapLocations;\r\n};\r\n\r\n/**\r\n * Get snap points for a given target\r\n *\r\n * @param {Element|String} target\r\n */\r\nSnapContext.prototype.pointsForTarget = function(target) {\r\n\r\n  var targetId = target.id || target;\r\n\r\n  var snapPoints = this._targets[targetId];\r\n\r\n  if (!snapPoints) {\r\n    snapPoints = this._targets[targetId] = new SnapPoints();\r\n    snapPoints.initDefaults(this._defaultSnaps);\r\n  }\r\n\r\n  return snapPoints;\r\n};\r\n\r\n\r\n/**\r\n * Creates the snap points and initializes them with the\r\n * given default values.\r\n *\r\n * @param {Object<String, Array<Point>>} [defaultPoints]\r\n */\r\nfunction SnapPoints(defaultSnaps) {\r\n\r\n  /**\r\n   * Map<String, Map<(x|y), Array<Number>>> mapping snap locations,\r\n   * i.e. top-left, bottom-right, center to actual snap values.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this._snapValues = {};\r\n}\r\n\r\nSnapPoints.prototype.add = function(snapLocation, point) {\r\n\r\n  var snapValues = this._snapValues[snapLocation];\r\n\r\n  if (!snapValues) {\r\n    snapValues = this._snapValues[snapLocation] = { x: [], y: [] };\r\n  }\r\n\r\n  if (snapValues.x.indexOf(point.x) === -1) {\r\n    snapValues.x.push(point.x);\r\n  }\r\n\r\n  if (snapValues.y.indexOf(point.y) === -1) {\r\n    snapValues.y.push(point.y);\r\n  }\r\n};\r\n\r\n\r\nSnapPoints.prototype.snap = function(point, snapLocation, axis, tolerance) {\r\n  var snappingValues = this._snapValues[snapLocation];\r\n\r\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\r\n};\r\n\r\n/**\r\n * Initialize a number of default snapping points.\r\n *\r\n * @param  {Object} defaultSnaps\r\n */\r\nSnapPoints.prototype.initDefaults = function(defaultSnaps) {\r\n\r\n  var self = this;\r\n\r\n  forEach(defaultSnaps || {}, function(snapPoints, snapLocation) {\r\n    forEach(snapPoints, function(point) {\r\n      self.add(snapLocation, point);\r\n    });\r\n  });\r\n};","var abs = Math.abs,\r\n    round = Math.round;\r\n\r\n\r\n/**\r\n * Snap value to a collection of reference values.\r\n *\r\n * @param  {Number} value\r\n * @param  {Array<Number>} values\r\n * @param  {Number} [tolerance=10]\r\n *\r\n * @return {Number} the value we snapped to or null, if none snapped\r\n */\r\nexport function snapTo(value, values, tolerance) {\r\n  tolerance = tolerance === undefined ? 10 : tolerance;\r\n\r\n  var idx, snapValue;\r\n\r\n  for (idx = 0; idx < values.length; idx++) {\r\n    snapValue = values[idx];\r\n\r\n    if (abs(snapValue - value) <= tolerance) {\r\n      return snapValue;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function topLeft(bounds) {\r\n  return {\r\n    x: bounds.x,\r\n    y: bounds.y\r\n  };\r\n}\r\n\r\n\r\nexport function mid(bounds, defaultValue) {\r\n\r\n  if (!bounds || isNaN(bounds.x) || isNaN(bounds.y)) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return {\r\n    x: round(bounds.x + bounds.width / 2),\r\n    y: round(bounds.y + bounds.height / 2)\r\n  };\r\n}\r\n\r\n\r\nexport function bottomRight(bounds) {\r\n  return {\r\n    x: bounds.x + bounds.width,\r\n    y: bounds.y + bounds.height\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Retrieve the snap state of the given event.\r\n *\r\n * @param  {Event} event\r\n * @param  {String} axis\r\n *\r\n * @return {Boolean} the snapped state\r\n *\r\n */\r\nexport function isSnapped(event, axis) {\r\n  var snapped = event.snapped;\r\n\r\n  if (!snapped) {\r\n    return false;\r\n  }\r\n\r\n  if (typeof axis === 'string') {\r\n    return snapped[axis];\r\n  }\r\n\r\n  return snapped.x && snapped.y;\r\n}\r\n\r\n\r\n/**\r\n * Set the given event as snapped.\r\n *\r\n * This method may change the x and/or y position of the shape\r\n * from the given event!\r\n *\r\n * @param {Event} event\r\n * @param {String} axis\r\n * @param {Number|Boolean} value\r\n *\r\n * @return {Number} old value\r\n */\r\nexport function setSnapped(event, axis, value) {\r\n  if (typeof axis !== 'string') {\r\n    throw new Error('axis must be in [x, y]');\r\n  }\r\n\r\n  if (typeof value !== 'number' && value !== false) {\r\n    throw new Error('value must be Number or false');\r\n  }\r\n\r\n  var delta,\r\n      previousValue = event[axis];\r\n\r\n  var snapped = event.snapped = (event.snapped || {});\r\n\r\n\r\n  if (value === false) {\r\n    snapped[axis] = false;\r\n  } else {\r\n    snapped[axis] = true;\r\n\r\n    delta = value - previousValue;\r\n\r\n    event[axis] += delta;\r\n    event['d' + axis] += delta;\r\n  }\r\n\r\n  return previousValue;\r\n}","import {\r\n  filter,\r\n  forEach,\r\n  debounce,\r\n  bind\r\n} from 'min-dash';\r\n\r\nimport SnapContext from './SnapContext';\r\n\r\nimport {\r\n  mid,\r\n  isSnapped,\r\n  setSnapped\r\n} from './SnapUtil';\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * A general purpose snapping component for diagram elements.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function Snapping(eventBus, canvas) {\r\n\r\n  this._canvas = canvas;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'shape.move.start', 'create.start' ], function(event) {\r\n    self.initSnap(event);\r\n  });\r\n\r\n  eventBus.on([ 'shape.move.move', 'shape.move.end', 'create.move', 'create.end' ], HIGHER_PRIORITY, function(event) {\r\n\r\n    if (event.originalEvent && event.originalEvent.ctrlKey) {\r\n      return;\r\n    }\r\n\r\n    if (isSnapped(event)) {\r\n      return;\r\n    }\r\n\r\n    self.snap(event);\r\n  });\r\n\r\n  eventBus.on([ 'shape.move.cleanup', 'create.cleanup' ], function(event) {\r\n    self.hide();\r\n  });\r\n\r\n  // delay hide by 1000 seconds since last match\r\n  this._asyncHide = debounce(bind(this.hide, this), 1000);\r\n}\r\n\r\nSnapping.$inject = [ 'eventBus', 'canvas' ];\r\n\r\n\r\nSnapping.prototype.initSnap = function(event) {\r\n\r\n  var context = event.context,\r\n      shape = context.shape,\r\n      snapContext = context.snapContext;\r\n\r\n  if (!snapContext) {\r\n    snapContext = context.snapContext = new SnapContext();\r\n  }\r\n\r\n  var snapMid = mid(shape, event);\r\n\r\n  snapContext.setSnapOrigin('mid', {\r\n    x: snapMid.x - event.x,\r\n    y: snapMid.y - event.y\r\n  });\r\n\r\n  return snapContext;\r\n};\r\n\r\n\r\nSnapping.prototype.snap = function(event) {\r\n\r\n  var context = event.context,\r\n      snapContext = context.snapContext,\r\n      shape = context.shape,\r\n      target = context.target,\r\n      snapLocations = snapContext.getSnapLocations();\r\n\r\n  if (!target) {\r\n    return;\r\n  }\r\n\r\n  var snapPoints = snapContext.pointsForTarget(target);\r\n\r\n  if (!snapPoints.initialized) {\r\n    this.addTargetSnaps(snapPoints, shape, target);\r\n\r\n    snapPoints.initialized = true;\r\n  }\r\n\r\n\r\n  var snapping = {\r\n    x: isSnapped(event, 'x'),\r\n    y: isSnapped(event, 'y')\r\n  };\r\n\r\n\r\n  forEach(snapLocations, function(location) {\r\n\r\n    var snapOrigin = snapContext.getSnapOrigin(location);\r\n\r\n    var snapCurrent = {\r\n      x: event.x + snapOrigin.x,\r\n      y: event.y + snapOrigin.y\r\n    };\r\n\r\n    // snap on both axis, if not snapped already\r\n    forEach([ 'x', 'y' ], function(axis) {\r\n      var locationSnapping;\r\n\r\n      if (!snapping[axis]) {\r\n        locationSnapping = snapPoints.snap(snapCurrent, location, axis, 7);\r\n\r\n        if (locationSnapping !== undefined) {\r\n          snapping[axis] = {\r\n            value: locationSnapping,\r\n            originValue: locationSnapping - snapOrigin[axis]\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n    // no more need to snap, drop out of interation\r\n    if (snapping.x && snapping.y) {\r\n      return false;\r\n    }\r\n  });\r\n\r\n\r\n  // show snap visuals\r\n\r\n  this.showSnapLine('vertical', snapping.x && snapping.x.value);\r\n  this.showSnapLine('horizontal', snapping.y && snapping.y.value);\r\n\r\n\r\n  // adjust event { x, y, dx, dy } and mark as snapping\r\n  forEach([ 'x', 'y' ], function(axis) {\r\n\r\n    var axisSnapping = snapping[axis];\r\n\r\n    if (typeof axisSnapping === 'object') {\r\n      // set as snapped and adjust the x and/or y position of the event\r\n      setSnapped(event, axis, axisSnapping.originValue);\r\n    }\r\n  });\r\n};\r\n\r\n\r\nSnapping.prototype._createLine = function(orientation) {\r\n\r\n  var root = this._canvas.getLayer('snap');\r\n\r\n  // var line = root.path('M0,0 L0,0').addClass('djs-snap-line');\r\n\r\n  var line = svgCreate('path');\r\n  svgAttr(line, { d: 'M0,0 L0,0' });\r\n  svgClasses(line).add('djs-snap-line');\r\n\r\n  svgAppend(root, line);\r\n\r\n  return {\r\n    update: function(position) {\r\n\r\n      if (typeof position !== 'number') {\r\n        svgAttr(line, { display: 'none' });\r\n      } else {\r\n        if (orientation === 'horizontal') {\r\n          svgAttr(line, {\r\n            d: 'M-100000,' + position + ' L+100000,' + position,\r\n            display: ''\r\n          });\r\n        } else {\r\n          svgAttr(line, {\r\n            d: 'M ' + position + ',-100000 L ' + position + ', +100000',\r\n            display: ''\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nSnapping.prototype._createSnapLines = function() {\r\n\r\n  this._snapLines = {\r\n    horizontal: this._createLine('horizontal'),\r\n    vertical: this._createLine('vertical')\r\n  };\r\n};\r\n\r\nSnapping.prototype.showSnapLine = function(orientation, position) {\r\n\r\n  var line = this.getSnapLine(orientation);\r\n\r\n  if (line) {\r\n    line.update(position);\r\n  }\r\n\r\n  this._asyncHide();\r\n};\r\n\r\nSnapping.prototype.getSnapLine = function(orientation) {\r\n  if (!this._snapLines) {\r\n    this._createSnapLines();\r\n  }\r\n\r\n  return this._snapLines[orientation];\r\n};\r\n\r\nSnapping.prototype.hide = function() {\r\n  forEach(this._snapLines, function(l) {\r\n    l.update();\r\n  });\r\n};\r\n\r\nSnapping.prototype.addTargetSnaps = function(snapPoints, shape, target) {\r\n\r\n  var siblings = this.getSiblings(shape, target);\r\n\r\n  forEach(siblings, function(s) {\r\n    snapPoints.add('mid', mid(s));\r\n  });\r\n\r\n};\r\n\r\nSnapping.prototype.getSiblings = function(element, target) {\r\n\r\n  // snap to all siblings that are not hidden, labels, attached to element or element itself\r\n  return target && filter(target.children, function(e) {\r\n    return !e.hidden && !e.labelTarget && e.host !== element && e !== element;\r\n  });\r\n};\r\n","import {\r\n  getDirection\r\n} from './SpaceUtil';\r\n\r\nimport {\r\n  set as cursorSet\r\n} from '../../util/Cursor';\r\n\r\nimport {\r\n  hasPrimaryModifier\r\n} from '../../util/Mouse';\r\n\r\nvar abs = Math.abs,\r\n    round = Math.round;\r\n\r\nvar HIGH_PRIORITY = 1500,\r\n    SPACE_TOOL_CURSOR = 'crosshair';\r\n\r\nvar AXIS_TO_DIMENSION = { x: 'width', y: 'height' },\r\n    AXIS_INVERTED = { x: 'y', y: 'x' };\r\n\r\nimport {\r\n  selfAndAllChildren as getAllChildren\r\n} from '../../util/Elements';\r\n\r\nimport {\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * A tool that allows users to create and remove space in a diagram.\r\n *\r\n * The tool needs to be activated manually via {@link SpaceTool#activate(MouseEvent)}.\r\n */\r\nexport default function SpaceTool(\r\n    eventBus, dragging, canvas,\r\n    modeling, rules, toolManager) {\r\n\r\n  this._canvas = canvas;\r\n  this._dragging = dragging;\r\n  this._modeling = modeling;\r\n  this._rules = rules;\r\n  this._toolManager = toolManager;\r\n\r\n  var self = this;\r\n\r\n  toolManager.registerTool('space', {\r\n    tool: 'spaceTool.selection',\r\n    dragging: 'spaceTool'\r\n  });\r\n\r\n  eventBus.on('spaceTool.selection.end', function(event) {\r\n    var target = event.originalEvent.target;\r\n\r\n    // only reactive on diagram click\r\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\r\n    if (!event.hover && !(target instanceof SVGElement)) {\r\n      return;\r\n    }\r\n\r\n    eventBus.once('spaceTool.selection.ended', function() {\r\n      self.activateMakeSpace(event.originalEvent);\r\n    });\r\n  });\r\n\r\n\r\n  eventBus.on('spaceTool.move', HIGH_PRIORITY , function(event) {\r\n\r\n    var context = event.context;\r\n\r\n    if (!context.initialized) {\r\n      context.initialized = self.initializeMakeSpace(event, context);\r\n    }\r\n  });\r\n\r\n\r\n  eventBus.on('spaceTool.end', function(event) {\r\n\r\n    var context = event.context,\r\n        axis = context.axis,\r\n        direction = context.direction,\r\n        movingShapes = context.movingShapes,\r\n        resizingShapes = context.resizingShapes;\r\n\r\n    // skip if create space has not been initialized yet\r\n    if (!context.initialized) {\r\n      return;\r\n    }\r\n\r\n    var delta = { x: round(event.dx), y: round(event.dy) };\r\n    delta[ AXIS_INVERTED[ axis ] ] = 0;\r\n\r\n    var insideBounds = true;\r\n\r\n    // check if the space tool cursor is inside of bounds of\r\n    // any of the shapes that would be resized.\r\n    forEach(resizingShapes, function(shape) {\r\n\r\n      if ((direction === 'w' && event.x > shape.x + shape.width) ||\r\n          (direction === 'e' && event.x < shape.x) ||\r\n          (direction === 'n' && event.y > shape.y + shape.height) ||\r\n          (direction === 's' && event.y < shape.y)) {\r\n\r\n        insideBounds = false;\r\n        return;\r\n      }\r\n    });\r\n\r\n    if (insideBounds) {\r\n      // make space only if the cursor is inside bounds\r\n      self.makeSpace(movingShapes, resizingShapes, delta, direction);\r\n    }\r\n\r\n    eventBus.once('spaceTool.ended', function(event) {\r\n      // reactivate space tool after usage\r\n      self.activateSelection(event.originalEvent, true, true);\r\n    });\r\n\r\n  });\r\n}\r\n\r\nSpaceTool.$inject = [\r\n  'eventBus',\r\n  'dragging',\r\n  'canvas',\r\n  'modeling',\r\n  'rules',\r\n  'toolManager'\r\n];\r\n\r\n\r\n/**\r\n * Activate space tool selection\r\n *\r\n * @param  {MouseEvent} event\r\n * @param  {Boolean} autoActivate\r\n */\r\nSpaceTool.prototype.activateSelection = function(event, autoActivate, reactivate) {\r\n  this._dragging.init(event, 'spaceTool.selection', {\r\n    trapClick: false,\r\n    cursor: SPACE_TOOL_CURSOR,\r\n    autoActivate: autoActivate,\r\n    data: {\r\n      context: {\r\n        reactivate: reactivate\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Activate make space\r\n *\r\n * @param  {MouseEvent} event\r\n */\r\nSpaceTool.prototype.activateMakeSpace = function(event) {\r\n  this._dragging.init(event, 'spaceTool', {\r\n    autoActivate: true,\r\n    cursor: SPACE_TOOL_CURSOR,\r\n    data: {\r\n      context: {}\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Actually make space on the diagram\r\n *\r\n * @param  {Array<djs.model.Shape>} movingShapes\r\n * @param  {Array<djs.model.Shape>} resizingShapes\r\n * @param  {Point} delta\r\n * @param  {String} direction\r\n */\r\nSpaceTool.prototype.makeSpace = function(movingShapes, resizingShapes, delta, direction) {\r\n  return this._modeling.createSpace(movingShapes, resizingShapes, delta, direction);\r\n};\r\n\r\n/**\r\n * Initialize make space and return true if that was successful.\r\n *\r\n * @param {Event} event\r\n * @param {Object} context\r\n *\r\n * @return {Boolean} true, if successful\r\n */\r\nSpaceTool.prototype.initializeMakeSpace = function(event, context) {\r\n\r\n  var axis = abs(event.dx) > abs(event.dy) ? 'x' : 'y',\r\n      offset = event['d' + axis],\r\n      // start point of create space operation\r\n      spacePos = event[axis] - offset;\r\n\r\n  if (abs(offset) < 5) {\r\n    return false;\r\n  }\r\n\r\n  // invert the offset in order to remove space when moving left\r\n  if (offset < 0) {\r\n    offset *= -1;\r\n  }\r\n\r\n  // inverts the offset to choose the shapes\r\n  // on the opposite side of the resizer if\r\n  // a key modifier is pressed\r\n  if (hasPrimaryModifier(event)) {\r\n    offset *= -1;\r\n  }\r\n\r\n  var rootShape = this._canvas.getRootElement();\r\n\r\n  var allShapes = getAllChildren(rootShape, true);\r\n\r\n  var adjustments = this.calculateAdjustments(allShapes, axis, offset, spacePos);\r\n\r\n  // store data in context\r\n  assign(context, adjustments, {\r\n    axis: axis,\r\n    direction: getDirection(axis, offset)\r\n  });\r\n\r\n  cursorSet('resize-' + (axis === 'x' ? 'ew' : 'ns'));\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Calculate adjustments needed when making space\r\n *\r\n * @param  {Array<djs.model.Shape>} elements\r\n * @param  {String} axis\r\n * @param  {Number} offset\r\n * @param  {Number} spacePos\r\n *\r\n * @return {Object}\r\n */\r\nSpaceTool.prototype.calculateAdjustments = function(elements, axis, offset, spacePos) {\r\n\r\n  var movingShapes = [],\r\n      resizingShapes = [];\r\n\r\n  var rules = this._rules;\r\n\r\n  // collect all elements that need to be moved _AND_\r\n  // resized given on the initial create space position\r\n  elements.forEach(function(shape) {\r\n\r\n    var shapeStart = shape[axis],\r\n        shapeEnd = shapeStart + shape[AXIS_TO_DIMENSION[axis]];\r\n\r\n    // checking if it's root\r\n    if (!shape.parent) {\r\n      return;\r\n    }\r\n\r\n    // checking if it's a shape\r\n    if (shape.waypoints) {\r\n      return;\r\n    }\r\n\r\n    // shape after spacePos\r\n    if (offset > 0 && shapeStart > spacePos) {\r\n      return movingShapes.push(shape);\r\n    }\r\n\r\n    // shape before spacePos\r\n    if (offset < 0 && shapeEnd < spacePos) {\r\n      return movingShapes.push(shape);\r\n    }\r\n\r\n    // shape on top of spacePos, resize only if allowed\r\n    if (shapeStart < spacePos &&\r\n        shapeEnd > spacePos &&\r\n        rules.allowed('shape.resize', { shape: shape })) {\r\n\r\n      return resizingShapes.push(shape);\r\n    }\r\n  });\r\n\r\n  return {\r\n    movingShapes: movingShapes,\r\n    resizingShapes: resizingShapes\r\n  };\r\n};\r\n\r\nSpaceTool.prototype.toggle = function() {\r\n  if (this.isActive()) {\r\n    this._dragging.cancel();\r\n  } else {\r\n    this.activateSelection();\r\n  }\r\n};\r\n\r\nSpaceTool.prototype.isActive = function() {\r\n  var context = this._dragging.context();\r\n\r\n  return context && /^spaceTool/.test(context.prefix);\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nvar MARKER_DRAGGING = 'djs-dragging',\r\n    MARKER_RESIZING = 'djs-resizing';\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  translate\r\n} from '../../util/SvgTransformUtil';\r\n\r\n\r\n/**\r\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n * @param {Canvas} canvas\r\n * @param {Styles} styles\r\n */\r\nexport default function SpaceToolPreview(\r\n    eventBus, elementRegistry, canvas,\r\n    styles, previewSupport) {\r\n\r\n  function addPreviewGfx(collection, dragGroup) {\r\n    forEach(collection, function(element) {\r\n      previewSupport.addDragger(element, dragGroup);\r\n\r\n      canvas.addMarker(element, MARKER_DRAGGING);\r\n    });\r\n  }\r\n\r\n  // add crosshair\r\n  eventBus.on('spaceTool.selection.start', function(event) {\r\n    var space = canvas.getLayer('space'),\r\n        context = event.context;\r\n\r\n    var orientation = {\r\n      x: 'M 0,-10000 L 0,10000',\r\n      y: 'M -10000,0 L 10000,0'\r\n    };\r\n\r\n    var crosshairGroup = svgCreate('g');\r\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', [ 'no-events' ]));\r\n\r\n    svgAppend(space, crosshairGroup);\r\n\r\n    // horizontal path\r\n    var pathX = svgCreate('path');\r\n    svgAttr(pathX, 'd', orientation.x);\r\n    svgClasses(pathX).add('djs-crosshair');\r\n\r\n    svgAppend(crosshairGroup, pathX);\r\n\r\n    // vertical path\r\n    var pathY = svgCreate('path');\r\n    svgAttr(pathY, 'd', orientation.y);\r\n    svgClasses(pathY).add('djs-crosshair');\r\n\r\n    svgAppend(crosshairGroup, pathY);\r\n\r\n    context.crosshairGroup = crosshairGroup;\r\n  });\r\n\r\n  // update crosshair\r\n  eventBus.on('spaceTool.selection.move', function(event) {\r\n    var crosshairGroup = event.context.crosshairGroup;\r\n\r\n    translate(crosshairGroup, event.x, event.y);\r\n  });\r\n\r\n  // remove crosshair\r\n  eventBus.on('spaceTool.selection.cleanup', function(event) {\r\n    var context = event.context,\r\n        crosshairGroup = context.crosshairGroup;\r\n\r\n    if (crosshairGroup) {\r\n      svgRemove(crosshairGroup);\r\n    }\r\n  });\r\n\r\n  // add and update move/resize previews\r\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function(event) {\r\n\r\n    var context = event.context,\r\n        line = context.line,\r\n        axis = context.axis,\r\n        movingShapes = context.movingShapes,\r\n        resizingShapes = context.resizingShapes;\r\n\r\n    if (!context.initialized) {\r\n      return;\r\n    }\r\n\r\n    if (!context.dragGroup) {\r\n      var spaceLayer = canvas.getLayer('space');\r\n\r\n      line = svgCreate('path');\r\n      svgAttr(line, 'd', 'M0,0 L0,0');\r\n      svgClasses(line).add('djs-crosshair');\r\n\r\n      svgAppend(spaceLayer, line);\r\n\r\n      context.line = line;\r\n\r\n      var dragGroup = svgCreate('g');\r\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n      svgAppend(canvas.getDefaultLayer(), dragGroup);\r\n\r\n      // shapes\r\n      addPreviewGfx(movingShapes, dragGroup);\r\n\r\n      // connections\r\n      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {\r\n        var sourceIsMoving = false;\r\n\r\n        forEach(movingShapes, function(shape) {\r\n          forEach(shape.outgoing, function(connection) {\r\n            if (element === connection) {\r\n              sourceIsMoving = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        var targetIsMoving = false;\r\n\r\n        forEach(movingShapes, function(shape) {\r\n          forEach(shape.incoming, function(connection) {\r\n            if (element === connection) {\r\n              targetIsMoving = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        var sourceIsResizing = false;\r\n\r\n        forEach(resizingShapes, function(shape) {\r\n          forEach(shape.outgoing, function(connection) {\r\n            if (element === connection) {\r\n              sourceIsResizing = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        var targetIsResizing = false;\r\n\r\n        forEach(resizingShapes, function(shape) {\r\n          forEach(shape.incoming, function(connection) {\r\n            if (element === connection) {\r\n              targetIsResizing = true;\r\n            }\r\n          });\r\n        });\r\n\r\n        return isConnection(element)\r\n          && (sourceIsMoving || sourceIsResizing)\r\n          && (targetIsMoving || targetIsResizing);\r\n      });\r\n\r\n\r\n      addPreviewGfx(movingConnections, dragGroup);\r\n\r\n      context.dragGroup = dragGroup;\r\n    }\r\n\r\n    if (!context.frameGroup) {\r\n      var frameGroup = svgCreate('g');\r\n      svgAttr(frameGroup, styles.cls('djs-frame-group', [ 'no-events' ]));\r\n\r\n      svgAppend(canvas.getDefaultLayer(), frameGroup);\r\n\r\n      var frames = [];\r\n\r\n      forEach(resizingShapes, function(shape) {\r\n        var frame = previewSupport.addFrame(shape, frameGroup);\r\n\r\n        frames.push({\r\n          element: frame,\r\n          initialWidth: frame.getBBox().width,\r\n          initialHeight: frame.getBBox().height\r\n        });\r\n\r\n        canvas.addMarker(shape, MARKER_RESIZING);\r\n      });\r\n\r\n      context.frameGroup = frameGroup;\r\n      context.frames = frames;\r\n    }\r\n\r\n    var orientation = {\r\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\r\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\r\n    };\r\n\r\n    svgAttr(line, { path: orientation[ axis ], display: '' });\r\n\r\n    var opposite = { x: 'y', y: 'x' };\r\n    var delta = { x: event.dx, y: event.dy };\r\n    delta[ opposite[ context.axis ] ] = 0;\r\n\r\n    // update move previews\r\n    translate(context.dragGroup, delta.x, delta.y);\r\n\r\n    // update resize previews\r\n    forEach(context.frames, function(frame) {\r\n      if (frame.initialWidth + delta.x > 5) {\r\n        svgAttr(frame.element, { width: frame.initialWidth + delta.x });\r\n      }\r\n\r\n      if (frame.initialHeight + delta.y > 5) {\r\n        svgAttr(frame.element, { height: frame.initialHeight + delta.y });\r\n      }\r\n    });\r\n\r\n  });\r\n\r\n  // remove move/resize previews\r\n  eventBus.on('spaceTool.cleanup', function(event) {\r\n\r\n    var context = event.context,\r\n        movingShapes = context.movingShapes,\r\n        movingConnections = context.movingConnections,\r\n        resizingShapes = context.resizingShapes,\r\n        line = context.line,\r\n        dragGroup = context.dragGroup,\r\n        frameGroup = context.frameGroup;\r\n\r\n    // moving shapes\r\n    forEach(movingShapes, function(shape) {\r\n      canvas.removeMarker(shape, MARKER_DRAGGING);\r\n    });\r\n\r\n    // moving connections\r\n    forEach(movingConnections, function(connection) {\r\n      canvas.removeMarker(connection, MARKER_DRAGGING);\r\n    });\r\n\r\n    if (dragGroup) {\r\n      svgRemove(line);\r\n      svgRemove(dragGroup);\r\n    }\r\n\r\n    forEach(resizingShapes, function(shape) {\r\n      canvas.removeMarker(shape, MARKER_RESIZING);\r\n    });\r\n\r\n    if (frameGroup) {\r\n      svgRemove(frameGroup);\r\n    }\r\n  });\r\n}\r\n\r\nSpaceToolPreview.$inject = [\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'canvas',\r\n  'styles',\r\n  'previewSupport'\r\n];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Checks if an element is a connection.\r\n */\r\nfunction isConnection(element) {\r\n  return element.waypoints;\r\n}\r\n","/**\r\n * Get Resize direction given axis + offset\r\n *\r\n * @param {String} axis (x|y)\r\n * @param {Number} offset\r\n *\r\n * @return {String} (e|w|n|s)\r\n */\r\nexport function getDirection(axis, offset) {\r\n\r\n  if (axis === 'x') {\r\n    if (offset > 0) {\r\n      return 'e';\r\n    }\r\n\r\n    if (offset < 0) {\r\n      return 'w';\r\n    }\r\n  }\r\n\r\n  if (axis === 'y') {\r\n    if (offset > 0) {\r\n      return 's';\r\n    }\r\n\r\n    if (offset < 0) {\r\n      return 'n';\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * Resize the given bounds by the specified delta from a given anchor point.\r\n *\r\n * @param {Bounds} bounds the bounding box that should be resized\r\n * @param {String} direction in which the element is resized (n, s, e, w)\r\n * @param {Point} delta of the resize operation\r\n *\r\n * @return {Bounds} resized bounding box\r\n */\r\nexport function resizeBounds(bounds, direction, delta) {\r\n\r\n  var dx = delta.x,\r\n      dy = delta.y;\r\n\r\n  switch (direction) {\r\n\r\n  case 'n':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y + dy,\r\n      width: bounds.width,\r\n      height: bounds.height - dy\r\n    };\r\n\r\n  case 's':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width,\r\n      height: bounds.height + dy\r\n    };\r\n\r\n  case 'w':\r\n    return {\r\n      x: bounds.x + dx,\r\n      y: bounds.y,\r\n      width: bounds.width - dx,\r\n      height: bounds.height\r\n    };\r\n\r\n  case 'e':\r\n    return {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width + dx,\r\n      height: bounds.height\r\n    };\r\n\r\n  default:\r\n    throw new Error('unrecognized direction: ' + direction);\r\n  }\r\n}","import DraggingModule from '../dragging';\r\nimport RulesModule from '../rules';\r\nimport ToolManagerModule from '../tool-manager';\r\nimport PreviewSupportModule from '../preview-support';\r\n\r\nimport SpaceTool from './SpaceTool';\r\nimport SpaceToolPreview from './SpaceToolPreview';\r\n\r\nexport default {\r\n  __init__: ['spaceToolPreview'],\r\n  __depends__: [\r\n    DraggingModule,\r\n    RulesModule,\r\n    ToolManagerModule,\r\n    PreviewSupportModule\r\n  ],\r\n  spaceTool: ['type', SpaceTool ],\r\n  spaceToolPreview: ['type', SpaceToolPreview ]\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  closest as domClosest\r\n} from 'min-dom';\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\n/**\r\n * The tool manager acts as middle-man between the available tool's and the Palette,\r\n * it takes care of making sure that the correct active state is set.\r\n *\r\n * @param  {Object}    eventBus\r\n * @param  {Object}    dragging\r\n */\r\nexport default function ToolManager(eventBus, dragging) {\r\n  this._eventBus = eventBus;\r\n  this._dragging = dragging;\r\n\r\n  this._tools = [];\r\n  this._active = null;\r\n}\r\n\r\nToolManager.$inject = [ 'eventBus', 'dragging' ];\r\n\r\nToolManager.prototype.registerTool = function(name, events) {\r\n  var tools = this._tools;\r\n\r\n  if (!events) {\r\n    throw new Error('A tool has to be registered with it\\'s \"events\"');\r\n  }\r\n\r\n  tools.push(name);\r\n\r\n  this.bindEvents(name, events);\r\n};\r\n\r\nToolManager.prototype.isActive = function(tool) {\r\n  return tool && this._active === tool;\r\n};\r\n\r\nToolManager.prototype.length = function(tool) {\r\n  return this._tools.length;\r\n};\r\n\r\nToolManager.prototype.setActive = function(tool) {\r\n  var eventBus = this._eventBus;\r\n\r\n  if (this._active !== tool) {\r\n    this._active = tool;\r\n\r\n    eventBus.fire('tool-manager.update', { tool: tool });\r\n  }\r\n};\r\n\r\nToolManager.prototype.bindEvents = function(name, events) {\r\n  var eventBus = this._eventBus,\r\n      dragging = this._dragging;\r\n\r\n  var eventsToRegister = [];\r\n\r\n  eventBus.on(events.tool + '.init', function(event) {\r\n    var context = event.context;\r\n\r\n    // Active tools that want to reactivate themselves must do this explicitly\r\n    if (!context.reactivate && this.isActive(name)) {\r\n      this.setActive(null);\r\n\r\n      dragging.cancel();\r\n      return;\r\n    }\r\n\r\n    this.setActive(name);\r\n\r\n  }, this);\r\n\r\n  // Todo[ricardo]: add test cases\r\n  forEach(events, function(event) {\r\n    eventsToRegister.push(event + '.ended');\r\n    eventsToRegister.push(event + '.canceled');\r\n  });\r\n\r\n  eventBus.on(eventsToRegister, LOW_PRIORITY, function(event) {\r\n    var originalEvent = event.originalEvent;\r\n\r\n    // We defer the de-activation of the tool to the .activate phase,\r\n    // so we're able to check if we want to toggle off the current\r\n    // active tool or switch to a new one\r\n    if (!this._active) {\r\n      return;\r\n    }\r\n\r\n    if (originalEvent && domClosest(originalEvent.target, '.group[data-group=\"tools\"]')) {\r\n      return;\r\n    }\r\n\r\n    this.setActive(null);\r\n  }, this);\r\n};\r\n","import DraggingModule from '../dragging';\r\n\r\nimport ToolManager from './ToolManager';\r\n\r\nexport default {\r\n  __depends__: [\r\n    DraggingModule\r\n  ],\r\n  __init__: [ 'toolManager' ],\r\n  toolManager: [ 'type', ToolManager ]\r\n};\r\n","import {\r\n  isString,\r\n  assign,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  attr as domAttr,\r\n  classes as domClasses,\r\n  remove as domRemove,\r\n  delegate as domDelegate\r\n} from 'min-dom';\r\n\r\nimport Ids from '../../util/IdGenerator';\r\n\r\n// document wide unique tooltip ids\r\nvar ids = new Ids('tt');\r\n\r\n\r\nfunction createRoot(parentNode) {\r\n  var root = domify(\r\n    '<div class=\"djs-tooltip-container\" style=\"position: absolute; width: 0; height: 0;\" />'\r\n  );\r\n\r\n  parentNode.insertBefore(root, parentNode.firstChild);\r\n\r\n  return root;\r\n}\r\n\r\n\r\nfunction setPosition(el, x, y) {\r\n  assign(el.style, { left: x + 'px', top: y + 'px' });\r\n}\r\n\r\nfunction setVisible(el, visible) {\r\n  el.style.display = visible === false ? 'none' : '';\r\n}\r\n\r\n\r\nvar tooltipClass = 'djs-tooltip',\r\n    tooltipSelector = '.' + tooltipClass;\r\n\r\n/**\r\n * A service that allows users to render tool tips on the diagram.\r\n *\r\n * The tooltip service will take care of updating the tooltip positioning\r\n * during navigation + zooming.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n *\r\n * // add a pink badge on the top left of the shape\r\n * tooltips.add({\r\n *   position: {\r\n *     x: 50,\r\n *     y: 100\r\n *   },\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\r\n * });\r\n *\r\n * // or with optional life span\r\n * tooltips.add({\r\n *   position: {\r\n *     top: -5,\r\n *     left: -5\r\n *   },\r\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>',\r\n *   ttl: 2000\r\n * });\r\n *\r\n * // remove a tool tip\r\n * var id = tooltips.add(...);\r\n * tooltips.remove(id);\r\n * ```\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function Tooltips(eventBus, canvas) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  this._ids = ids;\r\n\r\n  this._tooltipDefaults = {\r\n    show: {\r\n      minZoom: 0.7,\r\n      maxZoom: 5.0\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mapping tooltipId -> tooltip\r\n   */\r\n  this._tooltips = {};\r\n\r\n  // root html element for all tooltips\r\n  this._tooltipRoot = createRoot(canvas.getContainer());\r\n\r\n\r\n  var self = this;\r\n\r\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseover', function(event) {\r\n    self.trigger('mouseover', event);\r\n  });\r\n\r\n  domDelegate.bind(this._tooltipRoot, tooltipSelector, 'mouseout', function(event) {\r\n    self.trigger('mouseout', event);\r\n  });\r\n\r\n  this._init();\r\n}\r\n\r\n\r\nTooltips.$inject = [ 'eventBus', 'canvas' ];\r\n\r\n\r\n/**\r\n * Adds a HTML tooltip to the diagram\r\n *\r\n * @param {Object}               tooltip   the tooltip configuration\r\n *\r\n * @param {String|DOMElement}    tooltip.html                 html element to use as an tooltip\r\n * @param {Object}               [tooltip.show]               show configuration\r\n * @param {Number}               [tooltip.show.minZoom]       minimal zoom level to show the tooltip\r\n * @param {Number}               [tooltip.show.maxZoom]       maximum zoom level to show the tooltip\r\n * @param {Object}               tooltip.position             where to attach the tooltip\r\n * @param {Number}               [tooltip.position.left]      relative to element bbox left attachment\r\n * @param {Number}               [tooltip.position.top]       relative to element bbox top attachment\r\n * @param {Number}               [tooltip.position.bottom]    relative to element bbox bottom attachment\r\n * @param {Number}               [tooltip.position.right]     relative to element bbox right attachment\r\n * @param {Number}               [tooltip.timeout=-1]\r\n *\r\n * @return {String}              id that may be used to reference the tooltip for update or removal\r\n */\r\nTooltips.prototype.add = function(tooltip) {\r\n\r\n  if (!tooltip.position) {\r\n    throw new Error('must specifiy tooltip position');\r\n  }\r\n\r\n  if (!tooltip.html) {\r\n    throw new Error('must specifiy tooltip html');\r\n  }\r\n\r\n  var id = this._ids.next();\r\n\r\n  tooltip = assign({}, this._tooltipDefaults, tooltip, {\r\n    id: id\r\n  });\r\n\r\n  this._addTooltip(tooltip);\r\n\r\n  if (tooltip.timeout) {\r\n    this.setTimeout(tooltip);\r\n  }\r\n\r\n  return id;\r\n};\r\n\r\nTooltips.prototype.trigger = function(action, event) {\r\n\r\n  var node = event.delegateTarget || event.target;\r\n\r\n  var tooltip = this.get(domAttr(node, 'data-tooltip-id'));\r\n\r\n  if (!tooltip) {\r\n    return;\r\n  }\r\n\r\n  if (action === 'mouseover' && tooltip.timeout) {\r\n    this.clearTimeout(tooltip);\r\n  }\r\n\r\n  if (action === 'mouseout' && tooltip.timeout) {\r\n    // cut timeout after mouse out\r\n    tooltip.timeout = 1000;\r\n\r\n    this.setTimeout(tooltip);\r\n  }\r\n};\r\n\r\n/**\r\n * Get a tooltip with the given id\r\n *\r\n * @param {String} id\r\n */\r\nTooltips.prototype.get = function(id) {\r\n\r\n  if (typeof id !== 'string') {\r\n    id = id.id;\r\n  }\r\n\r\n  return this._tooltips[id];\r\n};\r\n\r\nTooltips.prototype.clearTimeout = function(tooltip) {\r\n\r\n  tooltip = this.get(tooltip);\r\n\r\n  if (!tooltip) {\r\n    return;\r\n  }\r\n\r\n  var removeTimer = tooltip.removeTimer;\r\n\r\n  if (removeTimer) {\r\n    clearTimeout(removeTimer);\r\n    tooltip.removeTimer = null;\r\n  }\r\n};\r\n\r\nTooltips.prototype.setTimeout = function(tooltip) {\r\n\r\n  tooltip = this.get(tooltip);\r\n\r\n  if (!tooltip) {\r\n    return;\r\n  }\r\n\r\n  this.clearTimeout(tooltip);\r\n\r\n  var self = this;\r\n\r\n  tooltip.removeTimer = setTimeout(function() {\r\n    self.remove(tooltip);\r\n  }, tooltip.timeout);\r\n};\r\n\r\n/**\r\n * Remove an tooltip with the given id\r\n *\r\n * @param {String} id\r\n */\r\nTooltips.prototype.remove = function(id) {\r\n\r\n  var tooltip = this.get(id);\r\n\r\n  if (tooltip) {\r\n    domRemove(tooltip.html);\r\n    domRemove(tooltip.htmlContainer);\r\n\r\n    delete tooltip.htmlContainer;\r\n\r\n    delete this._tooltips[tooltip.id];\r\n  }\r\n};\r\n\r\n\r\nTooltips.prototype.show = function() {\r\n  setVisible(this._tooltipRoot);\r\n};\r\n\r\n\r\nTooltips.prototype.hide = function() {\r\n  setVisible(this._tooltipRoot, false);\r\n};\r\n\r\n\r\nTooltips.prototype._updateRoot = function(viewbox) {\r\n  var a = viewbox.scale || 1;\r\n  var d = viewbox.scale || 1;\r\n\r\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + (-1 * viewbox.x * a) + ',' + (-1 * viewbox.y * d) + ')';\r\n\r\n  this._tooltipRoot.style.transform = matrix;\r\n  this._tooltipRoot.style['-ms-transform'] = matrix;\r\n};\r\n\r\n\r\nTooltips.prototype._addTooltip = function(tooltip) {\r\n\r\n  var id = tooltip.id,\r\n      html = tooltip.html,\r\n      htmlContainer,\r\n      tooltipRoot = this._tooltipRoot;\r\n\r\n  // unwrap jquery (for those who need it)\r\n  if (html.get && html.constructor.prototype.jquery) {\r\n    html = html.get(0);\r\n  }\r\n\r\n  // create proper html elements from\r\n  // tooltip HTML strings\r\n  if (isString(html)) {\r\n    html = domify(html);\r\n  }\r\n\r\n  htmlContainer = domify('<div data-tooltip-id=\"' + id + '\" class=\"' + tooltipClass + '\" style=\"position: absolute\">');\r\n\r\n  htmlContainer.appendChild(html);\r\n\r\n  if (tooltip.type) {\r\n    domClasses(htmlContainer).add('djs-tooltip-' + tooltip.type);\r\n  }\r\n\r\n  if (tooltip.className) {\r\n    domClasses(htmlContainer).add(tooltip.className);\r\n  }\r\n\r\n  tooltip.htmlContainer = htmlContainer;\r\n\r\n  tooltipRoot.appendChild(htmlContainer);\r\n\r\n  this._tooltips[id] = tooltip;\r\n\r\n  this._updateTooltip(tooltip);\r\n};\r\n\r\n\r\nTooltips.prototype._updateTooltip = function(tooltip) {\r\n\r\n  var position = tooltip.position,\r\n      htmlContainer = tooltip.htmlContainer;\r\n\r\n  // update overlay html based on tooltip x, y\r\n\r\n  setPosition(htmlContainer, position.x, position.y);\r\n};\r\n\r\n\r\nTooltips.prototype._updateTooltipVisibilty = function(viewbox) {\r\n\r\n  forEach(this._tooltips, function(tooltip) {\r\n    var show = tooltip.show,\r\n        htmlContainer = tooltip.htmlContainer,\r\n        visible = true;\r\n\r\n    if (show) {\r\n      if (show.minZoom > viewbox.scale ||\r\n          show.maxZoom < viewbox.scale) {\r\n        visible = false;\r\n      }\r\n\r\n      setVisible(htmlContainer, visible);\r\n    }\r\n  });\r\n};\r\n\r\nTooltips.prototype._init = function() {\r\n\r\n  var self = this;\r\n\r\n  // scroll/zoom integration\r\n\r\n  function updateViewbox(viewbox) {\r\n    self._updateRoot(viewbox);\r\n    self._updateTooltipVisibilty(viewbox);\r\n\r\n    self.show();\r\n  }\r\n\r\n  this._eventBus.on('canvas.viewbox.changing', function(event) {\r\n    self.hide();\r\n  });\r\n\r\n  this._eventBus.on('canvas.viewbox.changed', function(event) {\r\n    updateViewbox(event.viewbox);\r\n  });\r\n};\r\n","import Tooltips from './Tooltips';\r\n\r\nexport default {\r\n  __init__: [ 'tooltips' ],\r\n  tooltips: [ 'type', Tooltips ]\r\n};","import {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\n\r\nexport default function TouchFix(canvas, eventBus) {\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('canvas.init', function(e) {\r\n    self.addBBoxMarker(e.svg);\r\n  });\r\n}\r\n\r\nTouchFix.$inject = [ 'canvas', 'eventBus' ];\r\n\r\n\r\n/**\r\n * Safari mobile (iOS 7) does not fire touchstart event in <SVG> element\r\n * if there is no shape between 0,0 and viewport elements origin.\r\n *\r\n * So touchstart event is only fired when the <g class=\"viewport\"> element was hit.\r\n * Putting an element over and below the 'viewport' fixes that behavior.\r\n */\r\nTouchFix.prototype.addBBoxMarker = function(svg) {\r\n\r\n  var markerStyle = {\r\n    fill: 'none',\r\n    class: 'outer-bound-marker'\r\n  };\r\n\r\n  var rect1 = svgCreate('rect');\r\n  svgAttr(rect1, {\r\n    x: -10000,\r\n    y: 10000,\r\n    width: 10,\r\n    height: 10\r\n  });\r\n  svgAttr(rect1, markerStyle);\r\n\r\n  svgAppend(svg, rect1);\r\n\r\n  var rect2 = svgCreate('rect');\r\n  svgAttr(rect2, {\r\n    x: 10000,\r\n    y: 10000,\r\n    width: 10,\r\n    height: 10\r\n  });\r\n  svgAttr(rect2, markerStyle);\r\n\r\n  svgAppend(svg, rect2);\r\n};\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  event as domEvent,\r\n  closest as domClosest\r\n} from 'min-dom';\r\n\r\nimport Hammer from 'hammerjs';\r\n\r\nimport {\r\n  toPoint\r\n} from '../../util/Event';\r\n\r\nvar MIN_ZOOM = 0.2,\r\n    MAX_ZOOM = 4;\r\n\r\nvar mouseEvents = [\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'click',\r\n  'dblclick'\r\n];\r\n\r\nfunction log() {\r\n  // console.log.apply(console, arguments);\r\n}\r\n\r\nfunction get(service, injector) {\r\n  return injector.get(service, false);\r\n}\r\n\r\nfunction stopEvent(event) {\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  if (typeof event.stopImmediatePropagation === 'function') {\r\n    event.stopImmediatePropagation();\r\n  }\r\n}\r\n\r\n\r\nfunction createTouchRecognizer(node) {\r\n\r\n  function stopMouse(event) {\r\n\r\n    forEach(mouseEvents, function(e) {\r\n      domEvent.bind(node, e, stopEvent, true);\r\n    });\r\n  }\r\n\r\n  function allowMouse(event) {\r\n    setTimeout(function() {\r\n      forEach(mouseEvents, function(e) {\r\n        domEvent.unbind(node, e, stopEvent, true);\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  domEvent.bind(node, 'touchstart', stopMouse, true);\r\n  domEvent.bind(node, 'touchend', allowMouse, true);\r\n  domEvent.bind(node, 'touchcancel', allowMouse, true);\r\n\r\n  // A touch event recognizer that handles\r\n  // touch events only (we know, we can already handle\r\n  // mouse events out of the box)\r\n\r\n  var recognizer = new Hammer.Manager(node, {\r\n    inputClass: Hammer.TouchInput,\r\n    recognizers: []\r\n  });\r\n\r\n\r\n  var tap = new Hammer.Tap();\r\n  var pan = new Hammer.Pan({ threshold: 10 });\r\n  var press = new Hammer.Press();\r\n  var pinch = new Hammer.Pinch();\r\n\r\n  var doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\r\n\r\n  pinch.requireFailure(pan);\r\n  pinch.requireFailure(press);\r\n\r\n  recognizer.add([ pan, press, pinch, doubleTap, tap ]);\r\n\r\n  recognizer.reset = function(force) {\r\n    var recognizers = this.recognizers,\r\n        session = this.session;\r\n\r\n    if (session.stopped) {\r\n      return;\r\n    }\r\n\r\n    log('recognizer', 'stop');\r\n\r\n    recognizer.stop(force);\r\n\r\n    setTimeout(function() {\r\n      var i, r;\r\n\r\n      log('recognizer', 'reset');\r\n      for (i = 0; (r = recognizers[i]); i++) {\r\n        r.reset();\r\n        r.state = 8; // FAILED STATE\r\n      }\r\n\r\n      session.curRecognizer = null;\r\n    }, 0);\r\n  };\r\n\r\n  recognizer.on('hammer.input', function(event) {\r\n    if (event.srcEvent.defaultPrevented) {\r\n      recognizer.reset(true);\r\n    }\r\n  });\r\n\r\n  return recognizer;\r\n}\r\n\r\n/**\r\n * A plugin that provides touch events for elements.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {InteractionEvents} interactionEvents\r\n */\r\nexport default function TouchInteractionEvents(\r\n    injector, canvas, eventBus,\r\n    elementRegistry, interactionEvents) {\r\n\r\n  // optional integrations\r\n  var dragging = get('dragging', injector),\r\n      move = get('move', injector),\r\n      contextPad = get('contextPad', injector),\r\n      palette = get('palette', injector);\r\n\r\n  // the touch recognizer\r\n  var recognizer;\r\n\r\n  function handler(type) {\r\n\r\n    return function(event) {\r\n      log('element', type, event);\r\n\r\n      interactionEvents.fire(type, event);\r\n    };\r\n  }\r\n\r\n  function getGfx(target) {\r\n    var node = domClosest(target, 'svg, .djs-element', true);\r\n    return node;\r\n  }\r\n\r\n  function initEvents(svg) {\r\n\r\n    // touch recognizer\r\n    recognizer = createTouchRecognizer(svg);\r\n\r\n    recognizer.on('doubletap', handler('element.dblclick'));\r\n\r\n    recognizer.on('tap', handler('element.click'));\r\n\r\n    function startGrabCanvas(event) {\r\n\r\n      log('canvas', 'grab start');\r\n\r\n      var lx = 0, ly = 0;\r\n\r\n      function update(e) {\r\n\r\n        var dx = e.deltaX - lx,\r\n            dy = e.deltaY - ly;\r\n\r\n        canvas.scroll({ dx: dx, dy: dy });\r\n\r\n        lx = e.deltaX;\r\n        ly = e.deltaY;\r\n      }\r\n\r\n      function end(e) {\r\n        recognizer.off('panmove', update);\r\n        recognizer.off('panend', end);\r\n        recognizer.off('pancancel', end);\r\n\r\n        log('canvas', 'grab end');\r\n      }\r\n\r\n      recognizer.on('panmove', update);\r\n      recognizer.on('panend', end);\r\n      recognizer.on('pancancel', end);\r\n    }\r\n\r\n    function startGrab(event) {\r\n\r\n      var gfx = getGfx(event.target),\r\n          element = gfx && elementRegistry.get(gfx);\r\n\r\n      // recognizer\r\n      if (move && canvas.getRootElement() !== element) {\r\n        log('element', 'move start', element, event, true);\r\n        return move.start(event, element, true);\r\n      } else {\r\n        startGrabCanvas(event);\r\n      }\r\n    }\r\n\r\n    function startZoom(e) {\r\n\r\n      log('canvas', 'zoom start');\r\n\r\n      var zoom = canvas.zoom(),\r\n          mid = e.center;\r\n\r\n      function update(e) {\r\n\r\n        var ratio = 1 - (1 - e.scale) / 1.50,\r\n            newZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, ratio * zoom));\r\n\r\n        canvas.zoom(newZoom, mid);\r\n\r\n        stopEvent(e);\r\n      }\r\n\r\n      function end(e) {\r\n        recognizer.off('pinchmove', update);\r\n        recognizer.off('pinchend', end);\r\n        recognizer.off('pinchcancel', end);\r\n\r\n        recognizer.reset(true);\r\n\r\n        log('canvas', 'zoom end');\r\n      }\r\n\r\n      recognizer.on('pinchmove', update);\r\n      recognizer.on('pinchend', end);\r\n      recognizer.on('pinchcancel', end);\r\n    }\r\n\r\n    recognizer.on('panstart', startGrab);\r\n    recognizer.on('press', startGrab);\r\n\r\n    recognizer.on('pinchstart', startZoom);\r\n  }\r\n\r\n  if (dragging) {\r\n\r\n    // simulate hover during dragging\r\n    eventBus.on('drag.move', function(event) {\r\n\r\n      var originalEvent = event.originalEvent;\r\n\r\n      if (!originalEvent || originalEvent instanceof MouseEvent) {\r\n        return;\r\n      }\r\n\r\n      var position = toPoint(originalEvent);\r\n\r\n      // this gets really expensive ...\r\n      var node = document.elementFromPoint(position.x, position.y),\r\n          gfx = getGfx(node),\r\n          element = gfx && elementRegistry.get(gfx);\r\n\r\n      if (element !== event.hover) {\r\n        if (event.hover) {\r\n          dragging.out(event);\r\n        }\r\n\r\n        if (element) {\r\n          dragging.hover({ element: element, gfx: gfx });\r\n\r\n          event.hover = element;\r\n          event.hoverGfx = gfx;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (contextPad) {\r\n\r\n    eventBus.on('contextPad.create', function(event) {\r\n      var node = event.pad.html;\r\n\r\n      // touch recognizer\r\n      var padRecognizer = createTouchRecognizer(node);\r\n\r\n      padRecognizer.on('panstart', function(event) {\r\n        log('context-pad', 'panstart', event);\r\n        contextPad.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('press', function(event) {\r\n        log('context-pad', 'press', event);\r\n        contextPad.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('tap', function(event) {\r\n        log('context-pad', 'tap', event);\r\n        contextPad.trigger('click', event);\r\n      });\r\n    });\r\n  }\r\n\r\n  if (palette) {\r\n    eventBus.on('palette.create', function(event) {\r\n      var node = event.container;\r\n\r\n      // touch recognizer\r\n      var padRecognizer = createTouchRecognizer(node);\r\n\r\n      padRecognizer.on('panstart', function(event) {\r\n        log('palette', 'panstart', event);\r\n        palette.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('press', function(event) {\r\n        log('palette', 'press', event);\r\n        palette.trigger('dragstart', event, true);\r\n      });\r\n\r\n      padRecognizer.on('tap', function(event) {\r\n        log('palette', 'tap', event);\r\n        palette.trigger('click', event);\r\n      });\r\n    });\r\n  }\r\n\r\n  eventBus.on('canvas.init', function(event) {\r\n    initEvents(event.svg);\r\n  });\r\n}\r\n\r\n\r\nTouchInteractionEvents.$inject = [\r\n  'injector',\r\n  'canvas',\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'interactionEvents',\r\n  'touchFix'\r\n];\r\n","import InteractionEventsModule from '../interaction-events';\r\n\r\nimport TouchInteractionEvents from './TouchInteractionEvents';\r\nimport TouchFix from './TouchFix';\r\n\r\nexport default {\r\n  __depends__: [ InteractionEventsModule ],\r\n  __init__: [ 'touchInteractionEvents' ],\r\n  touchInteractionEvents: [ 'type', TouchInteractionEvents ],\r\n  touchFix: [ 'type', TouchFix ]\r\n};","import translate from './translate';\r\n\r\nexport default {\r\n  translate: [ 'value', translate ]\r\n};","/**\r\n * A simple translation stub to be used for multi-language support\r\n * in diagrams. Can be easily replaced with a more sophisticated\r\n * solution.\r\n *\r\n * @example\r\n *\r\n * // use it inside any diagram component by injecting `translate`.\r\n *\r\n * function MyService(translate) {\r\n *   alert(translate('HELLO {you}', { you: 'You!' }));\r\n * }\r\n *\r\n * @param {String} template to interpolate\r\n * @param {Object} [replacements] a map with substitutes\r\n *\r\n * @return {String} the translated string\r\n */\r\nexport default function translate(template, replacements) {\r\n\r\n  replacements = replacements || {};\r\n\r\n  return template.replace(/{([^}]+)}/g, function(_, key) {\r\n    return replacements[key] || '{' + key + '}';\r\n  });\r\n}","import {\r\n  getMid\r\n} from './LayoutUtil';\r\n\r\n\r\n/**\r\n * A base connection layouter implementation\r\n * that layouts the connection by directly connecting\r\n * mid(source) + mid(target).\r\n */\r\nexport default function BaseLayouter() {}\r\n\r\n\r\n/**\r\n * Return the new layouted waypoints for the given connection.\r\n *\r\n * The connection passed is still unchanged; you may figure out about\r\n * the new connection start / end via the layout hints provided.\r\n *\r\n * @param {djs.model.Connection} connection\r\n * @param {Object} [hints]\r\n * @param {Point} [hints.connectionStart]\r\n * @param {Point} [hints.connectionEnd]\r\n *\r\n * @return {Array<Point>} the layouted connection waypoints\r\n */\r\nBaseLayouter.prototype.layoutConnection = function(connection, hints) {\r\n\r\n  hints = hints || {};\r\n\r\n  return [\r\n    hints.connectionStart || getMid(connection.source),\r\n    hints.connectionEnd || getMid(connection.target)\r\n  ];\r\n};\r\n","import {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getElementLineIntersection\r\n} from './LayoutUtil';\r\n\r\n\r\nfunction dockingToPoint(docking) {\r\n  // use the dockings actual point and\r\n  // retain the original docking\r\n  return assign({ original: docking.point.original || docking.point }, docking.actual);\r\n}\r\n\r\n\r\n/**\r\n * A {@link ConnectionDocking} that crops connection waypoints based on\r\n * the path(s) of the connection source and target.\r\n *\r\n * @param {djs.core.ElementRegistry} elementRegistry\r\n */\r\nexport default function CroppingConnectionDocking(elementRegistry, graphicsFactory) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._graphicsFactory = graphicsFactory;\r\n}\r\n\r\nCroppingConnectionDocking.$inject = [ 'elementRegistry', 'graphicsFactory' ];\r\n\r\n\r\n/**\r\n * @inheritDoc ConnectionDocking#getCroppedWaypoints\r\n */\r\nCroppingConnectionDocking.prototype.getCroppedWaypoints = function(connection, source, target) {\r\n\r\n  source = source || connection.source;\r\n  target = target || connection.target;\r\n\r\n  var sourceDocking = this.getDockingPoint(connection, source, true),\r\n      targetDocking = this.getDockingPoint(connection, target);\r\n\r\n  var croppedWaypoints = connection.waypoints.slice(sourceDocking.idx + 1, targetDocking.idx);\r\n\r\n  croppedWaypoints.unshift(dockingToPoint(sourceDocking));\r\n  croppedWaypoints.push(dockingToPoint(targetDocking));\r\n\r\n  return croppedWaypoints;\r\n};\r\n\r\n/**\r\n * Return the connection docking point on the specified shape\r\n *\r\n * @inheritDoc ConnectionDocking#getDockingPoint\r\n */\r\nCroppingConnectionDocking.prototype.getDockingPoint = function(connection, shape, dockStart) {\r\n\r\n  var waypoints = connection.waypoints,\r\n      dockingIdx,\r\n      dockingPoint,\r\n      croppedPoint;\r\n\r\n  dockingIdx = dockStart ? 0 : waypoints.length - 1;\r\n  dockingPoint = waypoints[dockingIdx];\r\n\r\n  croppedPoint = this._getIntersection(shape, connection, dockStart);\r\n\r\n  return {\r\n    point: dockingPoint,\r\n    actual: croppedPoint || dockingPoint,\r\n    idx: dockingIdx\r\n  };\r\n};\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nCroppingConnectionDocking.prototype._getIntersection = function(shape, connection, takeFirst) {\r\n\r\n  var shapePath = this._getShapePath(shape),\r\n      connectionPath = this._getConnectionPath(connection);\r\n\r\n  return getElementLineIntersection(shapePath, connectionPath, takeFirst);\r\n};\r\n\r\nCroppingConnectionDocking.prototype._getConnectionPath = function(connection) {\r\n  return this._graphicsFactory.getConnectionPath(connection);\r\n};\r\n\r\nCroppingConnectionDocking.prototype._getShapePath = function(shape) {\r\n  return this._graphicsFactory.getShapePath(shape);\r\n};\r\n\r\nCroppingConnectionDocking.prototype._getGfx = function(element) {\r\n  return this._elementRegistry.getGraphics(element);\r\n};\r\n","import {\r\n  isObject,\r\n  sortBy\r\n} from 'min-dash';\r\n\r\nimport {\r\n  pointDistance\r\n} from '../util/Geometry';\r\n\r\nimport intersectPaths from 'path-intersection';\r\n\r\n\r\nexport function roundBounds(bounds) {\r\n  return {\r\n    x: Math.round(bounds.x),\r\n    y: Math.round(bounds.y),\r\n    width: Math.round(bounds.width),\r\n    height: Math.round(bounds.height)\r\n  };\r\n}\r\n\r\n\r\nexport function roundPoint(point) {\r\n\r\n  return {\r\n    x: Math.round(point.x),\r\n    y: Math.round(point.y)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Convert the given bounds to a { top, left, bottom, right } descriptor.\r\n *\r\n * @param {Bounds|Point} bounds\r\n *\r\n * @return {Object}\r\n */\r\nexport function asTRBL(bounds) {\r\n  return {\r\n    top: bounds.y,\r\n    right: bounds.x + (bounds.width || 0),\r\n    bottom: bounds.y + (bounds.height || 0),\r\n    left: bounds.x\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Convert a { top, left, bottom, right } to an objects bounds.\r\n *\r\n * @param {Object} trbl\r\n *\r\n * @return {Bounds}\r\n */\r\nexport function asBounds(trbl) {\r\n  return {\r\n    x: trbl.left,\r\n    y: trbl.top,\r\n    width: trbl.right - trbl.left,\r\n    height: trbl.bottom - trbl.top\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Get the mid of the given bounds or point.\r\n *\r\n * @param {Bounds|Point} bounds\r\n *\r\n * @return {Point}\r\n */\r\nexport function getMid(bounds) {\r\n  return roundPoint({\r\n    x: bounds.x + (bounds.width || 0) / 2,\r\n    y: bounds.y + (bounds.height || 0) / 2\r\n  });\r\n}\r\n\r\n\r\n// orientation utils //////////////////////\r\n\r\n/**\r\n * Get orientation of the given rectangle with respect to\r\n * the reference rectangle.\r\n *\r\n * A padding (positive or negative) may be passed to influence\r\n * horizontal / vertical orientation and intersection.\r\n *\r\n * @param {Bounds} rect\r\n * @param {Bounds} reference\r\n * @param {Point|Number} padding\r\n *\r\n * @return {String} the orientation; one of top, top-left, left, ..., bottom, right or intersect.\r\n */\r\nexport function getOrientation(rect, reference, padding) {\r\n\r\n  padding = padding || 0;\r\n\r\n  // make sure we can use an object, too\r\n  // for individual { x, y } padding\r\n  if (!isObject(padding)) {\r\n    padding = { x: padding, y: padding };\r\n  }\r\n\r\n\r\n  var rectOrientation = asTRBL(rect),\r\n      referenceOrientation = asTRBL(reference);\r\n\r\n  var top = rectOrientation.bottom + padding.y <= referenceOrientation.top,\r\n      right = rectOrientation.left - padding.x >= referenceOrientation.right,\r\n      bottom = rectOrientation.top - padding.y >= referenceOrientation.bottom,\r\n      left = rectOrientation.right + padding.x <= referenceOrientation.left;\r\n\r\n  var vertical = top ? 'top' : (bottom ? 'bottom' : null),\r\n      horizontal = left ? 'left' : (right ? 'right' : null);\r\n\r\n  if (horizontal && vertical) {\r\n    return vertical + '-' + horizontal;\r\n  } else {\r\n    return horizontal || vertical || 'intersect';\r\n  }\r\n}\r\n\r\n\r\n// intersection utils //////////////////////\r\n\r\n/**\r\n * Get intersection between an element and a line path.\r\n *\r\n * @param {PathDef} elementPath\r\n * @param {PathDef} linePath\r\n * @param {Boolean} cropStart crop from start or end\r\n *\r\n * @return {Point}\r\n */\r\nexport function getElementLineIntersection(elementPath, linePath, cropStart) {\r\n\r\n  var intersections = getIntersections(elementPath, linePath);\r\n\r\n  // recognize intersections\r\n  // only one -> choose\r\n  // two close together -> choose first\r\n  // two or more distinct -> pull out appropriate one\r\n  // none -> ok (fallback to point itself)\r\n  if (intersections.length === 1) {\r\n    return roundPoint(intersections[0]);\r\n  } else if (intersections.length === 2 && pointDistance(intersections[0], intersections[1]) < 1) {\r\n    return roundPoint(intersections[0]);\r\n  } else if (intersections.length > 1) {\r\n\r\n    // sort by intersections based on connection segment +\r\n    // distance from start\r\n    intersections = sortBy(intersections, function(i) {\r\n      var distance = Math.floor(i.t2 * 100) || 1;\r\n\r\n      distance = 100 - distance;\r\n\r\n      distance = (distance < 10 ? '0' : '') + distance;\r\n\r\n      // create a sort string that makes sure we sort\r\n      // line segment ASC + line segment position DESC (for cropStart)\r\n      // line segment ASC + line segment position ASC (for cropEnd)\r\n      return i.segment2 + '#' + distance;\r\n    });\r\n\r\n    return roundPoint(intersections[cropStart ? 0 : intersections.length - 1]);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n\r\nexport function getIntersections(a, b) {\r\n  return intersectPaths(a, b);\r\n}","import {\r\n  isArray,\r\n  find,\r\n  without,\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getOrientation,\r\n  getMid\r\n} from './LayoutUtil';\r\n\r\nimport {\r\n  pointInRect,\r\n  pointDistance,\r\n  pointsAligned,\r\n  pointsOnLine\r\n} from '../util/Geometry';\r\n\r\nvar MIN_SEGMENT_LENGTH = 20,\r\n    POINT_ORIENTATION_PADDING = 5;\r\n\r\nvar round = Math.round;\r\n\r\nvar INTERSECTION_THRESHOLD = 20,\r\n    ORIENTATION_THRESHOLD = {\r\n      'h:h': 20,\r\n      'v:v': 20,\r\n      'h:v': -10,\r\n      'v:h': -10\r\n    };\r\n\r\nfunction needsTurn(orientation, startDirection) {\r\n  return !{\r\n    t: /top/,\r\n    r: /right/,\r\n    b: /bottom/,\r\n    l: /left/,\r\n    h: /./,\r\n    v: /./\r\n  }[startDirection].test(orientation);\r\n}\r\n\r\nfunction canLayoutStraight(direction, targetOrientation) {\r\n  return {\r\n    t: /top/,\r\n    r: /right/,\r\n    b: /bottom/,\r\n    l: /left/,\r\n    h: /left|right/,\r\n    v: /top|bottom/\r\n  }[direction].test(targetOrientation);\r\n}\r\n\r\nfunction getSegmentBendpoints(a, b, directions) {\r\n  var orientation = getOrientation(b, a, POINT_ORIENTATION_PADDING);\r\n\r\n  var startDirection = directions.split(':')[0];\r\n\r\n  var xmid = round((b.x - a.x) / 2 + a.x),\r\n      ymid = round((b.y - a.y) / 2 + a.y);\r\n\r\n  var segmentEnd, segmentDirections;\r\n\r\n  var layoutStraight = canLayoutStraight(startDirection, orientation),\r\n      layoutHorizontal = /h|r|l/.test(startDirection),\r\n      layoutTurn = false;\r\n\r\n  var turnNextDirections = false;\r\n\r\n  if (layoutStraight) {\r\n    segmentEnd = layoutHorizontal ? { x: xmid, y: a.y } : { x: a.x, y: ymid };\r\n\r\n    segmentDirections = layoutHorizontal ? 'h:h' : 'v:v';\r\n  } else {\r\n    layoutTurn = needsTurn(orientation, startDirection);\r\n\r\n    segmentDirections = layoutHorizontal ? 'h:v' : 'v:h';\r\n\r\n    if (layoutTurn) {\r\n\r\n      if (layoutHorizontal) {\r\n        turnNextDirections = ymid === a.y;\r\n\r\n        segmentEnd = {\r\n          x: a.x + MIN_SEGMENT_LENGTH * (/l/.test(startDirection) ? -1 : 1),\r\n          y: turnNextDirections ? ymid + MIN_SEGMENT_LENGTH : ymid\r\n        };\r\n      } else {\r\n        turnNextDirections = xmid === a.x;\r\n\r\n        segmentEnd = {\r\n          x: turnNextDirections ? xmid + MIN_SEGMENT_LENGTH : xmid,\r\n          y: a.y + MIN_SEGMENT_LENGTH * (/t/.test(startDirection) ? -1 : 1)\r\n        };\r\n      }\r\n\r\n    } else {\r\n      segmentEnd = {\r\n        x: xmid,\r\n        y: ymid\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    waypoints: getBendpoints(a, segmentEnd, segmentDirections).concat(segmentEnd),\r\n    directions:  segmentDirections,\r\n    turnNextDirections: turnNextDirections\r\n  };\r\n}\r\n\r\nfunction getStartSegment(a, b, directions) {\r\n  return getSegmentBendpoints(a, b, directions);\r\n}\r\n\r\nfunction getEndSegment(a, b, directions) {\r\n  var invertedSegment = getSegmentBendpoints(b, a, invertDirections(directions));\r\n\r\n  return {\r\n    waypoints: invertedSegment.waypoints.slice().reverse(),\r\n    directions: invertDirections(invertedSegment.directions),\r\n    turnNextDirections: invertedSegment.turnNextDirections\r\n  };\r\n}\r\n\r\nfunction getMidSegment(startSegment, endSegment) {\r\n\r\n  var startDirection = startSegment.directions.split(':')[1],\r\n      endDirection = endSegment.directions.split(':')[0];\r\n\r\n  if (startSegment.turnNextDirections) {\r\n    startDirection = startDirection == 'h' ? 'v' : 'h';\r\n  }\r\n\r\n  if (endSegment.turnNextDirections) {\r\n    endDirection = endDirection == 'h' ? 'v' : 'h';\r\n  }\r\n\r\n  var directions = startDirection + ':' + endDirection;\r\n\r\n  var bendpoints = getBendpoints(\r\n    startSegment.waypoints[startSegment.waypoints.length - 1],\r\n    endSegment.waypoints[0],\r\n    directions\r\n  );\r\n\r\n  return {\r\n    waypoints: bendpoints,\r\n    directions: directions\r\n  };\r\n}\r\n\r\nfunction invertDirections(directions) {\r\n  return directions.split(':').reverse().join(':');\r\n}\r\n\r\n/**\r\n * Handle simple layouts with maximum two bendpoints.\r\n */\r\nfunction getSimpleBendpoints(a, b, directions) {\r\n\r\n  var xmid = round((b.x - a.x) / 2 + a.x),\r\n      ymid = round((b.y - a.y) / 2 + a.y);\r\n\r\n  // one point, right or left from a\r\n  if (directions === 'h:v') {\r\n    return [ { x: b.x, y: a.y } ];\r\n  }\r\n\r\n  // one point, above or below a\r\n  if (directions === 'v:h') {\r\n    return [ { x: a.x, y: b.y } ];\r\n  }\r\n\r\n  // vertical segment between a and b\r\n  if (directions === 'h:h') {\r\n    return [\r\n      { x: xmid, y: a.y },\r\n      { x: xmid, y: b.y }\r\n    ];\r\n  }\r\n\r\n  // horizontal segment between a and b\r\n  if (directions === 'v:v') {\r\n    return [\r\n      { x: a.x, y: ymid },\r\n      { x: b.x, y: ymid }\r\n    ];\r\n  }\r\n\r\n  throw new Error('invalid directions: can only handle varians of [hv]:[hv]');\r\n}\r\n\r\n\r\n/**\r\n * Returns the mid points for a manhattan connection between two points.\r\n *\r\n * @example h:h (horizontal:horizontal)\r\n *\r\n * [a]----[x]\r\n *         |\r\n *        [x]----[b]\r\n *\r\n * @example h:v (horizontal:vertical)\r\n *\r\n * [a]----[x]\r\n *         |\r\n *        [b]\r\n *\r\n * @example h:r (horizontal:right)\r\n *\r\n * [a]----[x]\r\n *         |\r\n *    [b]-[x]\r\n *\r\n * @param  {Point} a\r\n * @param  {Point} b\r\n * @param  {String} directions\r\n *\r\n * @return {Array<Point>}\r\n */\r\nfunction getBendpoints(a, b, directions) {\r\n  directions = directions || 'h:h';\r\n\r\n  if (!isValidDirections(directions)) {\r\n    throw new Error(\r\n      'unknown directions: <' + directions + '>: ' +\r\n      'must be specified as <start>:<end> ' +\r\n      'with start/end in { h,v,t,r,b,l }'\r\n    );\r\n  }\r\n\r\n  // compute explicit directions, involving trbl dockings\r\n  // using a three segmented layouting algorithm\r\n  if (isExplicitDirections(directions)) {\r\n    var startSegment = getStartSegment(a, b, directions),\r\n        endSegment = getEndSegment(a, b, directions),\r\n        midSegment = getMidSegment(startSegment, endSegment);\r\n\r\n    return [].concat(\r\n      startSegment.waypoints,\r\n      midSegment.waypoints,\r\n      endSegment.waypoints\r\n    );\r\n  }\r\n\r\n  // handle simple [hv]:[hv] cases that can be easily computed\r\n  return getSimpleBendpoints(a, b, directions);\r\n}\r\n\r\n/**\r\n * Create a connection between the two points according\r\n * to the manhattan layout (only horizontal and vertical) edges.\r\n *\r\n * @param {Point} a\r\n * @param {Point} b\r\n *\r\n * @param {String} [directions='h:h'] specifies manhattan directions for each point as {adirection}:{bdirection}.\r\n                   A directionfor a point is either `h` (horizontal) or `v` (vertical)\r\n *\r\n * @return {Array<Point>}\r\n */\r\nexport function connectPoints(a, b, directions) {\r\n\r\n  var points = getBendpoints(a, b, directions);\r\n\r\n  points.unshift(a);\r\n  points.push(b);\r\n\r\n  return withoutRedundantPoints(points);\r\n}\r\n\r\n\r\n/**\r\n * Connect two rectangles using a manhattan layouted connection.\r\n *\r\n * @param {Bounds} source source rectangle\r\n * @param {Bounds} target target rectangle\r\n * @param {Point} [start] source docking\r\n * @param {Point} [end] target docking\r\n *\r\n * @param {Object} [hints]\r\n * @param {String} [hints.preserveDocking=source] preserve docking on selected side\r\n * @param {Array<String>} [hints.preferredLayouts]\r\n * @param {Point|Boolean} [hints.connectionStart] whether the start changed\r\n * @param {Point|Boolean} [hints.connectionEnd] whether the end changed\r\n *\r\n * @return {Array<Point>} connection points\r\n */\r\nexport function connectRectangles(source, target, start, end, hints) {\r\n\r\n  var preferredLayouts = hints && hints.preferredLayouts || [];\r\n\r\n  var preferredLayout = without(preferredLayouts, 'straight')[0] || 'h:h';\r\n\r\n  var threshold = ORIENTATION_THRESHOLD[preferredLayout] || 0;\r\n\r\n  var orientation = getOrientation(source, target, threshold);\r\n\r\n  var directions = getDirections(orientation, preferredLayout);\r\n\r\n  start = start || getMid(source);\r\n  end = end || getMid(target);\r\n\r\n  var directionSplit = directions.split(':');\r\n\r\n  // compute actual docking points for start / end\r\n  // this ensures we properly layout only parts of the\r\n  // connection that lies in between the two rectangles\r\n  var startDocking = getDockingPoint(start, source, directionSplit[0], invertOrientation(orientation)),\r\n      endDocking = getDockingPoint(end, target, directionSplit[1], orientation);\r\n\r\n  return connectPoints(startDocking, endDocking, directions);\r\n}\r\n\r\n\r\n/**\r\n * Repair the connection between two rectangles, of which one has been updated.\r\n *\r\n * @param {Bounds} source\r\n * @param {Bounds} target\r\n * @param {Point} [start]\r\n * @param {Point} [end]\r\n * @param {Array<Point>} waypoints\r\n * @param {Object} [hints]\r\n * @param {Array<String>} [hints.preferredLayouts] list of preferred layouts\r\n * @param {Boolean} [hints.connectionStart]\r\n * @param {Boolean} [hints.connectionEnd]\r\n *\r\n * @return {Array<Point>} repaired waypoints\r\n */\r\nexport function repairConnection(source, target, start, end, waypoints, hints) {\r\n\r\n  if (isArray(start)) {\r\n    waypoints = start;\r\n    hints = end;\r\n\r\n    start = getMid(source);\r\n    end = getMid(target);\r\n  }\r\n\r\n  hints = assign({ preferredLayouts: [] }, hints);\r\n  waypoints = waypoints || [];\r\n\r\n  var preferredLayouts = hints.preferredLayouts,\r\n      preferStraight = preferredLayouts.indexOf('straight') !== -1,\r\n      repairedWaypoints;\r\n\r\n  // just layout non-existing or simple connections\r\n  // attempt to render straight lines, if required\r\n\r\n  if (preferStraight) {\r\n    // attempt to layout a straight line\r\n    repairedWaypoints = layoutStraight(source, target, start, end, hints);\r\n  }\r\n\r\n  if (!repairedWaypoints) {\r\n    // check if we layout from start or end\r\n    if (hints.connectionEnd) {\r\n      repairedWaypoints = _repairConnectionSide(target, source, end, waypoints.slice().reverse());\r\n      repairedWaypoints = repairedWaypoints && repairedWaypoints.reverse();\r\n    } else\r\n    if (hints.connectionStart) {\r\n      repairedWaypoints = _repairConnectionSide(source, target, start, waypoints);\r\n    } else\r\n    // or whether nothing seems to have changed\r\n    if (waypoints && waypoints.length) {\r\n      repairedWaypoints = waypoints;\r\n    }\r\n  }\r\n\r\n  // simply reconnect if nothing else worked\r\n  if (!repairedWaypoints) {\r\n    repairedWaypoints = connectRectangles(source, target, start, end, hints);\r\n  }\r\n\r\n  return repairedWaypoints;\r\n}\r\n\r\n\r\nfunction inRange(a, start, end) {\r\n  return a >= start && a <= end;\r\n}\r\n\r\nfunction isInRange(axis, a, b) {\r\n  var size = {\r\n    x: 'width',\r\n    y: 'height'\r\n  };\r\n\r\n  return inRange(a[axis], b[axis], b[axis] + b[size[axis]]);\r\n}\r\n\r\n/**\r\n * Layout a straight connection\r\n *\r\n * @param {Bounds} source\r\n * @param {Bounds} target\r\n * @param {Point} start\r\n * @param {Point} end\r\n * @param {Object} [hints]\r\n *\r\n * @return {Array<Point>} waypoints if straight layout worked\r\n */\r\nexport function layoutStraight(source, target, start, end, hints) {\r\n  var axis = {},\r\n      primaryAxis,\r\n      orientation;\r\n\r\n  orientation = getOrientation(source, target);\r\n\r\n  // only layout a straight connection if shapes are\r\n  // horizontally or vertically aligned\r\n  if (!/^(top|bottom|left|right)$/.test(orientation)) {\r\n    return null;\r\n  }\r\n\r\n  if (/top|bottom/.test(orientation)) {\r\n    primaryAxis = 'x';\r\n  }\r\n\r\n  if (/left|right/.test(orientation)) {\r\n    primaryAxis = 'y';\r\n  }\r\n\r\n  if (hints.preserveDocking === 'target') {\r\n\r\n    if (!isInRange(primaryAxis, end, source)) {\r\n      return null;\r\n    }\r\n\r\n    axis[primaryAxis] = end[primaryAxis];\r\n\r\n    return [\r\n      {\r\n        x: axis.x !== undefined ? axis.x : start.x,\r\n        y: axis.y !== undefined ? axis.y : start.y,\r\n        original: {\r\n          x: axis.x !== undefined ? axis.x : start.x,\r\n          y: axis.y !== undefined ? axis.y : start.y\r\n        }\r\n      },\r\n      {\r\n        x: end.x,\r\n        y: end.y\r\n      }\r\n    ];\r\n\r\n  } else {\r\n\r\n    if (!isInRange(primaryAxis, start, target)) {\r\n      return null;\r\n    }\r\n\r\n    axis[primaryAxis] = start[primaryAxis];\r\n\r\n    return [\r\n      {\r\n        x: start.x,\r\n        y: start.y\r\n      },\r\n      {\r\n        x: axis.x !== undefined ? axis.x : end.x,\r\n        y: axis.y !== undefined ? axis.y : end.y,\r\n        original: {\r\n          x: axis.x !== undefined ? axis.x : end.x,\r\n          y: axis.y !== undefined ? axis.y : end.y\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Repair a connection from one side that moved.\r\n *\r\n * @param {Bounds} moved\r\n * @param {Bounds} other\r\n * @param {Point} newDocking\r\n * @param {Array<Point>} points originalPoints from moved to other\r\n *\r\n * @return {Array<Point>} the repaired points between the two rectangles\r\n */\r\nexport function _repairConnectionSide(moved, other, newDocking, points) {\r\n\r\n  function needsRelayout(moved, other, points) {\r\n\r\n    if (points.length < 3) {\r\n      return true;\r\n    }\r\n\r\n    if (points.length > 4) {\r\n      return false;\r\n    }\r\n\r\n    // relayout if two points overlap\r\n    // this is most likely due to\r\n    return !!find(points, function(p, idx) {\r\n      var q = points[idx - 1];\r\n\r\n      return q && pointDistance(p, q) < 3;\r\n    });\r\n  }\r\n\r\n  function repairBendpoint(candidate, oldPeer, newPeer) {\r\n\r\n    var alignment = pointsAligned(oldPeer, candidate);\r\n\r\n    switch (alignment) {\r\n    case 'v':\r\n      // repair vertical alignment\r\n      return { x: candidate.x, y: newPeer.y };\r\n    case 'h':\r\n      // repair horizontal alignment\r\n      return { x: newPeer.x, y: candidate.y };\r\n    }\r\n\r\n    return { x: candidate.x, y: candidate. y };\r\n  }\r\n\r\n  function removeOverlapping(points, a, b) {\r\n    var i;\r\n\r\n    for (i = points.length - 2; i !== 0; i--) {\r\n\r\n      // intersects (?) break, remove all bendpoints up to this one and relayout\r\n      if (pointInRect(points[i], a, INTERSECTION_THRESHOLD) ||\r\n          pointInRect(points[i], b, INTERSECTION_THRESHOLD)) {\r\n\r\n        // return sliced old connection\r\n        return points.slice(i);\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n\r\n\r\n  // (0) only repair what has layoutable bendpoints\r\n\r\n  // (1) if only one bendpoint and on shape moved onto other shapes axis\r\n  //     (horizontally / vertically), relayout\r\n\r\n  if (needsRelayout(moved, other, points)) {\r\n    return null;\r\n  }\r\n\r\n  var oldDocking = points[0],\r\n      newPoints = points.slice(),\r\n      slicedPoints;\r\n\r\n  // (2) repair only last line segment and only if it was layouted before\r\n\r\n  newPoints[0] = newDocking;\r\n  newPoints[1] = repairBendpoint(newPoints[1], oldDocking, newDocking);\r\n\r\n\r\n  // (3) if shape intersects with any bendpoint after repair,\r\n  //     remove all segments up to this bendpoint and repair from there\r\n\r\n  slicedPoints = removeOverlapping(newPoints, moved, other);\r\n\r\n  if (slicedPoints !== newPoints) {\r\n    return _repairConnectionSide(moved, other, newDocking, slicedPoints);\r\n  }\r\n\r\n  return newPoints;\r\n}\r\n\r\n\r\n/**\r\n * Returns the manhattan directions connecting two rectangles\r\n * with the given orientation.\r\n *\r\n * Will always return the default layout, if it is specific\r\n * regarding sides already (trbl).\r\n *\r\n * @example\r\n *\r\n * getDirections('top'); // -> 'v:v'\r\n * getDirections('intersect'); // -> 't:t'\r\n *\r\n * getDirections('top-right', 'v:h'); // -> 'v:h'\r\n * getDirections('top-right', 'h:h'); // -> 'h:h'\r\n *\r\n *\r\n * @param {String} orientation\r\n * @param {String} defaultLayout\r\n *\r\n * @return {String}\r\n */\r\nfunction getDirections(orientation, defaultLayout) {\r\n\r\n  // don't override specific trbl directions\r\n  if (isExplicitDirections(defaultLayout)) {\r\n    return defaultLayout;\r\n  }\r\n\r\n  switch (orientation) {\r\n  case 'intersect':\r\n    return 't:t';\r\n\r\n  case 'top':\r\n  case 'bottom':\r\n    return 'v:v';\r\n\r\n  case 'left':\r\n  case 'right':\r\n    return 'h:h';\r\n\r\n  // 'top-left'\r\n  // 'top-right'\r\n  // 'bottom-left'\r\n  // 'bottom-right'\r\n  default:\r\n    return defaultLayout;\r\n  }\r\n}\r\n\r\nfunction isValidDirections(directions) {\r\n  return directions && /^h|v|t|r|b|l:h|v|t|r|b|l$/.test(directions);\r\n}\r\n\r\nfunction isExplicitDirections(directions) {\r\n  return directions && /t|r|b|l/.test(directions);\r\n}\r\n\r\nfunction invertOrientation(orientation) {\r\n  return {\r\n    'top': 'bottom',\r\n    'bottom': 'top',\r\n    'left': 'right',\r\n    'right': 'left',\r\n    'top-left': 'bottom-right',\r\n    'bottom-right': 'top-left',\r\n    'top-right': 'bottom-left',\r\n    'bottom-left': 'top-right',\r\n  }[orientation];\r\n}\r\n\r\nfunction getDockingPoint(point, rectangle, dockingDirection, targetOrientation) {\r\n\r\n  // ensure we end up with a specific docking direction\r\n  // based on the targetOrientation, if <h|v> is being passed\r\n\r\n  if (dockingDirection === 'h') {\r\n    dockingDirection = /left/.test(targetOrientation) ? 'l' : 'r';\r\n  }\r\n\r\n  if (dockingDirection === 'v') {\r\n    dockingDirection = /top/.test(targetOrientation) ? 't' : 'b';\r\n  }\r\n\r\n  if (dockingDirection === 't') {\r\n    return { original: point, x: point.x, y: rectangle.y };\r\n  }\r\n\r\n  if (dockingDirection === 'r') {\r\n    return { original: point, x: rectangle.x + rectangle.width, y: point.y };\r\n  }\r\n\r\n  if (dockingDirection === 'b') {\r\n    return { original: point, x: point.x, y: rectangle.y + rectangle.height };\r\n  }\r\n\r\n  if (dockingDirection === 'l') {\r\n    return { original: point, x: rectangle.x, y: point.y };\r\n  }\r\n\r\n  throw new Error('unexpected dockingDirection: <' + dockingDirection + '>');\r\n}\r\n\r\n\r\n/**\r\n * Return list of waypoints with redundant ones filtered out.\r\n *\r\n * @example\r\n *\r\n * Original points:\r\n *\r\n *   [x] ----- [x] ------ [x]\r\n *                         |\r\n *                        [x] ----- [x] - [x]\r\n *\r\n * Filtered:\r\n *\r\n *   [x] ---------------- [x]\r\n *                         |\r\n *                        [x] ----------- [x]\r\n *\r\n * @param  {Array<Point>} waypoints\r\n *\r\n * @return {Array<Point>}\r\n */\r\nexport function withoutRedundantPoints(waypoints) {\r\n  return waypoints.reduce(function(points, p, idx) {\r\n\r\n    var previous = points[points.length - 1],\r\n        next = waypoints[idx + 1];\r\n\r\n    if (!pointsOnLine(previous, next, p, 0)) {\r\n      points.push(p);\r\n    }\r\n\r\n    return points;\r\n  }, []);\r\n}","import { assign } from 'min-dash';\r\nimport inherits from 'inherits';\r\n\r\nimport Refs from 'object-refs';\r\n\r\nvar parentRefs = new Refs({ name: 'children', enumerable: true, collection: true }, { name: 'parent' }),\r\n    labelRefs = new Refs({ name: 'labels', enumerable: true, collection: true }, { name: 'labelTarget' }),\r\n    attacherRefs = new Refs({ name: 'attachers', collection: true }, { name: 'host' }),\r\n    outgoingRefs = new Refs({ name: 'outgoing', collection: true }, { name: 'source' }),\r\n    incomingRefs = new Refs({ name: 'incoming', collection: true }, { name: 'target' });\r\n\r\n/**\r\n * @namespace djs.model\r\n */\r\n\r\n/**\r\n * @memberOf djs.model\r\n */\r\n\r\n/**\r\n * The basic graphical representation\r\n *\r\n * @class\r\n *\r\n * @abstract\r\n */\r\nexport function Base() {\r\n\r\n  /**\r\n   * The object that backs up the shape\r\n   *\r\n   * @name Base#businessObject\r\n   * @type Object\r\n   */\r\n  Object.defineProperty(this, 'businessObject', {\r\n    writable: true\r\n  });\r\n\r\n\r\n  /**\r\n   * Single label support, will mapped to multi label array\r\n   *\r\n   * @name Base#label\r\n   * @type Object\r\n   */\r\n  Object.defineProperty(this, 'label', {\r\n    get: function() {\r\n      return this.labels[0];\r\n    },\r\n    set: function(newLabel) {\r\n\r\n      var label = this.label,\r\n          labels = this.labels;\r\n\r\n      if (!newLabel && label) {\r\n        labels.remove(label);\r\n      } else {\r\n        labels.add(newLabel, 0);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * The parent shape\r\n   *\r\n   * @name Base#parent\r\n   * @type Shape\r\n   */\r\n  parentRefs.bind(this, 'parent');\r\n\r\n  /**\r\n   * The list of labels\r\n   *\r\n   * @name Base#labels\r\n   * @type Label\r\n   */\r\n  labelRefs.bind(this, 'labels');\r\n\r\n  /**\r\n   * The list of outgoing connections\r\n   *\r\n   * @name Base#outgoing\r\n   * @type Array<Connection>\r\n   */\r\n  outgoingRefs.bind(this, 'outgoing');\r\n\r\n  /**\r\n   * The list of incoming connections\r\n   *\r\n   * @name Base#incoming\r\n   * @type Array<Connection>\r\n   */\r\n  incomingRefs.bind(this, 'incoming');\r\n}\r\n\r\n\r\n/**\r\n * A graphical object\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Base\r\n */\r\nexport function Shape() {\r\n  Base.call(this);\r\n\r\n  /**\r\n   * The list of children\r\n   *\r\n   * @name Shape#children\r\n   * @type Array<Base>\r\n   */\r\n  parentRefs.bind(this, 'children');\r\n\r\n  /**\r\n   * @name Shape#host\r\n   * @type Shape\r\n   */\r\n  attacherRefs.bind(this, 'host');\r\n\r\n  /**\r\n   * @name Shape#attachers\r\n   * @type Shape\r\n   */\r\n  attacherRefs.bind(this, 'attachers');\r\n}\r\n\r\ninherits(Shape, Base);\r\n\r\n\r\n/**\r\n * A root graphical object\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Shape\r\n */\r\nexport function Root() {\r\n  Shape.call(this);\r\n}\r\n\r\ninherits(Root, Shape);\r\n\r\n\r\n/**\r\n * A label for an element\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Shape\r\n */\r\nexport function Label() {\r\n  Shape.call(this);\r\n\r\n  /**\r\n   * The labeled element\r\n   *\r\n   * @name Label#labelTarget\r\n   * @type Base\r\n   */\r\n  labelRefs.bind(this, 'labelTarget');\r\n}\r\n\r\ninherits(Label, Shape);\r\n\r\n\r\n/**\r\n * A connection between two elements\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @extends Base\r\n */\r\nexport function Connection() {\r\n  Base.call(this);\r\n\r\n  /**\r\n   * The element this connection originates from\r\n   *\r\n   * @name Connection#source\r\n   * @type Base\r\n   */\r\n  outgoingRefs.bind(this, 'source');\r\n\r\n  /**\r\n   * The element this connection points to\r\n   *\r\n   * @name Connection#target\r\n   * @type Base\r\n   */\r\n  incomingRefs.bind(this, 'target');\r\n}\r\n\r\ninherits(Connection, Base);\r\n\r\n\r\nvar types = {\r\n  connection: Connection,\r\n  shape: Shape,\r\n  label: Label,\r\n  root: Root\r\n};\r\n\r\n/**\r\n * Creates a new model element of the specified type\r\n *\r\n * @method create\r\n *\r\n * @example\r\n *\r\n * var shape1 = Model.create('shape', { x: 10, y: 10, width: 100, height: 100 });\r\n * var shape2 = Model.create('shape', { x: 210, y: 210, width: 100, height: 100 });\r\n *\r\n * var connection = Model.create('connection', { waypoints: [ { x: 110, y: 55 }, {x: 210, y: 55 } ] });\r\n *\r\n * @param  {String} type lower-cased model name\r\n * @param  {Object} attrs attributes to initialize the new model instance with\r\n *\r\n * @return {Base} the new model instance\r\n */\r\nexport function create(type, attrs) {\r\n  var Type = types[type];\r\n  if (!Type) {\r\n    throw new Error('unknown type: <' + type + '>');\r\n  }\r\n  return assign(new Type(), attrs);\r\n}","import { assign } from 'min-dash';\r\n\r\n\r\nvar DEFAULT_CONFIG = {\r\n  moveSpeed: 50,\r\n  moveSpeedAccelerated: 200\r\n};\r\n\r\n\r\n/**\r\n * A feature that allows users to move the canvas using the keyboard.\r\n *\r\n * @param {Object} config\r\n * @param {Number} [config.moveSpeed=50]\r\n * @param {Number} [config.moveSpeedAccelerated=200]\r\n * @param {Keyboard} keyboard\r\n * @param {Canvas} canvas\r\n */\r\nexport default function KeyboardMove(\r\n    config,\r\n    keyboard,\r\n    canvas\r\n) {\r\n\r\n  var self = this;\r\n\r\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\r\n\r\n  keyboard.addListener(arrowsListener);\r\n\r\n\r\n  function arrowsListener(context) {\r\n\r\n    var event = context.keyEvent,\r\n        config = self._config;\r\n\r\n    if (!keyboard.isCmd(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey([\r\n      'ArrowLeft', 'Left',\r\n      'ArrowUp', 'Up',\r\n      'ArrowDown', 'Down',\r\n      'ArrowRight', 'Right'\r\n    ], event)) {\r\n\r\n      var speed = (\r\n        keyboard.isShift(event) ?\r\n          config.moveSpeedAccelerated :\r\n          config.moveSpeed\r\n      );\r\n\r\n      var direction;\r\n\r\n      switch (event.key) {\r\n      case 'ArrowLeft':\r\n      case 'Left':\r\n        direction = 'left';\r\n        break;\r\n      case 'ArrowUp':\r\n      case 'Up':\r\n        direction = 'up';\r\n        break;\r\n      case 'ArrowRight':\r\n      case 'Right':\r\n        direction = 'right';\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'Down':\r\n        direction = 'down';\r\n        break;\r\n      }\r\n\r\n      self.moveCanvas({\r\n        speed: speed,\r\n        direction: direction\r\n      });\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  this.moveCanvas = function(opts) {\r\n\r\n    var dx = 0,\r\n        dy = 0,\r\n        speed = opts.speed;\r\n\r\n    var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\r\n\r\n    switch (opts.direction) {\r\n    case 'left': // Left\r\n      dx = actualSpeed;\r\n      break;\r\n    case 'up': // Up\r\n      dy = actualSpeed;\r\n      break;\r\n    case 'right': // Right\r\n      dx = -actualSpeed;\r\n      break;\r\n    case 'down': // Down\r\n      dy = -actualSpeed;\r\n      break;\r\n    }\r\n\r\n    canvas.scroll({\r\n      dx: dx,\r\n      dy: dy\r\n    });\r\n  };\r\n\r\n}\r\n\r\n\r\nKeyboardMove.$inject = [\r\n  'config.keyboardMove',\r\n  'keyboard',\r\n  'canvas'\r\n];\r\n","import KeyboardModule from '../../features/keyboard';\r\n\r\nimport KeyboardMove from './KeyboardMove';\r\n\r\n\r\nexport default {\r\n  __depends__: [\r\n    KeyboardModule\r\n  ],\r\n  __init__: [ 'keyboardMove' ],\r\n  keyboardMove: [ 'type', KeyboardMove ]\r\n};","import {\r\n  set as cursorSet,\r\n  unset as cursorUnset\r\n} from '../../util/Cursor';\r\n\r\nimport {\r\n  install as installClickTrap\r\n} from '../../util/ClickTrap';\r\n\r\nimport {\r\n  delta as deltaPos\r\n} from '../../util/PositionUtil';\r\n\r\nimport {\r\n  event as domEvent,\r\n  closest as domClosest\r\n} from 'min-dom';\r\n\r\nimport {\r\n  toPoint\r\n} from '../../util/Event';\r\n\r\n\r\nvar THRESHOLD = 15;\r\n\r\n\r\n/**\r\n * Move the canvas via mouse.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function MoveCanvas(eventBus, canvas) {\r\n\r\n  var context;\r\n\r\n\r\n  // listen for move on element mouse down;\r\n  // allow others to hook into the event before us though\r\n  // (dragging / element moving will do this)\r\n  eventBus.on('element.mousedown', 500, function(e) {\r\n    return handleStart(e.originalEvent);\r\n  });\r\n\r\n\r\n  function handleMove(event) {\r\n\r\n    var start = context.start,\r\n        position = toPoint(event),\r\n        delta = deltaPos(position, start);\r\n\r\n    if (!context.dragging && length(delta) > THRESHOLD) {\r\n      context.dragging = true;\r\n\r\n      installClickTrap(eventBus);\r\n\r\n      cursorSet('grab');\r\n    }\r\n\r\n    if (context.dragging) {\r\n\r\n      var lastPosition = context.last || context.start;\r\n\r\n      delta = deltaPos(position, lastPosition);\r\n\r\n      canvas.scroll({\r\n        dx: delta.x,\r\n        dy: delta.y\r\n      });\r\n\r\n      context.last = position;\r\n    }\r\n\r\n    // prevent select\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  function handleEnd(event) {\r\n    domEvent.unbind(document, 'mousemove', handleMove);\r\n    domEvent.unbind(document, 'mouseup', handleEnd);\r\n\r\n    context = null;\r\n\r\n    cursorUnset();\r\n  }\r\n\r\n  function handleStart(event) {\r\n    // event is already handled by '.djs-draggable'\r\n    if (domClosest(event.target, '.djs-draggable')) {\r\n      return;\r\n    }\r\n\r\n\r\n    // reject non-left left mouse button or modifier key\r\n    if (event.button || event.ctrlKey || event.shiftKey || event.altKey) {\r\n      return;\r\n    }\r\n\r\n    context = {\r\n      start: toPoint(event)\r\n    };\r\n\r\n    domEvent.bind(document, 'mousemove', handleMove);\r\n    domEvent.bind(document, 'mouseup', handleEnd);\r\n\r\n    // we've handled the event\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\nMoveCanvas.$inject = [\r\n  'eventBus',\r\n  'canvas'\r\n];\r\n\r\n\r\n\r\n// helpers ///////\r\n\r\nfunction length(point) {\r\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\r\n}\r\n","import MoveCanvas from './MoveCanvas';\r\n\r\nexport default {\r\n  __init__: [ 'moveCanvas' ],\r\n  moveCanvas: [ 'type', MoveCanvas ]\r\n};","import TouchModule from '../../features/touch';\r\n\r\nexport default {\r\n  __depends__: [\r\n    TouchModule\r\n  ]\r\n};","import {\r\n  event as domEvent,\r\n  closest as domClosest\r\n} from 'min-dom';\r\n\r\nimport {\r\n  getStepSize,\r\n  cap\r\n} from './ZoomUtil';\r\n\r\nimport {\r\n  log10\r\n} from '../../util/Math';\r\n\r\nimport {\r\n  bind\r\n} from 'min-dash';\r\n\r\nvar sign = Math.sign || function(n) {\r\n  return n >= 0 ? 1 : -1;\r\n};\r\n\r\nvar RANGE = { min: 0.2, max: 4 },\r\n    NUM_STEPS = 10;\r\n\r\nvar DELTA_THRESHOLD = 0.1;\r\n\r\nvar DEFAULT_SCALE = 0.75;\r\n\r\n/**\r\n * An implementation of zooming and scrolling within the\r\n * {@link Canvas} via the mouse wheel.\r\n *\r\n * Mouse wheel zooming / scrolling may be disabled using\r\n * the {@link toggle(enabled)} method.\r\n *\r\n * @param {Object} [config]\r\n * @param {Boolean} [config.enabled=true] default enabled state\r\n * @param {Number} [config.scale=.75] scroll sensivity\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function ZoomScroll(config, eventBus, canvas) {\r\n\r\n  config = config || {};\r\n\r\n  this._enabled = false;\r\n\r\n  this._canvas = canvas;\r\n  this._container = canvas._container;\r\n\r\n  this._handleWheel = bind(this._handleWheel, this);\r\n\r\n  this._totalDelta = 0;\r\n  this._scale = config.scale || DEFAULT_SCALE;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('canvas.init', function(e) {\r\n    self._init(config.enabled !== false);\r\n  });\r\n}\r\n\r\nZoomScroll.$inject = [\r\n  'config.zoomScroll',\r\n  'eventBus',\r\n  'canvas'\r\n];\r\n\r\nZoomScroll.prototype.scroll = function scroll(delta) {\r\n  this._canvas.scroll(delta);\r\n};\r\n\r\n\r\nZoomScroll.prototype.reset = function reset() {\r\n  this._canvas.zoom('fit-viewport');\r\n};\r\n\r\n/**\r\n * Zoom depending on delta.\r\n *\r\n * @param {number} delta - Zoom delta.\r\n * @param {Object} position - Zoom position.\r\n */\r\nZoomScroll.prototype.zoom = function zoom(delta, position) {\r\n\r\n  // zoom with half the step size of stepZoom\r\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\r\n\r\n  // add until threshold reached\r\n  this._totalDelta += delta;\r\n\r\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\r\n    this._zoom(delta, position, stepSize);\r\n\r\n    // reset\r\n    this._totalDelta = 0;\r\n  }\r\n};\r\n\r\n\r\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\r\n  // event is already handled by '.djs-scrollable'\r\n  if (domClosest(event.target, '.djs-scrollable', true)) {\r\n    return;\r\n  }\r\n\r\n  var element = this._container;\r\n\r\n  event.preventDefault();\r\n\r\n  // pinch to zoom is mapped to wheel + ctrlKey = true\r\n  // in modern browsers (!)\r\n\r\n  var isZoom = event.ctrlKey;\r\n\r\n  var isHorizontalScroll = event.shiftKey;\r\n\r\n  var factor = -1 * this._scale,\r\n      delta;\r\n\r\n  if (isZoom) {\r\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\r\n  } else {\r\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\r\n  }\r\n\r\n  if (isZoom) {\r\n    var elementRect = element.getBoundingClientRect();\r\n\r\n    var offset = {\r\n      x: event.clientX - elementRect.left,\r\n      y: event.clientY - elementRect.top\r\n    };\r\n\r\n    delta = (\r\n      Math.sqrt(\r\n        Math.pow(event.deltaY, 2) +\r\n        Math.pow(event.deltaX, 2)\r\n      ) * sign(event.deltaY) * factor\r\n    );\r\n\r\n    // zoom in relative to diagram {x,y} coordinates\r\n    this.zoom(delta, offset);\r\n  } else {\r\n\r\n    if (isHorizontalScroll) {\r\n      delta = {\r\n        dx: factor * event.deltaY,\r\n        dy: 0\r\n      };\r\n    } else {\r\n      delta = {\r\n        dx: factor * event.deltaX,\r\n        dy: factor * event.deltaY\r\n      };\r\n    }\r\n\r\n    this.scroll(delta);\r\n  }\r\n};\r\n\r\n/**\r\n * Zoom with fixed step size.\r\n *\r\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\r\n * @param {Object} position - Zoom position.\r\n */\r\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\r\n\r\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\r\n\r\n  this._zoom(delta, position, stepSize);\r\n};\r\n\r\n\r\n/**\r\n * Zoom in/out given a step size.\r\n *\r\n * @param {number} delta - Zoom delta. Can be positive or negative.\r\n * @param {Object} position - Zoom position.\r\n * @param {number} stepSize - Step size.\r\n */\r\nZoomScroll.prototype._zoom = function(delta, position, stepSize) {\r\n  var canvas = this._canvas;\r\n\r\n  var direction = delta > 0 ? 1 : -1;\r\n\r\n  var currentLinearZoomLevel = log10(canvas.zoom());\r\n\r\n  // snap to a proximate zoom step\r\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\r\n\r\n  // increase or decrease one zoom step in the given direction\r\n  newLinearZoomLevel += stepSize * direction;\r\n\r\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\r\n  // (e.g. 2 for an absolute x2 zoom)\r\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\r\n\r\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\r\n};\r\n\r\n\r\n/**\r\n * Toggle the zoom scroll ability via mouse wheel.\r\n *\r\n * @param  {Boolean} [newEnabled] new enabled state\r\n */\r\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\r\n\r\n  var element = this._container;\r\n  var handleWheel = this._handleWheel;\r\n\r\n  var oldEnabled = this._enabled;\r\n\r\n  if (typeof newEnabled === 'undefined') {\r\n    newEnabled = !oldEnabled;\r\n  }\r\n\r\n  // only react on actual changes\r\n  if (oldEnabled !== newEnabled) {\r\n\r\n    // add or remove wheel listener based on\r\n    // changed enabled state\r\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\r\n  }\r\n\r\n  this._enabled = newEnabled;\r\n\r\n  return newEnabled;\r\n};\r\n\r\n\r\nZoomScroll.prototype._init = function(newEnabled) {\r\n  this.toggle(newEnabled);\r\n};\r\n","import {\r\n  log10\r\n} from '../../util/Math';\r\n\r\n/**\r\n * Get step size for given range and number of steps.\r\n *\r\n * @param {Object} range - Range.\r\n * @param {number} range.min - Range minimum.\r\n * @param {number} range.max - Range maximum.\r\n */\r\nexport function getStepSize(range, steps) {\r\n\r\n  var minLinearRange = log10(range.min),\r\n      maxLinearRange = log10(range.max);\r\n\r\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\r\n\r\n  return absoluteLinearRange / steps;\r\n}\r\n\r\nexport function cap(range, scale) {\r\n  return Math.max(range.min, Math.min(range.max, scale));\r\n}\r\n","import ZoomScroll from './ZoomScroll';\r\n\r\nexport default {\r\n  __init__: [ 'zoomScroll' ],\r\n  zoomScroll: [ 'type', ZoomScroll ]\r\n};","import {\r\n  roundPoint\r\n} from '../layout/LayoutUtil';\r\n\r\nimport {\r\n  center,\r\n  delta\r\n} from './PositionUtil';\r\n\r\n\r\n/**\r\n * Calculates the absolute point relative to the new element's position\r\n *\r\n * @param {point} point [absolute]\r\n * @param {bounds} oldBounds\r\n * @param {bounds} newBounds\r\n *\r\n * @return {point} point [absolute]\r\n */\r\nexport function getNewAttachPoint(point, oldBounds, newBounds) {\r\n  var oldCenter = center(oldBounds),\r\n      newCenter = center(newBounds),\r\n      oldDelta = delta(point, oldCenter);\r\n\r\n  var newDelta = {\r\n    x: oldDelta.x * (newBounds.width / oldBounds.width),\r\n    y: oldDelta.y * (newBounds.height / oldBounds.height)\r\n  };\r\n\r\n  return roundPoint({\r\n    x: newCenter.x + newDelta.x,\r\n    y: newCenter.y + newDelta.y\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Calculates the shape's delta relative to a new position\r\n * of a certain element's bounds\r\n *\r\n * @param {djs.model.Shape} point [absolute]\r\n * @param {bounds} oldBounds\r\n * @param {bounds} newBounds\r\n *\r\n * @return {delta} delta\r\n */\r\nexport function getNewAttachShapeDelta(shape, oldBounds, newBounds) {\r\n  var shapeCenter = center(shape),\r\n      oldCenter = center(oldBounds),\r\n      newCenter = center(newBounds),\r\n      shapeDelta = delta(shape, shapeCenter),\r\n      oldCenterDelta = delta(shapeCenter, oldCenter);\r\n\r\n  var newCenterDelta = {\r\n    x: oldCenterDelta.x * (newBounds.width / oldBounds.width),\r\n    y: oldCenterDelta.y * (newBounds.height / oldBounds.height)\r\n  };\r\n\r\n  var newShapeCenter = {\r\n    x: newCenter.x + newCenterDelta.x,\r\n    y: newCenter.y + newCenterDelta.y\r\n  };\r\n\r\n  return roundPoint({\r\n    x: newShapeCenter.x + shapeDelta.x - shape.x,\r\n    y: newShapeCenter.y + shapeDelta.y - shape.y\r\n  });\r\n}","var TRAP_PRIORITY = 5000;\r\n\r\n/**\r\n * Installs a click trap that prevents a ghost click following a dragging operation.\r\n *\r\n * @return {Function} a function to immediately remove the installed trap.\r\n */\r\nexport function install(eventBus, eventName) {\r\n\r\n  eventName = eventName || 'element.click';\r\n\r\n  function trap() {\r\n    return false;\r\n  }\r\n\r\n  eventBus.once(eventName, TRAP_PRIORITY, trap);\r\n\r\n  return function() {\r\n    eventBus.off(eventName, trap);\r\n  };\r\n}","/**\r\n * Failsafe remove an element from a collection\r\n *\r\n * @param  {Array<Object>} [collection]\r\n * @param  {Object} [element]\r\n *\r\n * @return {Number} the previous index of the element\r\n */\r\nexport function remove(collection, element) {\r\n\r\n  if (!collection || !element) {\r\n    return -1;\r\n  }\r\n\r\n  var idx = collection.indexOf(element);\r\n\r\n  if (idx !== -1) {\r\n    collection.splice(idx, 1);\r\n  }\r\n\r\n  return idx;\r\n}\r\n\r\n/**\r\n * Fail save add an element to the given connection, ensuring\r\n * it does not yet exist.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n * @param {Number} idx\r\n */\r\nexport function add(collection, element, idx) {\r\n\r\n  if (!collection || !element) {\r\n    return;\r\n  }\r\n\r\n  if (typeof idx !== 'number') {\r\n    idx = -1;\r\n  }\r\n\r\n  var currentIdx = collection.indexOf(element);\r\n\r\n  if (currentIdx !== -1) {\r\n\r\n    if (currentIdx === idx) {\r\n      // nothing to do, position has not changed\r\n      return;\r\n    } else {\r\n\r\n      if (idx !== -1) {\r\n        // remove from current position\r\n        collection.splice(currentIdx, 1);\r\n      } else {\r\n        // already exists in collection\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (idx !== -1) {\r\n    // insert at specified position\r\n    collection.splice(idx, 0, element);\r\n  } else {\r\n    // push to end\r\n    collection.push(element);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Fail save get the index of an element in a collection.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n *\r\n * @return {Number} the index or -1 if collection or element do\r\n *                  not exist or the element is not contained.\r\n */\r\nexport function indexOf(collection, element) {\r\n\r\n  if (!collection || !element) {\r\n    return -1;\r\n  }\r\n\r\n  return collection.indexOf(element);\r\n}\r\n","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\nexport function getTopLevel(elements) {\r\n  var topLevel = {},\r\n      parents = [],\r\n      result = [],\r\n      clearedParents = [];\r\n\r\n  forEach(elements, function(element) {\r\n    var parent = element.parent;\r\n\r\n    if (!topLevel[parent.id]) {\r\n      topLevel[parent.id] = [];\r\n    }\r\n\r\n    if (parents.indexOf(parent.id) === -1) {\r\n      parents.push(parent.id);\r\n    }\r\n\r\n    topLevel[parent.id].push(element);\r\n  });\r\n\r\n  forEach(parents, function(parent) {\r\n    forEach(topLevel[parent], function(element) {\r\n      if (topLevel[element.id]) {\r\n        clearedParents.push(element.id);\r\n      }\r\n    });\r\n  });\r\n\r\n  forEach(parents, function(parent) {\r\n    var idx = clearedParents.indexOf(parent);\r\n\r\n    if (idx === -1) {\r\n      result = result.concat(topLevel[parent]);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}","import {\r\n  classes as domClasses\r\n} from 'min-dom';\r\n\r\nvar CURSOR_CLS_PATTERN = /^djs-cursor-.*$/;\r\n\r\n\r\nexport function set(mode) {\r\n  var classes = domClasses(document.body);\r\n\r\n  classes.removeMatching(CURSOR_CLS_PATTERN);\r\n\r\n  if (mode) {\r\n    classes.add('djs-cursor-' + mode);\r\n  }\r\n}\r\n\r\nexport function unset() {\r\n  set(null);\r\n}\r\n\r\nexport function has(mode) {\r\n  var classes = domClasses(document.body);\r\n\r\n  return classes.has('djs-cursor-' + mode);\r\n}\r\n","import {\r\n  assign,\r\n  isArray,\r\n  isNumber,\r\n  isObject,\r\n  isUndefined,\r\n  groupBy,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * Adds an element to a collection and returns true if the\r\n * element was added.\r\n *\r\n * @param {Array<Object>} elements\r\n * @param {Object} e\r\n * @param {Boolean} unique\r\n */\r\nexport function add(elements, e, unique) {\r\n  var canAdd = !unique || elements.indexOf(e) === -1;\r\n\r\n  if (canAdd) {\r\n    elements.push(e);\r\n  }\r\n\r\n  return canAdd;\r\n}\r\n\r\n\r\n/**\r\n * Iterate over each element in a collection, calling the iterator function `fn`\r\n * with (element, index, recursionDepth).\r\n *\r\n * Recurse into all elements that are returned by `fn`.\r\n *\r\n * @param  {Object|Array<Object>} elements\r\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\r\n * @param  {Number} [depth] maximum recursion depth\r\n */\r\nexport function eachElement(elements, fn, depth) {\r\n\r\n  depth = depth || 0;\r\n\r\n  if (!isArray(elements)) {\r\n    elements = [ elements ];\r\n  }\r\n\r\n  forEach(elements, function(s, i) {\r\n    var filter = fn(s, i, depth);\r\n\r\n    if (isArray(filter) && filter.length) {\r\n      eachElement(filter, fn, depth + 1);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Collects self + child elements up to a given depth from a list of elements.\r\n *\r\n * @param  {djs.model.Base|Array<djs.model.Base>} elements the elements to select the children from\r\n * @param  {Boolean} unique whether to return a unique result set (no duplicates)\r\n * @param  {Number} maxDepth the depth to search through or -1 for infinite\r\n *\r\n * @return {Array<djs.model.Base>} found elements\r\n */\r\nexport function selfAndChildren(elements, unique, maxDepth) {\r\n  var result = [],\r\n      processedChildren = [];\r\n\r\n  eachElement(elements, function(element, i, depth) {\r\n    add(result, element, unique);\r\n\r\n    var children = element.children;\r\n\r\n    // max traversal depth not reached yet\r\n    if (maxDepth === -1 || depth < maxDepth) {\r\n\r\n      // children exist && children not yet processed\r\n      if (children && add(processedChildren, children, unique)) {\r\n        return children;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Return self + direct children for a number of elements\r\n *\r\n * @param  {Array<djs.model.Base>} elements to query\r\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\r\n *\r\n * @return {Array<djs.model.Base>} the collected elements\r\n */\r\nexport function selfAndDirectChildren(elements, allowDuplicates) {\r\n  return selfAndChildren(elements, !allowDuplicates, 1);\r\n}\r\n\r\n\r\n/**\r\n * Return self + ALL children for a number of elements\r\n *\r\n * @param  {Array<djs.model.Base>} elements to query\r\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\r\n *\r\n * @return {Array<djs.model.Base>} the collected elements\r\n */\r\nexport function selfAndAllChildren(elements, allowDuplicates) {\r\n  return selfAndChildren(elements, !allowDuplicates, -1);\r\n}\r\n\r\n\r\n/**\r\n * Gets the the closure for all selected elements,\r\n * their enclosed children and connections.\r\n *\r\n * @param {Array<djs.model.Base>} elements\r\n * @param {Boolean} [isTopLevel=true]\r\n * @param {Object} [existingClosure]\r\n *\r\n * @return {Object} newClosure\r\n */\r\nexport function getClosure(elements, isTopLevel, closure) {\r\n\r\n  if (isUndefined(isTopLevel)) {\r\n    isTopLevel = true;\r\n  }\r\n\r\n  if (isObject(isTopLevel)) {\r\n    closure = isTopLevel;\r\n    isTopLevel = true;\r\n  }\r\n\r\n\r\n  closure = closure || {};\r\n\r\n  var allShapes = copyObject(closure.allShapes),\r\n      allConnections = copyObject(closure.allConnections),\r\n      enclosedElements = copyObject(closure.enclosedElements),\r\n      enclosedConnections = copyObject(closure.enclosedConnections);\r\n\r\n  var topLevel = copyObject(\r\n    closure.topLevel,\r\n    isTopLevel && groupBy(elements, function(e) { return e.id; })\r\n  );\r\n\r\n\r\n  function handleConnection(c) {\r\n    if (topLevel[c.source.id] && topLevel[c.target.id]) {\r\n      topLevel[c.id] = [ c ];\r\n    }\r\n\r\n    // not enclosed as a child, but maybe logically\r\n    // (connecting two moved elements?)\r\n    if (allShapes[c.source.id] && allShapes[c.target.id]) {\r\n      enclosedConnections[c.id] = enclosedElements[c.id] = c;\r\n    }\r\n\r\n    allConnections[c.id] = c;\r\n  }\r\n\r\n  function handleElement(element) {\r\n\r\n    enclosedElements[element.id] = element;\r\n\r\n    if (element.waypoints) {\r\n      // remember connection\r\n      enclosedConnections[element.id] = allConnections[element.id] = element;\r\n    } else {\r\n      // remember shape\r\n      allShapes[element.id] = element;\r\n\r\n      // remember all connections\r\n      forEach(element.incoming, handleConnection);\r\n\r\n      forEach(element.outgoing, handleConnection);\r\n\r\n      // recurse into children\r\n      return element.children;\r\n    }\r\n  }\r\n\r\n  eachElement(elements, handleElement);\r\n\r\n  return {\r\n    allShapes: allShapes,\r\n    allConnections: allConnections,\r\n    topLevel: topLevel,\r\n    enclosedConnections: enclosedConnections,\r\n    enclosedElements: enclosedElements\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the surrounding bbox for all elements in\r\n * the array or the element primitive.\r\n *\r\n * @param {Array<djs.model.Shape>|djs.model.Shape} elements\r\n * @param {Boolean} stopRecursion\r\n */\r\nexport function getBBox(elements, stopRecursion) {\r\n\r\n  stopRecursion = !!stopRecursion;\r\n  if (!isArray(elements)) {\r\n    elements = [elements];\r\n  }\r\n\r\n  var minX,\r\n      minY,\r\n      maxX,\r\n      maxY;\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    // If element is a connection the bbox must be computed first\r\n    var bbox = element;\r\n    if (element.waypoints && !stopRecursion) {\r\n      bbox = getBBox(element.waypoints, true);\r\n    }\r\n\r\n    var x = bbox.x,\r\n        y = bbox.y,\r\n        height = bbox.height || 0,\r\n        width = bbox.width || 0;\r\n\r\n    if (x < minX || minX === undefined) {\r\n      minX = x;\r\n    }\r\n    if (y < minY || minY === undefined) {\r\n      minY = y;\r\n    }\r\n\r\n    if ((x + width) > maxX || maxX === undefined) {\r\n      maxX = x + width;\r\n    }\r\n    if ((y + height) > maxY || maxY === undefined) {\r\n      maxY = y + height;\r\n    }\r\n  });\r\n\r\n  return {\r\n    x: minX,\r\n    y: minY,\r\n    height: maxY - minY,\r\n    width: maxX - minX\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Returns all elements that are enclosed from the bounding box.\r\n *\r\n *   * If bbox.(width|height) is not specified the method returns\r\n *     all elements with element.x/y > bbox.x/y\r\n *   * If only bbox.x or bbox.y is specified, method return all elements with\r\n *     e.x > bbox.x or e.y > bbox.y\r\n *\r\n * @param {Array<djs.model.Shape>} elements List of Elements to search through\r\n * @param {djs.model.Shape} bbox the enclosing bbox.\r\n *\r\n * @return {Array<djs.model.Shape>} enclosed elements\r\n */\r\nexport function getEnclosedElements(elements, bbox) {\r\n\r\n  var filteredElements = {};\r\n\r\n  forEach(elements, function(element) {\r\n\r\n    var e = element;\r\n\r\n    if (e.waypoints) {\r\n      e = getBBox(e);\r\n    }\r\n\r\n    if (!isNumber(bbox.y) && (e.x > bbox.x)) {\r\n      filteredElements[element.id] = element;\r\n    }\r\n    if (!isNumber(bbox.x) && (e.y > bbox.y)) {\r\n      filteredElements[element.id] = element;\r\n    }\r\n    if (e.x > bbox.x && e.y > bbox.y) {\r\n      if (isNumber(bbox.width) && isNumber(bbox.height) &&\r\n          e.width + e.x < bbox.width + bbox.x &&\r\n          e.height + e.y < bbox.height + bbox.y) {\r\n\r\n        filteredElements[element.id] = element;\r\n      } else if (!isNumber(bbox.width) || !isNumber(bbox.height)) {\r\n        filteredElements[element.id] = element;\r\n      }\r\n    }\r\n  });\r\n\r\n  return filteredElements;\r\n}\r\n\r\n\r\nexport function getType(element) {\r\n\r\n  if ('waypoints' in element) {\r\n    return 'connection';\r\n  }\r\n\r\n  if ('x' in element) {\r\n    return 'shape';\r\n  }\r\n\r\n  return 'root';\r\n}\r\n\r\n\r\n// helpers ///////////////////////////////\r\n\r\nfunction copyObject(src1, src2) {\r\n  return assign({}, src1 || {}, src2 || {});\r\n}","function __stopPropagation(event) {\r\n  if (!event || typeof event.stopPropagation !== 'function') {\r\n    return;\r\n  }\r\n\r\n  event.stopPropagation();\r\n}\r\n\r\n\r\nexport function getOriginal(event) {\r\n  return event.originalEvent || event.srcEvent;\r\n}\r\n\r\n\r\nexport function stopPropagation(event, immediate) {\r\n  __stopPropagation(event, immediate);\r\n  __stopPropagation(getOriginal(event), immediate);\r\n}\r\n\r\n\r\nexport function toPoint(event) {\r\n\r\n  if (event.pointers && event.pointers.length) {\r\n    event = event.pointers[0];\r\n  }\r\n\r\n  if (event.touches && event.touches.length) {\r\n    event = event.touches[0];\r\n  }\r\n\r\n  return event ? {\r\n    x: event.clientX,\r\n    y: event.clientY\r\n  } : null;\r\n}","/**\r\n * Computes the distance between two points\r\n *\r\n * @param  {Point}  p\r\n * @param  {Point}  q\r\n *\r\n * @return {Number}  distance\r\n */\r\nexport function pointDistance(a, b) {\r\n  if (!a || !b) {\r\n    return -1;\r\n  }\r\n\r\n  return Math.sqrt(\r\n    Math.pow(a.x - b.x, 2) +\r\n    Math.pow(a.y - b.y, 2)\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Returns true if the point r is on the line between p and q\r\n *\r\n * @param  {Point}  p\r\n * @param  {Point}  q\r\n * @param  {Point}  r\r\n * @param  {Number} [accuracy=5] accuracy for points on line check (lower is better)\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function pointsOnLine(p, q, r, accuracy) {\r\n\r\n  if (typeof accuracy === 'undefined') {\r\n    accuracy = 5;\r\n  }\r\n\r\n  if (!p || !q || !r) {\r\n    return false;\r\n  }\r\n\r\n  var val = (q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x),\r\n      dist = pointDistance(p, q);\r\n\r\n  // @see http://stackoverflow.com/a/907491/412190\r\n  return Math.abs(val / dist) <= accuracy;\r\n}\r\n\r\n\r\nvar ALIGNED_THRESHOLD = 2;\r\n\r\n/**\r\n * Returns whether two points are in a horizontal or vertical line.\r\n *\r\n * @param {Point} a\r\n * @param {Point} b\r\n *\r\n * @return {String|Boolean} returns false if the points are not\r\n *                          aligned or 'h|v' if they are aligned\r\n *                          horizontally / vertically.\r\n */\r\nexport function pointsAligned(a, b) {\r\n  if (Math.abs(a.x - b.x) <= ALIGNED_THRESHOLD) {\r\n    return 'h';\r\n  }\r\n\r\n  if (Math.abs(a.y - b.y) <= ALIGNED_THRESHOLD) {\r\n    return 'v';\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Returns true if the point p is inside the rectangle rect\r\n *\r\n * @param  {Point}  p\r\n * @param  {Rect}   rect\r\n * @param  {Number} tolerance\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function pointInRect(p, rect, tolerance) {\r\n  tolerance = tolerance || 0;\r\n\r\n  return p.x > rect.x - tolerance &&\r\n         p.y > rect.y - tolerance &&\r\n         p.x < rect.x + rect.width + tolerance &&\r\n         p.y < rect.y + rect.height + tolerance;\r\n}\r\n\r\n/**\r\n * Returns a point in the middle of points p and q\r\n *\r\n * @param  {Point}  p\r\n * @param  {Point}  q\r\n *\r\n * @return {Point} middle point\r\n */\r\nexport function getMidPoint(p, q) {\r\n  return {\r\n    x: Math.round(p.x + ((q.x - p.x) / 2.0)),\r\n    y: Math.round(p.y + ((q.y - p.y) / 2.0))\r\n  };\r\n}\r\n","import {\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\n/**\r\n * SVGs for elements are generated by the {@link GraphicsFactory}.\r\n *\r\n * This utility gives quick access to the important semantic\r\n * parts of an element.\r\n */\r\n\r\n/**\r\n * Returns the visual part of a diagram element\r\n *\r\n * @param {Snap<SVGElement>} gfx\r\n *\r\n * @return {Snap<SVGElement>}\r\n */\r\nexport function getVisual(gfx) {\r\n  return domQuery('.djs-visual', gfx);\r\n}\r\n\r\n/**\r\n * Returns the children for a given diagram element.\r\n *\r\n * @param {Snap<SVGElement>} gfx\r\n * @return {Snap<SVGElement>}\r\n */\r\nexport function getChildren(gfx) {\r\n  return gfx.parentNode.childNodes[1];\r\n}","/**\r\n * Util that provides unique IDs.\r\n *\r\n * @class djs.util.IdGenerator\r\n * @constructor\r\n * @memberOf djs.util\r\n *\r\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\r\n *\r\n * @param {String} prefix a prefix to prepend to generated ids (for better readability)\r\n */\r\nexport default function IdGenerator(prefix) {\r\n\r\n  this._counter = 0;\r\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\r\n}\r\n\r\n/**\r\n * Returns a next unique ID.\r\n *\r\n * @method djs.util.IdGenerator#next\r\n *\r\n * @returns {String} the id\r\n */\r\nIdGenerator.prototype.next = function() {\r\n  return this._prefix + (++this._counter);\r\n};\r\n","import {\r\n  pointDistance\r\n} from './Geometry';\r\n\r\nimport intersectPaths from 'path-intersection';\r\n\r\nvar round = Math.round,\r\n    max = Math.max;\r\n\r\n\r\nfunction circlePath(center, r) {\r\n  var x = center.x,\r\n      y = center.y;\r\n\r\n  return [\r\n    ['M', x, y],\r\n    ['m', 0, -r],\r\n    ['a', r, r, 0, 1, 1, 0, 2 * r],\r\n    ['a', r, r, 0, 1, 1, 0, -2 * r],\r\n    ['z']\r\n  ];\r\n}\r\n\r\nfunction linePath(points) {\r\n  var segments = [];\r\n\r\n  points.forEach(function(p, idx) {\r\n    segments.push([ idx === 0 ? 'M' : 'L', p.x, p.y ]);\r\n  });\r\n\r\n  return segments;\r\n}\r\n\r\n\r\nvar INTERSECTION_THRESHOLD = 10;\r\n\r\nfunction getBendpointIntersection(waypoints, reference) {\r\n\r\n  var i, w;\r\n\r\n  for (i = 0; (w = waypoints[i]); i++) {\r\n\r\n    if (pointDistance(w, reference) <= INTERSECTION_THRESHOLD) {\r\n      return {\r\n        point: waypoints[i],\r\n        bendpoint: true,\r\n        index: i\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getPathIntersection(waypoints, reference) {\r\n\r\n  var intersections = intersectPaths(circlePath(reference, INTERSECTION_THRESHOLD), linePath(waypoints));\r\n\r\n  var a = intersections[0],\r\n      b = intersections[intersections.length - 1],\r\n      idx;\r\n\r\n  if (!a) {\r\n    // no intersection\r\n    return null;\r\n  }\r\n\r\n  if (a !== b) {\r\n\r\n    if (a.segment2 !== b.segment2) {\r\n      // we use the bendpoint in between both segments\r\n      // as the intersection point\r\n\r\n      idx = max(a.segment2, b.segment2) - 1;\r\n\r\n      return {\r\n        point: waypoints[idx],\r\n        bendpoint: true,\r\n        index: idx\r\n      };\r\n    }\r\n\r\n    return {\r\n      point: {\r\n        x: (round(a.x + b.x) / 2),\r\n        y: (round(a.y + b.y) / 2)\r\n      },\r\n      index: a.segment2\r\n    };\r\n  }\r\n\r\n  return {\r\n    point: {\r\n      x: round(a.x),\r\n      y: round(a.y)\r\n    },\r\n    index: a.segment2\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the closest point on the connection towards a given reference point.\r\n *\r\n * @param  {Array<Point>} waypoints\r\n * @param  {Point} reference\r\n *\r\n * @return {Object} intersection data (segment, point)\r\n */\r\nexport function getApproxIntersection(waypoints, reference) {\r\n  return getBendpointIntersection(waypoints, reference) || getPathIntersection(waypoints, reference);\r\n}\r\n","/**\r\n * Get the logarithm of x with base 10\r\n * @param  {Integer} value\r\n */\r\nexport function log10(x) {\r\n  return Math.log(x) / Math.log(10);\r\n}\r\n\r\nexport { delta as substract } from './PositionUtil';\r\n","import {\r\n  getOriginal as getOriginalEvent\r\n} from './Event';\r\n\r\nimport {\r\n  isMac\r\n} from './Platform';\r\n\r\nexport {\r\n  isMac\r\n} from './Platform';\r\n\r\n\r\nexport function isPrimaryButton(event) {\r\n  // button === 0 -> left áka primary mouse button\r\n  return !(getOriginalEvent(event) || event).button;\r\n}\r\n\r\nexport function hasPrimaryModifier(event) {\r\n  var originalEvent = getOriginalEvent(event) || event;\r\n\r\n  if (!isPrimaryButton(event)) {\r\n    return false;\r\n  }\r\n\r\n  // Use alt as primary modifier key for mac OS\r\n  if (isMac()) {\r\n    return originalEvent.metaKey;\r\n  } else {\r\n    return originalEvent.ctrlKey;\r\n  }\r\n}\r\n\r\n\r\nexport function hasSecondaryModifier(event) {\r\n  var originalEvent = getOriginalEvent(event) || event;\r\n\r\n  return isPrimaryButton(event) && originalEvent.shiftKey;\r\n}","export function isMac() {\r\n  return (/mac/i).test(navigator.platform);\r\n}","export function center(bounds) {\r\n  return {\r\n    x: bounds.x + (bounds.width / 2),\r\n    y: bounds.y + (bounds.height / 2)\r\n  };\r\n}\r\n\r\n\r\nexport function delta(a, b) {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y\r\n  };\r\n}","/**\r\n * Remove from the beginning of a collection until it is empty.\r\n *\r\n * This is a null-safe operation that ensures elements\r\n * are being removed from the given collection until the\r\n * collection is empty.\r\n *\r\n * The implementation deals with the fact that a remove operation\r\n * may touch, i.e. remove multiple elements in the collection\r\n * at a time.\r\n *\r\n * @param {Array<Object>} [collection]\r\n * @param {Function} removeFn\r\n *\r\n * @return {Array<Object>} the cleared collection\r\n */\r\nexport function saveClear(collection, removeFn) {\r\n\r\n  if (typeof removeFn !== 'function') {\r\n    throw new Error('removeFn iterator must be a function');\r\n  }\r\n\r\n  if (!collection) {\r\n    return;\r\n  }\r\n\r\n  var e;\r\n\r\n  while ((e = collection[0])) {\r\n    removeFn(e);\r\n  }\r\n\r\n  return collection;\r\n}\r\n","import {\r\n  attr as svgAttr,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\n\r\nexport function componentsToPath(elements) {\r\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\r\n}\r\n\r\nexport function toSVGPoints(points) {\r\n  var result = '';\r\n\r\n  for (var i = 0, p; (p = points[i]); i++) {\r\n    result += p.x + ',' + p.y + ' ';\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function createLine(points, attrs) {\r\n\r\n  var line = svgCreate('polyline');\r\n  svgAttr(line, { points: toSVGPoints(points) });\r\n\r\n  if (attrs) {\r\n    svgAttr(line, attrs);\r\n  }\r\n\r\n  return line;\r\n}\r\n\r\nexport function updateLine(gfx, points) {\r\n  svgAttr(gfx, { points: toSVGPoints(points) });\r\n\r\n  return gfx;\r\n}\r\n","import {\r\n  transform as svgTransform,\r\n  createTransform\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * @param {<SVGElement>} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} angle\r\n * @param {Number} amount\r\n */\r\nexport function transform(gfx, x, y, angle, amount) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  var scale = createTransform();\r\n  scale.setScale(amount || 1, amount || 1);\r\n\r\n  svgTransform(gfx, [ translate, rotate, scale ]);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nexport function translate(gfx, x, y) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  svgTransform(gfx, translate);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} angle\r\n */\r\nexport function rotate(gfx, angle) {\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  svgTransform(gfx, rotate);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} amount\r\n */\r\nexport function scale(gfx, amount) {\r\n  var scale = createTransform();\r\n  scale.setScale(amount, amount);\r\n\r\n  svgTransform(gfx, scale);\r\n}","import {\r\n  isObject,\r\n  assign,\r\n  forEach,\r\n  reduce\r\n} from 'min-dash';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nvar DEFAULT_BOX_PADDING = 0;\r\n\r\nvar DEFAULT_LABEL_SIZE = {\r\n  width: 150,\r\n  height: 50\r\n};\r\n\r\n\r\nfunction parseAlign(align) {\r\n\r\n  var parts = align.split('-');\r\n\r\n  return {\r\n    horizontal: parts[0] || 'center',\r\n    vertical: parts[1] || 'top'\r\n  };\r\n}\r\n\r\nfunction parsePadding(padding) {\r\n\r\n  if (isObject(padding)) {\r\n    return assign({ top: 0, left: 0, right: 0, bottom: 0 }, padding);\r\n  } else {\r\n    return {\r\n      top: padding,\r\n      left: padding,\r\n      right: padding,\r\n      bottom: padding\r\n    };\r\n  }\r\n}\r\n\r\nfunction getTextBBox(text, fakeText) {\r\n\r\n  fakeText.textContent = text;\r\n\r\n  var textBBox;\r\n\r\n  try {\r\n    var bbox,\r\n        emptyLine = text === '';\r\n\r\n    // add dummy text, when line is empty to\r\n    // determine correct height\r\n    fakeText.textContent = emptyLine ? 'dummy' : text;\r\n\r\n    textBBox = fakeText.getBBox();\r\n\r\n    // take text rendering related horizontal\r\n    // padding into account\r\n    bbox = {\r\n      width: textBBox.width + textBBox.x * 2,\r\n      height: textBBox.height\r\n    };\r\n\r\n    if (emptyLine) {\r\n      // correct width\r\n      bbox.width = 0;\r\n    }\r\n\r\n    return bbox;\r\n  } catch (e) {\r\n    return { width: 0, height: 0 };\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Layout the next line and return the layouted element.\r\n *\r\n * Alters the lines passed.\r\n *\r\n * @param  {Array<String>} lines\r\n * @return {Object} the line descriptor, an object { width, height, text }\r\n */\r\nfunction layoutNext(lines, maxWidth, fakeText) {\r\n\r\n  var originalLine = lines.shift(),\r\n      fitLine = originalLine;\r\n\r\n  var textBBox;\r\n\r\n  for (;;) {\r\n    textBBox = getTextBBox(fitLine, fakeText);\r\n\r\n    textBBox.width = fitLine ? textBBox.width : 0;\r\n\r\n    // try to fit\r\n    if (fitLine === ' ' || fitLine === '' || textBBox.width < Math.round(maxWidth) || fitLine.length < 2) {\r\n      return fit(lines, fitLine, originalLine, textBBox);\r\n    }\r\n\r\n    fitLine = shortenLine(fitLine, textBBox.width, maxWidth);\r\n  }\r\n}\r\n\r\nfunction fit(lines, fitLine, originalLine, textBBox) {\r\n  if (fitLine.length < originalLine.length) {\r\n    var remainder = originalLine.slice(fitLine.length).trim();\r\n\r\n    lines.unshift(remainder);\r\n  }\r\n\r\n  return {\r\n    width: textBBox.width,\r\n    height: textBBox.height,\r\n    text: fitLine\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Shortens a line based on spacing and hyphens.\r\n * Returns the shortened result on success.\r\n *\r\n * @param  {String} line\r\n * @param  {Number} maxLength the maximum characters of the string\r\n * @return {String} the shortened string\r\n */\r\nfunction semanticShorten(line, maxLength) {\r\n  var parts = line.split(/(\\s|-)/g),\r\n      part,\r\n      shortenedParts = [],\r\n      length = 0;\r\n\r\n  // try to shorten via spaces + hyphens\r\n  if (parts.length > 1) {\r\n    while ((part = parts.shift())) {\r\n      if (part.length + length < maxLength) {\r\n        shortenedParts.push(part);\r\n        length += part.length;\r\n      } else {\r\n        // remove previous part, too if hyphen does not fit anymore\r\n        if (part === '-') {\r\n          shortenedParts.pop();\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return shortenedParts.join('');\r\n}\r\n\r\n\r\nfunction shortenLine(line, width, maxWidth) {\r\n  var length = Math.max(line.length * (maxWidth / width), 1);\r\n\r\n  // try to shorten semantically (i.e. based on spaces and hyphens)\r\n  var shortenedLine = semanticShorten(line, length);\r\n\r\n  if (!shortenedLine) {\r\n\r\n    // force shorten by cutting the long word\r\n    shortenedLine = line.slice(0, Math.max(Math.round(length - 1), 1));\r\n  }\r\n\r\n  return shortenedLine;\r\n}\r\n\r\n\r\nfunction getHelperSvg() {\r\n  var helperSvg = document.getElementById('helper-svg');\r\n\r\n  if (!helperSvg) {\r\n    helperSvg = svgCreate('svg');\r\n\r\n    svgAttr(helperSvg, {\r\n      id: 'helper-svg',\r\n      width: 0,\r\n      height: 0,\r\n      style: 'visibility: hidden; position: fixed'\r\n    });\r\n\r\n    document.body.appendChild(helperSvg);\r\n  }\r\n\r\n  return helperSvg;\r\n}\r\n\r\n\r\n/**\r\n * Creates a new label utility\r\n *\r\n * @param {Object} config\r\n * @param {Dimensions} config.size\r\n * @param {Number} config.padding\r\n * @param {Object} config.style\r\n * @param {String} config.align\r\n */\r\nexport default function Text(config) {\r\n\r\n  this._config = assign({}, {\r\n    size: DEFAULT_LABEL_SIZE,\r\n    padding: DEFAULT_BOX_PADDING,\r\n    style: {},\r\n    align: 'center-top'\r\n  }, config || {});\r\n}\r\n\r\n/**\r\n * Returns the layouted text as an SVG element.\r\n *\r\n * @param {String} text\r\n * @param {Object} options\r\n *\r\n * @return {SVGElement}\r\n */\r\nText.prototype.createText = function(text, options) {\r\n  return this.layoutText(text, options).element;\r\n};\r\n\r\n/**\r\n * Returns a labels layouted dimensions.\r\n *\r\n * @param {String} text to layout\r\n * @param {Object} options\r\n *\r\n * @return {Dimensions}\r\n */\r\nText.prototype.getDimensions = function(text, options) {\r\n  return this.layoutText(text, options).dimensions;\r\n};\r\n\r\n/**\r\n * Creates and returns a label and its bounding box.\r\n *\r\n * @method Text#createText\r\n *\r\n * @param {String} text the text to render on the label\r\n * @param {Object} options\r\n * @param {String} options.align how to align in the bounding box.\r\n *                               Any of { 'center-middle', 'center-top' },\r\n *                               defaults to 'center-top'.\r\n * @param {String} options.style style to be applied to the text\r\n * @param {boolean} options.fitBox indicates if box will be recalculated to\r\n *                                 fit text\r\n *\r\n * @return {Object} { element, dimensions }\r\n */\r\nText.prototype.layoutText = function(text, options) {\r\n  var box = assign({}, this._config.size, options.box),\r\n      style = assign({}, this._config.style, options.style),\r\n      align = parseAlign(options.align || this._config.align),\r\n      padding = parsePadding(options.padding !== undefined ? options.padding : this._config.padding),\r\n      fitBox = options.fitBox || false;\r\n\r\n  var lineHeight = getLineHeight(style);\r\n\r\n  var lines = text.split(/\\r?\\n/g),\r\n      layouted = [];\r\n\r\n  var maxWidth = box.width - padding.left - padding.right;\r\n\r\n  // ensure correct rendering by attaching helper text node to invisible SVG\r\n  var helperText = svgCreate('text');\r\n  svgAttr(helperText, { x: 0, y: 0 });\r\n  svgAttr(helperText, style);\r\n\r\n  var helperSvg = getHelperSvg();\r\n\r\n  svgAppend(helperSvg, helperText);\r\n\r\n  while (lines.length) {\r\n    layouted.push(layoutNext(lines, maxWidth, helperText));\r\n  }\r\n\r\n  if (align.vertical === 'middle') {\r\n    padding.top = padding.bottom = 0;\r\n  }\r\n\r\n  var totalHeight = reduce(layouted, function(sum, line, idx) {\r\n    return sum + (lineHeight || line.height);\r\n  }, 0) + padding.top + padding.bottom;\r\n\r\n  var maxLineWidth = reduce(layouted, function(sum, line, idx) {\r\n    return line.width > sum ? line.width : sum;\r\n  }, 0);\r\n\r\n  // the y position of the next line\r\n  var y = padding.top;\r\n\r\n  if (align.vertical === 'middle') {\r\n    y += (box.height - totalHeight) / 2;\r\n  }\r\n\r\n  // magic number initial offset\r\n  y -= (lineHeight || layouted[0].height) / 4;\r\n\r\n\r\n  var textElement = svgCreate('text');\r\n\r\n  svgAttr(textElement, style);\r\n\r\n  // layout each line taking into account that parent\r\n  // shape might resize to fit text size\r\n  forEach(layouted, function(line) {\r\n\r\n    var x;\r\n\r\n    y += (lineHeight || line.height);\r\n\r\n    switch (align.horizontal) {\r\n    case 'left':\r\n      x = padding.left;\r\n      break;\r\n\r\n    case 'right':\r\n      x = ((fitBox ? maxLineWidth : maxWidth)\r\n        - padding.right - line.width);\r\n      break;\r\n\r\n    default:\r\n      // aka center\r\n      x = Math.max((((fitBox ? maxLineWidth : maxWidth)\r\n        - line.width) / 2 + padding.left), 0);\r\n    }\r\n\r\n    var tspan = svgCreate('tspan');\r\n    svgAttr(tspan, { x: x, y: y });\r\n\r\n    tspan.textContent = line.text;\r\n\r\n    svgAppend(textElement, tspan);\r\n  });\r\n\r\n  svgRemove(helperText);\r\n\r\n  var dimensions = {\r\n    width: maxLineWidth,\r\n    height: totalHeight\r\n  };\r\n\r\n  return {\r\n    dimensions: dimensions,\r\n    element: textElement\r\n  };\r\n};\r\n\r\n\r\nfunction getLineHeight(style) {\r\n  if ('fontSize' in style && 'lineHeight' in style) {\r\n    return style.lineHeight * parseInt(style.fontSize, 10);\r\n  }\r\n}","var CLASS_PATTERN = /^class /;\r\n\r\nfunction isClass(fn) {\r\n  return CLASS_PATTERN.test(fn.toString());\r\n}\r\n\r\nfunction isArray(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Array]';\r\n}\r\n\r\nfunction annotate() {\r\n  var args = Array.prototype.slice.call(arguments);\r\n\r\n  if (args.length === 1 && isArray(args[0])) {\r\n    args = args[0];\r\n  }\r\n\r\n  var fn = args.pop();\r\n\r\n  fn.$inject = args;\r\n\r\n  return fn;\r\n}\r\n\r\n// Current limitations:\r\n// - can't put into \"function arg\" comments\r\n// function /* (no parenthesis like this) */ (){}\r\n// function abc( /* xx (no parenthesis like this) */ a, b) {}\r\n//\r\n// Just put the comment before function or inside:\r\n// /* (((this is fine))) */ function(a, b) {}\r\n// function abc(a) { /* (((this is fine))) */}\r\n//\r\n// - can't reliably auto-annotate constructor; we'll match the\r\n// first constructor(...) pattern found which may be the one\r\n// of a nested class, too.\r\n\r\nvar CONSTRUCTOR_ARGS = /constructor\\s*[^(]*\\(\\s*([^)]*)\\)/m;\r\nvar FN_ARGS = /^function\\s*[^(]*\\(\\s*([^)]*)\\)/m;\r\nvar FN_ARG = /\\/\\*([^*]*)\\*\\//m;\r\n\r\nfunction parse(fn) {\r\n\r\n  if (typeof fn !== 'function') {\r\n    throw new Error('Cannot annotate \"' + fn + '\". Expected a function!');\r\n  }\r\n\r\n  var match = fn.toString().match(isClass(fn) ? CONSTRUCTOR_ARGS : FN_ARGS);\r\n\r\n  // may parse class without constructor\r\n  if (!match) {\r\n    return [];\r\n  }\r\n\r\n  return match[1] && match[1].split(',').map(function (arg) {\r\n    match = arg.match(FN_ARG);\r\n    return match ? match[1].trim() : arg.trim();\r\n  }) || [];\r\n}\r\n\r\nfunction Module() {\r\n  var providers = [];\r\n\r\n  this.factory = function (name, factory) {\r\n    providers.push([name, 'factory', factory]);\r\n    return this;\r\n  };\r\n\r\n  this.value = function (name, value) {\r\n    providers.push([name, 'value', value]);\r\n    return this;\r\n  };\r\n\r\n  this.type = function (name, type) {\r\n    providers.push([name, 'type', type]);\r\n    return this;\r\n  };\r\n\r\n  this.forEach = function (iterator) {\r\n    providers.forEach(iterator);\r\n  };\r\n}\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\nfunction Injector(modules, parent) {\r\n  parent = parent || {\r\n    get: function get(name, strict) {\r\n      currentlyResolving.push(name);\r\n\r\n      if (strict === false) {\r\n        return null;\r\n      } else {\r\n        throw error('No provider for \"' + name + '\"!');\r\n      }\r\n    }\r\n  };\r\n\r\n  var currentlyResolving = [];\r\n  var providers = this._providers = Object.create(parent._providers || null);\r\n  var instances = this._instances = Object.create(null);\r\n\r\n  var self = instances.injector = this;\r\n\r\n  var error = function error(msg) {\r\n    var stack = currentlyResolving.join(' -> ');\r\n    currentlyResolving.length = 0;\r\n    return new Error(stack ? msg + ' (Resolving: ' + stack + ')' : msg);\r\n  };\r\n\r\n  /**\r\n   * Return a named service.\r\n   *\r\n   * @param {String} name\r\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\r\n   *\r\n   * @return {Object}\r\n   */\r\n  var get = function get(name, strict) {\r\n    if (!providers[name] && name.indexOf('.') !== -1) {\r\n      var parts = name.split('.');\r\n      var pivot = get(parts.shift());\r\n\r\n      while (parts.length) {\r\n        pivot = pivot[parts.shift()];\r\n      }\r\n\r\n      return pivot;\r\n    }\r\n\r\n    if (hasProp(instances, name)) {\r\n      return instances[name];\r\n    }\r\n\r\n    if (hasProp(providers, name)) {\r\n      if (currentlyResolving.indexOf(name) !== -1) {\r\n        currentlyResolving.push(name);\r\n        throw error('Cannot resolve circular dependency!');\r\n      }\r\n\r\n      currentlyResolving.push(name);\r\n      instances[name] = providers[name][0](providers[name][1]);\r\n      currentlyResolving.pop();\r\n\r\n      return instances[name];\r\n    }\r\n\r\n    return parent.get(name, strict);\r\n  };\r\n\r\n  var fnDef = function fnDef(fn) {\r\n    var locals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n    if (typeof fn !== 'function') {\r\n      if (isArray(fn)) {\r\n        fn = annotate(fn.slice());\r\n      } else {\r\n        throw new Error('Cannot invoke \"' + fn + '\". Expected a function!');\r\n      }\r\n    }\r\n\r\n    var inject = fn.$inject || parse(fn);\r\n    var dependencies = inject.map(function (dep) {\r\n      if (hasProp(locals, dep)) {\r\n        return locals[dep];\r\n      } else {\r\n        return get(dep);\r\n      }\r\n    });\r\n\r\n    return {\r\n      fn: fn,\r\n      dependencies: dependencies\r\n    };\r\n  };\r\n\r\n  var instantiate = function instantiate(Type) {\r\n    var _fnDef = fnDef(Type),\r\n        dependencies = _fnDef.dependencies,\r\n        fn = _fnDef.fn;\r\n\r\n    return new (Function.prototype.bind.apply(fn, [null].concat(_toConsumableArray(dependencies))))();\r\n  };\r\n\r\n  var invoke = function invoke(func, context, locals) {\r\n    var _fnDef2 = fnDef(func, locals),\r\n        dependencies = _fnDef2.dependencies,\r\n        fn = _fnDef2.fn;\r\n\r\n    return fn.call.apply(fn, [context].concat(_toConsumableArray(dependencies)));\r\n  };\r\n\r\n  var createPrivateInjectorFactory = function createPrivateInjectorFactory(privateChildInjector) {\r\n    return annotate(function (key) {\r\n      return privateChildInjector.get(key);\r\n    });\r\n  };\r\n\r\n  var createChild = function createChild(modules, forceNewInstances) {\r\n    if (forceNewInstances && forceNewInstances.length) {\r\n      var fromParentModule = Object.create(null);\r\n      var matchedScopes = Object.create(null);\r\n\r\n      var privateInjectorsCache = [];\r\n      var privateChildInjectors = [];\r\n      var privateChildFactories = [];\r\n\r\n      var provider;\r\n      var cacheIdx;\r\n      var privateChildInjector;\r\n      var privateChildInjectorFactory;\r\n      for (var name in providers) {\r\n        provider = providers[name];\r\n\r\n        if (forceNewInstances.indexOf(name) !== -1) {\r\n          if (provider[2] === 'private') {\r\n            cacheIdx = privateInjectorsCache.indexOf(provider[3]);\r\n            if (cacheIdx === -1) {\r\n              privateChildInjector = provider[3].createChild([], forceNewInstances);\r\n              privateChildInjectorFactory = createPrivateInjectorFactory(privateChildInjector);\r\n              privateInjectorsCache.push(provider[3]);\r\n              privateChildInjectors.push(privateChildInjector);\r\n              privateChildFactories.push(privateChildInjectorFactory);\r\n              fromParentModule[name] = [privateChildInjectorFactory, name, 'private', privateChildInjector];\r\n            } else {\r\n              fromParentModule[name] = [privateChildFactories[cacheIdx], name, 'private', privateChildInjectors[cacheIdx]];\r\n            }\r\n          } else {\r\n            fromParentModule[name] = [provider[2], provider[1]];\r\n          }\r\n          matchedScopes[name] = true;\r\n        }\r\n\r\n        if ((provider[2] === 'factory' || provider[2] === 'type') && provider[1].$scope) {\r\n          /* jshint -W083 */\r\n          forceNewInstances.forEach(function (scope) {\r\n            if (provider[1].$scope.indexOf(scope) !== -1) {\r\n              fromParentModule[name] = [provider[2], provider[1]];\r\n              matchedScopes[scope] = true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      forceNewInstances.forEach(function (scope) {\r\n        if (!matchedScopes[scope]) {\r\n          throw new Error('No provider for \"' + scope + '\". Cannot use provider from the parent!');\r\n        }\r\n      });\r\n\r\n      modules.unshift(fromParentModule);\r\n    }\r\n\r\n    return new Injector(modules, self);\r\n  };\r\n\r\n  var factoryMap = {\r\n    factory: invoke,\r\n    type: instantiate,\r\n    value: function value(_value) {\r\n      return _value;\r\n    }\r\n  };\r\n\r\n  modules.forEach(function (module) {\r\n\r\n    function arrayUnwrap(type, value) {\r\n      if (type !== 'value' && isArray(value)) {\r\n        value = annotate(value.slice());\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    // TODO(vojta): handle wrong inputs (modules)\r\n    if (module instanceof Module) {\r\n      module.forEach(function (provider) {\r\n        var name = provider[0];\r\n        var type = provider[1];\r\n        var value = provider[2];\r\n\r\n        providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\r\n      });\r\n    } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\r\n      if (module.__exports__) {\r\n        var clonedModule = Object.keys(module).reduce(function (m, key) {\r\n          if (key.substring(0, 2) !== '__') {\r\n            m[key] = module[key];\r\n          }\r\n          return m;\r\n        }, Object.create(null));\r\n\r\n        var privateInjector = new Injector((module.__modules__ || []).concat([clonedModule]), self);\r\n        var getFromPrivateInjector = annotate(function (key) {\r\n          return privateInjector.get(key);\r\n        });\r\n        module.__exports__.forEach(function (key) {\r\n          providers[key] = [getFromPrivateInjector, key, 'private', privateInjector];\r\n        });\r\n      } else {\r\n        Object.keys(module).forEach(function (name) {\r\n          if (module[name][2] === 'private') {\r\n            providers[name] = module[name];\r\n            return;\r\n          }\r\n\r\n          var type = module[name][0];\r\n          var value = module[name][1];\r\n\r\n          providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  // public API\r\n  this.get = get;\r\n  this.invoke = invoke;\r\n  this.instantiate = instantiate;\r\n  this.createChild = createChild;\r\n}\r\n\r\n// helpers /////////////////\r\n\r\nfunction hasProp(obj, prop) {\r\n  return Object.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\nexport { annotate, Module, Injector };\r\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\r\n * http://hammerjs.github.io/\r\n *\r\n * Copyright (c) 2016 Jorik Tangelder;\r\n * Licensed under the MIT license */\r\n(function(window, document, exportName, undefined) {\r\n  'use strict';\r\n\r\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\r\nvar TEST_ELEMENT = document.createElement('div');\r\n\r\nvar TYPE_FUNCTION = 'function';\r\n\r\nvar round = Math.round;\r\nvar abs = Math.abs;\r\nvar now = Date.now;\r\n\r\n/**\r\n * set a timeout with a given scope\r\n * @param {Function} fn\r\n * @param {Number} timeout\r\n * @param {Object} context\r\n * @returns {number}\r\n */\r\nfunction setTimeoutContext(fn, timeout, context) {\r\n    return setTimeout(bindFn(fn, context), timeout);\r\n}\r\n\r\n/**\r\n * if the argument is an array, we want to execute the fn on each entry\r\n * if it aint an array we don't want to do a thing.\r\n * this is used by all the methods that accept a single and array argument.\r\n * @param {*|Array} arg\r\n * @param {String} fn\r\n * @param {Object} [context]\r\n * @returns {Boolean}\r\n */\r\nfunction invokeArrayArg(arg, fn, context) {\r\n    if (Array.isArray(arg)) {\r\n        each(arg, context[fn], context);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * walk objects and arrays\r\n * @param {Object} obj\r\n * @param {Function} iterator\r\n * @param {Object} context\r\n */\r\nfunction each(obj, iterator, context) {\r\n    var i;\r\n\r\n    if (!obj) {\r\n        return;\r\n    }\r\n\r\n    if (obj.forEach) {\r\n        obj.forEach(iterator, context);\r\n    } else if (obj.length !== undefined) {\r\n        i = 0;\r\n        while (i < obj.length) {\r\n            iterator.call(context, obj[i], i, obj);\r\n            i++;\r\n        }\r\n    } else {\r\n        for (i in obj) {\r\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * wrap a method with a deprecation warning and stack trace\r\n * @param {Function} method\r\n * @param {String} name\r\n * @param {String} message\r\n * @returns {Function} A new function wrapping the supplied method.\r\n */\r\nfunction deprecate(method, name, message) {\r\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\r\n    return function() {\r\n        var e = new Error('get-stack-trace');\r\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\r\n            .replace(/^\\s+at\\s+/gm, '')\r\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\r\n\r\n        var log = window.console && (window.console.warn || window.console.log);\r\n        if (log) {\r\n            log.call(window.console, deprecationMessage, stack);\r\n        }\r\n        return method.apply(this, arguments);\r\n    };\r\n}\r\n\r\n/**\r\n * extend object.\r\n * means that properties in dest will be overwritten by the ones in src.\r\n * @param {Object} target\r\n * @param {...Object} objects_to_assign\r\n * @returns {Object} target\r\n */\r\nvar assign;\r\nif (typeof Object.assign !== 'function') {\r\n    assign = function assign(target) {\r\n        if (target === undefined || target === null) {\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        }\r\n\r\n        var output = Object(target);\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var source = arguments[index];\r\n            if (source !== undefined && source !== null) {\r\n                for (var nextKey in source) {\r\n                    if (source.hasOwnProperty(nextKey)) {\r\n                        output[nextKey] = source[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n} else {\r\n    assign = Object.assign;\r\n}\r\n\r\n/**\r\n * extend object.\r\n * means that properties in dest will be overwritten by the ones in src.\r\n * @param {Object} dest\r\n * @param {Object} src\r\n * @param {Boolean} [merge=false]\r\n * @returns {Object} dest\r\n */\r\nvar extend = deprecate(function extend(dest, src, merge) {\r\n    var keys = Object.keys(src);\r\n    var i = 0;\r\n    while (i < keys.length) {\r\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\r\n            dest[keys[i]] = src[keys[i]];\r\n        }\r\n        i++;\r\n    }\r\n    return dest;\r\n}, 'extend', 'Use `assign`.');\r\n\r\n/**\r\n * merge the values from src in the dest.\r\n * means that properties that exist in dest will not be overwritten by src\r\n * @param {Object} dest\r\n * @param {Object} src\r\n * @returns {Object} dest\r\n */\r\nvar merge = deprecate(function merge(dest, src) {\r\n    return extend(dest, src, true);\r\n}, 'merge', 'Use `assign`.');\r\n\r\n/**\r\n * simple class inheritance\r\n * @param {Function} child\r\n * @param {Function} base\r\n * @param {Object} [properties]\r\n */\r\nfunction inherit(child, base, properties) {\r\n    var baseP = base.prototype,\r\n        childP;\r\n\r\n    childP = child.prototype = Object.create(baseP);\r\n    childP.constructor = child;\r\n    childP._super = baseP;\r\n\r\n    if (properties) {\r\n        assign(childP, properties);\r\n    }\r\n}\r\n\r\n/**\r\n * simple function bind\r\n * @param {Function} fn\r\n * @param {Object} context\r\n * @returns {Function}\r\n */\r\nfunction bindFn(fn, context) {\r\n    return function boundFn() {\r\n        return fn.apply(context, arguments);\r\n    };\r\n}\r\n\r\n/**\r\n * let a boolean value also be a function that must return a boolean\r\n * this first item in args will be used as the context\r\n * @param {Boolean|Function} val\r\n * @param {Array} [args]\r\n * @returns {Boolean}\r\n */\r\nfunction boolOrFn(val, args) {\r\n    if (typeof val == TYPE_FUNCTION) {\r\n        return val.apply(args ? args[0] || undefined : undefined, args);\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * use the val2 when val1 is undefined\r\n * @param {*} val1\r\n * @param {*} val2\r\n * @returns {*}\r\n */\r\nfunction ifUndefined(val1, val2) {\r\n    return (val1 === undefined) ? val2 : val1;\r\n}\r\n\r\n/**\r\n * addEventListener with multiple events at once\r\n * @param {EventTarget} target\r\n * @param {String} types\r\n * @param {Function} handler\r\n */\r\nfunction addEventListeners(target, types, handler) {\r\n    each(splitStr(types), function(type) {\r\n        target.addEventListener(type, handler, false);\r\n    });\r\n}\r\n\r\n/**\r\n * removeEventListener with multiple events at once\r\n * @param {EventTarget} target\r\n * @param {String} types\r\n * @param {Function} handler\r\n */\r\nfunction removeEventListeners(target, types, handler) {\r\n    each(splitStr(types), function(type) {\r\n        target.removeEventListener(type, handler, false);\r\n    });\r\n}\r\n\r\n/**\r\n * find if a node is in the given parent\r\n * @method hasParent\r\n * @param {HTMLElement} node\r\n * @param {HTMLElement} parent\r\n * @return {Boolean} found\r\n */\r\nfunction hasParent(node, parent) {\r\n    while (node) {\r\n        if (node == parent) {\r\n            return true;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * small indexOf wrapper\r\n * @param {String} str\r\n * @param {String} find\r\n * @returns {Boolean} found\r\n */\r\nfunction inStr(str, find) {\r\n    return str.indexOf(find) > -1;\r\n}\r\n\r\n/**\r\n * split string on whitespace\r\n * @param {String} str\r\n * @returns {Array} words\r\n */\r\nfunction splitStr(str) {\r\n    return str.trim().split(/\\s+/g);\r\n}\r\n\r\n/**\r\n * find if a array contains the object using indexOf or a simple polyFill\r\n * @param {Array} src\r\n * @param {String} find\r\n * @param {String} [findByKey]\r\n * @return {Boolean|Number} false when not found, or the index\r\n */\r\nfunction inArray(src, find, findByKey) {\r\n    if (src.indexOf && !findByKey) {\r\n        return src.indexOf(find);\r\n    } else {\r\n        var i = 0;\r\n        while (i < src.length) {\r\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\r\n                return i;\r\n            }\r\n            i++;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\n/**\r\n * convert array-like objects to real arrays\r\n * @param {Object} obj\r\n * @returns {Array}\r\n */\r\nfunction toArray(obj) {\r\n    return Array.prototype.slice.call(obj, 0);\r\n}\r\n\r\n/**\r\n * unique array with objects based on a key (like 'id') or just by the array's value\r\n * @param {Array} src [{id:1},{id:2},{id:1}]\r\n * @param {String} [key]\r\n * @param {Boolean} [sort=False]\r\n * @returns {Array} [{id:1},{id:2}]\r\n */\r\nfunction uniqueArray(src, key, sort) {\r\n    var results = [];\r\n    var values = [];\r\n    var i = 0;\r\n\r\n    while (i < src.length) {\r\n        var val = key ? src[i][key] : src[i];\r\n        if (inArray(values, val) < 0) {\r\n            results.push(src[i]);\r\n        }\r\n        values[i] = val;\r\n        i++;\r\n    }\r\n\r\n    if (sort) {\r\n        if (!key) {\r\n            results = results.sort();\r\n        } else {\r\n            results = results.sort(function sortUniqueArray(a, b) {\r\n                return a[key] > b[key];\r\n            });\r\n        }\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\n/**\r\n * get the prefixed property\r\n * @param {Object} obj\r\n * @param {String} property\r\n * @returns {String|Undefined} prefixed\r\n */\r\nfunction prefixed(obj, property) {\r\n    var prefix, prop;\r\n    var camelProp = property[0].toUpperCase() + property.slice(1);\r\n\r\n    var i = 0;\r\n    while (i < VENDOR_PREFIXES.length) {\r\n        prefix = VENDOR_PREFIXES[i];\r\n        prop = (prefix) ? prefix + camelProp : property;\r\n\r\n        if (prop in obj) {\r\n            return prop;\r\n        }\r\n        i++;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * get a unique id\r\n * @returns {number} uniqueId\r\n */\r\nvar _uniqueId = 1;\r\nfunction uniqueId() {\r\n    return _uniqueId++;\r\n}\r\n\r\n/**\r\n * get the window object of an element\r\n * @param {HTMLElement} element\r\n * @returns {DocumentView|Window}\r\n */\r\nfunction getWindowForElement(element) {\r\n    var doc = element.ownerDocument || element;\r\n    return (doc.defaultView || doc.parentWindow || window);\r\n}\r\n\r\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\r\n\r\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\r\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\r\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\r\n\r\nvar INPUT_TYPE_TOUCH = 'touch';\r\nvar INPUT_TYPE_PEN = 'pen';\r\nvar INPUT_TYPE_MOUSE = 'mouse';\r\nvar INPUT_TYPE_KINECT = 'kinect';\r\n\r\nvar COMPUTE_INTERVAL = 25;\r\n\r\nvar INPUT_START = 1;\r\nvar INPUT_MOVE = 2;\r\nvar INPUT_END = 4;\r\nvar INPUT_CANCEL = 8;\r\n\r\nvar DIRECTION_NONE = 1;\r\nvar DIRECTION_LEFT = 2;\r\nvar DIRECTION_RIGHT = 4;\r\nvar DIRECTION_UP = 8;\r\nvar DIRECTION_DOWN = 16;\r\n\r\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\r\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\r\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\r\n\r\nvar PROPS_XY = ['x', 'y'];\r\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\r\n\r\n/**\r\n * create new input type manager\r\n * @param {Manager} manager\r\n * @param {Function} callback\r\n * @returns {Input}\r\n * @constructor\r\n */\r\nfunction Input(manager, callback) {\r\n    var self = this;\r\n    this.manager = manager;\r\n    this.callback = callback;\r\n    this.element = manager.element;\r\n    this.target = manager.options.inputTarget;\r\n\r\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\r\n    // so when disabled the input events are completely bypassed.\r\n    this.domHandler = function(ev) {\r\n        if (boolOrFn(manager.options.enable, [manager])) {\r\n            self.handler(ev);\r\n        }\r\n    };\r\n\r\n    this.init();\r\n\r\n}\r\n\r\nInput.prototype = {\r\n    /**\r\n     * should handle the inputEvent data and trigger the callback\r\n     * @virtual\r\n     */\r\n    handler: function() { },\r\n\r\n    /**\r\n     * bind the events\r\n     */\r\n    init: function() {\r\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\r\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\r\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\r\n    },\r\n\r\n    /**\r\n     * unbind the events\r\n     */\r\n    destroy: function() {\r\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\r\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\r\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\r\n    }\r\n};\r\n\r\n/**\r\n * create new input type manager\r\n * called by the Manager constructor\r\n * @param {Hammer} manager\r\n * @returns {Input}\r\n */\r\nfunction createInputInstance(manager) {\r\n    var Type;\r\n    var inputClass = manager.options.inputClass;\r\n\r\n    if (inputClass) {\r\n        Type = inputClass;\r\n    } else if (SUPPORT_POINTER_EVENTS) {\r\n        Type = PointerEventInput;\r\n    } else if (SUPPORT_ONLY_TOUCH) {\r\n        Type = TouchInput;\r\n    } else if (!SUPPORT_TOUCH) {\r\n        Type = MouseInput;\r\n    } else {\r\n        Type = TouchMouseInput;\r\n    }\r\n    return new (Type)(manager, inputHandler);\r\n}\r\n\r\n/**\r\n * handle input events\r\n * @param {Manager} manager\r\n * @param {String} eventType\r\n * @param {Object} input\r\n */\r\nfunction inputHandler(manager, eventType, input) {\r\n    var pointersLen = input.pointers.length;\r\n    var changedPointersLen = input.changedPointers.length;\r\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\r\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\r\n\r\n    input.isFirst = !!isFirst;\r\n    input.isFinal = !!isFinal;\r\n\r\n    if (isFirst) {\r\n        manager.session = {};\r\n    }\r\n\r\n    // source event is the normalized value of the domEvents\r\n    // like 'touchstart, mouseup, pointerdown'\r\n    input.eventType = eventType;\r\n\r\n    // compute scale, rotation etc\r\n    computeInputData(manager, input);\r\n\r\n    // emit secret event\r\n    manager.emit('hammer.input', input);\r\n\r\n    manager.recognize(input);\r\n    manager.session.prevInput = input;\r\n}\r\n\r\n/**\r\n * extend the data with some usable properties like scale, rotate, velocity etc\r\n * @param {Object} manager\r\n * @param {Object} input\r\n */\r\nfunction computeInputData(manager, input) {\r\n    var session = manager.session;\r\n    var pointers = input.pointers;\r\n    var pointersLength = pointers.length;\r\n\r\n    // store the first input to calculate the distance and direction\r\n    if (!session.firstInput) {\r\n        session.firstInput = simpleCloneInputData(input);\r\n    }\r\n\r\n    // to compute scale and rotation we need to store the multiple touches\r\n    if (pointersLength > 1 && !session.firstMultiple) {\r\n        session.firstMultiple = simpleCloneInputData(input);\r\n    } else if (pointersLength === 1) {\r\n        session.firstMultiple = false;\r\n    }\r\n\r\n    var firstInput = session.firstInput;\r\n    var firstMultiple = session.firstMultiple;\r\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\r\n\r\n    var center = input.center = getCenter(pointers);\r\n    input.timeStamp = now();\r\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\r\n\r\n    input.angle = getAngle(offsetCenter, center);\r\n    input.distance = getDistance(offsetCenter, center);\r\n\r\n    computeDeltaXY(session, input);\r\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\r\n\r\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\r\n    input.overallVelocityX = overallVelocity.x;\r\n    input.overallVelocityY = overallVelocity.y;\r\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\r\n\r\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\r\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\r\n\r\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\r\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\r\n\r\n    computeIntervalInputData(session, input);\r\n\r\n    // find the correct target\r\n    var target = manager.element;\r\n    if (hasParent(input.srcEvent.target, target)) {\r\n        target = input.srcEvent.target;\r\n    }\r\n    input.target = target;\r\n}\r\n\r\nfunction computeDeltaXY(session, input) {\r\n    var center = input.center;\r\n    var offset = session.offsetDelta || {};\r\n    var prevDelta = session.prevDelta || {};\r\n    var prevInput = session.prevInput || {};\r\n\r\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\r\n        prevDelta = session.prevDelta = {\r\n            x: prevInput.deltaX || 0,\r\n            y: prevInput.deltaY || 0\r\n        };\r\n\r\n        offset = session.offsetDelta = {\r\n            x: center.x,\r\n            y: center.y\r\n        };\r\n    }\r\n\r\n    input.deltaX = prevDelta.x + (center.x - offset.x);\r\n    input.deltaY = prevDelta.y + (center.y - offset.y);\r\n}\r\n\r\n/**\r\n * velocity is calculated every x ms\r\n * @param {Object} session\r\n * @param {Object} input\r\n */\r\nfunction computeIntervalInputData(session, input) {\r\n    var last = session.lastInterval || input,\r\n        deltaTime = input.timeStamp - last.timeStamp,\r\n        velocity, velocityX, velocityY, direction;\r\n\r\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\r\n        var deltaX = input.deltaX - last.deltaX;\r\n        var deltaY = input.deltaY - last.deltaY;\r\n\r\n        var v = getVelocity(deltaTime, deltaX, deltaY);\r\n        velocityX = v.x;\r\n        velocityY = v.y;\r\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\r\n        direction = getDirection(deltaX, deltaY);\r\n\r\n        session.lastInterval = input;\r\n    } else {\r\n        // use latest velocity info if it doesn't overtake a minimum period\r\n        velocity = last.velocity;\r\n        velocityX = last.velocityX;\r\n        velocityY = last.velocityY;\r\n        direction = last.direction;\r\n    }\r\n\r\n    input.velocity = velocity;\r\n    input.velocityX = velocityX;\r\n    input.velocityY = velocityY;\r\n    input.direction = direction;\r\n}\r\n\r\n/**\r\n * create a simple clone from the input used for storage of firstInput and firstMultiple\r\n * @param {Object} input\r\n * @returns {Object} clonedInputData\r\n */\r\nfunction simpleCloneInputData(input) {\r\n    // make a simple copy of the pointers because we will get a reference if we don't\r\n    // we only need clientXY for the calculations\r\n    var pointers = [];\r\n    var i = 0;\r\n    while (i < input.pointers.length) {\r\n        pointers[i] = {\r\n            clientX: round(input.pointers[i].clientX),\r\n            clientY: round(input.pointers[i].clientY)\r\n        };\r\n        i++;\r\n    }\r\n\r\n    return {\r\n        timeStamp: now(),\r\n        pointers: pointers,\r\n        center: getCenter(pointers),\r\n        deltaX: input.deltaX,\r\n        deltaY: input.deltaY\r\n    };\r\n}\r\n\r\n/**\r\n * get the center of all the pointers\r\n * @param {Array} pointers\r\n * @return {Object} center contains `x` and `y` properties\r\n */\r\nfunction getCenter(pointers) {\r\n    var pointersLength = pointers.length;\r\n\r\n    // no need to loop when only one touch\r\n    if (pointersLength === 1) {\r\n        return {\r\n            x: round(pointers[0].clientX),\r\n            y: round(pointers[0].clientY)\r\n        };\r\n    }\r\n\r\n    var x = 0, y = 0, i = 0;\r\n    while (i < pointersLength) {\r\n        x += pointers[i].clientX;\r\n        y += pointers[i].clientY;\r\n        i++;\r\n    }\r\n\r\n    return {\r\n        x: round(x / pointersLength),\r\n        y: round(y / pointersLength)\r\n    };\r\n}\r\n\r\n/**\r\n * calculate the velocity between two points. unit is in px per ms.\r\n * @param {Number} deltaTime\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Object} velocity `x` and `y`\r\n */\r\nfunction getVelocity(deltaTime, x, y) {\r\n    return {\r\n        x: x / deltaTime || 0,\r\n        y: y / deltaTime || 0\r\n    };\r\n}\r\n\r\n/**\r\n * get the direction between two points\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Number} direction\r\n */\r\nfunction getDirection(x, y) {\r\n    if (x === y) {\r\n        return DIRECTION_NONE;\r\n    }\r\n\r\n    if (abs(x) >= abs(y)) {\r\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n    }\r\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\r\n}\r\n\r\n/**\r\n * calculate the absolute distance between two points\r\n * @param {Object} p1 {x, y}\r\n * @param {Object} p2 {x, y}\r\n * @param {Array} [props] containing x and y keys\r\n * @return {Number} distance\r\n */\r\nfunction getDistance(p1, p2, props) {\r\n    if (!props) {\r\n        props = PROPS_XY;\r\n    }\r\n    var x = p2[props[0]] - p1[props[0]],\r\n        y = p2[props[1]] - p1[props[1]];\r\n\r\n    return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * calculate the angle between two coordinates\r\n * @param {Object} p1\r\n * @param {Object} p2\r\n * @param {Array} [props] containing x and y keys\r\n * @return {Number} angle\r\n */\r\nfunction getAngle(p1, p2, props) {\r\n    if (!props) {\r\n        props = PROPS_XY;\r\n    }\r\n    var x = p2[props[0]] - p1[props[0]],\r\n        y = p2[props[1]] - p1[props[1]];\r\n    return Math.atan2(y, x) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * calculate the rotation degrees between two pointersets\r\n * @param {Array} start array of pointers\r\n * @param {Array} end array of pointers\r\n * @return {Number} rotation\r\n */\r\nfunction getRotation(start, end) {\r\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\r\n}\r\n\r\n/**\r\n * calculate the scale factor between two pointersets\r\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\r\n * @param {Array} start array of pointers\r\n * @param {Array} end array of pointers\r\n * @return {Number} scale\r\n */\r\nfunction getScale(start, end) {\r\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\r\n}\r\n\r\nvar MOUSE_INPUT_MAP = {\r\n    mousedown: INPUT_START,\r\n    mousemove: INPUT_MOVE,\r\n    mouseup: INPUT_END\r\n};\r\n\r\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\r\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\r\n\r\n/**\r\n * Mouse events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction MouseInput() {\r\n    this.evEl = MOUSE_ELEMENT_EVENTS;\r\n    this.evWin = MOUSE_WINDOW_EVENTS;\r\n\r\n    this.pressed = false; // mousedown state\r\n\r\n    Input.apply(this, arguments);\r\n}\r\n\r\ninherit(MouseInput, Input, {\r\n    /**\r\n     * handle mouse events\r\n     * @param {Object} ev\r\n     */\r\n    handler: function MEhandler(ev) {\r\n        var eventType = MOUSE_INPUT_MAP[ev.type];\r\n\r\n        // on start we want to have the left mouse button down\r\n        if (eventType & INPUT_START && ev.button === 0) {\r\n            this.pressed = true;\r\n        }\r\n\r\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\r\n            eventType = INPUT_END;\r\n        }\r\n\r\n        // mouse must be down\r\n        if (!this.pressed) {\r\n            return;\r\n        }\r\n\r\n        if (eventType & INPUT_END) {\r\n            this.pressed = false;\r\n        }\r\n\r\n        this.callback(this.manager, eventType, {\r\n            pointers: [ev],\r\n            changedPointers: [ev],\r\n            pointerType: INPUT_TYPE_MOUSE,\r\n            srcEvent: ev\r\n        });\r\n    }\r\n});\r\n\r\nvar POINTER_INPUT_MAP = {\r\n    pointerdown: INPUT_START,\r\n    pointermove: INPUT_MOVE,\r\n    pointerup: INPUT_END,\r\n    pointercancel: INPUT_CANCEL,\r\n    pointerout: INPUT_CANCEL\r\n};\r\n\r\n// in IE10 the pointer types is defined as an enum\r\nvar IE10_POINTER_TYPE_ENUM = {\r\n    2: INPUT_TYPE_TOUCH,\r\n    3: INPUT_TYPE_PEN,\r\n    4: INPUT_TYPE_MOUSE,\r\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\r\n};\r\n\r\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\r\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\r\n\r\n// IE10 has prefixed support, and case-sensitive\r\nif (window.MSPointerEvent && !window.PointerEvent) {\r\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\r\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\r\n}\r\n\r\n/**\r\n * Pointer events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction PointerEventInput() {\r\n    this.evEl = POINTER_ELEMENT_EVENTS;\r\n    this.evWin = POINTER_WINDOW_EVENTS;\r\n\r\n    Input.apply(this, arguments);\r\n\r\n    this.store = (this.manager.session.pointerEvents = []);\r\n}\r\n\r\ninherit(PointerEventInput, Input, {\r\n    /**\r\n     * handle mouse events\r\n     * @param {Object} ev\r\n     */\r\n    handler: function PEhandler(ev) {\r\n        var store = this.store;\r\n        var removePointer = false;\r\n\r\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\r\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\r\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\r\n\r\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\r\n\r\n        // get index of the event in the store\r\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\r\n\r\n        // start and mouse must be down\r\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\r\n            if (storeIndex < 0) {\r\n                store.push(ev);\r\n                storeIndex = store.length - 1;\r\n            }\r\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\r\n            removePointer = true;\r\n        }\r\n\r\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\r\n        if (storeIndex < 0) {\r\n            return;\r\n        }\r\n\r\n        // update the event in the store\r\n        store[storeIndex] = ev;\r\n\r\n        this.callback(this.manager, eventType, {\r\n            pointers: store,\r\n            changedPointers: [ev],\r\n            pointerType: pointerType,\r\n            srcEvent: ev\r\n        });\r\n\r\n        if (removePointer) {\r\n            // remove from the store\r\n            store.splice(storeIndex, 1);\r\n        }\r\n    }\r\n});\r\n\r\nvar SINGLE_TOUCH_INPUT_MAP = {\r\n    touchstart: INPUT_START,\r\n    touchmove: INPUT_MOVE,\r\n    touchend: INPUT_END,\r\n    touchcancel: INPUT_CANCEL\r\n};\r\n\r\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\r\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n/**\r\n * Touch events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction SingleTouchInput() {\r\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\r\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\r\n    this.started = false;\r\n\r\n    Input.apply(this, arguments);\r\n}\r\n\r\ninherit(SingleTouchInput, Input, {\r\n    handler: function TEhandler(ev) {\r\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\r\n\r\n        // should we handle the touch events?\r\n        if (type === INPUT_START) {\r\n            this.started = true;\r\n        }\r\n\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        var touches = normalizeSingleTouches.call(this, ev, type);\r\n\r\n        // when done, reset the started state\r\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\r\n            this.started = false;\r\n        }\r\n\r\n        this.callback(this.manager, type, {\r\n            pointers: touches[0],\r\n            changedPointers: touches[1],\r\n            pointerType: INPUT_TYPE_TOUCH,\r\n            srcEvent: ev\r\n        });\r\n    }\r\n});\r\n\r\n/**\r\n * @this {TouchInput}\r\n * @param {Object} ev\r\n * @param {Number} type flag\r\n * @returns {undefined|Array} [all, changed]\r\n */\r\nfunction normalizeSingleTouches(ev, type) {\r\n    var all = toArray(ev.touches);\r\n    var changed = toArray(ev.changedTouches);\r\n\r\n    if (type & (INPUT_END | INPUT_CANCEL)) {\r\n        all = uniqueArray(all.concat(changed), 'identifier', true);\r\n    }\r\n\r\n    return [all, changed];\r\n}\r\n\r\nvar TOUCH_INPUT_MAP = {\r\n    touchstart: INPUT_START,\r\n    touchmove: INPUT_MOVE,\r\n    touchend: INPUT_END,\r\n    touchcancel: INPUT_CANCEL\r\n};\r\n\r\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n/**\r\n * Multi-user touch events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction TouchInput() {\r\n    this.evTarget = TOUCH_TARGET_EVENTS;\r\n    this.targetIds = {};\r\n\r\n    Input.apply(this, arguments);\r\n}\r\n\r\ninherit(TouchInput, Input, {\r\n    handler: function MTEhandler(ev) {\r\n        var type = TOUCH_INPUT_MAP[ev.type];\r\n        var touches = getTouches.call(this, ev, type);\r\n        if (!touches) {\r\n            return;\r\n        }\r\n\r\n        this.callback(this.manager, type, {\r\n            pointers: touches[0],\r\n            changedPointers: touches[1],\r\n            pointerType: INPUT_TYPE_TOUCH,\r\n            srcEvent: ev\r\n        });\r\n    }\r\n});\r\n\r\n/**\r\n * @this {TouchInput}\r\n * @param {Object} ev\r\n * @param {Number} type flag\r\n * @returns {undefined|Array} [all, changed]\r\n */\r\nfunction getTouches(ev, type) {\r\n    var allTouches = toArray(ev.touches);\r\n    var targetIds = this.targetIds;\r\n\r\n    // when there is only one touch, the process can be simplified\r\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\r\n        targetIds[allTouches[0].identifier] = true;\r\n        return [allTouches, allTouches];\r\n    }\r\n\r\n    var i,\r\n        targetTouches,\r\n        changedTouches = toArray(ev.changedTouches),\r\n        changedTargetTouches = [],\r\n        target = this.target;\r\n\r\n    // get target touches from touches\r\n    targetTouches = allTouches.filter(function(touch) {\r\n        return hasParent(touch.target, target);\r\n    });\r\n\r\n    // collect touches\r\n    if (type === INPUT_START) {\r\n        i = 0;\r\n        while (i < targetTouches.length) {\r\n            targetIds[targetTouches[i].identifier] = true;\r\n            i++;\r\n        }\r\n    }\r\n\r\n    // filter changed touches to only contain touches that exist in the collected target ids\r\n    i = 0;\r\n    while (i < changedTouches.length) {\r\n        if (targetIds[changedTouches[i].identifier]) {\r\n            changedTargetTouches.push(changedTouches[i]);\r\n        }\r\n\r\n        // cleanup removed touches\r\n        if (type & (INPUT_END | INPUT_CANCEL)) {\r\n            delete targetIds[changedTouches[i].identifier];\r\n        }\r\n        i++;\r\n    }\r\n\r\n    if (!changedTargetTouches.length) {\r\n        return;\r\n    }\r\n\r\n    return [\r\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\r\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\r\n        changedTargetTouches\r\n    ];\r\n}\r\n\r\n/**\r\n * Combined touch and mouse input\r\n *\r\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\r\n * This because touch devices also emit mouse events while doing a touch.\r\n *\r\n * @constructor\r\n * @extends Input\r\n */\r\n\r\nvar DEDUP_TIMEOUT = 2500;\r\nvar DEDUP_DISTANCE = 25;\r\n\r\nfunction TouchMouseInput() {\r\n    Input.apply(this, arguments);\r\n\r\n    var handler = bindFn(this.handler, this);\r\n    this.touch = new TouchInput(this.manager, handler);\r\n    this.mouse = new MouseInput(this.manager, handler);\r\n\r\n    this.primaryTouch = null;\r\n    this.lastTouches = [];\r\n}\r\n\r\ninherit(TouchMouseInput, Input, {\r\n    /**\r\n     * handle mouse and touch events\r\n     * @param {Hammer} manager\r\n     * @param {String} inputEvent\r\n     * @param {Object} inputData\r\n     */\r\n    handler: function TMEhandler(manager, inputEvent, inputData) {\r\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\r\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\r\n\r\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\r\n            return;\r\n        }\r\n\r\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\r\n        if (isTouch) {\r\n            recordTouches.call(this, inputEvent, inputData);\r\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\r\n            return;\r\n        }\r\n\r\n        this.callback(manager, inputEvent, inputData);\r\n    },\r\n\r\n    /**\r\n     * remove the event listeners\r\n     */\r\n    destroy: function destroy() {\r\n        this.touch.destroy();\r\n        this.mouse.destroy();\r\n    }\r\n});\r\n\r\nfunction recordTouches(eventType, eventData) {\r\n    if (eventType & INPUT_START) {\r\n        this.primaryTouch = eventData.changedPointers[0].identifier;\r\n        setLastTouch.call(this, eventData);\r\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\r\n        setLastTouch.call(this, eventData);\r\n    }\r\n}\r\n\r\nfunction setLastTouch(eventData) {\r\n    var touch = eventData.changedPointers[0];\r\n\r\n    if (touch.identifier === this.primaryTouch) {\r\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\r\n        this.lastTouches.push(lastTouch);\r\n        var lts = this.lastTouches;\r\n        var removeLastTouch = function() {\r\n            var i = lts.indexOf(lastTouch);\r\n            if (i > -1) {\r\n                lts.splice(i, 1);\r\n            }\r\n        };\r\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\r\n    }\r\n}\r\n\r\nfunction isSyntheticEvent(eventData) {\r\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\r\n    for (var i = 0; i < this.lastTouches.length; i++) {\r\n        var t = this.lastTouches[i];\r\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\r\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\r\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\r\n\r\n// magical touchAction value\r\nvar TOUCH_ACTION_COMPUTE = 'compute';\r\nvar TOUCH_ACTION_AUTO = 'auto';\r\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\r\nvar TOUCH_ACTION_NONE = 'none';\r\nvar TOUCH_ACTION_PAN_X = 'pan-x';\r\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\r\nvar TOUCH_ACTION_MAP = getTouchActionProps();\r\n\r\n/**\r\n * Touch Action\r\n * sets the touchAction property or uses the js alternative\r\n * @param {Manager} manager\r\n * @param {String} value\r\n * @constructor\r\n */\r\nfunction TouchAction(manager, value) {\r\n    this.manager = manager;\r\n    this.set(value);\r\n}\r\n\r\nTouchAction.prototype = {\r\n    /**\r\n     * set the touchAction value on the element or enable the polyfill\r\n     * @param {String} value\r\n     */\r\n    set: function(value) {\r\n        // find out the touch-action by the event handlers\r\n        if (value == TOUCH_ACTION_COMPUTE) {\r\n            value = this.compute();\r\n        }\r\n\r\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\r\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\r\n        }\r\n        this.actions = value.toLowerCase().trim();\r\n    },\r\n\r\n    /**\r\n     * just re-set the touchAction value\r\n     */\r\n    update: function() {\r\n        this.set(this.manager.options.touchAction);\r\n    },\r\n\r\n    /**\r\n     * compute the value for the touchAction property based on the recognizer's settings\r\n     * @returns {String} value\r\n     */\r\n    compute: function() {\r\n        var actions = [];\r\n        each(this.manager.recognizers, function(recognizer) {\r\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\r\n                actions = actions.concat(recognizer.getTouchAction());\r\n            }\r\n        });\r\n        return cleanTouchActions(actions.join(' '));\r\n    },\r\n\r\n    /**\r\n     * this method is called on each input cycle and provides the preventing of the browser behavior\r\n     * @param {Object} input\r\n     */\r\n    preventDefaults: function(input) {\r\n        var srcEvent = input.srcEvent;\r\n        var direction = input.offsetDirection;\r\n\r\n        // if the touch action did prevented once this session\r\n        if (this.manager.session.prevented) {\r\n            srcEvent.preventDefault();\r\n            return;\r\n        }\r\n\r\n        var actions = this.actions;\r\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\r\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\r\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\r\n\r\n        if (hasNone) {\r\n            //do not prevent defaults if this is a tap gesture\r\n\r\n            var isTapPointer = input.pointers.length === 1;\r\n            var isTapMovement = input.distance < 2;\r\n            var isTapTouchTime = input.deltaTime < 250;\r\n\r\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (hasPanX && hasPanY) {\r\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\r\n            return;\r\n        }\r\n\r\n        if (hasNone ||\r\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\r\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\r\n            return this.preventSrc(srcEvent);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\r\n     * @param {Object} srcEvent\r\n     */\r\n    preventSrc: function(srcEvent) {\r\n        this.manager.session.prevented = true;\r\n        srcEvent.preventDefault();\r\n    }\r\n};\r\n\r\n/**\r\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\r\n * @param {String} actions\r\n * @returns {*}\r\n */\r\nfunction cleanTouchActions(actions) {\r\n    // none\r\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\r\n        return TOUCH_ACTION_NONE;\r\n    }\r\n\r\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\r\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\r\n\r\n    // if both pan-x and pan-y are set (different recognizers\r\n    // for different directions, e.g. horizontal pan but vertical swipe?)\r\n    // we need none (as otherwise with pan-x pan-y combined none of these\r\n    // recognizers will work, since the browser would handle all panning\r\n    if (hasPanX && hasPanY) {\r\n        return TOUCH_ACTION_NONE;\r\n    }\r\n\r\n    // pan-x OR pan-y\r\n    if (hasPanX || hasPanY) {\r\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\r\n    }\r\n\r\n    // manipulation\r\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\r\n        return TOUCH_ACTION_MANIPULATION;\r\n    }\r\n\r\n    return TOUCH_ACTION_AUTO;\r\n}\r\n\r\nfunction getTouchActionProps() {\r\n    if (!NATIVE_TOUCH_ACTION) {\r\n        return false;\r\n    }\r\n    var touchMap = {};\r\n    var cssSupports = window.CSS && window.CSS.supports;\r\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\r\n\r\n        // If css.supports is not supported but there is native touch-action assume it supports\r\n        // all values. This is the case for IE 10 and 11.\r\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\r\n    });\r\n    return touchMap;\r\n}\r\n\r\n/**\r\n * Recognizer flow explained; *\r\n * All recognizers have the initial state of POSSIBLE when a input session starts.\r\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\r\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\r\n *\r\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\r\n * which determines with state it should be.\r\n *\r\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\r\n * POSSIBLE to give it another change on the next cycle.\r\n *\r\n *               Possible\r\n *                  |\r\n *            +-----+---------------+\r\n *            |                     |\r\n *      +-----+-----+               |\r\n *      |           |               |\r\n *   Failed      Cancelled          |\r\n *                          +-------+------+\r\n *                          |              |\r\n *                      Recognized       Began\r\n *                                         |\r\n *                                      Changed\r\n *                                         |\r\n *                                  Ended/Recognized\r\n */\r\nvar STATE_POSSIBLE = 1;\r\nvar STATE_BEGAN = 2;\r\nvar STATE_CHANGED = 4;\r\nvar STATE_ENDED = 8;\r\nvar STATE_RECOGNIZED = STATE_ENDED;\r\nvar STATE_CANCELLED = 16;\r\nvar STATE_FAILED = 32;\r\n\r\n/**\r\n * Recognizer\r\n * Every recognizer needs to extend from this class.\r\n * @constructor\r\n * @param {Object} options\r\n */\r\nfunction Recognizer(options) {\r\n    this.options = assign({}, this.defaults, options || {});\r\n\r\n    this.id = uniqueId();\r\n\r\n    this.manager = null;\r\n\r\n    // default is enable true\r\n    this.options.enable = ifUndefined(this.options.enable, true);\r\n\r\n    this.state = STATE_POSSIBLE;\r\n\r\n    this.simultaneous = {};\r\n    this.requireFail = [];\r\n}\r\n\r\nRecognizer.prototype = {\r\n    /**\r\n     * @virtual\r\n     * @type {Object}\r\n     */\r\n    defaults: {},\r\n\r\n    /**\r\n     * set options\r\n     * @param {Object} options\r\n     * @return {Recognizer}\r\n     */\r\n    set: function(options) {\r\n        assign(this.options, options);\r\n\r\n        // also update the touchAction, in case something changed about the directions/enabled state\r\n        this.manager && this.manager.touchAction.update();\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * recognize simultaneous with an other recognizer.\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    recognizeWith: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\r\n            return this;\r\n        }\r\n\r\n        var simultaneous = this.simultaneous;\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        if (!simultaneous[otherRecognizer.id]) {\r\n            simultaneous[otherRecognizer.id] = otherRecognizer;\r\n            otherRecognizer.recognizeWith(this);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    dropRecognizeWith: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\r\n            return this;\r\n        }\r\n\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        delete this.simultaneous[otherRecognizer.id];\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * recognizer can only run when an other is failing\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    requireFailure: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\r\n            return this;\r\n        }\r\n\r\n        var requireFail = this.requireFail;\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        if (inArray(requireFail, otherRecognizer) === -1) {\r\n            requireFail.push(otherRecognizer);\r\n            otherRecognizer.requireFailure(this);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    dropRequireFailure: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\r\n            return this;\r\n        }\r\n\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        var index = inArray(this.requireFail, otherRecognizer);\r\n        if (index > -1) {\r\n            this.requireFail.splice(index, 1);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * has require failures boolean\r\n     * @returns {boolean}\r\n     */\r\n    hasRequireFailures: function() {\r\n        return this.requireFail.length > 0;\r\n    },\r\n\r\n    /**\r\n     * if the recognizer can recognize simultaneous with an other recognizer\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Boolean}\r\n     */\r\n    canRecognizeWith: function(otherRecognizer) {\r\n        return !!this.simultaneous[otherRecognizer.id];\r\n    },\r\n\r\n    /**\r\n     * You should use `tryEmit` instead of `emit` directly to check\r\n     * that all the needed recognizers has failed before emitting.\r\n     * @param {Object} input\r\n     */\r\n    emit: function(input) {\r\n        var self = this;\r\n        var state = this.state;\r\n\r\n        function emit(event) {\r\n            self.manager.emit(event, input);\r\n        }\r\n\r\n        // 'panstart' and 'panmove'\r\n        if (state < STATE_ENDED) {\r\n            emit(self.options.event + stateStr(state));\r\n        }\r\n\r\n        emit(self.options.event); // simple 'eventName' events\r\n\r\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\r\n            emit(input.additionalEvent);\r\n        }\r\n\r\n        // panend and pancancel\r\n        if (state >= STATE_ENDED) {\r\n            emit(self.options.event + stateStr(state));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check that all the require failure recognizers has failed,\r\n     * if true, it emits a gesture event,\r\n     * otherwise, setup the state to FAILED.\r\n     * @param {Object} input\r\n     */\r\n    tryEmit: function(input) {\r\n        if (this.canEmit()) {\r\n            return this.emit(input);\r\n        }\r\n        // it's failing anyway\r\n        this.state = STATE_FAILED;\r\n    },\r\n\r\n    /**\r\n     * can we emit?\r\n     * @returns {boolean}\r\n     */\r\n    canEmit: function() {\r\n        var i = 0;\r\n        while (i < this.requireFail.length) {\r\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * update the recognizer\r\n     * @param {Object} inputData\r\n     */\r\n    recognize: function(inputData) {\r\n        // make a new copy of the inputData\r\n        // so we can change the inputData without messing up the other recognizers\r\n        var inputDataClone = assign({}, inputData);\r\n\r\n        // is is enabled and allow recognizing?\r\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\r\n            this.reset();\r\n            this.state = STATE_FAILED;\r\n            return;\r\n        }\r\n\r\n        // reset when we've reached the end\r\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\r\n            this.state = STATE_POSSIBLE;\r\n        }\r\n\r\n        this.state = this.process(inputDataClone);\r\n\r\n        // the recognizer has recognized a gesture\r\n        // so trigger an event\r\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\r\n            this.tryEmit(inputDataClone);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * return the state of the recognizer\r\n     * the actual recognizing happens in this method\r\n     * @virtual\r\n     * @param {Object} inputData\r\n     * @returns {Const} STATE\r\n     */\r\n    process: function(inputData) { }, // jshint ignore:line\r\n\r\n    /**\r\n     * return the preferred touch-action\r\n     * @virtual\r\n     * @returns {Array}\r\n     */\r\n    getTouchAction: function() { },\r\n\r\n    /**\r\n     * called when the gesture isn't allowed to recognize\r\n     * like when another is being recognized or it is disabled\r\n     * @virtual\r\n     */\r\n    reset: function() { }\r\n};\r\n\r\n/**\r\n * get a usable string, used as event postfix\r\n * @param {Const} state\r\n * @returns {String} state\r\n */\r\nfunction stateStr(state) {\r\n    if (state & STATE_CANCELLED) {\r\n        return 'cancel';\r\n    } else if (state & STATE_ENDED) {\r\n        return 'end';\r\n    } else if (state & STATE_CHANGED) {\r\n        return 'move';\r\n    } else if (state & STATE_BEGAN) {\r\n        return 'start';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * direction cons to string\r\n * @param {Const} direction\r\n * @returns {String}\r\n */\r\nfunction directionStr(direction) {\r\n    if (direction == DIRECTION_DOWN) {\r\n        return 'down';\r\n    } else if (direction == DIRECTION_UP) {\r\n        return 'up';\r\n    } else if (direction == DIRECTION_LEFT) {\r\n        return 'left';\r\n    } else if (direction == DIRECTION_RIGHT) {\r\n        return 'right';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * get a recognizer by name if it is bound to a manager\r\n * @param {Recognizer|String} otherRecognizer\r\n * @param {Recognizer} recognizer\r\n * @returns {Recognizer}\r\n */\r\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\r\n    var manager = recognizer.manager;\r\n    if (manager) {\r\n        return manager.get(otherRecognizer);\r\n    }\r\n    return otherRecognizer;\r\n}\r\n\r\n/**\r\n * This recognizer is just used as a base for the simple attribute recognizers.\r\n * @constructor\r\n * @extends Recognizer\r\n */\r\nfunction AttrRecognizer() {\r\n    Recognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(AttrRecognizer, Recognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof AttrRecognizer\r\n     */\r\n    defaults: {\r\n        /**\r\n         * @type {Number}\r\n         * @default 1\r\n         */\r\n        pointers: 1\r\n    },\r\n\r\n    /**\r\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\r\n     * @memberof AttrRecognizer\r\n     * @param {Object} input\r\n     * @returns {Boolean} recognized\r\n     */\r\n    attrTest: function(input) {\r\n        var optionPointers = this.options.pointers;\r\n        return optionPointers === 0 || input.pointers.length === optionPointers;\r\n    },\r\n\r\n    /**\r\n     * Process the input and return the state for the recognizer\r\n     * @memberof AttrRecognizer\r\n     * @param {Object} input\r\n     * @returns {*} State\r\n     */\r\n    process: function(input) {\r\n        var state = this.state;\r\n        var eventType = input.eventType;\r\n\r\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\r\n        var isValid = this.attrTest(input);\r\n\r\n        // on cancel input and we've recognized before, return STATE_CANCELLED\r\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\r\n            return state | STATE_CANCELLED;\r\n        } else if (isRecognized || isValid) {\r\n            if (eventType & INPUT_END) {\r\n                return state | STATE_ENDED;\r\n            } else if (!(state & STATE_BEGAN)) {\r\n                return STATE_BEGAN;\r\n            }\r\n            return state | STATE_CHANGED;\r\n        }\r\n        return STATE_FAILED;\r\n    }\r\n});\r\n\r\n/**\r\n * Pan\r\n * Recognized when the pointer is down and moved in the allowed direction.\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction PanRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n\r\n    this.pX = null;\r\n    this.pY = null;\r\n}\r\n\r\ninherit(PanRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PanRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'pan',\r\n        threshold: 10,\r\n        pointers: 1,\r\n        direction: DIRECTION_ALL\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        var direction = this.options.direction;\r\n        var actions = [];\r\n        if (direction & DIRECTION_HORIZONTAL) {\r\n            actions.push(TOUCH_ACTION_PAN_Y);\r\n        }\r\n        if (direction & DIRECTION_VERTICAL) {\r\n            actions.push(TOUCH_ACTION_PAN_X);\r\n        }\r\n        return actions;\r\n    },\r\n\r\n    directionTest: function(input) {\r\n        var options = this.options;\r\n        var hasMoved = true;\r\n        var distance = input.distance;\r\n        var direction = input.direction;\r\n        var x = input.deltaX;\r\n        var y = input.deltaY;\r\n\r\n        // lock to axis?\r\n        if (!(direction & options.direction)) {\r\n            if (options.direction & DIRECTION_HORIZONTAL) {\r\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n                hasMoved = x != this.pX;\r\n                distance = Math.abs(input.deltaX);\r\n            } else {\r\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\r\n                hasMoved = y != this.pY;\r\n                distance = Math.abs(input.deltaY);\r\n            }\r\n        }\r\n        input.direction = direction;\r\n        return hasMoved && distance > options.threshold && direction & options.direction;\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\r\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\r\n    },\r\n\r\n    emit: function(input) {\r\n\r\n        this.pX = input.deltaX;\r\n        this.pY = input.deltaY;\r\n\r\n        var direction = directionStr(input.direction);\r\n\r\n        if (direction) {\r\n            input.additionalEvent = this.options.event + direction;\r\n        }\r\n        this._super.emit.call(this, input);\r\n    }\r\n});\r\n\r\n/**\r\n * Pinch\r\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction PinchRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(PinchRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PinchRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'pinch',\r\n        threshold: 0,\r\n        pointers: 2\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_NONE];\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        return this._super.attrTest.call(this, input) &&\r\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\r\n    },\r\n\r\n    emit: function(input) {\r\n        if (input.scale !== 1) {\r\n            var inOut = input.scale < 1 ? 'in' : 'out';\r\n            input.additionalEvent = this.options.event + inOut;\r\n        }\r\n        this._super.emit.call(this, input);\r\n    }\r\n});\r\n\r\n/**\r\n * Press\r\n * Recognized when the pointer is down for x ms without any movement.\r\n * @constructor\r\n * @extends Recognizer\r\n */\r\nfunction PressRecognizer() {\r\n    Recognizer.apply(this, arguments);\r\n\r\n    this._timer = null;\r\n    this._input = null;\r\n}\r\n\r\ninherit(PressRecognizer, Recognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PressRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'press',\r\n        pointers: 1,\r\n        time: 251, // minimal time of the pointer to be pressed\r\n        threshold: 9 // a minimal movement is ok, but keep it low\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_AUTO];\r\n    },\r\n\r\n    process: function(input) {\r\n        var options = this.options;\r\n        var validPointers = input.pointers.length === options.pointers;\r\n        var validMovement = input.distance < options.threshold;\r\n        var validTime = input.deltaTime > options.time;\r\n\r\n        this._input = input;\r\n\r\n        // we only allow little movement\r\n        // and we've reached an end event, so a tap is possible\r\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\r\n            this.reset();\r\n        } else if (input.eventType & INPUT_START) {\r\n            this.reset();\r\n            this._timer = setTimeoutContext(function() {\r\n                this.state = STATE_RECOGNIZED;\r\n                this.tryEmit();\r\n            }, options.time, this);\r\n        } else if (input.eventType & INPUT_END) {\r\n            return STATE_RECOGNIZED;\r\n        }\r\n        return STATE_FAILED;\r\n    },\r\n\r\n    reset: function() {\r\n        clearTimeout(this._timer);\r\n    },\r\n\r\n    emit: function(input) {\r\n        if (this.state !== STATE_RECOGNIZED) {\r\n            return;\r\n        }\r\n\r\n        if (input && (input.eventType & INPUT_END)) {\r\n            this.manager.emit(this.options.event + 'up', input);\r\n        } else {\r\n            this._input.timeStamp = now();\r\n            this.manager.emit(this.options.event, this._input);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Rotate\r\n * Recognized when two or more pointer are moving in a circular motion.\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction RotateRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(RotateRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof RotateRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'rotate',\r\n        threshold: 0,\r\n        pointers: 2\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_NONE];\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        return this._super.attrTest.call(this, input) &&\r\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\r\n    }\r\n});\r\n\r\n/**\r\n * Swipe\r\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction SwipeRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(SwipeRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof SwipeRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'swipe',\r\n        threshold: 10,\r\n        velocity: 0.3,\r\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\r\n        pointers: 1\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return PanRecognizer.prototype.getTouchAction.call(this);\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        var direction = this.options.direction;\r\n        var velocity;\r\n\r\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\r\n            velocity = input.overallVelocity;\r\n        } else if (direction & DIRECTION_HORIZONTAL) {\r\n            velocity = input.overallVelocityX;\r\n        } else if (direction & DIRECTION_VERTICAL) {\r\n            velocity = input.overallVelocityY;\r\n        }\r\n\r\n        return this._super.attrTest.call(this, input) &&\r\n            direction & input.offsetDirection &&\r\n            input.distance > this.options.threshold &&\r\n            input.maxPointers == this.options.pointers &&\r\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\r\n    },\r\n\r\n    emit: function(input) {\r\n        var direction = directionStr(input.offsetDirection);\r\n        if (direction) {\r\n            this.manager.emit(this.options.event + direction, input);\r\n        }\r\n\r\n        this.manager.emit(this.options.event, input);\r\n    }\r\n});\r\n\r\n/**\r\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\r\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\r\n * a single tap.\r\n *\r\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\r\n * multi-taps being recognized.\r\n * @constructor\r\n * @extends Recognizer\r\n */\r\nfunction TapRecognizer() {\r\n    Recognizer.apply(this, arguments);\r\n\r\n    // previous time and center,\r\n    // used for tap counting\r\n    this.pTime = false;\r\n    this.pCenter = false;\r\n\r\n    this._timer = null;\r\n    this._input = null;\r\n    this.count = 0;\r\n}\r\n\r\ninherit(TapRecognizer, Recognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PinchRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'tap',\r\n        pointers: 1,\r\n        taps: 1,\r\n        interval: 300, // max time between the multi-tap taps\r\n        time: 250, // max time of the pointer to be down (like finger on the screen)\r\n        threshold: 9, // a minimal movement is ok, but keep it low\r\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_MANIPULATION];\r\n    },\r\n\r\n    process: function(input) {\r\n        var options = this.options;\r\n\r\n        var validPointers = input.pointers.length === options.pointers;\r\n        var validMovement = input.distance < options.threshold;\r\n        var validTouchTime = input.deltaTime < options.time;\r\n\r\n        this.reset();\r\n\r\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\r\n            return this.failTimeout();\r\n        }\r\n\r\n        // we only allow little movement\r\n        // and we've reached an end event, so a tap is possible\r\n        if (validMovement && validTouchTime && validPointers) {\r\n            if (input.eventType != INPUT_END) {\r\n                return this.failTimeout();\r\n            }\r\n\r\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\r\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\r\n\r\n            this.pTime = input.timeStamp;\r\n            this.pCenter = input.center;\r\n\r\n            if (!validMultiTap || !validInterval) {\r\n                this.count = 1;\r\n            } else {\r\n                this.count += 1;\r\n            }\r\n\r\n            this._input = input;\r\n\r\n            // if tap count matches we have recognized it,\r\n            // else it has began recognizing...\r\n            var tapCount = this.count % options.taps;\r\n            if (tapCount === 0) {\r\n                // no failing requirements, immediately trigger the tap event\r\n                // or wait as long as the multitap interval to trigger\r\n                if (!this.hasRequireFailures()) {\r\n                    return STATE_RECOGNIZED;\r\n                } else {\r\n                    this._timer = setTimeoutContext(function() {\r\n                        this.state = STATE_RECOGNIZED;\r\n                        this.tryEmit();\r\n                    }, options.interval, this);\r\n                    return STATE_BEGAN;\r\n                }\r\n            }\r\n        }\r\n        return STATE_FAILED;\r\n    },\r\n\r\n    failTimeout: function() {\r\n        this._timer = setTimeoutContext(function() {\r\n            this.state = STATE_FAILED;\r\n        }, this.options.interval, this);\r\n        return STATE_FAILED;\r\n    },\r\n\r\n    reset: function() {\r\n        clearTimeout(this._timer);\r\n    },\r\n\r\n    emit: function() {\r\n        if (this.state == STATE_RECOGNIZED) {\r\n            this._input.tapCount = this.count;\r\n            this.manager.emit(this.options.event, this._input);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Simple way to create a manager with a default set of recognizers.\r\n * @param {HTMLElement} element\r\n * @param {Object} [options]\r\n * @constructor\r\n */\r\nfunction Hammer(element, options) {\r\n    options = options || {};\r\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\r\n    return new Manager(element, options);\r\n}\r\n\r\n/**\r\n * @const {string}\r\n */\r\nHammer.VERSION = '2.0.7';\r\n\r\n/**\r\n * default settings\r\n * @namespace\r\n */\r\nHammer.defaults = {\r\n    /**\r\n     * set if DOM events are being triggered.\r\n     * But this is slower and unused by simple implementations, so disabled by default.\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    domEvents: false,\r\n\r\n    /**\r\n     * The value for the touchAction property/fallback.\r\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\r\n     * @type {String}\r\n     * @default compute\r\n     */\r\n    touchAction: TOUCH_ACTION_COMPUTE,\r\n\r\n    /**\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    enable: true,\r\n\r\n    /**\r\n     * EXPERIMENTAL FEATURE -- can be removed/changed\r\n     * Change the parent input target element.\r\n     * If Null, then it is being set the to main element.\r\n     * @type {Null|EventTarget}\r\n     * @default null\r\n     */\r\n    inputTarget: null,\r\n\r\n    /**\r\n     * force an input class\r\n     * @type {Null|Function}\r\n     * @default null\r\n     */\r\n    inputClass: null,\r\n\r\n    /**\r\n     * Default recognizer setup when calling `Hammer()`\r\n     * When creating a new Manager these will be skipped.\r\n     * @type {Array}\r\n     */\r\n    preset: [\r\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\r\n        [RotateRecognizer, {enable: false}],\r\n        [PinchRecognizer, {enable: false}, ['rotate']],\r\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\r\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\r\n        [TapRecognizer],\r\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\r\n        [PressRecognizer]\r\n    ],\r\n\r\n    /**\r\n     * Some CSS properties can be used to improve the working of Hammer.\r\n     * Add them to this method and they will be set when creating a new Manager.\r\n     * @namespace\r\n     */\r\n    cssProps: {\r\n        /**\r\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        userSelect: 'none',\r\n\r\n        /**\r\n         * Disable the Windows Phone grippers when pressing an element.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        touchSelect: 'none',\r\n\r\n        /**\r\n         * Disables the default callout shown when you touch and hold a touch target.\r\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\r\n         * a callout containing information about the link. This property allows you to disable that callout.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        touchCallout: 'none',\r\n\r\n        /**\r\n         * Specifies whether zooming is enabled. Used by IE10>\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        contentZooming: 'none',\r\n\r\n        /**\r\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        userDrag: 'none',\r\n\r\n        /**\r\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\r\n         * clickable element in iOS. This property obeys the alpha value, if specified.\r\n         * @type {String}\r\n         * @default 'rgba(0,0,0,0)'\r\n         */\r\n        tapHighlightColor: 'rgba(0,0,0,0)'\r\n    }\r\n};\r\n\r\nvar STOP = 1;\r\nvar FORCED_STOP = 2;\r\n\r\n/**\r\n * Manager\r\n * @param {HTMLElement} element\r\n * @param {Object} [options]\r\n * @constructor\r\n */\r\nfunction Manager(element, options) {\r\n    this.options = assign({}, Hammer.defaults, options || {});\r\n\r\n    this.options.inputTarget = this.options.inputTarget || element;\r\n\r\n    this.handlers = {};\r\n    this.session = {};\r\n    this.recognizers = [];\r\n    this.oldCssProps = {};\r\n\r\n    this.element = element;\r\n    this.input = createInputInstance(this);\r\n    this.touchAction = new TouchAction(this, this.options.touchAction);\r\n\r\n    toggleCssProps(this, true);\r\n\r\n    each(this.options.recognizers, function(item) {\r\n        var recognizer = this.add(new (item[0])(item[1]));\r\n        item[2] && recognizer.recognizeWith(item[2]);\r\n        item[3] && recognizer.requireFailure(item[3]);\r\n    }, this);\r\n}\r\n\r\nManager.prototype = {\r\n    /**\r\n     * set options\r\n     * @param {Object} options\r\n     * @returns {Manager}\r\n     */\r\n    set: function(options) {\r\n        assign(this.options, options);\r\n\r\n        // Options that need a little more setup\r\n        if (options.touchAction) {\r\n            this.touchAction.update();\r\n        }\r\n        if (options.inputTarget) {\r\n            // Clean up existing event listeners and reinitialize\r\n            this.input.destroy();\r\n            this.input.target = options.inputTarget;\r\n            this.input.init();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * stop recognizing for this session.\r\n     * This session will be discarded, when a new [input]start event is fired.\r\n     * When forced, the recognizer cycle is stopped immediately.\r\n     * @param {Boolean} [force]\r\n     */\r\n    stop: function(force) {\r\n        this.session.stopped = force ? FORCED_STOP : STOP;\r\n    },\r\n\r\n    /**\r\n     * run the recognizers!\r\n     * called by the inputHandler function on every movement of the pointers (touches)\r\n     * it walks through all the recognizers and tries to detect the gesture that is being made\r\n     * @param {Object} inputData\r\n     */\r\n    recognize: function(inputData) {\r\n        var session = this.session;\r\n        if (session.stopped) {\r\n            return;\r\n        }\r\n\r\n        // run the touch-action polyfill\r\n        this.touchAction.preventDefaults(inputData);\r\n\r\n        var recognizer;\r\n        var recognizers = this.recognizers;\r\n\r\n        // this holds the recognizer that is being recognized.\r\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\r\n        // if no recognizer is detecting a thing, it is set to `null`\r\n        var curRecognizer = session.curRecognizer;\r\n\r\n        // reset when the last recognizer is recognized\r\n        // or when we're in a new session\r\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\r\n            curRecognizer = session.curRecognizer = null;\r\n        }\r\n\r\n        var i = 0;\r\n        while (i < recognizers.length) {\r\n            recognizer = recognizers[i];\r\n\r\n            // find out if we are allowed try to recognize the input for this one.\r\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\r\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\r\n            //      that is being recognized.\r\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\r\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\r\n            if (session.stopped !== FORCED_STOP && ( // 1\r\n                    !curRecognizer || recognizer == curRecognizer || // 2\r\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\r\n                recognizer.recognize(inputData);\r\n            } else {\r\n                recognizer.reset();\r\n            }\r\n\r\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\r\n            // current active recognizer. but only if we don't already have an active recognizer\r\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\r\n                curRecognizer = session.curRecognizer = recognizer;\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * get a recognizer by its event name.\r\n     * @param {Recognizer|String} recognizer\r\n     * @returns {Recognizer|Null}\r\n     */\r\n    get: function(recognizer) {\r\n        if (recognizer instanceof Recognizer) {\r\n            return recognizer;\r\n        }\r\n\r\n        var recognizers = this.recognizers;\r\n        for (var i = 0; i < recognizers.length; i++) {\r\n            if (recognizers[i].options.event == recognizer) {\r\n                return recognizers[i];\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * add a recognizer to the manager\r\n     * existing recognizers with the same event name will be removed\r\n     * @param {Recognizer} recognizer\r\n     * @returns {Recognizer|Manager}\r\n     */\r\n    add: function(recognizer) {\r\n        if (invokeArrayArg(recognizer, 'add', this)) {\r\n            return this;\r\n        }\r\n\r\n        // remove existing\r\n        var existing = this.get(recognizer.options.event);\r\n        if (existing) {\r\n            this.remove(existing);\r\n        }\r\n\r\n        this.recognizers.push(recognizer);\r\n        recognizer.manager = this;\r\n\r\n        this.touchAction.update();\r\n        return recognizer;\r\n    },\r\n\r\n    /**\r\n     * remove a recognizer by name or instance\r\n     * @param {Recognizer|String} recognizer\r\n     * @returns {Manager}\r\n     */\r\n    remove: function(recognizer) {\r\n        if (invokeArrayArg(recognizer, 'remove', this)) {\r\n            return this;\r\n        }\r\n\r\n        recognizer = this.get(recognizer);\r\n\r\n        // let's make sure this recognizer exists\r\n        if (recognizer) {\r\n            var recognizers = this.recognizers;\r\n            var index = inArray(recognizers, recognizer);\r\n\r\n            if (index !== -1) {\r\n                recognizers.splice(index, 1);\r\n                this.touchAction.update();\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * bind event\r\n     * @param {String} events\r\n     * @param {Function} handler\r\n     * @returns {EventEmitter} this\r\n     */\r\n    on: function(events, handler) {\r\n        if (events === undefined) {\r\n            return;\r\n        }\r\n        if (handler === undefined) {\r\n            return;\r\n        }\r\n\r\n        var handlers = this.handlers;\r\n        each(splitStr(events), function(event) {\r\n            handlers[event] = handlers[event] || [];\r\n            handlers[event].push(handler);\r\n        });\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * unbind event, leave emit blank to remove all handlers\r\n     * @param {String} events\r\n     * @param {Function} [handler]\r\n     * @returns {EventEmitter} this\r\n     */\r\n    off: function(events, handler) {\r\n        if (events === undefined) {\r\n            return;\r\n        }\r\n\r\n        var handlers = this.handlers;\r\n        each(splitStr(events), function(event) {\r\n            if (!handler) {\r\n                delete handlers[event];\r\n            } else {\r\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\r\n            }\r\n        });\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * emit event to the listeners\r\n     * @param {String} event\r\n     * @param {Object} data\r\n     */\r\n    emit: function(event, data) {\r\n        // we also want to trigger dom events\r\n        if (this.options.domEvents) {\r\n            triggerDomEvent(event, data);\r\n        }\r\n\r\n        // no handlers, so skip it all\r\n        var handlers = this.handlers[event] && this.handlers[event].slice();\r\n        if (!handlers || !handlers.length) {\r\n            return;\r\n        }\r\n\r\n        data.type = event;\r\n        data.preventDefault = function() {\r\n            data.srcEvent.preventDefault();\r\n        };\r\n\r\n        var i = 0;\r\n        while (i < handlers.length) {\r\n            handlers[i](data);\r\n            i++;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * destroy the manager and unbinds all events\r\n     * it doesn't unbind dom events, that is the user own responsibility\r\n     */\r\n    destroy: function() {\r\n        this.element && toggleCssProps(this, false);\r\n\r\n        this.handlers = {};\r\n        this.session = {};\r\n        this.input.destroy();\r\n        this.element = null;\r\n    }\r\n};\r\n\r\n/**\r\n * add/remove the css properties as defined in manager.options.cssProps\r\n * @param {Manager} manager\r\n * @param {Boolean} add\r\n */\r\nfunction toggleCssProps(manager, add) {\r\n    var element = manager.element;\r\n    if (!element.style) {\r\n        return;\r\n    }\r\n    var prop;\r\n    each(manager.options.cssProps, function(value, name) {\r\n        prop = prefixed(element.style, name);\r\n        if (add) {\r\n            manager.oldCssProps[prop] = element.style[prop];\r\n            element.style[prop] = value;\r\n        } else {\r\n            element.style[prop] = manager.oldCssProps[prop] || '';\r\n        }\r\n    });\r\n    if (!add) {\r\n        manager.oldCssProps = {};\r\n    }\r\n}\r\n\r\n/**\r\n * trigger dom event\r\n * @param {String} event\r\n * @param {Object} data\r\n */\r\nfunction triggerDomEvent(event, data) {\r\n    var gestureEvent = document.createEvent('Event');\r\n    gestureEvent.initEvent(event, true, true);\r\n    gestureEvent.gesture = data;\r\n    data.target.dispatchEvent(gestureEvent);\r\n}\r\n\r\nassign(Hammer, {\r\n    INPUT_START: INPUT_START,\r\n    INPUT_MOVE: INPUT_MOVE,\r\n    INPUT_END: INPUT_END,\r\n    INPUT_CANCEL: INPUT_CANCEL,\r\n\r\n    STATE_POSSIBLE: STATE_POSSIBLE,\r\n    STATE_BEGAN: STATE_BEGAN,\r\n    STATE_CHANGED: STATE_CHANGED,\r\n    STATE_ENDED: STATE_ENDED,\r\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\r\n    STATE_CANCELLED: STATE_CANCELLED,\r\n    STATE_FAILED: STATE_FAILED,\r\n\r\n    DIRECTION_NONE: DIRECTION_NONE,\r\n    DIRECTION_LEFT: DIRECTION_LEFT,\r\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\r\n    DIRECTION_UP: DIRECTION_UP,\r\n    DIRECTION_DOWN: DIRECTION_DOWN,\r\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\r\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\r\n    DIRECTION_ALL: DIRECTION_ALL,\r\n\r\n    Manager: Manager,\r\n    Input: Input,\r\n    TouchAction: TouchAction,\r\n\r\n    TouchInput: TouchInput,\r\n    MouseInput: MouseInput,\r\n    PointerEventInput: PointerEventInput,\r\n    TouchMouseInput: TouchMouseInput,\r\n    SingleTouchInput: SingleTouchInput,\r\n\r\n    Recognizer: Recognizer,\r\n    AttrRecognizer: AttrRecognizer,\r\n    Tap: TapRecognizer,\r\n    Pan: PanRecognizer,\r\n    Swipe: SwipeRecognizer,\r\n    Pinch: PinchRecognizer,\r\n    Rotate: RotateRecognizer,\r\n    Press: PressRecognizer,\r\n\r\n    on: addEventListeners,\r\n    off: removeEventListeners,\r\n    each: each,\r\n    merge: merge,\r\n    extend: extend,\r\n    assign: assign,\r\n    inherit: inherit,\r\n    bindFn: bindFn,\r\n    prefixed: prefixed\r\n});\r\n\r\n// this prevents errors when Hammer is loaded in the presence of an AMD\r\n//  style loader but by script tag, not by the loader.\r\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\r\nfreeGlobal.Hammer = Hammer;\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define(function() {\r\n        return Hammer;\r\n    });\r\n} else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Hammer;\r\n} else {\r\n    window[exportName] = Hammer;\r\n}\r\n\r\n})(window, document, 'Hammer');\r\n","var hat = module.exports = function (bits, base) {\r\n    if (!base) base = 16;\r\n    if (bits === undefined) bits = 128;\r\n    if (bits <= 0) return '0';\r\n    \r\n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\r\n    for (var i = 2; digits === Infinity; i *= 2) {\r\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\r\n    }\r\n    \r\n    var rem = digits - Math.floor(digits);\r\n    \r\n    var res = '';\r\n    \r\n    for (var i = 0; i < Math.floor(digits); i++) {\r\n        var x = Math.floor(Math.random() * base).toString(base);\r\n        res = x + res;\r\n    }\r\n    \r\n    if (rem) {\r\n        var b = Math.pow(base, rem);\r\n        var x = Math.floor(Math.random() * b).toString(base);\r\n        res = x + res;\r\n    }\r\n    \r\n    var parsed = parseInt(res, base);\r\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\r\n        return hat(bits, base)\r\n    }\r\n    else return res;\r\n};\r\n\r\nhat.rack = function (bits, base, expandBy) {\r\n    var fn = function (data) {\r\n        var iters = 0;\r\n        do {\r\n            if (iters ++ > 10) {\r\n                if (expandBy) bits += expandBy;\r\n                else throw new Error('too many ID collisions, use more bits')\r\n            }\r\n            \r\n            var id = hat(bits, base);\r\n        } while (Object.hasOwnProperty.call(hats, id));\r\n        \r\n        hats[id] = data;\r\n        return id;\r\n    };\r\n    var hats = fn.hats = {};\r\n    \r\n    fn.get = function (id) {\r\n        return fn.hats[id];\r\n    };\r\n    \r\n    fn.set = function (id, value) {\r\n        fn.hats[id] = value;\r\n        return fn;\r\n    };\r\n    \r\n    fn.bits = bits || 128;\r\n    fn.base = base || 16;\r\n    return fn;\r\n};\r\n","'use strict';\r\n\r\nvar hat = require('hat');\r\n\r\n\r\n/**\r\n * Create a new id generator / cache instance.\r\n *\r\n * You may optionally provide a seed that is used internally.\r\n *\r\n * @param {Seed} seed\r\n */\r\nfunction Ids(seed) {\r\n\r\n  if (!(this instanceof Ids)) {\r\n    return new Ids(seed);\r\n  }\r\n\r\n  seed = seed || [ 128, 36, 1 ];\r\n  this._seed = seed.length ? hat.rack(seed[0], seed[1], seed[2]) : seed;\r\n}\r\n\r\nmodule.exports = Ids;\r\n\r\n/**\r\n * Generate a next id.\r\n *\r\n * @param {Object} [element] element to bind the id to\r\n *\r\n * @return {String} id\r\n */\r\nIds.prototype.next = function(element) {\r\n  return this._seed(element || true);\r\n};\r\n\r\n/**\r\n * Generate a next id with a given prefix.\r\n *\r\n * @param {Object} [element] element to bind the id to\r\n *\r\n * @return {String} id\r\n */\r\nIds.prototype.nextPrefixed = function(prefix, element) {\r\n  var id;\r\n\r\n  do {\r\n    id = prefix + this.next(true);\r\n  } while (this.assigned(id));\r\n\r\n  // claim {prefix}{random}\r\n  this.claim(id, element);\r\n\r\n  // return\r\n  return id;\r\n};\r\n\r\n/**\r\n * Manually claim an existing id.\r\n *\r\n * @param {String} id\r\n * @param {String} [element] element the id is claimed by\r\n */\r\nIds.prototype.claim = function(id, element) {\r\n  this._seed.set(id, element || true);\r\n};\r\n\r\n/**\r\n * Returns true if the given id has already been assigned.\r\n *\r\n * @param  {String} id\r\n * @return {Boolean}\r\n */\r\nIds.prototype.assigned = function(id) {\r\n  return this._seed.get(id) || false;\r\n};\r\n\r\n/**\r\n * Unclaim an id.\r\n *\r\n * @param  {String} id the id to unclaim\r\n */\r\nIds.prototype.unclaim = function(id) {\r\n  delete this._seed.hats[id];\r\n};\r\n\r\n\r\n/**\r\n * Clear all claimed ids.\r\n */\r\nIds.prototype.clear = function() {\r\n\r\n  var hats = this._seed.hats,\r\n      id;\r\n\r\n  for (id in hats) {\r\n    this.unclaim(id);\r\n  }\r\n};","if (typeof Object.create === 'function') {\r\n  // implementation from standard node.js 'util' module\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  // old school shim for old browsers\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    var TempCtor = function () {}\r\n    TempCtor.prototype = superCtor.prototype\r\n    ctor.prototype = new TempCtor()\r\n    ctor.prototype.constructor = ctor\r\n  }\r\n}\r\n","/**\r\n * Flatten array, one level deep.\r\n *\r\n * @param {Array<?>} arr\r\n *\r\n * @return {Array<?>}\r\n */\r\nfunction flatten(arr) {\r\n  return Array.prototype.concat.apply([], arr);\r\n}\r\n\r\nvar nativeToString = Object.prototype.toString;\r\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction isUndefined(obj) {\r\n  return obj === undefined;\r\n}\r\n\r\nfunction isDefined(obj) {\r\n  return obj !== undefined;\r\n}\r\n\r\nfunction isNil(obj) {\r\n  return obj == null;\r\n}\r\n\r\nfunction isArray(obj) {\r\n  return nativeToString.call(obj) === '[object Array]';\r\n}\r\n\r\nfunction isObject(obj) {\r\n  return nativeToString.call(obj) === '[object Object]';\r\n}\r\n\r\nfunction isNumber(obj) {\r\n  return nativeToString.call(obj) === '[object Number]';\r\n}\r\n\r\nfunction isFunction(obj) {\r\n  return nativeToString.call(obj) === '[object Function]';\r\n}\r\n\r\nfunction isString(obj) {\r\n  return nativeToString.call(obj) === '[object String]';\r\n}\r\n\r\n/**\r\n * Ensure collection is an array.\r\n *\r\n * @param {Object} obj\r\n */\r\nfunction ensureArray(obj) {\r\n\r\n  if (isArray(obj)) {\r\n    return;\r\n  }\r\n\r\n  throw new Error('must supply array');\r\n}\r\n\r\n/**\r\n * Return true, if target owns a property with the given key.\r\n *\r\n * @param {Object} target\r\n * @param {String} key\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction has(target, key) {\r\n  return nativeHasOwnProperty.call(target, key);\r\n}\r\n\r\n/**\r\n * Find element in collection.\r\n *\r\n * @param  {Array|Object} collection\r\n * @param  {Function|Object} matcher\r\n *\r\n * @return {Object}\r\n */\r\nfunction find(collection, matcher) {\r\n\r\n  matcher = toMatcher(matcher);\r\n\r\n  var match;\r\n\r\n  forEach(collection, function (val, key) {\r\n    if (matcher(val, key)) {\r\n      match = val;\r\n\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return match;\r\n}\r\n\r\n/**\r\n * Find element index in collection.\r\n *\r\n * @param  {Array|Object} collection\r\n * @param  {Function} matcher\r\n *\r\n * @return {Object}\r\n */\r\nfunction findIndex(collection, matcher) {\r\n\r\n  matcher = toMatcher(matcher);\r\n\r\n  var idx = isArray(collection) ? -1 : undefined;\r\n\r\n  forEach(collection, function (val, key) {\r\n    if (matcher(val, key)) {\r\n      idx = key;\r\n\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return idx;\r\n}\r\n\r\n/**\r\n * Find element in collection.\r\n *\r\n * @param  {Array|Object} collection\r\n * @param  {Function} matcher\r\n *\r\n * @return {Array} result\r\n */\r\nfunction filter(collection, matcher) {\r\n\r\n  var result = [];\r\n\r\n  forEach(collection, function (val, key) {\r\n    if (matcher(val, key)) {\r\n      result.push(val);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Iterate over collection; returning something\r\n * (non-undefined) will stop iteration.\r\n *\r\n * @param  {Array|Object} collection\r\n * @param  {Function} iterator\r\n *\r\n * @return {Object} return result that stopped the iteration\r\n */\r\nfunction forEach(collection, iterator) {\r\n\r\n  if (isUndefined(collection)) {\r\n    return;\r\n  }\r\n\r\n  var convertKey = isArray(collection) ? toNum : identity;\r\n\r\n  for (var key in collection) {\r\n\r\n    if (has(collection, key)) {\r\n      var val = collection[key];\r\n\r\n      var result = iterator(val, convertKey(key));\r\n\r\n      if (result === false) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Return collection without element.\r\n *\r\n * @param  {Array} arr\r\n * @param  {Function} matcher\r\n *\r\n * @return {Array}\r\n */\r\nfunction without(arr, matcher) {\r\n\r\n  if (isUndefined(arr)) {\r\n    return [];\r\n  }\r\n\r\n  ensureArray(arr);\r\n\r\n  matcher = toMatcher(matcher);\r\n\r\n  return arr.filter(function (el, idx) {\r\n    return !matcher(el, idx);\r\n  });\r\n}\r\n\r\n/**\r\n * Reduce collection, returning a single result.\r\n *\r\n * @param  {Object|Array} collection\r\n * @param  {Function} iterator\r\n * @param  {Any} result\r\n *\r\n * @return {Any} result returned from last iterator\r\n */\r\nfunction reduce(collection, iterator, result) {\r\n\r\n  forEach(collection, function (value, idx) {\r\n    result = iterator(result, value, idx);\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Return true if every element in the collection\r\n * matches the criteria.\r\n *\r\n * @param  {Object|Array} collection\r\n * @param  {Function} matcher\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction every(collection, matcher) {\r\n\r\n  return reduce(collection, function (matches, val, key) {\r\n    return matches && matcher(val, key);\r\n  }, true);\r\n}\r\n\r\n/**\r\n * Return true if some elements in the collection\r\n * match the criteria.\r\n *\r\n * @param  {Object|Array} collection\r\n * @param  {Function} matcher\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction some(collection, matcher) {\r\n\r\n  return !!find(collection, matcher);\r\n}\r\n\r\n/**\r\n * Transform a collection into another collection\r\n * by piping each member through the given fn.\r\n *\r\n * @param  {Object|Array}   collection\r\n * @param  {Function} fn\r\n *\r\n * @return {Array} transformed collection\r\n */\r\nfunction map(collection, fn) {\r\n\r\n  var result = [];\r\n\r\n  forEach(collection, function (val, key) {\r\n    result.push(fn(val, key));\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Get the collections keys.\r\n *\r\n * @param  {Object|Array} collection\r\n *\r\n * @return {Array}\r\n */\r\nfunction keys(collection) {\r\n  return collection && Object.keys(collection) || [];\r\n}\r\n\r\n/**\r\n * Shorthand for `keys(o).length`.\r\n *\r\n * @param  {Object|Array} collection\r\n *\r\n * @return {Number}\r\n */\r\nfunction size(collection) {\r\n  return keys(collection).length;\r\n}\r\n\r\n/**\r\n * Get the values in the collection.\r\n *\r\n * @param  {Object|Array} collection\r\n *\r\n * @return {Array}\r\n */\r\nfunction values(collection) {\r\n  return map(collection, function (val) {\r\n    return val;\r\n  });\r\n}\r\n\r\n/**\r\n * Group collection members by attribute.\r\n *\r\n * @param  {Object|Array} collection\r\n * @param  {Function} extractor\r\n *\r\n * @return {Object} map with { attrValue => [ a, b, c ] }\r\n */\r\nfunction groupBy(collection, extractor) {\r\n  var grouped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n\r\n  extractor = toExtractor(extractor);\r\n\r\n  forEach(collection, function (val) {\r\n    var discriminator = extractor(val) || '_';\r\n\r\n    var group = grouped[discriminator];\r\n\r\n    if (!group) {\r\n      group = grouped[discriminator] = [];\r\n    }\r\n\r\n    group.push(val);\r\n  });\r\n\r\n  return grouped;\r\n}\r\n\r\nfunction uniqueBy(extractor) {\r\n\r\n  extractor = toExtractor(extractor);\r\n\r\n  var grouped = {};\r\n\r\n  for (var _len = arguments.length, collections = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    collections[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  forEach(collections, function (c) {\r\n    return groupBy(c, extractor, grouped);\r\n  });\r\n\r\n  var result = map(grouped, function (val, key) {\r\n    return val[0];\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nvar unionBy = uniqueBy;\r\n\r\n/**\r\n * Sort collection by criteria.\r\n *\r\n * @param  {Object|Array} collection\r\n * @param  {String|Function} extractor\r\n *\r\n * @return {Array}\r\n */\r\nfunction sortBy(collection, extractor) {\r\n\r\n  extractor = toExtractor(extractor);\r\n\r\n  var sorted = [];\r\n\r\n  forEach(collection, function (value, key) {\r\n    var disc = extractor(value, key);\r\n\r\n    var entry = {\r\n      d: disc,\r\n      v: value\r\n    };\r\n\r\n    for (var idx = 0; idx < sorted.length; idx++) {\r\n      var d = sorted[idx].d;\r\n\r\n\r\n      if (disc < d) {\r\n        sorted.splice(idx, 0, entry);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // not inserted, append (!)\r\n    sorted.push(entry);\r\n  });\r\n\r\n  return map(sorted, function (e) {\r\n    return e.v;\r\n  });\r\n}\r\n\r\n/**\r\n * Create an object pattern matcher.\r\n *\r\n * @example\r\n *\r\n * const matcher = matchPattern({ id: 1 });\r\n *\r\n * var element = find(elements, matcher);\r\n *\r\n * @param  {Object} pattern\r\n *\r\n * @return {Function} matcherFn\r\n */\r\nfunction matchPattern(pattern) {\r\n\r\n  return function (el) {\r\n\r\n    return every(pattern, function (val, key) {\r\n      return el[key] === val;\r\n    });\r\n  };\r\n}\r\n\r\nfunction toExtractor(extractor) {\r\n  return isFunction(extractor) ? extractor : function (e) {\r\n    return e[extractor];\r\n  };\r\n}\r\n\r\nfunction toMatcher(matcher) {\r\n  return isFunction(matcher) ? matcher : function (e) {\r\n    return e === matcher;\r\n  };\r\n}\r\n\r\nfunction identity(arg) {\r\n  return arg;\r\n}\r\n\r\nfunction toNum(arg) {\r\n  return Number(arg);\r\n}\r\n\r\n/**\r\n * Debounce fn, calling it only once if\r\n * the given time elapsed between calls.\r\n *\r\n * @param  {Function} fn\r\n * @param  {Number} timeout\r\n *\r\n * @return {Function} debounced function\r\n */\r\nfunction debounce(fn, timeout) {\r\n\r\n  var timer;\r\n\r\n  var lastArgs;\r\n  var lastThis;\r\n\r\n  var lastNow;\r\n\r\n  function fire() {\r\n\r\n    var now = Date.now();\r\n\r\n    var scheduledDiff = lastNow + timeout - now;\r\n\r\n    if (scheduledDiff > 0) {\r\n      return schedule(scheduledDiff);\r\n    }\r\n\r\n    fn.apply(lastThis, lastArgs);\r\n\r\n    timer = lastNow = lastArgs = lastThis = undefined;\r\n  }\r\n\r\n  function schedule(timeout) {\r\n    timer = setTimeout(fire, timeout);\r\n  }\r\n\r\n  return function () {\r\n\r\n    lastNow = Date.now();\r\n\r\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    lastArgs = args;\r\n    lastThis = this;\r\n\r\n    // ensure an execution is scheduled\r\n    if (!timer) {\r\n      schedule(timeout);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle fn, calling at most once\r\n * in the given interval.\r\n *\r\n * @param  {Function} fn\r\n * @param  {Number} interval\r\n *\r\n * @return {Function} throttled function\r\n */\r\nfunction throttle(fn, interval) {\r\n\r\n  var throttling = false;\r\n\r\n  return function () {\r\n\r\n    if (throttling) {\r\n      return;\r\n    }\r\n\r\n    fn.apply(undefined, arguments);\r\n    throttling = true;\r\n\r\n    setTimeout(function () {\r\n      throttling = false;\r\n    }, interval);\r\n  };\r\n}\r\n\r\n/**\r\n * Bind function against target <this>.\r\n *\r\n * @param  {Function} fn\r\n * @param  {Object}   target\r\n *\r\n * @return {Function} bound function\r\n */\r\nfunction bind(fn, target) {\r\n  return fn.bind(target);\r\n}\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\n/**\r\n * Convenience wrapper for `Object.assign`.\r\n *\r\n * @param {Object} target\r\n * @param {...Object} others\r\n *\r\n * @return {Object} the target\r\n */\r\nfunction assign(target) {\r\n  for (var _len = arguments.length, others = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    others[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  return _extends.apply(undefined, [target].concat(others));\r\n}\r\n\r\n/**\r\n * Pick given properties from the target object.\r\n *\r\n * @param {Object} target\r\n * @param {Array} properties\r\n *\r\n * @return {Object} target\r\n */\r\nfunction pick(target, properties) {\r\n\r\n  var result = {};\r\n\r\n  var obj = Object(target);\r\n\r\n  forEach(properties, function (prop) {\r\n\r\n    if (prop in obj) {\r\n      result[prop] = target[prop];\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Pick all target properties, excluding the given ones.\r\n *\r\n * @param {Object} target\r\n * @param {Array} properties\r\n *\r\n * @return {Object} target\r\n */\r\nfunction omit(target, properties) {\r\n\r\n  var result = {};\r\n\r\n  var obj = Object(target);\r\n\r\n  forEach(obj, function (prop, key) {\r\n\r\n    if (properties.indexOf(key) === -1) {\r\n      result[key] = prop;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Recursively merge `...sources` into given target.\r\n *\r\n * Does support merging objects; does not support merging arrays.\r\n *\r\n * @param {Object} target\r\n * @param {...Object} sources\r\n *\r\n * @return {Object} the target\r\n */\r\nfunction merge(target) {\r\n  for (var _len2 = arguments.length, sources = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n    sources[_key2 - 1] = arguments[_key2];\r\n  }\r\n\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n\r\n  forEach(sources, function (source) {\r\n\r\n    // skip non-obj sources, i.e. null\r\n    if (!source || !isObject(source)) {\r\n      return;\r\n    }\r\n\r\n    forEach(source, function (sourceVal, key) {\r\n\r\n      var targetVal = target[key];\r\n\r\n      if (isObject(sourceVal)) {\r\n\r\n        if (!isObject(targetVal)) {\r\n          // override target[key] with object\r\n          targetVal = {};\r\n        }\r\n\r\n        target[key] = merge(targetVal, sourceVal);\r\n      } else {\r\n        target[key] = sourceVal;\r\n      }\r\n    });\r\n  });\r\n\r\n  return target;\r\n}\r\n\r\nexport { flatten, find, findIndex, filter, forEach, without, reduce, every, some, map, keys, size, values, groupBy, uniqueBy, unionBy, sortBy, matchPattern, debounce, throttle, bind, isUndefined, isDefined, isNil, isArray, isObject, isNumber, isFunction, isString, ensureArray, has, assign, pick, omit, merge };\r\n","/**\r\n * Set attribute `name` to `val`, or get attr `name`.\r\n *\r\n * @param {Element} el\r\n * @param {String} name\r\n * @param {String} [val]\r\n * @api public\r\n */\r\nfunction attr(el, name, val) {\r\n  // get\r\n  if (arguments.length == 2) {\r\n    return el.getAttribute(name);\r\n  }\r\n\r\n  // remove\r\n  if (val === null) {\r\n    return el.removeAttribute(name);\r\n  }\r\n\r\n  // set\r\n  el.setAttribute(name, val);\r\n\r\n  return el;\r\n}\r\n\r\nvar indexOf = [].indexOf;\r\n\r\nvar indexof = function(arr, obj){\r\n  if (indexOf) return arr.indexOf(obj);\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) return i;\r\n  }\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Taken from https://github.com/component/classes\r\n *\r\n * Without the component bits.\r\n */\r\n\r\n/**\r\n * Whitespace regexp.\r\n */\r\n\r\nvar re = /\\s+/;\r\n\r\n/**\r\n * toString reference.\r\n */\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\n/**\r\n * Initialize a new ClassList for `el`.\r\n *\r\n * @param {Element} el\r\n * @api private\r\n */\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function (name) {\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = indexof(arr, name);\r\n  if (!~i) arr.push(name);\r\n  this.el.className = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function (name) {\r\n  if ('[object RegExp]' == toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = indexof(arr, name);\r\n  if (~i) arr.splice(i, 1);\r\n  this.el.className = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function (re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function (name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if ('undefined' !== typeof force) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if ('undefined' !== typeof force) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function () {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) arr.shift();\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\r\n  return this.list ? this.list.contains(name) : !!~indexof(this.array(), name);\r\n};\r\n\r\n/**\r\n * Remove all children from the given element.\r\n */\r\nfunction clear(el) {\r\n\r\n  var c;\r\n\r\n  while (el.childNodes.length) {\r\n    c = el.childNodes[0];\r\n    el.removeChild(c);\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\n/**\r\n * Element prototype.\r\n */\r\n\r\nvar proto = Element.prototype;\r\n\r\n/**\r\n * Vendor function.\r\n */\r\n\r\nvar vendor = proto.matchesSelector\r\n  || proto.webkitMatchesSelector\r\n  || proto.mozMatchesSelector\r\n  || proto.msMatchesSelector\r\n  || proto.oMatchesSelector;\r\n\r\n/**\r\n * Expose `match()`.\r\n */\r\n\r\nvar matchesSelector = match;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match(el, selector) {\r\n  if (vendor) return vendor.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nvar closest = function (element, selector, checkYoSelf) {\r\n  var parent = checkYoSelf ? element : element.parentNode;\r\n\r\n  while (parent && parent !== document) {\r\n    if (matchesSelector(parent, selector)) return parent;\r\n    parent = parent.parentNode;\r\n  }\r\n};\r\n\r\nvar bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\r\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\r\n    prefix = bind !== 'addEventListener' ? 'on' : '';\r\n\r\n/**\r\n * Bind `el` event `type` to `fn`.\r\n *\r\n * @param {Element} el\r\n * @param {String} type\r\n * @param {Function} fn\r\n * @param {Boolean} capture\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nvar bind_1 = function(el, type, fn, capture){\r\n  el[bind](prefix + type, fn, capture || false);\r\n  return fn;\r\n};\r\n\r\n/**\r\n * Unbind `el` event `type`'s callback `fn`.\r\n *\r\n * @param {Element} el\r\n * @param {String} type\r\n * @param {Function} fn\r\n * @param {Boolean} capture\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nvar unbind_1 = function(el, type, fn, capture){\r\n  el[unbind](prefix + type, fn, capture || false);\r\n  return fn;\r\n};\r\n\r\nvar componentEvent = {\r\n\tbind: bind_1,\r\n\tunbind: unbind_1\r\n};\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\n\r\n\r\n/**\r\n * Delegate event `type` to `selector`\r\n * and invoke `fn(e)`. A callback function\r\n * is returned which may be passed to `.unbind()`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @param {String} type\r\n * @param {Function} fn\r\n * @param {Boolean} capture\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\n// Some events don't bubble, so we want to bind to the capture phase instead\r\n// when delegating.\r\nvar forceCaptureEvents = ['focus', 'blur'];\r\n\r\nvar bind$1 = function(el, selector, type, fn, capture){\r\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\r\n\r\n  return componentEvent.bind(el, type, function(e){\r\n    var target = e.target || e.srcElement;\r\n    e.delegateTarget = closest(target, selector, true, el);\r\n    if (e.delegateTarget) fn.call(el, e);\r\n  }, capture);\r\n};\r\n\r\n/**\r\n * Unbind event `type`'s callback `fn`.\r\n *\r\n * @param {Element} el\r\n * @param {String} type\r\n * @param {Function} fn\r\n * @param {Boolean} capture\r\n * @api public\r\n */\r\n\r\nvar unbind$1 = function(el, type, fn, capture){\r\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\r\n\r\n  componentEvent.unbind(el, type, fn, capture);\r\n};\r\n\r\nvar delegateEvents = {\r\n\tbind: bind$1,\r\n\tunbind: unbind$1\r\n};\r\n\r\n/**\r\n * Expose `parse`.\r\n */\r\n\r\nvar domify = parse;\r\n\r\n/**\r\n * Tests for browser support.\r\n */\r\n\r\nvar innerHTMLBug = false;\r\nvar bugTestDiv;\r\nif (typeof document !== 'undefined') {\r\n  bugTestDiv = document.createElement('div');\r\n  // Setup\r\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\r\n  // Make sure that link elements get serialized correctly by innerHTML\r\n  // This requires a wrapper element in IE\r\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\r\n  bugTestDiv = undefined;\r\n}\r\n\r\n/**\r\n * Wrap map from jquery.\r\n */\r\n\r\nvar map = {\r\n  legend: [1, '<fieldset>', '</fieldset>'],\r\n  tr: [2, '<table><tbody>', '</tbody></table>'],\r\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\r\n  // for script/link/style tags to work in IE6-8, you have to wrap\r\n  // in a div with a non-whitespace character in front, ha!\r\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\r\n};\r\n\r\nmap.td =\r\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\r\n\r\nmap.option =\r\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\r\n\r\nmap.thead =\r\nmap.tbody =\r\nmap.colgroup =\r\nmap.caption =\r\nmap.tfoot = [1, '<table>', '</table>'];\r\n\r\nmap.polyline =\r\nmap.ellipse =\r\nmap.polygon =\r\nmap.circle =\r\nmap.text =\r\nmap.line =\r\nmap.path =\r\nmap.rect =\r\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\r\n\r\n/**\r\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\r\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\r\n * instance, depending on the contents of the `html` string.\r\n *\r\n * @param {String} html - HTML string to \"domify\"\r\n * @param {Document} doc - The `document` instance to create the Node for\r\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\r\n * @api private\r\n */\r\n\r\nfunction parse(html, doc) {\r\n  if ('string' != typeof html) throw new TypeError('String expected');\r\n\r\n  // default to the global `document` object\r\n  if (!doc) doc = document;\r\n\r\n  // tag name\r\n  var m = /<([\\w:]+)/.exec(html);\r\n  if (!m) return doc.createTextNode(html);\r\n\r\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\r\n\r\n  var tag = m[1];\r\n\r\n  // body support\r\n  if (tag == 'body') {\r\n    var el = doc.createElement('html');\r\n    el.innerHTML = html;\r\n    return el.removeChild(el.lastChild);\r\n  }\r\n\r\n  // wrap map\r\n  var wrap = map[tag] || map._default;\r\n  var depth = wrap[0];\r\n  var prefix = wrap[1];\r\n  var suffix = wrap[2];\r\n  var el = doc.createElement('div');\r\n  el.innerHTML = prefix + html + suffix;\r\n  while (depth--) el = el.lastChild;\r\n\r\n  // one element\r\n  if (el.firstChild == el.lastChild) {\r\n    return el.removeChild(el.firstChild);\r\n  }\r\n\r\n  // several elements\r\n  var fragment = doc.createDocumentFragment();\r\n  while (el.firstChild) {\r\n    fragment.appendChild(el.removeChild(el.firstChild));\r\n  }\r\n\r\n  return fragment;\r\n}\r\n\r\nvar proto$1 = typeof Element !== 'undefined' ? Element.prototype : {};\r\nvar vendor$1 = proto$1.matches\r\n  || proto$1.matchesSelector\r\n  || proto$1.webkitMatchesSelector\r\n  || proto$1.mozMatchesSelector\r\n  || proto$1.msMatchesSelector\r\n  || proto$1.oMatchesSelector;\r\n\r\nvar matchesSelector$1 = match$1;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match$1(el, selector) {\r\n  if (!el || el.nodeType !== 1) return false;\r\n  if (vendor$1) return vendor$1.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction query(selector, el) {\r\n  el = el || document;\r\n\r\n  return el.querySelector(selector);\r\n}\r\n\r\nfunction all(selector, el) {\r\n  el = el || document;\r\n\r\n  return el.querySelectorAll(selector);\r\n}\r\n\r\nfunction remove(el) {\r\n  el.parentNode && el.parentNode.removeChild(el);\r\n}\r\n\r\nexport { attr, classes, clear, closest, delegateEvents as delegate, domify, componentEvent as event, matchesSelector$1 as matches, query, all as queryAll, remove };\r\n","export {\r\n  Reader\r\n} from './lib/read';\r\n\r\nexport {\r\n  Writer\r\n} from './lib/write';","export function hasLowerCaseAlias(pkg) {\r\n  return pkg.xml && pkg.xml.tagAlias === 'lowerCase';\r\n}\r\n\r\nexport var DEFAULT_NS_MAP = {\r\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance'\r\n};\r\n\r\nexport var XSI_TYPE = 'xsi:type';\r\n\r\nfunction serializeFormat(element) {\r\n  return element.xml && element.xml.serialize;\r\n}\r\n\r\nexport function serializeAsType(element) {\r\n  return serializeFormat(element) === XSI_TYPE;\r\n}\r\n\r\nexport function serializeAsProperty(element) {\r\n  return serializeFormat(element) === 'property';\r\n}","import {\r\n  forEach,\r\n  find,\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport Stack from 'tiny-stack';\r\n\r\nimport {\r\n  Parser as SaxParser\r\n} from 'saxen';\r\n\r\nimport Moddle from 'moddle';\r\nimport {\r\n  parseName as parseNameNs\r\n} from 'moddle/lib/ns';\r\n\r\nimport {\r\n  coerceType,\r\n  isSimple as isSimpleType\r\n} from 'moddle/lib/types';\r\n\r\nimport {\r\n  XSI_TYPE,\r\n  serializeAsType,\r\n  hasLowerCaseAlias\r\n} from './common';\r\n\r\n\r\nfunction capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nfunction aliasToName(aliasNs, pkg) {\r\n\r\n  if (!hasLowerCaseAlias(pkg)) {\r\n    return aliasNs.name;\r\n  }\r\n\r\n  return aliasNs.prefix + ':' + capitalize(aliasNs.localName);\r\n}\r\n\r\nfunction prefixedToName(nameNs, pkg) {\r\n\r\n  var name = nameNs.name,\r\n      localName = nameNs.localName;\r\n\r\n  var typePrefix = pkg.xml && pkg.xml.typePrefix;\r\n\r\n  if (typePrefix && localName.indexOf(typePrefix) === 0) {\r\n    return nameNs.prefix + ':' + localName.slice(typePrefix.length);\r\n  } else {\r\n    return name;\r\n  }\r\n}\r\n\r\nfunction normalizeXsiTypeName(name, model) {\r\n\r\n  var nameNs = parseNameNs(name);\r\n  var pkg = model.getPackage(nameNs.prefix);\r\n\r\n  return prefixedToName(nameNs, pkg);\r\n}\r\n\r\nfunction error(message) {\r\n  return new Error(message);\r\n}\r\n\r\n/**\r\n * Get the moddle descriptor for a given instance or type.\r\n *\r\n * @param  {ModdleElement|Function} element\r\n *\r\n * @return {Object} the moddle descriptor\r\n */\r\nfunction getModdleDescriptor(element) {\r\n  return element.$descriptor;\r\n}\r\n\r\nfunction defer(fn) {\r\n  setTimeout(fn, 0);\r\n}\r\n\r\n/**\r\n * A parse context.\r\n *\r\n * @class\r\n *\r\n * @param {Object} options\r\n * @param {ElementHandler} options.rootHandler the root handler for parsing a document\r\n * @param {boolean} [options.lax=false] whether or not to ignore invalid elements\r\n */\r\nexport function Context(options) {\r\n\r\n  /**\r\n   * @property {ElementHandler} rootHandler\r\n   */\r\n\r\n  /**\r\n   * @property {Boolean} lax\r\n   */\r\n\r\n  assign(this, options);\r\n\r\n  this.elementsById = {};\r\n  this.references = [];\r\n  this.warnings = [];\r\n\r\n  /**\r\n   * Add an unresolved reference.\r\n   *\r\n   * @param {Object} reference\r\n   */\r\n  this.addReference = function(reference) {\r\n    this.references.push(reference);\r\n  };\r\n\r\n  /**\r\n   * Add a processed element.\r\n   *\r\n   * @param {ModdleElement} element\r\n   */\r\n  this.addElement = function(element) {\r\n\r\n    if (!element) {\r\n      throw error('expected element');\r\n    }\r\n\r\n    var elementsById = this.elementsById;\r\n\r\n    var descriptor = getModdleDescriptor(element);\r\n\r\n    var idProperty = descriptor.idProperty,\r\n        id;\r\n\r\n    if (idProperty) {\r\n      id = element.get(idProperty.name);\r\n\r\n      if (id) {\r\n\r\n        if (elementsById[id]) {\r\n          throw error('duplicate ID <' + id + '>');\r\n        }\r\n\r\n        elementsById[id] = element;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add an import warning.\r\n   *\r\n   * @param {Object} warning\r\n   * @param {String} warning.message\r\n   * @param {Error} [warning.error]\r\n   */\r\n  this.addWarning = function(warning) {\r\n    this.warnings.push(warning);\r\n  };\r\n}\r\n\r\nfunction BaseHandler() {}\r\n\r\nBaseHandler.prototype.handleEnd = function() {};\r\nBaseHandler.prototype.handleText = function() {};\r\nBaseHandler.prototype.handleNode = function() {};\r\n\r\n\r\n/**\r\n * A simple pass through handler that does nothing except for\r\n * ignoring all input it receives.\r\n *\r\n * This is used to ignore unknown elements and\r\n * attributes.\r\n */\r\nfunction NoopHandler() { }\r\n\r\nNoopHandler.prototype = Object.create(BaseHandler.prototype);\r\n\r\nNoopHandler.prototype.handleNode = function() {\r\n  return this;\r\n};\r\n\r\nfunction BodyHandler() {}\r\n\r\nBodyHandler.prototype = Object.create(BaseHandler.prototype);\r\n\r\nBodyHandler.prototype.handleText = function(text) {\r\n  this.body = (this.body || '') + text;\r\n};\r\n\r\nfunction ReferenceHandler(property, context) {\r\n  this.property = property;\r\n  this.context = context;\r\n}\r\n\r\nReferenceHandler.prototype = Object.create(BodyHandler.prototype);\r\n\r\nReferenceHandler.prototype.handleNode = function(node) {\r\n\r\n  if (this.element) {\r\n    throw error('expected no sub nodes');\r\n  } else {\r\n    this.element = this.createReference(node);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nReferenceHandler.prototype.handleEnd = function() {\r\n  this.element.id = this.body;\r\n};\r\n\r\nReferenceHandler.prototype.createReference = function(node) {\r\n  return {\r\n    property: this.property.ns.name,\r\n    id: ''\r\n  };\r\n};\r\n\r\nfunction ValueHandler(propertyDesc, element) {\r\n  this.element = element;\r\n  this.propertyDesc = propertyDesc;\r\n}\r\n\r\nValueHandler.prototype = Object.create(BodyHandler.prototype);\r\n\r\nValueHandler.prototype.handleEnd = function() {\r\n\r\n  var value = this.body || '',\r\n      element = this.element,\r\n      propertyDesc = this.propertyDesc;\r\n\r\n  value = coerceType(propertyDesc.type, value);\r\n\r\n  if (propertyDesc.isMany) {\r\n    element.get(propertyDesc.name).push(value);\r\n  } else {\r\n    element.set(propertyDesc.name, value);\r\n  }\r\n};\r\n\r\n\r\nfunction BaseElementHandler() {}\r\n\r\nBaseElementHandler.prototype = Object.create(BodyHandler.prototype);\r\n\r\nBaseElementHandler.prototype.handleNode = function(node) {\r\n  var parser = this,\r\n      element = this.element;\r\n\r\n  if (!element) {\r\n    element = this.element = this.createElement(node);\r\n\r\n    this.context.addElement(element);\r\n  } else {\r\n    parser = this.handleChild(node);\r\n  }\r\n\r\n  return parser;\r\n};\r\n\r\n/**\r\n * @class Reader.ElementHandler\r\n *\r\n */\r\nexport function ElementHandler(model, typeName, context) {\r\n  this.model = model;\r\n  this.type = model.getType(typeName);\r\n  this.context = context;\r\n}\r\n\r\nElementHandler.prototype = Object.create(BaseElementHandler.prototype);\r\n\r\nElementHandler.prototype.addReference = function(reference) {\r\n  this.context.addReference(reference);\r\n};\r\n\r\nElementHandler.prototype.handleEnd = function() {\r\n\r\n  var value = this.body,\r\n      element = this.element,\r\n      descriptor = getModdleDescriptor(element),\r\n      bodyProperty = descriptor.bodyProperty;\r\n\r\n  if (bodyProperty && value !== undefined) {\r\n    value = coerceType(bodyProperty.type, value);\r\n    element.set(bodyProperty.name, value);\r\n  }\r\n};\r\n\r\n/**\r\n * Create an instance of the model from the given node.\r\n *\r\n * @param  {Element} node the xml node\r\n */\r\nElementHandler.prototype.createElement = function(node) {\r\n  var attributes = node.attributes,\r\n      Type = this.type,\r\n      descriptor = getModdleDescriptor(Type),\r\n      context = this.context,\r\n      instance = new Type({}),\r\n      model = this.model,\r\n      propNameNs;\r\n\r\n  forEach(attributes, function(value, name) {\r\n\r\n    var prop = descriptor.propertiesByName[name],\r\n        values;\r\n\r\n    if (prop && prop.isReference) {\r\n\r\n      if (!prop.isMany) {\r\n        context.addReference({\r\n          element: instance,\r\n          property: prop.ns.name,\r\n          id: value\r\n        });\r\n      } else {\r\n        // IDREFS: parse references as whitespace-separated list\r\n        values = value.split(' ');\r\n\r\n        forEach(values, function(v) {\r\n          context.addReference({\r\n            element: instance,\r\n            property: prop.ns.name,\r\n            id: v\r\n          });\r\n        });\r\n      }\r\n\r\n    } else {\r\n      if (prop) {\r\n        value = coerceType(prop.type, value);\r\n      } else\r\n      if (name !== 'xmlns') {\r\n        propNameNs = parseNameNs(name, descriptor.ns.prefix);\r\n\r\n        // check whether attribute is defined in a well-known namespace\r\n        // if that is the case we emit a warning to indicate potential misuse\r\n        if (model.getPackage(propNameNs.prefix)) {\r\n\r\n          context.addWarning({\r\n            message: 'unknown attribute <' + name + '>',\r\n            element: instance,\r\n            property: name,\r\n            value: value\r\n          });\r\n        }\r\n      }\r\n\r\n      instance.set(name, value);\r\n    }\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nElementHandler.prototype.getPropertyForNode = function(node) {\r\n\r\n  var name = node.name;\r\n  var nameNs = parseNameNs(name);\r\n\r\n  var type = this.type,\r\n      model = this.model,\r\n      descriptor = getModdleDescriptor(type);\r\n\r\n  var propertyName = nameNs.name,\r\n      property = descriptor.propertiesByName[propertyName],\r\n      elementTypeName,\r\n      elementType;\r\n\r\n  // search for properties by name first\r\n\r\n  if (property) {\r\n\r\n    if (serializeAsType(property)) {\r\n      elementTypeName = node.attributes[XSI_TYPE];\r\n\r\n      // xsi type is optional, if it does not exists the\r\n      // default type is assumed\r\n      if (elementTypeName) {\r\n\r\n        // take possible type prefixes from XML\r\n        // into account, i.e.: xsi:type=\"t{ActualType}\"\r\n        elementTypeName = normalizeXsiTypeName(elementTypeName, model);\r\n\r\n        elementType = model.getType(elementTypeName);\r\n\r\n        return assign({}, property, {\r\n          effectiveType: getModdleDescriptor(elementType).name\r\n        });\r\n      }\r\n    }\r\n\r\n    // search for properties by name first\r\n    return property;\r\n  }\r\n\r\n  var pkg = model.getPackage(nameNs.prefix);\r\n\r\n  if (pkg) {\r\n    elementTypeName = aliasToName(nameNs, pkg);\r\n    elementType = model.getType(elementTypeName);\r\n\r\n    // search for collection members later\r\n    property = find(descriptor.properties, function(p) {\r\n      return !p.isVirtual && !p.isReference && !p.isAttribute && elementType.hasType(p.type);\r\n    });\r\n\r\n    if (property) {\r\n      return assign({}, property, {\r\n        effectiveType: getModdleDescriptor(elementType).name\r\n      });\r\n    }\r\n  } else {\r\n    // parse unknown element (maybe extension)\r\n    property = find(descriptor.properties, function(p) {\r\n      return !p.isReference && !p.isAttribute && p.type === 'Element';\r\n    });\r\n\r\n    if (property) {\r\n      return property;\r\n    }\r\n  }\r\n\r\n  throw error('unrecognized element <' + nameNs.name + '>');\r\n};\r\n\r\nElementHandler.prototype.toString = function() {\r\n  return 'ElementDescriptor[' + getModdleDescriptor(this.type).name + ']';\r\n};\r\n\r\nElementHandler.prototype.valueHandler = function(propertyDesc, element) {\r\n  return new ValueHandler(propertyDesc, element);\r\n};\r\n\r\nElementHandler.prototype.referenceHandler = function(propertyDesc) {\r\n  return new ReferenceHandler(propertyDesc, this.context);\r\n};\r\n\r\nElementHandler.prototype.handler = function(type) {\r\n  if (type === 'Element') {\r\n    return new GenericElementHandler(this.model, type, this.context);\r\n  } else {\r\n    return new ElementHandler(this.model, type, this.context);\r\n  }\r\n};\r\n\r\n/**\r\n * Handle the child element parsing\r\n *\r\n * @param  {Element} node the xml node\r\n */\r\nElementHandler.prototype.handleChild = function(node) {\r\n  var propertyDesc, type, element, childHandler;\r\n\r\n  propertyDesc = this.getPropertyForNode(node);\r\n  element = this.element;\r\n\r\n  type = propertyDesc.effectiveType || propertyDesc.type;\r\n\r\n  if (isSimpleType(type)) {\r\n    return this.valueHandler(propertyDesc, element);\r\n  }\r\n\r\n  if (propertyDesc.isReference) {\r\n    childHandler = this.referenceHandler(propertyDesc).handleNode(node);\r\n  } else {\r\n    childHandler = this.handler(type).handleNode(node);\r\n  }\r\n\r\n  var newElement = childHandler.element;\r\n\r\n  // child handles may decide to skip elements\r\n  // by not returning anything\r\n  if (newElement !== undefined) {\r\n\r\n    if (propertyDesc.isMany) {\r\n      element.get(propertyDesc.name).push(newElement);\r\n    } else {\r\n      element.set(propertyDesc.name, newElement);\r\n    }\r\n\r\n    if (propertyDesc.isReference) {\r\n      assign(newElement, {\r\n        element: element\r\n      });\r\n\r\n      this.context.addReference(newElement);\r\n    } else {\r\n      // establish child -> parent relationship\r\n      newElement.$parent = element;\r\n    }\r\n  }\r\n\r\n  return childHandler;\r\n};\r\n\r\n/**\r\n * An element handler that performs special validation\r\n * to ensure the node it gets initialized with matches\r\n * the handlers type (namespace wise).\r\n *\r\n * @param {Moddle} model\r\n * @param {String} typeName\r\n * @param {Context} context\r\n */\r\nfunction RootElementHandler(model, typeName, context) {\r\n  ElementHandler.call(this, model, typeName, context);\r\n}\r\n\r\nRootElementHandler.prototype = Object.create(ElementHandler.prototype);\r\n\r\nRootElementHandler.prototype.createElement = function(node) {\r\n\r\n  var name = node.name,\r\n      nameNs = parseNameNs(name),\r\n      model = this.model,\r\n      type = this.type,\r\n      pkg = model.getPackage(nameNs.prefix),\r\n      typeName = pkg && aliasToName(nameNs, pkg) || name;\r\n\r\n  // verify the correct namespace if we parse\r\n  // the first element in the handler tree\r\n  //\r\n  // this ensures we don't mistakenly import wrong namespace elements\r\n  if (!type.hasType(typeName)) {\r\n    throw error('unexpected element <' + node.originalName + '>');\r\n  }\r\n\r\n  return ElementHandler.prototype.createElement.call(this, node);\r\n};\r\n\r\n\r\nfunction GenericElementHandler(model, typeName, context) {\r\n  this.model = model;\r\n  this.context = context;\r\n}\r\n\r\nGenericElementHandler.prototype = Object.create(BaseElementHandler.prototype);\r\n\r\nGenericElementHandler.prototype.createElement = function(node) {\r\n\r\n  var name = node.name,\r\n      ns = parseNameNs(name),\r\n      prefix = ns.prefix,\r\n      uri = node.ns[prefix + '$uri'],\r\n      attributes = node.attributes;\r\n\r\n  return this.model.createAny(name, uri, attributes);\r\n};\r\n\r\nGenericElementHandler.prototype.handleChild = function(node) {\r\n\r\n  var handler = new GenericElementHandler(this.model, 'Element', this.context).handleNode(node),\r\n      element = this.element;\r\n\r\n  var newElement = handler.element,\r\n      children;\r\n\r\n  if (newElement !== undefined) {\r\n    children = element.$children = element.$children || [];\r\n    children.push(newElement);\r\n\r\n    // establish child -> parent relationship\r\n    newElement.$parent = element;\r\n  }\r\n\r\n  return handler;\r\n};\r\n\r\nGenericElementHandler.prototype.handleText = function(text) {\r\n  this.body = this.body || '' + text;\r\n};\r\n\r\nGenericElementHandler.prototype.handleEnd = function() {\r\n  if (this.body) {\r\n    this.element.$body = this.body;\r\n  }\r\n};\r\n\r\n/**\r\n * A reader for a meta-model\r\n *\r\n * @param {Object} options\r\n * @param {Model} options.model used to read xml files\r\n * @param {Boolean} options.lax whether to make parse errors warnings\r\n */\r\nexport function Reader(options) {\r\n\r\n  if (options instanceof Moddle) {\r\n    options = {\r\n      model: options\r\n    };\r\n  }\r\n\r\n  assign(this, { lax: false }, options);\r\n}\r\n\r\n\r\n/**\r\n * Parse the given XML into a moddle document tree.\r\n *\r\n * @param {String} xml\r\n * @param {ElementHandler|Object} options or rootHandler\r\n * @param  {Function} done\r\n */\r\nReader.prototype.fromXML = function(xml, options, done) {\r\n\r\n  var rootHandler = options.rootHandler;\r\n\r\n  if (options instanceof ElementHandler) {\r\n    // root handler passed via (xml, { rootHandler: ElementHandler }, ...)\r\n    rootHandler = options;\r\n    options = {};\r\n  } else {\r\n    if (typeof options === 'string') {\r\n      // rootHandler passed via (xml, 'someString', ...)\r\n      rootHandler = this.handler(options);\r\n      options = {};\r\n    } else if (typeof rootHandler === 'string') {\r\n      // rootHandler passed via (xml, { rootHandler: 'someString' }, ...)\r\n      rootHandler = this.handler(rootHandler);\r\n    }\r\n  }\r\n\r\n  var model = this.model,\r\n      lax = this.lax;\r\n\r\n  var context = new Context(assign({}, options, { rootHandler: rootHandler })),\r\n      parser = new SaxParser({ proxy: true }),\r\n      stack = new Stack();\r\n\r\n  rootHandler.context = context;\r\n\r\n  // push root handler\r\n  stack.push(rootHandler);\r\n\r\n\r\n  /**\r\n   * Handle error.\r\n   *\r\n   * @param  {Error} err\r\n   * @param  {Function} getContext\r\n   * @param  {boolean} lax\r\n   *\r\n   * @return {boolean} true if handled\r\n   */\r\n  function handleError(err, getContext, lax) {\r\n\r\n    var ctx = getContext();\r\n\r\n    var line = ctx.line,\r\n        column = ctx.column,\r\n        data = ctx.data;\r\n\r\n    // we receive the full context data here,\r\n    // for elements trim down the information\r\n    // to the tag name, only\r\n    if (data.charAt(0) === '<' && data.indexOf(' ') !== -1) {\r\n      data = data.slice(0, data.indexOf(' ')) + '>';\r\n    }\r\n\r\n    var message =\r\n      'unparsable content ' + (data ? data + ' ' : '') + 'detected\\n\\t' +\r\n        'line: ' + line + '\\n\\t' +\r\n        'column: ' + column + '\\n\\t' +\r\n        'nested error: ' + err.message;\r\n\r\n    if (lax) {\r\n      context.addWarning({\r\n        message: message,\r\n        error: err\r\n      });\r\n\r\n      console.warn('could not parse node');\r\n      console.warn(err);\r\n\r\n      return true;\r\n    } else {\r\n      console.error('could not parse document');\r\n      console.error(err);\r\n\r\n      throw error(message);\r\n    }\r\n  }\r\n\r\n  function handleWarning(err, getContext) {\r\n    // just like handling errors in <lax=true> mode\r\n    return handleError(err, getContext, true);\r\n  }\r\n\r\n  /**\r\n   * Resolve collected references on parse end.\r\n   */\r\n  function resolveReferences() {\r\n\r\n    var elementsById = context.elementsById;\r\n    var references = context.references;\r\n\r\n    var i, r;\r\n\r\n    for (i = 0; (r = references[i]); i++) {\r\n      var element = r.element;\r\n      var reference = elementsById[r.id];\r\n      var property = getModdleDescriptor(element).propertiesByName[r.property];\r\n\r\n      if (!reference) {\r\n        context.addWarning({\r\n          message: 'unresolved reference <' + r.id + '>',\r\n          element: r.element,\r\n          property: r.property,\r\n          value: r.id\r\n        });\r\n      }\r\n\r\n      if (property.isMany) {\r\n        var collection = element.get(property.name),\r\n            idx = collection.indexOf(r);\r\n\r\n        // we replace an existing place holder (idx != -1) or\r\n        // append to the collection instead\r\n        if (idx === -1) {\r\n          idx = collection.length;\r\n        }\r\n\r\n        if (!reference) {\r\n          // remove unresolvable reference\r\n          collection.splice(idx, 1);\r\n        } else {\r\n          // add or update reference in collection\r\n          collection[idx] = reference;\r\n        }\r\n      } else {\r\n        element.set(property.name, reference);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    stack.pop().handleEnd();\r\n  }\r\n\r\n  var PREAMBLE_START_PATTERN = /^<\\?xml /i;\r\n\r\n  var ENCODING_PATTERN = / encoding=\"([^\"]+)\"/i;\r\n\r\n  var UTF_8_PATTERN = /^utf-8$/i;\r\n\r\n  function handleQuestion(question) {\r\n\r\n    if (!PREAMBLE_START_PATTERN.test(question)) {\r\n      return;\r\n    }\r\n\r\n    var match = ENCODING_PATTERN.exec(question);\r\n    var encoding = match && match[1];\r\n\r\n    if (!encoding || UTF_8_PATTERN.test(encoding)) {\r\n      return;\r\n    }\r\n\r\n    context.addWarning({\r\n      message:\r\n        'unsupported document encoding <' + encoding + '>, ' +\r\n        'falling back to UTF-8'\r\n    });\r\n  }\r\n\r\n  function handleOpen(node, getContext) {\r\n    var handler = stack.peek();\r\n\r\n    try {\r\n      stack.push(handler.handleNode(node));\r\n    } catch (err) {\r\n\r\n      if (handleError(err, getContext, lax)) {\r\n        stack.push(new NoopHandler());\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleCData(text) {\r\n    stack.peek().handleText(text);\r\n  }\r\n\r\n  function handleText(text) {\r\n    // strip whitespace only nodes, i.e. before\r\n    // <!CDATA[ ... ]> sections and in between tags\r\n    text = text.trim();\r\n\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    stack.peek().handleText(text);\r\n  }\r\n\r\n  var uriMap = model.getPackages().reduce(function(uriMap, p) {\r\n    uriMap[p.uri] = p.prefix;\r\n\r\n    return uriMap;\r\n  }, {});\r\n\r\n  parser\r\n    .ns(uriMap)\r\n    .on('openTag', function(obj, decodeStr, selfClosing, getContext) {\r\n\r\n      // gracefully handle unparsable attributes (attrs=false)\r\n      var attrs = obj.attrs || {};\r\n\r\n      var decodedAttrs = Object.keys(attrs).reduce(function(d, key) {\r\n        var value = decodeStr(attrs[key]);\r\n\r\n        d[key] = value;\r\n\r\n        return d;\r\n      }, {});\r\n\r\n      var node = {\r\n        name: obj.name,\r\n        originalName: obj.originalName,\r\n        attributes: decodedAttrs,\r\n        ns: obj.ns\r\n      };\r\n\r\n      handleOpen(node, getContext);\r\n    })\r\n    .on('question', handleQuestion)\r\n    .on('closeTag', handleClose)\r\n    .on('cdata', handleCData)\r\n    .on('text', function(text, decodeEntities) {\r\n      handleText(decodeEntities(text));\r\n    })\r\n    .on('error', handleError)\r\n    .on('warn', handleWarning);\r\n\r\n  // deferred parse XML to make loading really ascnchronous\r\n  // this ensures the execution environment (node or browser)\r\n  // is kept responsive and that certain optimization strategies\r\n  // can kick in\r\n  defer(function() {\r\n    var err;\r\n\r\n    try {\r\n      parser.parse(xml);\r\n\r\n      resolveReferences();\r\n    } catch (e) {\r\n      err = e;\r\n    }\r\n\r\n    var element = rootHandler.element;\r\n\r\n    // handle the situation that we could not extract\r\n    // the desired root element from the document\r\n    if (!err && !element) {\r\n      err = error('failed to parse document as <' + rootHandler.type.$descriptor.name + '>');\r\n    }\r\n\r\n    done(err, err ? undefined : element, context);\r\n  });\r\n};\r\n\r\nReader.prototype.handler = function(name) {\r\n  return new RootElementHandler(this.model, name);\r\n};","import {\r\n  map,\r\n  forEach,\r\n  isString,\r\n  filter,\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  isSimple as isSimpleType\r\n} from 'moddle/lib/types';\r\n\r\nimport {\r\n  parseName as parseNameNs\r\n} from 'moddle/lib/ns';\r\n\r\nimport {\r\n  hasLowerCaseAlias,\r\n  serializeAsType,\r\n  serializeAsProperty,\r\n  DEFAULT_NS_MAP,\r\n  XSI_TYPE\r\n} from './common';\r\n\r\nvar XML_PREAMBLE = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\r\n\r\nvar ESCAPE_ATTR_CHARS = /<|>|'|\"|&|\\n\\r|\\n/g;\r\nvar ESCAPE_CHARS =  /<|>|&/g;\r\n\r\n\r\nexport function Namespaces(parent) {\r\n\r\n  var prefixMap = {};\r\n  var uriMap = {};\r\n  var used = {};\r\n\r\n  var wellknown = [];\r\n  var custom = [];\r\n\r\n  // API\r\n\r\n  this.byUri = function(uri) {\r\n    return uriMap[uri] || (\r\n      parent && parent.byUri(uri)\r\n    );\r\n  };\r\n\r\n  this.add = function(ns, isWellknown) {\r\n\r\n    uriMap[ns.uri] = ns;\r\n\r\n    if (isWellknown) {\r\n      wellknown.push(ns);\r\n    } else {\r\n      custom.push(ns);\r\n    }\r\n\r\n    this.mapPrefix(ns.prefix, ns.uri);\r\n  };\r\n\r\n  this.uriByPrefix = function(prefix) {\r\n    return prefixMap[prefix || 'xmlns'];\r\n  };\r\n\r\n  this.mapPrefix = function(prefix, uri) {\r\n    prefixMap[prefix || 'xmlns'] = uri;\r\n  };\r\n\r\n  this.logUsed = function(ns) {\r\n    var uri = ns.uri;\r\n\r\n    used[uri] = this.byUri(uri);\r\n  };\r\n\r\n  this.getUsed = function(ns) {\r\n\r\n    function isUsed(ns) {\r\n      return used[ns.uri];\r\n    }\r\n\r\n    var allNs = [].concat(wellknown, custom);\r\n\r\n    return allNs.filter(isUsed);\r\n  };\r\n\r\n}\r\n\r\nfunction lower(string) {\r\n  return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\nfunction nameToAlias(name, pkg) {\r\n  if (hasLowerCaseAlias(pkg)) {\r\n    return lower(name);\r\n  } else {\r\n    return name;\r\n  }\r\n}\r\n\r\nfunction inherits(ctor, superCtor) {\r\n  ctor.super_ = superCtor;\r\n  ctor.prototype = Object.create(superCtor.prototype, {\r\n    constructor: {\r\n      value: ctor,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n}\r\n\r\nfunction nsName(ns) {\r\n  if (isString(ns)) {\r\n    return ns;\r\n  } else {\r\n    return (ns.prefix ? ns.prefix + ':' : '') + ns.localName;\r\n  }\r\n}\r\n\r\nfunction getNsAttrs(namespaces) {\r\n\r\n  return map(namespaces.getUsed(), function(ns) {\r\n    var name = 'xmlns' + (ns.prefix ? ':' + ns.prefix : '');\r\n    return { name: name, value: ns.uri };\r\n  });\r\n\r\n}\r\n\r\nfunction getElementNs(ns, descriptor) {\r\n  if (descriptor.isGeneric) {\r\n    return assign({ localName: descriptor.ns.localName }, ns);\r\n  } else {\r\n    return assign({ localName: nameToAlias(descriptor.ns.localName, descriptor.$pkg) }, ns);\r\n  }\r\n}\r\n\r\nfunction getPropertyNs(ns, descriptor) {\r\n  return assign({ localName: descriptor.ns.localName }, ns);\r\n}\r\n\r\nfunction getSerializableProperties(element) {\r\n  var descriptor = element.$descriptor;\r\n\r\n  return filter(descriptor.properties, function(p) {\r\n    var name = p.name;\r\n\r\n    if (p.isVirtual) {\r\n      return false;\r\n    }\r\n\r\n    // do not serialize defaults\r\n    if (!element.hasOwnProperty(name)) {\r\n      return false;\r\n    }\r\n\r\n    var value = element[name];\r\n\r\n    // do not serialize default equals\r\n    if (value === p.default) {\r\n      return false;\r\n    }\r\n\r\n    // do not serialize null properties\r\n    if (value === null) {\r\n      return false;\r\n    }\r\n\r\n    return p.isMany ? value.length : true;\r\n  });\r\n}\r\n\r\nvar ESCAPE_ATTR_MAP = {\r\n  '\\n': '#10',\r\n  '\\n\\r': '#10',\r\n  '\"': '#34',\r\n  '\\'': '#39',\r\n  '<': '#60',\r\n  '>': '#62',\r\n  '&': '#38'\r\n};\r\n\r\nvar ESCAPE_MAP = {\r\n  '<': 'lt',\r\n  '>': 'gt',\r\n  '&': 'amp'\r\n};\r\n\r\nfunction escape(str, charPattern, replaceMap) {\r\n\r\n  // ensure we are handling strings here\r\n  str = isString(str) ? str : '' + str;\r\n\r\n  return str.replace(charPattern, function(s) {\r\n    return '&' + replaceMap[s] + ';';\r\n  });\r\n}\r\n\r\n/**\r\n * Escape a string attribute to not contain any bad values (line breaks, '\"', ...)\r\n *\r\n * @param {String} str the string to escape\r\n * @return {String} the escaped string\r\n */\r\nfunction escapeAttr(str) {\r\n  return escape(str, ESCAPE_ATTR_CHARS, ESCAPE_ATTR_MAP);\r\n}\r\n\r\nfunction escapeBody(str) {\r\n  return escape(str, ESCAPE_CHARS, ESCAPE_MAP);\r\n}\r\n\r\nfunction filterAttributes(props) {\r\n  return filter(props, function(p) { return p.isAttr; });\r\n}\r\n\r\nfunction filterContained(props) {\r\n  return filter(props, function(p) { return !p.isAttr; });\r\n}\r\n\r\n\r\nfunction ReferenceSerializer(tagName) {\r\n  this.tagName = tagName;\r\n}\r\n\r\nReferenceSerializer.prototype.build = function(element) {\r\n  this.element = element;\r\n  return this;\r\n};\r\n\r\nReferenceSerializer.prototype.serializeTo = function(writer) {\r\n  writer\r\n    .appendIndent()\r\n    .append('<' + this.tagName + '>' + this.element.id + '</' + this.tagName + '>')\r\n    .appendNewLine();\r\n};\r\n\r\nfunction BodySerializer() {}\r\n\r\nBodySerializer.prototype.serializeValue =\r\nBodySerializer.prototype.serializeTo = function(writer) {\r\n  writer.append(\r\n    this.escape\r\n      ? escapeBody(this.value)\r\n      : this.value\r\n  );\r\n};\r\n\r\nBodySerializer.prototype.build = function(prop, value) {\r\n  this.value = value;\r\n\r\n  if (prop.type === 'String' && value.search(ESCAPE_CHARS) !== -1) {\r\n    this.escape = true;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nfunction ValueSerializer(tagName) {\r\n  this.tagName = tagName;\r\n}\r\n\r\ninherits(ValueSerializer, BodySerializer);\r\n\r\nValueSerializer.prototype.serializeTo = function(writer) {\r\n\r\n  writer\r\n    .appendIndent()\r\n    .append('<' + this.tagName + '>');\r\n\r\n  this.serializeValue(writer);\r\n\r\n  writer\r\n    .append('</' + this.tagName + '>')\r\n    .appendNewLine();\r\n};\r\n\r\nfunction ElementSerializer(parent, propertyDescriptor) {\r\n  this.body = [];\r\n  this.attrs = [];\r\n\r\n  this.parent = parent;\r\n  this.propertyDescriptor = propertyDescriptor;\r\n}\r\n\r\nElementSerializer.prototype.build = function(element) {\r\n  this.element = element;\r\n\r\n  var elementDescriptor = element.$descriptor,\r\n      propertyDescriptor = this.propertyDescriptor;\r\n\r\n  var otherAttrs,\r\n      properties;\r\n\r\n  var isGeneric = elementDescriptor.isGeneric;\r\n\r\n  if (isGeneric) {\r\n    otherAttrs = this.parseGeneric(element);\r\n  } else {\r\n    otherAttrs = this.parseNsAttributes(element);\r\n  }\r\n\r\n  if (propertyDescriptor) {\r\n    this.ns = this.nsPropertyTagName(propertyDescriptor);\r\n  } else {\r\n    this.ns = this.nsTagName(elementDescriptor);\r\n  }\r\n\r\n  // compute tag name\r\n  this.tagName = this.addTagName(this.ns);\r\n\r\n  if (!isGeneric) {\r\n    properties = getSerializableProperties(element);\r\n\r\n    this.parseAttributes(filterAttributes(properties));\r\n    this.parseContainments(filterContained(properties));\r\n  }\r\n\r\n  this.parseGenericAttributes(element, otherAttrs);\r\n\r\n  return this;\r\n};\r\n\r\nElementSerializer.prototype.nsTagName = function(descriptor) {\r\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\r\n  return getElementNs(effectiveNs, descriptor);\r\n};\r\n\r\nElementSerializer.prototype.nsPropertyTagName = function(descriptor) {\r\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\r\n  return getPropertyNs(effectiveNs, descriptor);\r\n};\r\n\r\nElementSerializer.prototype.isLocalNs = function(ns) {\r\n  return ns.uri === this.ns.uri;\r\n};\r\n\r\n/**\r\n * Get the actual ns attribute name for the given element.\r\n *\r\n * @param {Object} element\r\n * @param {Boolean} [element.inherited=false]\r\n *\r\n * @return {Object} nsName\r\n */\r\nElementSerializer.prototype.nsAttributeName = function(element) {\r\n\r\n  var ns;\r\n\r\n  if (isString(element)) {\r\n    ns = parseNameNs(element);\r\n  } else {\r\n    ns = element.ns;\r\n  }\r\n\r\n  // return just local name for inherited attributes\r\n  if (element.inherited) {\r\n    return { localName: ns.localName };\r\n  }\r\n\r\n  // parse + log effective ns\r\n  var effectiveNs = this.logNamespaceUsed(ns);\r\n\r\n  // LOG ACTUAL namespace use\r\n  this.getNamespaces().logUsed(effectiveNs);\r\n\r\n  // strip prefix if same namespace like parent\r\n  if (this.isLocalNs(effectiveNs)) {\r\n    return { localName: ns.localName };\r\n  } else {\r\n    return assign({ localName: ns.localName }, effectiveNs);\r\n  }\r\n};\r\n\r\nElementSerializer.prototype.parseGeneric = function(element) {\r\n\r\n  var self = this,\r\n      body = this.body;\r\n\r\n  var attributes = [];\r\n\r\n  forEach(element, function(val, key) {\r\n\r\n    var nonNsAttr;\r\n\r\n    if (key === '$body') {\r\n      body.push(new BodySerializer().build({ type: 'String' }, val));\r\n    } else\r\n    if (key === '$children') {\r\n      forEach(val, function(child) {\r\n        body.push(new ElementSerializer(self).build(child));\r\n      });\r\n    } else\r\n    if (key.indexOf('$') !== 0) {\r\n      nonNsAttr = self.parseNsAttribute(element, key, val);\r\n\r\n      if (nonNsAttr) {\r\n        attributes.push({ name: key, value: val });\r\n      }\r\n    }\r\n  });\r\n\r\n  return attributes;\r\n};\r\n\r\nElementSerializer.prototype.parseNsAttribute = function(element, name, value) {\r\n  var model = element.$model;\r\n\r\n  var nameNs = parseNameNs(name);\r\n\r\n  var ns;\r\n\r\n  // parse xmlns:foo=\"http://foo.bar\"\r\n  if (nameNs.prefix === 'xmlns') {\r\n    ns = { prefix: nameNs.localName, uri: value };\r\n  }\r\n\r\n  // parse xmlns=\"http://foo.bar\"\r\n  if (!nameNs.prefix && nameNs.localName === 'xmlns') {\r\n    ns = { uri: value };\r\n  }\r\n\r\n  if (!ns) {\r\n    return {\r\n      name: name,\r\n      value: value\r\n    };\r\n  }\r\n\r\n  if (model && model.getPackage(value)) {\r\n    // register well known namespace\r\n    this.logNamespace(ns, true, true);\r\n  } else {\r\n    // log custom namespace directly as used\r\n    var actualNs = this.logNamespaceUsed(ns, true);\r\n\r\n    this.getNamespaces().logUsed(actualNs);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Parse namespaces and return a list of left over generic attributes\r\n *\r\n * @param  {Object} element\r\n * @return {Array<Object>}\r\n */\r\nElementSerializer.prototype.parseNsAttributes = function(element, attrs) {\r\n  var self = this;\r\n\r\n  var genericAttrs = element.$attrs;\r\n\r\n  var attributes = [];\r\n\r\n  // parse namespace attributes first\r\n  // and log them. push non namespace attributes to a list\r\n  // and process them later\r\n  forEach(genericAttrs, function(value, name) {\r\n\r\n    var nonNsAttr = self.parseNsAttribute(element, name, value);\r\n\r\n    if (nonNsAttr) {\r\n      attributes.push(nonNsAttr);\r\n    }\r\n  });\r\n\r\n  return attributes;\r\n};\r\n\r\nElementSerializer.prototype.parseGenericAttributes = function(element, attributes) {\r\n\r\n  var self = this;\r\n\r\n  forEach(attributes, function(attr) {\r\n\r\n    // do not serialize xsi:type attribute\r\n    // it is set manually based on the actual implementation type\r\n    if (attr.name === XSI_TYPE) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      self.addAttribute(self.nsAttributeName(attr.name), attr.value);\r\n    } catch (e) {\r\n      console.warn(\r\n        'missing namespace information for ',\r\n        attr.name, '=', attr.value, 'on', element,\r\n        e);\r\n    }\r\n  });\r\n};\r\n\r\nElementSerializer.prototype.parseContainments = function(properties) {\r\n\r\n  var self = this,\r\n      body = this.body,\r\n      element = this.element;\r\n\r\n  forEach(properties, function(p) {\r\n    var value = element.get(p.name),\r\n        isReference = p.isReference,\r\n        isMany = p.isMany;\r\n\r\n    if (!isMany) {\r\n      value = [ value ];\r\n    }\r\n\r\n    if (p.isBody) {\r\n      body.push(new BodySerializer().build(p, value[0]));\r\n    } else\r\n    if (isSimpleType(p.type)) {\r\n      forEach(value, function(v) {\r\n        body.push(new ValueSerializer(self.addTagName(self.nsPropertyTagName(p))).build(p, v));\r\n      });\r\n    } else\r\n    if (isReference) {\r\n      forEach(value, function(v) {\r\n        body.push(new ReferenceSerializer(self.addTagName(self.nsPropertyTagName(p))).build(v));\r\n      });\r\n    } else {\r\n      // allow serialization via type\r\n      // rather than element name\r\n      var asType = serializeAsType(p),\r\n          asProperty = serializeAsProperty(p);\r\n\r\n      forEach(value, function(v) {\r\n        var serializer;\r\n\r\n        if (asType) {\r\n          serializer = new TypeSerializer(self, p);\r\n        } else\r\n        if (asProperty) {\r\n          serializer = new ElementSerializer(self, p);\r\n        } else {\r\n          serializer = new ElementSerializer(self);\r\n        }\r\n\r\n        body.push(serializer.build(v));\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nElementSerializer.prototype.getNamespaces = function(local) {\r\n\r\n  var namespaces = this.namespaces,\r\n      parent = this.parent,\r\n      parentNamespaces;\r\n\r\n  if (!namespaces) {\r\n    parentNamespaces = parent && parent.getNamespaces();\r\n\r\n    if (local || !parentNamespaces) {\r\n      this.namespaces = namespaces = new Namespaces(parentNamespaces);\r\n    } else {\r\n      namespaces = parentNamespaces;\r\n    }\r\n  }\r\n\r\n  return namespaces;\r\n};\r\n\r\nElementSerializer.prototype.logNamespace = function(ns, wellknown, local) {\r\n  var namespaces = this.getNamespaces(local);\r\n\r\n  var nsUri = ns.uri,\r\n      nsPrefix = ns.prefix;\r\n\r\n  var existing = namespaces.byUri(nsUri);\r\n\r\n  if (!existing) {\r\n    namespaces.add(ns, wellknown);\r\n  }\r\n\r\n  namespaces.mapPrefix(nsPrefix, nsUri);\r\n\r\n  return ns;\r\n};\r\n\r\nElementSerializer.prototype.logNamespaceUsed = function(ns, local) {\r\n  var element = this.element,\r\n      model = element.$model,\r\n      namespaces = this.getNamespaces(local);\r\n\r\n  // ns may be\r\n  //\r\n  //   * prefix only\r\n  //   * prefix:uri\r\n  //   * localName only\r\n\r\n  var prefix = ns.prefix,\r\n      uri = ns.uri,\r\n      newPrefix, idx,\r\n      wellknownUri;\r\n\r\n  // handle anonymous namespaces (elementForm=unqualified), cf. #23\r\n  if (!prefix && !uri) {\r\n    return { localName: ns.localName };\r\n  }\r\n\r\n  wellknownUri = DEFAULT_NS_MAP[prefix] || model && (model.getPackage(prefix) || {}).uri;\r\n\r\n  uri = uri || wellknownUri || namespaces.uriByPrefix(prefix);\r\n\r\n  if (!uri) {\r\n    throw new Error('no namespace uri given for prefix <' + prefix + '>');\r\n  }\r\n\r\n  ns = namespaces.byUri(uri);\r\n\r\n  if (!ns) {\r\n    newPrefix = prefix;\r\n    idx = 1;\r\n\r\n    // find a prefix that is not mapped yet\r\n    while (namespaces.uriByPrefix(newPrefix)) {\r\n      newPrefix = prefix + '_' + idx++;\r\n    }\r\n\r\n    ns = this.logNamespace({ prefix: newPrefix, uri: uri }, wellknownUri === uri);\r\n  }\r\n\r\n  if (prefix) {\r\n    namespaces.mapPrefix(prefix, uri);\r\n  }\r\n\r\n  return ns;\r\n};\r\n\r\nElementSerializer.prototype.parseAttributes = function(properties) {\r\n  var self = this,\r\n      element = this.element;\r\n\r\n  forEach(properties, function(p) {\r\n\r\n    var value = element.get(p.name);\r\n\r\n    if (p.isReference) {\r\n\r\n      if (!p.isMany) {\r\n        value = value.id;\r\n      }\r\n      else {\r\n        var values = [];\r\n        forEach(value, function(v) {\r\n          values.push(v.id);\r\n        });\r\n        // IDREFS is a whitespace-separated list of references.\r\n        value = values.join(' ');\r\n      }\r\n\r\n    }\r\n\r\n    self.addAttribute(self.nsAttributeName(p), value);\r\n  });\r\n};\r\n\r\nElementSerializer.prototype.addTagName = function(nsTagName) {\r\n  var actualNs = this.logNamespaceUsed(nsTagName);\r\n\r\n  this.getNamespaces().logUsed(actualNs);\r\n\r\n  return nsName(nsTagName);\r\n};\r\n\r\nElementSerializer.prototype.addAttribute = function(name, value) {\r\n  var attrs = this.attrs;\r\n\r\n  if (isString(value)) {\r\n    value = escapeAttr(value);\r\n  }\r\n\r\n  attrs.push({ name: name, value: value });\r\n};\r\n\r\nElementSerializer.prototype.serializeAttributes = function(writer) {\r\n  var attrs = this.attrs,\r\n      namespaces = this.namespaces;\r\n\r\n  if (namespaces) {\r\n    attrs = getNsAttrs(namespaces).concat(attrs);\r\n  }\r\n\r\n  forEach(attrs, function(a) {\r\n    writer\r\n      .append(' ')\r\n      .append(nsName(a.name)).append('=\"').append(a.value).append('\"');\r\n  });\r\n};\r\n\r\nElementSerializer.prototype.serializeTo = function(writer) {\r\n  var firstBody = this.body[0],\r\n      indent = firstBody && firstBody.constructor !== BodySerializer;\r\n\r\n  writer\r\n    .appendIndent()\r\n    .append('<' + this.tagName);\r\n\r\n  this.serializeAttributes(writer);\r\n\r\n  writer.append(firstBody ? '>' : ' />');\r\n\r\n  if (firstBody) {\r\n\r\n    if (indent) {\r\n      writer\r\n        .appendNewLine()\r\n        .indent();\r\n    }\r\n\r\n    forEach(this.body, function(b) {\r\n      b.serializeTo(writer);\r\n    });\r\n\r\n    if (indent) {\r\n      writer\r\n        .unindent()\r\n        .appendIndent();\r\n    }\r\n\r\n    writer.append('</' + this.tagName + '>');\r\n  }\r\n\r\n  writer.appendNewLine();\r\n};\r\n\r\n/**\r\n * A serializer for types that handles serialization of data types\r\n */\r\nfunction TypeSerializer(parent, propertyDescriptor) {\r\n  ElementSerializer.call(this, parent, propertyDescriptor);\r\n}\r\n\r\ninherits(TypeSerializer, ElementSerializer);\r\n\r\nTypeSerializer.prototype.parseNsAttributes = function(element) {\r\n\r\n  // extracted attributes\r\n  var attributes = ElementSerializer.prototype.parseNsAttributes.call(this, element);\r\n\r\n  var descriptor = element.$descriptor;\r\n\r\n  // only serialize xsi:type if necessary\r\n  if (descriptor.name === this.propertyDescriptor.type) {\r\n    return attributes;\r\n  }\r\n\r\n  var typeNs = this.typeNs = this.nsTagName(descriptor);\r\n  this.getNamespaces().logUsed(this.typeNs);\r\n\r\n  // add xsi:type attribute to represent the elements\r\n  // actual type\r\n\r\n  var pkg = element.$model.getPackage(typeNs.uri),\r\n      typePrefix = (pkg.xml && pkg.xml.typePrefix) || '';\r\n\r\n  this.addAttribute(\r\n    this.nsAttributeName(XSI_TYPE),\r\n    (typeNs.prefix ? typeNs.prefix + ':' : '') + typePrefix + descriptor.ns.localName\r\n  );\r\n\r\n  return attributes;\r\n};\r\n\r\nTypeSerializer.prototype.isLocalNs = function(ns) {\r\n  return ns.uri === (this.typeNs || this.ns).uri;\r\n};\r\n\r\nfunction SavingWriter() {\r\n  this.value = '';\r\n\r\n  this.write = function(str) {\r\n    this.value += str;\r\n  };\r\n}\r\n\r\nfunction FormatingWriter(out, format) {\r\n\r\n  var indent = [''];\r\n\r\n  this.append = function(str) {\r\n    out.write(str);\r\n\r\n    return this;\r\n  };\r\n\r\n  this.appendNewLine = function() {\r\n    if (format) {\r\n      out.write('\\n');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  this.appendIndent = function() {\r\n    if (format) {\r\n      out.write(indent.join('  '));\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  this.indent = function() {\r\n    indent.push('');\r\n    return this;\r\n  };\r\n\r\n  this.unindent = function() {\r\n    indent.pop();\r\n    return this;\r\n  };\r\n}\r\n\r\n/**\r\n * A writer for meta-model backed document trees\r\n *\r\n * @param {Object} options output options to pass into the writer\r\n */\r\nexport function Writer(options) {\r\n\r\n  options = assign({ format: false, preamble: true }, options || {});\r\n\r\n  function toXML(tree, writer) {\r\n    var internalWriter = writer || new SavingWriter();\r\n    var formatingWriter = new FormatingWriter(internalWriter, options.format);\r\n\r\n    if (options.preamble) {\r\n      formatingWriter.append(XML_PREAMBLE);\r\n    }\r\n\r\n    new ElementSerializer().build(tree).serializeTo(formatingWriter);\r\n\r\n    if (!writer) {\r\n      return internalWriter.value;\r\n    }\r\n  }\r\n\r\n  return {\r\n    toXML: toXML\r\n  };\r\n}","export {\r\n  default\r\n} from './lib/moddle';","/**\r\n * Moddle base element.\r\n */\r\nexport default function Base() { }\r\n\r\nBase.prototype.get = function(name) {\r\n  return this.$model.properties.get(this, name);\r\n};\r\n\r\nBase.prototype.set = function(name, value) {\r\n  this.$model.properties.set(this, name, value);\r\n};","import {\r\n  pick,\r\n  assign,\r\n  forEach,\r\n  bind\r\n} from 'min-dash';\r\n\r\nimport {\r\n  parseName as parseNameNs\r\n} from './ns';\r\n\r\n\r\n/**\r\n * A utility to build element descriptors.\r\n */\r\nexport default function DescriptorBuilder(nameNs) {\r\n  this.ns = nameNs;\r\n  this.name = nameNs.name;\r\n  this.allTypes = [];\r\n  this.allTypesByName = {};\r\n  this.properties = [];\r\n  this.propertiesByName = {};\r\n}\r\n\r\n\r\nDescriptorBuilder.prototype.build = function() {\r\n  return pick(this, [\r\n    'ns',\r\n    'name',\r\n    'allTypes',\r\n    'allTypesByName',\r\n    'properties',\r\n    'propertiesByName',\r\n    'bodyProperty',\r\n    'idProperty'\r\n  ]);\r\n};\r\n\r\n/**\r\n * Add property at given index.\r\n *\r\n * @param {Object} p\r\n * @param {Number} [idx]\r\n * @param {Boolean} [validate=true]\r\n */\r\nDescriptorBuilder.prototype.addProperty = function(p, idx, validate) {\r\n\r\n  if (typeof idx === 'boolean') {\r\n    validate = idx;\r\n    idx = undefined;\r\n  }\r\n\r\n  this.addNamedProperty(p, validate !== false);\r\n\r\n  var properties = this.properties;\r\n\r\n  if (idx !== undefined) {\r\n    properties.splice(idx, 0, p);\r\n  } else {\r\n    properties.push(p);\r\n  }\r\n};\r\n\r\n\r\nDescriptorBuilder.prototype.replaceProperty = function(oldProperty, newProperty, replace) {\r\n  var oldNameNs = oldProperty.ns;\r\n\r\n  var props = this.properties,\r\n      propertiesByName = this.propertiesByName,\r\n      rename = oldProperty.name !== newProperty.name;\r\n\r\n  if (oldProperty.isId) {\r\n    if (!newProperty.isId) {\r\n      throw new Error(\r\n        'property <' + newProperty.ns.name + '> must be id property ' +\r\n        'to refine <' + oldProperty.ns.name + '>');\r\n    }\r\n\r\n    this.setIdProperty(newProperty, false);\r\n  }\r\n\r\n  if (oldProperty.isBody) {\r\n\r\n    if (!newProperty.isBody) {\r\n      throw new Error(\r\n        'property <' + newProperty.ns.name + '> must be body property ' +\r\n        'to refine <' + oldProperty.ns.name + '>');\r\n    }\r\n\r\n    // TODO: Check compatibility\r\n    this.setBodyProperty(newProperty, false);\r\n  }\r\n\r\n  // validate existence and get location of old property\r\n  var idx = props.indexOf(oldProperty);\r\n  if (idx === -1) {\r\n    throw new Error('property <' + oldNameNs.name + '> not found in property list');\r\n  }\r\n\r\n  // remove old property\r\n  props.splice(idx, 1);\r\n\r\n  // replacing the named property is intentional\r\n  //\r\n  //  * validate only if this is a \"rename\" operation\r\n  //  * add at specific index unless we \"replace\"\r\n  //\r\n  this.addProperty(newProperty, replace ? undefined : idx, rename);\r\n\r\n  // make new property available under old name\r\n  propertiesByName[oldNameNs.name] = propertiesByName[oldNameNs.localName] = newProperty;\r\n};\r\n\r\n\r\nDescriptorBuilder.prototype.redefineProperty = function(p, targetPropertyName, replace) {\r\n\r\n  var nsPrefix = p.ns.prefix;\r\n  var parts = targetPropertyName.split('#');\r\n\r\n  var name = parseNameNs(parts[0], nsPrefix);\r\n  var attrName = parseNameNs(parts[1], name.prefix).name;\r\n\r\n  var redefinedProperty = this.propertiesByName[attrName];\r\n  if (!redefinedProperty) {\r\n    throw new Error('refined property <' + attrName + '> not found');\r\n  } else {\r\n    this.replaceProperty(redefinedProperty, p, replace);\r\n  }\r\n\r\n  delete p.redefines;\r\n};\r\n\r\nDescriptorBuilder.prototype.addNamedProperty = function(p, validate) {\r\n  var ns = p.ns,\r\n      propsByName = this.propertiesByName;\r\n\r\n  if (validate) {\r\n    this.assertNotDefined(p, ns.name);\r\n    this.assertNotDefined(p, ns.localName);\r\n  }\r\n\r\n  propsByName[ns.name] = propsByName[ns.localName] = p;\r\n};\r\n\r\nDescriptorBuilder.prototype.removeNamedProperty = function(p) {\r\n  var ns = p.ns,\r\n      propsByName = this.propertiesByName;\r\n\r\n  delete propsByName[ns.name];\r\n  delete propsByName[ns.localName];\r\n};\r\n\r\nDescriptorBuilder.prototype.setBodyProperty = function(p, validate) {\r\n\r\n  if (validate && this.bodyProperty) {\r\n    throw new Error(\r\n      'body property defined multiple times ' +\r\n      '(<' + this.bodyProperty.ns.name + '>, <' + p.ns.name + '>)');\r\n  }\r\n\r\n  this.bodyProperty = p;\r\n};\r\n\r\nDescriptorBuilder.prototype.setIdProperty = function(p, validate) {\r\n\r\n  if (validate && this.idProperty) {\r\n    throw new Error(\r\n      'id property defined multiple times ' +\r\n      '(<' + this.idProperty.ns.name + '>, <' + p.ns.name + '>)');\r\n  }\r\n\r\n  this.idProperty = p;\r\n};\r\n\r\nDescriptorBuilder.prototype.assertNotDefined = function(p, name) {\r\n  var propertyName = p.name,\r\n      definedProperty = this.propertiesByName[propertyName];\r\n\r\n  if (definedProperty) {\r\n    throw new Error(\r\n      'property <' + propertyName + '> already defined; ' +\r\n      'override of <' + definedProperty.definedBy.ns.name + '#' + definedProperty.ns.name + '> by ' +\r\n      '<' + p.definedBy.ns.name + '#' + p.ns.name + '> not allowed without redefines');\r\n  }\r\n};\r\n\r\nDescriptorBuilder.prototype.hasProperty = function(name) {\r\n  return this.propertiesByName[name];\r\n};\r\n\r\nDescriptorBuilder.prototype.addTrait = function(t, inherited) {\r\n\r\n  var typesByName = this.allTypesByName,\r\n      types = this.allTypes;\r\n\r\n  var typeName = t.name;\r\n\r\n  if (typeName in typesByName) {\r\n    return;\r\n  }\r\n\r\n  forEach(t.properties, bind(function(p) {\r\n\r\n    // clone property to allow extensions\r\n    p = assign({}, p, {\r\n      name: p.ns.localName,\r\n      inherited: inherited\r\n    });\r\n\r\n    Object.defineProperty(p, 'definedBy', {\r\n      value: t\r\n    });\r\n\r\n    var replaces = p.replaces,\r\n        redefines = p.redefines;\r\n\r\n    // add replace/redefine support\r\n    if (replaces || redefines) {\r\n      this.redefineProperty(p, replaces || redefines, replaces);\r\n    } else {\r\n      if (p.isBody) {\r\n        this.setBodyProperty(p);\r\n      }\r\n      if (p.isId) {\r\n        this.setIdProperty(p);\r\n      }\r\n      this.addProperty(p);\r\n    }\r\n  }, this));\r\n\r\n  types.push(t);\r\n  typesByName[typeName] = t;\r\n};","import {\r\n  forEach,\r\n  bind\r\n} from 'min-dash';\r\n\r\nimport Base from './base';\r\n\r\n/**\r\n * A model element factory.\r\n *\r\n * @param {Moddle} model\r\n * @param {Properties} properties\r\n */\r\nexport default function Factory(model, properties) {\r\n  this.model = model;\r\n  this.properties = properties;\r\n}\r\n\r\n\r\nFactory.prototype.createType = function(descriptor) {\r\n\r\n  var model = this.model;\r\n\r\n  var props = this.properties,\r\n      prototype = Object.create(Base.prototype);\r\n\r\n  // initialize default values\r\n  forEach(descriptor.properties, function(p) {\r\n    if (!p.isMany && p.default !== undefined) {\r\n      prototype[p.name] = p.default;\r\n    }\r\n  });\r\n\r\n  props.defineModel(prototype, model);\r\n  props.defineDescriptor(prototype, descriptor);\r\n\r\n  var name = descriptor.ns.name;\r\n\r\n  /**\r\n   * The new type constructor\r\n   */\r\n  function ModdleElement(attrs) {\r\n    props.define(this, '$type', { value: name, enumerable: true });\r\n    props.define(this, '$attrs', { value: {} });\r\n    props.define(this, '$parent', { writable: true });\r\n\r\n    forEach(attrs, bind(function(val, key) {\r\n      this.set(key, val);\r\n    }, this));\r\n  }\r\n\r\n  ModdleElement.prototype = prototype;\r\n\r\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType;\r\n\r\n  // static links\r\n  props.defineModel(ModdleElement, model);\r\n  props.defineDescriptor(ModdleElement, descriptor);\r\n\r\n  return ModdleElement;\r\n};","import {\r\n  isString,\r\n  isObject,\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport Factory from './factory';\r\nimport Registry from './registry';\r\nimport Properties from './properties';\r\n\r\nimport {\r\n  parseName as parseNameNs\r\n} from './ns';\r\n\r\n\r\n//// Moddle implementation /////////////////////////////////////////////////\r\n\r\n/**\r\n * @class Moddle\r\n *\r\n * A model that can be used to create elements of a specific type.\r\n *\r\n * @example\r\n *\r\n * var Moddle = require('moddle');\r\n *\r\n * var pkg = {\r\n *   name: 'mypackage',\r\n *   prefix: 'my',\r\n *   types: [\r\n *     { name: 'Root' }\r\n *   ]\r\n * };\r\n *\r\n * var moddle = new Moddle([pkg]);\r\n *\r\n * @param {Array<Package>} packages the packages to contain\r\n */\r\nexport default function Moddle(packages) {\r\n\r\n  this.properties = new Properties(this);\r\n\r\n  this.factory = new Factory(this, this.properties);\r\n  this.registry = new Registry(packages, this.properties);\r\n\r\n  this.typeCache = {};\r\n}\r\n\r\n\r\n/**\r\n * Create an instance of the specified type.\r\n *\r\n * @method Moddle#create\r\n *\r\n * @example\r\n *\r\n * var foo = moddle.create('my:Foo');\r\n * var bar = moddle.create('my:Bar', { id: 'BAR_1' });\r\n *\r\n * @param  {String|Object} descriptor the type descriptor or name know to the model\r\n * @param  {Object} attrs   a number of attributes to initialize the model instance with\r\n * @return {Object}         model instance\r\n */\r\nModdle.prototype.create = function(descriptor, attrs) {\r\n  var Type = this.getType(descriptor);\r\n\r\n  if (!Type) {\r\n    throw new Error('unknown type <' + descriptor + '>');\r\n  }\r\n\r\n  return new Type(attrs);\r\n};\r\n\r\n\r\n/**\r\n * Returns the type representing a given descriptor\r\n *\r\n * @method Moddle#getType\r\n *\r\n * @example\r\n *\r\n * var Foo = moddle.getType('my:Foo');\r\n * var foo = new Foo({ 'id' : 'FOO_1' });\r\n *\r\n * @param  {String|Object} descriptor the type descriptor or name know to the model\r\n * @return {Object}         the type representing the descriptor\r\n */\r\nModdle.prototype.getType = function(descriptor) {\r\n\r\n  var cache = this.typeCache;\r\n\r\n  var name = isString(descriptor) ? descriptor : descriptor.ns.name;\r\n\r\n  var type = cache[name];\r\n\r\n  if (!type) {\r\n    descriptor = this.registry.getEffectiveDescriptor(name);\r\n    type = cache[name] = this.factory.createType(descriptor);\r\n  }\r\n\r\n  return type;\r\n};\r\n\r\n\r\n/**\r\n * Creates an any-element type to be used within model instances.\r\n *\r\n * This can be used to create custom elements that lie outside the meta-model.\r\n * The created element contains all the meta-data required to serialize it\r\n * as part of meta-model elements.\r\n *\r\n * @method Moddle#createAny\r\n *\r\n * @example\r\n *\r\n * var foo = moddle.createAny('vendor:Foo', 'http://vendor', {\r\n *   value: 'bar'\r\n * });\r\n *\r\n * var container = moddle.create('my:Container', 'http://my', {\r\n *   any: [ foo ]\r\n * });\r\n *\r\n * // go ahead and serialize the stuff\r\n *\r\n *\r\n * @param  {String} name  the name of the element\r\n * @param  {String} nsUri the namespace uri of the element\r\n * @param  {Object} [properties] a map of properties to initialize the instance with\r\n * @return {Object} the any type instance\r\n */\r\nModdle.prototype.createAny = function(name, nsUri, properties) {\r\n\r\n  var nameNs = parseNameNs(name);\r\n\r\n  var element = {\r\n    $type: name,\r\n    $instanceOf: function(type) {\r\n      return type === this.$type;\r\n    }\r\n  };\r\n\r\n  var descriptor = {\r\n    name: name,\r\n    isGeneric: true,\r\n    ns: {\r\n      prefix: nameNs.prefix,\r\n      localName: nameNs.localName,\r\n      uri: nsUri\r\n    }\r\n  };\r\n\r\n  this.properties.defineDescriptor(element, descriptor);\r\n  this.properties.defineModel(element, this);\r\n  this.properties.define(element, '$parent', { enumerable: false, writable: true });\r\n\r\n  forEach(properties, function(a, key) {\r\n    if (isObject(a) && a.value !== undefined) {\r\n      element[a.name] = a.value;\r\n    } else {\r\n      element[key] = a;\r\n    }\r\n  });\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Returns a registered package by uri or prefix\r\n *\r\n * @return {Object} the package\r\n */\r\nModdle.prototype.getPackage = function(uriOrPrefix) {\r\n  return this.registry.getPackage(uriOrPrefix);\r\n};\r\n\r\n/**\r\n * Returns a snapshot of all known packages\r\n *\r\n * @return {Object} the package\r\n */\r\nModdle.prototype.getPackages = function() {\r\n  return this.registry.getPackages();\r\n};\r\n\r\n/**\r\n * Returns the descriptor for an element\r\n */\r\nModdle.prototype.getElementDescriptor = function(element) {\r\n  return element.$descriptor;\r\n};\r\n\r\n/**\r\n * Returns true if the given descriptor or instance\r\n * represents the given type.\r\n *\r\n * May be applied to this, if element is omitted.\r\n */\r\nModdle.prototype.hasType = function(element, type) {\r\n  if (type === undefined) {\r\n    type = element;\r\n    element = this;\r\n  }\r\n\r\n  var descriptor = element.$model.getElementDescriptor(element);\r\n\r\n  return (type in descriptor.allTypesByName);\r\n};\r\n\r\n/**\r\n * Returns the descriptor of an elements named property\r\n */\r\nModdle.prototype.getPropertyDescriptor = function(element, property) {\r\n  return this.getElementDescriptor(element).propertiesByName[property];\r\n};\r\n\r\n/**\r\n * Returns a mapped type's descriptor\r\n */\r\nModdle.prototype.getTypeDescriptor = function(type) {\r\n  return this.registry.typeMap[type];\r\n};","/**\r\n * Parses a namespaced attribute name of the form (ns:)localName to an object,\r\n * given a default prefix to assume in case no explicit namespace is given.\r\n *\r\n * @param {String} name\r\n * @param {String} [defaultPrefix] the default prefix to take, if none is present.\r\n *\r\n * @return {Object} the parsed name\r\n */\r\nexport function parseName(name, defaultPrefix) {\r\n  var parts = name.split(/:/),\r\n      localName, prefix;\r\n\r\n  // no prefix (i.e. only local name)\r\n  if (parts.length === 1) {\r\n    localName = name;\r\n    prefix = defaultPrefix;\r\n  } else\r\n  // prefix + local name\r\n  if (parts.length === 2) {\r\n    localName = parts[1];\r\n    prefix = parts[0];\r\n  } else {\r\n    throw new Error('expected <prefix:localName> or <localName>, got ' + name);\r\n  }\r\n\r\n  name = (prefix ? prefix + ':' : '') + localName;\r\n\r\n  return {\r\n    name: name,\r\n    prefix: prefix,\r\n    localName: localName\r\n  };\r\n}","/**\r\n * A utility that gets and sets properties of model elements.\r\n *\r\n * @param {Model} model\r\n */\r\nexport default function Properties(model) {\r\n  this.model = model;\r\n}\r\n\r\n\r\n/**\r\n * Sets a named property on the target element.\r\n * If the value is undefined, the property gets deleted.\r\n *\r\n * @param {Object} target\r\n * @param {String} name\r\n * @param {Object} value\r\n */\r\nProperties.prototype.set = function(target, name, value) {\r\n\r\n  var property = this.model.getPropertyDescriptor(target, name);\r\n\r\n  var propertyName = property && property.name;\r\n\r\n  if (isUndefined(value)) {\r\n    // unset the property, if the specified value is undefined;\r\n    // delete from $attrs (for extensions) or the target itself\r\n    if (property) {\r\n      delete target[propertyName];\r\n    } else {\r\n      delete target.$attrs[name];\r\n    }\r\n  } else {\r\n    // set the property, defining well defined properties on the fly\r\n    // or simply updating them in target.$attrs (for extensions)\r\n    if (property) {\r\n      if (propertyName in target) {\r\n        target[propertyName] = value;\r\n      } else {\r\n        defineProperty(target, property, value);\r\n      }\r\n    } else {\r\n      target.$attrs[name] = value;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the named property of the given element\r\n *\r\n * @param  {Object} target\r\n * @param  {String} name\r\n *\r\n * @return {Object}\r\n */\r\nProperties.prototype.get = function(target, name) {\r\n\r\n  var property = this.model.getPropertyDescriptor(target, name);\r\n\r\n  if (!property) {\r\n    return target.$attrs[name];\r\n  }\r\n\r\n  var propertyName = property.name;\r\n\r\n  // check if access to collection property and lazily initialize it\r\n  if (!target[propertyName] && property.isMany) {\r\n    defineProperty(target, property, []);\r\n  }\r\n\r\n  return target[propertyName];\r\n};\r\n\r\n\r\n/**\r\n * Define a property on the target element\r\n *\r\n * @param  {Object} target\r\n * @param  {String} name\r\n * @param  {Object} options\r\n */\r\nProperties.prototype.define = function(target, name, options) {\r\n  Object.defineProperty(target, name, options);\r\n};\r\n\r\n\r\n/**\r\n * Define the descriptor for an element\r\n */\r\nProperties.prototype.defineDescriptor = function(target, descriptor) {\r\n  this.define(target, '$descriptor', { value: descriptor });\r\n};\r\n\r\n/**\r\n * Define the model for an element\r\n */\r\nProperties.prototype.defineModel = function(target, model) {\r\n  this.define(target, '$model', { value: model });\r\n};\r\n\r\n\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\nfunction defineProperty(target, property, value) {\r\n  Object.defineProperty(target, property.name, {\r\n    enumerable: !property.isReference,\r\n    writable: true,\r\n    value: value,\r\n    configurable: true\r\n  });\r\n}","import {\r\n  assign,\r\n  forEach,\r\n  bind\r\n} from 'min-dash';\r\n\r\nimport {\r\n  isBuiltIn as isBuiltInType\r\n} from './types';\r\n\r\nimport DescriptorBuilder from './descriptor-builder';\r\n\r\nimport {\r\n  parseName as parseNameNs\r\n} from './ns';\r\n\r\n\r\n/**\r\n * A registry of Moddle packages.\r\n *\r\n * @param {Array<Package>} packages\r\n * @param {Properties} properties\r\n */\r\nexport default function Registry(packages, properties) {\r\n  this.packageMap = {};\r\n  this.typeMap = {};\r\n\r\n  this.packages = [];\r\n\r\n  this.properties = properties;\r\n\r\n  forEach(packages, bind(this.registerPackage, this));\r\n}\r\n\r\n\r\nRegistry.prototype.getPackage = function(uriOrPrefix) {\r\n  return this.packageMap[uriOrPrefix];\r\n};\r\n\r\nRegistry.prototype.getPackages = function() {\r\n  return this.packages;\r\n};\r\n\r\n\r\nRegistry.prototype.registerPackage = function(pkg) {\r\n\r\n  // copy package\r\n  pkg = assign({}, pkg);\r\n\r\n  var pkgMap = this.packageMap;\r\n\r\n  ensureAvailable(pkgMap, pkg, 'prefix');\r\n  ensureAvailable(pkgMap, pkg, 'uri');\r\n\r\n  // register types\r\n  forEach(pkg.types, bind(function(descriptor) {\r\n    this.registerType(descriptor, pkg);\r\n  }, this));\r\n\r\n  pkgMap[pkg.uri] = pkgMap[pkg.prefix] = pkg;\r\n  this.packages.push(pkg);\r\n};\r\n\r\n\r\n/**\r\n * Register a type from a specific package with us\r\n */\r\nRegistry.prototype.registerType = function(type, pkg) {\r\n\r\n  type = assign({}, type, {\r\n    superClass: (type.superClass || []).slice(),\r\n    extends: (type.extends || []).slice(),\r\n    properties: (type.properties || []).slice(),\r\n    meta: assign(({}, type.meta || {}))\r\n  });\r\n\r\n  var ns = parseNameNs(type.name, pkg.prefix),\r\n      name = ns.name,\r\n      propertiesByName = {};\r\n\r\n  // parse properties\r\n  forEach(type.properties, bind(function(p) {\r\n\r\n    // namespace property names\r\n    var propertyNs = parseNameNs(p.name, ns.prefix),\r\n        propertyName = propertyNs.name;\r\n\r\n    // namespace property types\r\n    if (!isBuiltInType(p.type)) {\r\n      p.type = parseNameNs(p.type, propertyNs.prefix).name;\r\n    }\r\n\r\n    assign(p, {\r\n      ns: propertyNs,\r\n      name: propertyName\r\n    });\r\n\r\n    propertiesByName[propertyName] = p;\r\n  }, this));\r\n\r\n  // update ns + name\r\n  assign(type, {\r\n    ns: ns,\r\n    name: name,\r\n    propertiesByName: propertiesByName\r\n  });\r\n\r\n  forEach(type.extends, bind(function(extendsName) {\r\n    var extended = this.typeMap[extendsName];\r\n\r\n    extended.traits = extended.traits || [];\r\n    extended.traits.push(name);\r\n  }, this));\r\n\r\n  // link to package\r\n  this.definePackage(type, pkg);\r\n\r\n  // register\r\n  this.typeMap[name] = type;\r\n};\r\n\r\n\r\n/**\r\n * Traverse the type hierarchy from bottom to top,\r\n * calling iterator with (type, inherited) for all elements in\r\n * the inheritance chain.\r\n *\r\n * @param {Object} nsName\r\n * @param {Function} iterator\r\n * @param {Boolean} [trait=false]\r\n */\r\nRegistry.prototype.mapTypes = function(nsName, iterator, trait) {\r\n\r\n  var type = isBuiltInType(nsName.name) ? { name: nsName.name } : this.typeMap[nsName.name];\r\n\r\n  var self = this;\r\n\r\n  /**\r\n   * Traverse the selected trait.\r\n   *\r\n   * @param {String} cls\r\n   */\r\n  function traverseTrait(cls) {\r\n    return traverseSuper(cls, true);\r\n  }\r\n\r\n  /**\r\n   * Traverse the selected super type or trait\r\n   *\r\n   * @param {String} cls\r\n   * @param {Boolean} [trait=false]\r\n   */\r\n  function traverseSuper(cls, trait) {\r\n    var parentNs = parseNameNs(cls, isBuiltInType(cls) ? '' : nsName.prefix);\r\n    self.mapTypes(parentNs, iterator, trait);\r\n  }\r\n\r\n  if (!type) {\r\n    throw new Error('unknown type <' + nsName.name + '>');\r\n  }\r\n\r\n  forEach(type.superClass, trait ? traverseTrait : traverseSuper);\r\n\r\n  // call iterator with (type, inherited=!trait)\r\n  iterator(type, !trait);\r\n\r\n  forEach(type.traits, traverseTrait);\r\n};\r\n\r\n\r\n/**\r\n * Returns the effective descriptor for a type.\r\n *\r\n * @param  {String} type the namespaced name (ns:localName) of the type\r\n *\r\n * @return {Descriptor} the resulting effective descriptor\r\n */\r\nRegistry.prototype.getEffectiveDescriptor = function(name) {\r\n\r\n  var nsName = parseNameNs(name);\r\n\r\n  var builder = new DescriptorBuilder(nsName);\r\n\r\n  this.mapTypes(nsName, function(type, inherited) {\r\n    builder.addTrait(type, inherited);\r\n  });\r\n\r\n  var descriptor = builder.build();\r\n\r\n  // define package link\r\n  this.definePackage(descriptor, descriptor.allTypes[descriptor.allTypes.length - 1].$pkg);\r\n\r\n  return descriptor;\r\n};\r\n\r\n\r\nRegistry.prototype.definePackage = function(target, pkg) {\r\n  this.properties.define(target, '$pkg', { value: pkg });\r\n};\r\n\r\n\r\n\r\n///////// helpers ////////////////////////////\r\n\r\nfunction ensureAvailable(packageMap, pkg, identifierKey) {\r\n\r\n  var value = pkg[identifierKey];\r\n\r\n  if (value in packageMap) {\r\n    throw new Error('package with ' + identifierKey + ' <' + value + '> already defined');\r\n  }\r\n}\r\n","/**\r\n * Built-in moddle types\r\n */\r\nvar BUILTINS = {\r\n  String: true,\r\n  Boolean: true,\r\n  Integer: true,\r\n  Real: true,\r\n  Element: true\r\n};\r\n\r\n/**\r\n * Converters for built in types from string representations\r\n */\r\nvar TYPE_CONVERTERS = {\r\n  String: function(s) { return s; },\r\n  Boolean: function(s) { return s === 'true'; },\r\n  Integer: function(s) { return parseInt(s, 10); },\r\n  Real: function(s) { return parseFloat(s, 10); }\r\n};\r\n\r\n/**\r\n * Convert a type to its real representation\r\n */\r\nexport function coerceType(type, value) {\r\n\r\n  var converter = TYPE_CONVERTERS[type];\r\n\r\n  if (converter) {\r\n    return converter(value);\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Return whether the given type is built-in\r\n */\r\nexport function isBuiltIn(type) {\r\n  return !!BUILTINS[type];\r\n}\r\n\r\n/**\r\n * Return whether the given type is simple\r\n */\r\nexport function isSimple(type) {\r\n  return !!TYPE_CONVERTERS[type];\r\n}","/*\r\nobject-assign\r\n(c) Sindre Sorhus\r\n@license MIT\r\n*/\r\n\r\n'use strict';\r\n/* eslint-disable no-unused-vars */\r\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\r\n\r\nfunction toObject(val) {\r\n\tif (val === null || val === undefined) {\r\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\r\n\t}\r\n\r\n\treturn Object(val);\r\n}\r\n\r\nfunction shouldUseNative() {\r\n\ttry {\r\n\t\tif (!Object.assign) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Detect buggy property enumeration order in older V8 versions.\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\r\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\r\n\t\ttest1[5] = 'de';\r\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\r\n\t\tvar test2 = {};\r\n\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\r\n\t\t}\r\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\r\n\t\t\treturn test2[n];\r\n\t\t});\r\n\t\tif (order2.join('') !== '0123456789') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\r\n\t\tvar test3 = {};\r\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\r\n\t\t\ttest3[letter] = letter;\r\n\t\t});\r\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\r\n\t\t\t\t'abcdefghijklmnopqrst') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\t// We don't expect any of the above to throw, but better to be safe.\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\r\n\tvar from;\r\n\tvar to = toObject(target);\r\n\tvar symbols;\r\n\r\n\tfor (var s = 1; s < arguments.length; s++) {\r\n\t\tfrom = Object(arguments[s]);\r\n\r\n\t\tfor (var key in from) {\r\n\t\t\tif (hasOwnProperty.call(from, key)) {\r\n\t\t\t\tto[key] = from[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (getOwnPropertySymbols) {\r\n\t\t\tsymbols = getOwnPropertySymbols(from);\r\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\r\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\r\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn to;\r\n};\r\n","module.exports = require('./lib/refs');\r\n\r\nmodule.exports.Collection = require('./lib/collection');","'use strict';\r\n\r\n/**\r\n * An empty collection stub. Use {@link RefsCollection.extend} to extend a\r\n * collection with ref semantics.\r\n *\r\n * @class RefsCollection\r\n */\r\n\r\n/**\r\n * Extends a collection with {@link Refs} aware methods\r\n *\r\n * @memberof RefsCollection\r\n * @static\r\n *\r\n * @param  {Array<Object>} collection\r\n * @param  {Refs} refs instance\r\n * @param  {Object} property represented by the collection\r\n * @param  {Object} target object the collection is attached to\r\n *\r\n * @return {RefsCollection<Object>} the extended array\r\n */\r\nfunction extend(collection, refs, property, target) {\r\n\r\n  var inverseProperty = property.inverse;\r\n\r\n  /**\r\n   * Removes the given element from the array and returns it.\r\n   *\r\n   * @method RefsCollection#remove\r\n   *\r\n   * @param {Object} element the element to remove\r\n   */\r\n  Object.defineProperty(collection, 'remove', {\r\n    value: function(element) {\r\n      var idx = this.indexOf(element);\r\n      if (idx !== -1) {\r\n        this.splice(idx, 1);\r\n\r\n        // unset inverse\r\n        refs.unset(element, inverseProperty, target);\r\n      }\r\n\r\n      return element;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Returns true if the collection contains the given element\r\n   *\r\n   * @method RefsCollection#contains\r\n   *\r\n   * @param {Object} element the element to check for\r\n   */\r\n  Object.defineProperty(collection, 'contains', {\r\n    value: function(element) {\r\n      return this.indexOf(element) !== -1;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Adds an element to the array, unless it exists already (set semantics).\r\n   *\r\n   * @method RefsCollection#add\r\n   *\r\n   * @param {Object} element the element to add\r\n   * @param {Number} optional index to add element to\r\n   *                 (possibly moving other elements around)\r\n   */\r\n  Object.defineProperty(collection, 'add', {\r\n    value: function(element, idx) {\r\n\r\n      var currentIdx = this.indexOf(element);\r\n\r\n      if (typeof idx === 'undefined') {\r\n\r\n        if (currentIdx !== -1) {\r\n          // element already in collection (!)\r\n          return;\r\n        }\r\n\r\n        // add to end of array, as no idx is specified\r\n        idx = this.length;\r\n      }\r\n\r\n      // handle already in collection\r\n      if (currentIdx !== -1) {\r\n\r\n        // remove element from currentIdx\r\n        this.splice(currentIdx, 1);\r\n      }\r\n\r\n      // add element at idx\r\n      this.splice(idx, 0, element);\r\n\r\n      if (currentIdx === -1) {\r\n        // set inverse, unless element was\r\n        // in collection already\r\n        refs.set(element, inverseProperty, target);\r\n      }\r\n    }\r\n  });\r\n\r\n  // a simple marker, identifying this element\r\n  // as being a refs collection\r\n  Object.defineProperty(collection, '__refs_collection', {\r\n    value: true\r\n  });\r\n\r\n  return collection;\r\n}\r\n\r\n\r\nfunction isExtended(collection) {\r\n  return collection.__refs_collection === true;\r\n}\r\n\r\nmodule.exports.extend = extend;\r\n\r\nmodule.exports.isExtended = isExtended;","'use strict';\r\n\r\nvar Collection = require('./collection');\r\n\r\nfunction hasOwnProperty(e, property) {\r\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\r\n}\r\n\r\nfunction defineCollectionProperty(ref, property, target) {\r\n\r\n  var collection = Collection.extend(target[property.name] || [], ref, property, target);\r\n\r\n  Object.defineProperty(target, property.name, {\r\n    enumerable: property.enumerable,\r\n    value: collection\r\n  });\r\n\r\n  if (collection.length) {\r\n\r\n    collection.forEach(function(o) {\r\n      ref.set(o, property.inverse, target);\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction defineProperty(ref, property, target) {\r\n\r\n  var inverseProperty = property.inverse;\r\n\r\n  var _value = target[property.name];\r\n\r\n  Object.defineProperty(target, property.name, {\r\n    configurable: property.configurable,\r\n    enumerable: property.enumerable,\r\n\r\n    get: function() {\r\n      return _value;\r\n    },\r\n\r\n    set: function(value) {\r\n\r\n      // return if we already performed all changes\r\n      if (value === _value) {\r\n        return;\r\n      }\r\n\r\n      var old = _value;\r\n\r\n      // temporary set null\r\n      _value = null;\r\n\r\n      if (old) {\r\n        ref.unset(old, inverseProperty, target);\r\n      }\r\n\r\n      // set new value\r\n      _value = value;\r\n\r\n      // set inverse value\r\n      ref.set(_value, inverseProperty, target);\r\n    }\r\n  });\r\n\r\n}\r\n\r\n/**\r\n * Creates a new references object defining two inversly related\r\n * attribute descriptors a and b.\r\n *\r\n * <p>\r\n *   When bound to an object using {@link Refs#bind} the references\r\n *   get activated and ensure that add and remove operations are applied\r\n *   reversely, too.\r\n * </p>\r\n *\r\n * <p>\r\n *   For attributes represented as collections {@link Refs} provides the\r\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\r\n *   that must be used to properly hook into the inverse change mechanism.\r\n * </p>\r\n *\r\n * @class Refs\r\n *\r\n * @classdesc A bi-directional reference between two attributes.\r\n *\r\n * @param {Refs.AttributeDescriptor} a property descriptor\r\n * @param {Refs.AttributeDescriptor} b property descriptor\r\n *\r\n * @example\r\n *\r\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\r\n *\r\n * var car = { name: 'toyota' };\r\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\r\n *\r\n * refs.bind(car, 'wheels');\r\n *\r\n * car.wheels // []\r\n * car.wheels.add(wheels[0]);\r\n * car.wheels.add(wheels[1]);\r\n *\r\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\r\n *\r\n * wheels[0].car // { name: 'toyota' };\r\n * car.wheels.remove(wheels[0]);\r\n *\r\n * wheels[0].car // undefined\r\n */\r\nfunction Refs(a, b) {\r\n\r\n  if (!(this instanceof Refs)) {\r\n    return new Refs(a, b);\r\n  }\r\n\r\n  // link\r\n  a.inverse = b;\r\n  b.inverse = a;\r\n\r\n  this.props = {};\r\n  this.props[a.name] = a;\r\n  this.props[b.name] = b;\r\n}\r\n\r\n/**\r\n * Binds one side of a bi-directional reference to a\r\n * target object.\r\n *\r\n * @memberOf Refs\r\n *\r\n * @param  {Object} target\r\n * @param  {String} property\r\n */\r\nRefs.prototype.bind = function(target, property) {\r\n  if (typeof property === 'string') {\r\n    if (!this.props[property]) {\r\n      throw new Error('no property <' + property + '> in ref');\r\n    }\r\n    property = this.props[property];\r\n  }\r\n\r\n  if (property.collection) {\r\n    defineCollectionProperty(this, property, target);\r\n  } else {\r\n    defineProperty(this, property, target);\r\n  }\r\n};\r\n\r\nRefs.prototype.ensureRefsCollection = function(target, property) {\r\n\r\n  var collection = target[property.name];\r\n\r\n  if (!Collection.isExtended(collection)) {\r\n    defineCollectionProperty(this, property, target);\r\n  }\r\n\r\n  return collection;\r\n};\r\n\r\nRefs.prototype.ensureBound = function(target, property) {\r\n  if (!hasOwnProperty(target, property)) {\r\n    this.bind(target, property);\r\n  }\r\n};\r\n\r\nRefs.prototype.unset = function(target, property, value) {\r\n\r\n  if (target) {\r\n    this.ensureBound(target, property);\r\n\r\n    if (property.collection) {\r\n      this.ensureRefsCollection(target, property).remove(value);\r\n    } else {\r\n      target[property.name] = undefined;\r\n    }\r\n  }\r\n};\r\n\r\nRefs.prototype.set = function(target, property, value) {\r\n\r\n  if (target) {\r\n    this.ensureBound(target, property);\r\n\r\n    if (property.collection) {\r\n      this.ensureRefsCollection(target, property).add(value);\r\n    } else {\r\n      target[property.name] = value;\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = Refs;\r\n\r\n\r\n/**\r\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\r\n *\r\n * @typedef {Object} Refs.AttributeDescriptor\r\n * @property {String} name\r\n * @property {boolean} [collection=false]\r\n * @property {boolean} [enumerable=false]\r\n */","'use strict';\r\n\r\n/**\r\n * This file contains portions that got extraced from Snap.svg (licensed Apache-2.0).\r\n *\r\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\r\n */\r\n\r\n/* eslint no-fallthrough: \"off\" */\r\n\r\nvar has = 'hasOwnProperty',\r\n    p2s = /,?([a-z]),?/gi,\r\n    toFloat = parseFloat,\r\n    math = Math,\r\n    PI = math.PI,\r\n    mmin = math.min,\r\n    mmax = math.max,\r\n    pow = math.pow,\r\n    abs = math.abs,\r\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\r\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig;\r\n\r\nfunction is(o, type) {\r\n  type = String.prototype.toLowerCase.call(type);\r\n\r\n  if (type == 'finite') {\r\n    return isFinite(o);\r\n  }\r\n\r\n  if (type == 'array' && (o instanceof Array || Array.isArray && Array.isArray(o))) {\r\n    return true;\r\n  }\r\n\r\n  return (type == 'null' && o === null) ||\r\n         (type == typeof o && o !== null) ||\r\n         (type == 'object' && o === Object(o)) ||\r\n         Object.prototype.toString.call(o).slice(8, -1).toLowerCase() == type;\r\n}\r\n\r\nfunction clone(obj) {\r\n\r\n  if (typeof obj == 'function' || Object(obj) !== obj) {\r\n    return obj;\r\n  }\r\n\r\n  var res = new obj.constructor;\r\n\r\n  for (var key in obj) if (obj[has](key)) {\r\n    res[key] = clone(obj[key]);\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction repush(array, item) {\r\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n    return array.push(array.splice(i, 1)[0]);\r\n  }\r\n}\r\n\r\nfunction cacher(f, scope, postprocessor) {\r\n\r\n  function newf() {\r\n\r\n    var arg = Array.prototype.slice.call(arguments, 0),\r\n        args = arg.join('\\u2400'),\r\n        cache = newf.cache = newf.cache || {},\r\n        count = newf.count = newf.count || [];\r\n\r\n    if (cache[has](args)) {\r\n      repush(count, args);\r\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n    }\r\n\r\n    count.length >= 1e3 && delete cache[count.shift()];\r\n    count.push(args);\r\n    cache[args] = f.apply(scope, arg);\r\n\r\n    return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n  }\r\n  return newf;\r\n}\r\n\r\nfunction parsePathString(pathString) {\r\n\r\n  if (!pathString) {\r\n    return null;\r\n  }\r\n\r\n  var pth = paths(pathString);\r\n\r\n  if (pth.arr) {\r\n    return clone(pth.arr);\r\n  }\r\n\r\n  var paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },\r\n      data = [];\r\n\r\n  if (is(pathString, 'array') && is(pathString[0], 'array')) { // rough assumption\r\n    data = clone(pathString);\r\n  }\r\n\r\n  if (!data.length) {\r\n\r\n    String(pathString).replace(pathCommand, function(a, b, c) {\r\n      var params = [],\r\n          name = b.toLowerCase();\r\n\r\n      c.replace(pathValues, function(a, b) {\r\n        b && params.push(+b);\r\n      });\r\n\r\n      if (name == 'm' && params.length > 2) {\r\n        data.push([b].concat(params.splice(0, 2)));\r\n        name = 'l';\r\n        b = b == 'm' ? 'l' : 'L';\r\n      }\r\n\r\n      if (name == 'o' && params.length == 1) {\r\n        data.push([b, params[0]]);\r\n      }\r\n\r\n      if (name == 'r') {\r\n        data.push([b].concat(params));\r\n      } else while (params.length >= paramCounts[name]) {\r\n        data.push([b].concat(params.splice(0, paramCounts[name])));\r\n        if (!paramCounts[name]) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  data.toString = paths.toString;\r\n  pth.arr = clone(data);\r\n\r\n  return data;\r\n}\r\n\r\nfunction paths(ps) {\r\n  var p = paths.ps = paths.ps || {};\r\n\r\n  if (p[ps]) {\r\n    p[ps].sleep = 100;\r\n  } else {\r\n    p[ps] = {\r\n      sleep: 100\r\n    };\r\n  }\r\n\r\n  setTimeout(function() {\r\n    for (var key in p) if (p[has](key) && key != ps) {\r\n      p[key].sleep--;\r\n      !p[key].sleep && delete p[key];\r\n    }\r\n  });\r\n\r\n  return p[ps];\r\n}\r\n\r\nfunction box(x, y, width, height) {\r\n  if (x == null) {\r\n    x = y = width = height = 0;\r\n  }\r\n\r\n  if (y == null) {\r\n    y = x.y;\r\n    width = x.width;\r\n    height = x.height;\r\n    x = x.x;\r\n  }\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    width: width,\r\n    w: width,\r\n    height: height,\r\n    h: height,\r\n    x2: x + width,\r\n    y2: y + height,\r\n    cx: x + width / 2,\r\n    cy: y + height / 2,\r\n    r1: math.min(width, height) / 2,\r\n    r2: math.max(width, height) / 2,\r\n    r0: math.sqrt(width * width + height * height) / 2,\r\n    path: rectPath(x, y, width, height),\r\n    vb: [x, y, width, height].join(' ')\r\n  };\r\n}\r\n\r\nfunction pathToString() {\r\n  return this.join(',').replace(p2s, '$1');\r\n}\r\n\r\nfunction pathClone(pathArray) {\r\n  var res = clone(pathArray);\r\n  res.toString = pathToString;\r\n  return res;\r\n}\r\n\r\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n  var t1 = 1 - t,\r\n      t13 = pow(t1, 3),\r\n      t12 = pow(t1, 2),\r\n      t2 = t * t,\r\n      t3 = t2 * t,\r\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n      mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n      my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n      nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n      ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n      ax = t1 * p1x + t * c1x,\r\n      ay = t1 * p1y + t * c1y,\r\n      cx = t1 * c2x + t * p2x,\r\n      cy = t1 * c2y + t * p2y,\r\n      alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    m: { x: mx, y: my },\r\n    n: { x: nx, y: ny },\r\n    start: { x: ax, y: ay },\r\n    end: { x: cx, y: cy },\r\n    alpha: alpha\r\n  };\r\n}\r\n\r\nfunction bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n\r\n  if (!is(p1x, 'array')) {\r\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n  }\r\n\r\n  var bbox = curveBBox.apply(null, p1x);\r\n\r\n  return box(\r\n    bbox.min.x,\r\n    bbox.min.y,\r\n    bbox.max.x - bbox.min.x,\r\n    bbox.max.y - bbox.min.y\r\n  );\r\n}\r\n\r\nfunction isPointInsideBBox(bbox, x, y) {\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n}\r\n\r\nfunction isBBoxIntersect(bbox1, bbox2) {\r\n  bbox1 = box(bbox1);\r\n  bbox2 = box(bbox2);\r\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\r\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\r\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\r\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\r\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\r\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\r\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\r\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\r\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\r\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\r\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n}\r\n\r\nfunction base3(t, p1, p2, p3, p4) {\r\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n  return t * t2 - 3 * p1 + 3 * p2;\r\n}\r\n\r\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n\r\n  if (z == null) {\r\n    z = 1;\r\n  }\r\n\r\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n\r\n  var z2 = z / 2,\r\n      n = 12,\r\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\r\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n      sum = 0;\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var ct = z2 * Tvalues[i] + z2,\r\n        xbase = base3(ct, x1, x2, x3, x4),\r\n        ybase = base3(ct, y1, y2, y3, y4),\r\n        comb = xbase * xbase + ybase * ybase;\r\n\r\n    sum += Cvalues[i] * math.sqrt(comb);\r\n  }\r\n\r\n  return z2 * sum;\r\n}\r\n\r\n\r\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n\r\n  if (\r\n    mmax(x1, x2) < mmin(x3, x4) ||\r\n      mmin(x1, x2) > mmax(x3, x4) ||\r\n      mmax(y1, y2) < mmin(y3, y4) ||\r\n      mmin(y1, y2) > mmax(y3, y4)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n  if (!denominator) {\r\n    return;\r\n  }\r\n\r\n  var px = nx / denominator,\r\n      py = ny / denominator,\r\n      px2 = +px.toFixed(2),\r\n      py2 = +py.toFixed(2);\r\n\r\n  if (\r\n    px2 < +mmin(x1, x2).toFixed(2) ||\r\n      px2 > +mmax(x1, x2).toFixed(2) ||\r\n      px2 < +mmin(x3, x4).toFixed(2) ||\r\n      px2 > +mmax(x3, x4).toFixed(2) ||\r\n      py2 < +mmin(y1, y2).toFixed(2) ||\r\n      py2 > +mmax(y1, y2).toFixed(2) ||\r\n      py2 < +mmin(y3, y4).toFixed(2) ||\r\n      py2 > +mmax(y3, y4).toFixed(2)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return { x: px, y: py };\r\n}\r\n\r\nfunction findBezierIntersections(bez1, bez2, justCount) {\r\n  var bbox1 = bezierBBox(bez1),\r\n      bbox2 = bezierBBox(bez2);\r\n\r\n  if (!isBBoxIntersect(bbox1, bbox2)) {\r\n    return justCount ? 0 : [];\r\n  }\r\n\r\n  var l1 = bezlen.apply(0, bez1),\r\n      l2 = bezlen.apply(0, bez2),\r\n      n1 = ~~(l1 / 5),\r\n      n2 = ~~(l2 / 5),\r\n      dots1 = [],\r\n      dots2 = [],\r\n      xy = {},\r\n      res = justCount ? 0 : [];\r\n\r\n  for (var i = 0; i < n1 + 1; i++) {\r\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\r\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\r\n  }\r\n\r\n  for (i = 0; i < n2 + 1; i++) {\r\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\r\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\r\n  }\r\n\r\n  for (i = 0; i < n1; i++) {\r\n\r\n    for (var j = 0; j < n2; j++) {\r\n      var di = dots1[i],\r\n          di1 = dots1[i + 1],\r\n          dj = dots2[j],\r\n          dj1 = dots2[j + 1],\r\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\r\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\r\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n\r\n      if (is) {\r\n\r\n        if (xy[is.x.toFixed(0)] == is.y.toFixed(0)) {\r\n          continue;\r\n        }\r\n\r\n        xy[is.x.toFixed(0)] = is.y.toFixed(0);\r\n\r\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n\r\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\r\n\r\n          if (justCount) {\r\n            res++;\r\n          } else {\r\n            res.push({\r\n              x: is.x,\r\n              y: is.y,\r\n              t1: t1,\r\n              t2: t2\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n\r\n/**\r\n * Find or counts the intersections between two SVG paths.\r\n *\r\n * Returns a number in counting mode and a list of intersections otherwise.\r\n *\r\n * A single intersection entry contains the intersection coordinates (x, y)\r\n * as well as additional information regarding the intersecting segments\r\n * on each path (segment1, segment2) and the relative location of the\r\n * intersection on these segments (t1, t2).\r\n *\r\n * The path may be an SVG path string or a list of path components\r\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\r\n *\r\n * @example\r\n *\r\n * var intersections = findPathIntersections(\r\n *   'M0,0L100,100',\r\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\r\n * );\r\n *\r\n * // intersections = [\r\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\r\n * //\r\n *\r\n * @param {String|Array<PathDef>} path1\r\n * @param {String|Array<PathDef>} path2\r\n * @param {Boolean} [justCount=false]\r\n *\r\n * @return {Array<Intersection>|Number}\r\n */\r\nfunction findPathIntersections(path1, path2, justCount) {\r\n  path1 = pathToCurve(path1);\r\n  path2 = pathToCurve(path2);\r\n\r\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n      res = justCount ? 0 : [];\r\n\r\n  for (var i = 0, ii = path1.length; i < ii; i++) {\r\n    var pi = path1[i];\r\n\r\n    if (pi[0] == 'M') {\r\n      x1 = x1m = pi[1];\r\n      y1 = y1m = pi[2];\r\n    } else {\r\n\r\n      if (pi[0] == 'C') {\r\n        bez1 = [x1, y1].concat(pi.slice(1));\r\n        x1 = bez1[6];\r\n        y1 = bez1[7];\r\n      } else {\r\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n        x1 = x1m;\r\n        y1 = y1m;\r\n      }\r\n\r\n      for (var j = 0, jj = path2.length; j < jj; j++) {\r\n        var pj = path2[j];\r\n\r\n        if (pj[0] == 'M') {\r\n          x2 = x2m = pj[1];\r\n          y2 = y2m = pj[2];\r\n        } else {\r\n\r\n          if (pj[0] == 'C') {\r\n            bez2 = [x2, y2].concat(pj.slice(1));\r\n            x2 = bez2[6];\r\n            y2 = bez2[7];\r\n          } else {\r\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n            x2 = x2m;\r\n            y2 = y2m;\r\n          }\r\n\r\n          var intr = findBezierIntersections(bez1, bez2, justCount);\r\n\r\n          if (justCount) {\r\n            res += intr;\r\n          } else {\r\n\r\n            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n              intr[k].segment1 = i;\r\n              intr[k].segment2 = j;\r\n              intr[k].bez1 = bez1;\r\n              intr[k].bez2 = bez2;\r\n            }\r\n\r\n            res = res.concat(intr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n\r\nfunction rectPath(x, y, w, h, r) {\r\n  if (r) {\r\n    return [\r\n      ['M', +x + (+r), y],\r\n      ['l', w - r * 2, 0],\r\n      ['a', r, r, 0, 0, 1, r, r],\r\n      ['l', 0, h - r * 2],\r\n      ['a', r, r, 0, 0, 1, -r, r],\r\n      ['l', r * 2 - w, 0],\r\n      ['a', r, r, 0, 0, 1, -r, -r],\r\n      ['l', 0, r * 2 - h],\r\n      ['a', r, r, 0, 0, 1, r, -r],\r\n      ['z']\r\n    ];\r\n  }\r\n\r\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\r\n  res.toString = pathToString;\r\n\r\n  return res;\r\n}\r\n\r\nfunction ellipsePath(x, y, rx, ry, a) {\r\n  if (a == null && ry == null) {\r\n    ry = rx;\r\n  }\r\n\r\n  x = +x;\r\n  y = +y;\r\n  rx = +rx;\r\n  ry = +ry;\r\n\r\n  if (a != null) {\r\n    var rad = Math.PI / 180,\r\n        x1 = x + rx * Math.cos(-ry * rad),\r\n        x2 = x + rx * Math.cos(-a * rad),\r\n        y1 = y + rx * Math.sin(-ry * rad),\r\n        y2 = y + rx * Math.sin(-a * rad),\r\n        res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\r\n  } else {\r\n    res = [\r\n      ['M', x, y],\r\n      ['m', 0, -ry],\r\n      ['a', rx, ry, 0, 1, 1, 0, 2 * ry],\r\n      ['a', rx, ry, 0, 1, 1, 0, -2 * ry],\r\n      ['z']\r\n    ];\r\n  }\r\n\r\n  res.toString = pathToString;\r\n\r\n  return res;\r\n}\r\n\r\n\r\nfunction pathToAbsolute(pathArray) {\r\n  var pth = paths(pathArray);\r\n\r\n  if (pth.abs) {\r\n    return pathClone(pth.abs);\r\n  }\r\n\r\n  if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) { // rough assumption\r\n    pathArray = parsePathString(pathArray);\r\n  }\r\n\r\n  if (!pathArray || !pathArray.length) {\r\n    return [['M', 0, 0]];\r\n  }\r\n\r\n  var res = [],\r\n      x = 0,\r\n      y = 0,\r\n      mx = 0,\r\n      my = 0,\r\n      start = 0,\r\n      pa0;\r\n\r\n  if (pathArray[0][0] == 'M') {\r\n    x = +pathArray[0][1];\r\n    y = +pathArray[0][2];\r\n    mx = x;\r\n    my = y;\r\n    start++;\r\n    res[0] = ['M', x, y];\r\n  }\r\n\r\n  var crz = pathArray.length == 3 &&\r\n      pathArray[0][0] == 'M' &&\r\n      pathArray[1][0].toUpperCase() == 'R' &&\r\n      pathArray[2][0].toUpperCase() == 'Z';\r\n\r\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n    res.push(r = []);\r\n    pa = pathArray[i];\r\n    pa0 = pa[0];\r\n\r\n    if (pa0 != pa0.toUpperCase()) {\r\n      r[0] = pa0.toUpperCase();\r\n\r\n      switch (r[0]) {\r\n      case 'A':\r\n        r[1] = pa[1];\r\n        r[2] = pa[2];\r\n        r[3] = pa[3];\r\n        r[4] = pa[4];\r\n        r[5] = pa[5];\r\n        r[6] = +pa[6] + x;\r\n        r[7] = +pa[7] + y;\r\n        break;\r\n      case 'V':\r\n        r[1] = +pa[1] + y;\r\n        break;\r\n      case 'H':\r\n        r[1] = +pa[1] + x;\r\n        break;\r\n      case 'R':\r\n        var dots = [x, y].concat(pa.slice(1));\r\n\r\n        for (var j = 2, jj = dots.length; j < jj; j++) {\r\n          dots[j] = +dots[j] + x;\r\n          dots[++j] = +dots[j] + y;\r\n        }\r\n\r\n        res.pop();\r\n        res = res.concat(catmulRomToBezier(dots, crz));\r\n        break;\r\n      case 'O':\r\n        res.pop();\r\n        dots = ellipsePath(x, y, pa[1], pa[2]);\r\n        dots.push(dots[0]);\r\n        res = res.concat(dots);\r\n        break;\r\n      case 'U':\r\n        res.pop();\r\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n        r = ['U'].concat(res[res.length - 1].slice(-2));\r\n        break;\r\n      case 'M':\r\n        mx = +pa[1] + x;\r\n        my = +pa[2] + y;\r\n      default:\r\n\r\n        for (j = 1, jj = pa.length; j < jj; j++) {\r\n          r[j] = +pa[j] + ((j % 2) ? x : y);\r\n        }\r\n      }\r\n    } else if (pa0 == 'R') {\r\n      dots = [x, y].concat(pa.slice(1));\r\n      res.pop();\r\n      res = res.concat(catmulRomToBezier(dots, crz));\r\n      r = ['R'].concat(pa.slice(-2));\r\n    } else if (pa0 == 'O') {\r\n      res.pop();\r\n      dots = ellipsePath(x, y, pa[1], pa[2]);\r\n      dots.push(dots[0]);\r\n      res = res.concat(dots);\r\n    } else if (pa0 == 'U') {\r\n      res.pop();\r\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n      r = ['U'].concat(res[res.length - 1].slice(-2));\r\n    } else {\r\n\r\n      for (var k = 0, kk = pa.length; k < kk; k++) {\r\n        r[k] = pa[k];\r\n      }\r\n    }\r\n    pa0 = pa0.toUpperCase();\r\n\r\n    if (pa0 != 'O') {\r\n      switch (r[0]) {\r\n      case 'Z':\r\n        x = +mx;\r\n        y = +my;\r\n        break;\r\n      case 'H':\r\n        x = r[1];\r\n        break;\r\n      case 'V':\r\n        y = r[1];\r\n        break;\r\n      case 'M':\r\n        mx = r[r.length - 2];\r\n        my = r[r.length - 1];\r\n      default:\r\n        x = r[r.length - 2];\r\n        y = r[r.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  res.toString = pathToString;\r\n  pth.abs = pathClone(res);\r\n\r\n  return res;\r\n}\r\n\r\nfunction lineToCurve(x1, y1, x2, y2) {\r\n  return [\r\n    x1, y1, x2,\r\n    y2, x2, y2\r\n  ];\r\n}\r\n\r\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\r\n  var _13 = 1 / 3,\r\n      _23 = 2 / 3;\r\n\r\n  return [\r\n    _13 * x1 + _23 * ax,\r\n    _13 * y1 + _23 * ay,\r\n    _13 * x2 + _23 * ax,\r\n    _13 * y2 + _23 * ay,\r\n    x2,\r\n    y2\r\n  ];\r\n}\r\n\r\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n\r\n  // for more information of where this math came from visit:\r\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n  var _120 = PI * 120 / 180,\r\n      rad = PI / 180 * (+angle || 0),\r\n      res = [],\r\n      xy,\r\n      rotate = cacher(function(x, y, rad) {\r\n        var X = x * math.cos(rad) - y * math.sin(rad),\r\n            Y = x * math.sin(rad) + y * math.cos(rad);\r\n\r\n        return { x: X, y: Y };\r\n      });\r\n\r\n  if (!recursive) {\r\n    xy = rotate(x1, y1, -rad);\r\n    x1 = xy.x;\r\n    y1 = xy.y;\r\n    xy = rotate(x2, y2, -rad);\r\n    x2 = xy.x;\r\n    y2 = xy.y;\r\n\r\n    var x = (x1 - x2) / 2,\r\n        y = (y1 - y2) / 2;\r\n\r\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n\r\n    if (h > 1) {\r\n      h = math.sqrt(h);\r\n      rx = h * rx;\r\n      ry = h * ry;\r\n    }\r\n\r\n    var rx2 = rx * rx,\r\n        ry2 = ry * ry,\r\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n        cx = k * rx * y / ry + (x1 + x2) / 2,\r\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n    f1 = x1 < cx ? PI - f1 : f1;\r\n    f2 = x2 < cx ? PI - f2 : f2;\r\n    f1 < 0 && (f1 = PI * 2 + f1);\r\n    f2 < 0 && (f2 = PI * 2 + f2);\r\n\r\n    if (sweep_flag && f1 > f2) {\r\n      f1 = f1 - PI * 2;\r\n    }\r\n    if (!sweep_flag && f2 > f1) {\r\n      f2 = f2 - PI * 2;\r\n    }\r\n  } else {\r\n    f1 = recursive[0];\r\n    f2 = recursive[1];\r\n    cx = recursive[2];\r\n    cy = recursive[3];\r\n  }\r\n\r\n  var df = f2 - f1;\r\n\r\n  if (abs(df) > _120) {\r\n    var f2old = f2,\r\n        x2old = x2,\r\n        y2old = y2;\r\n\r\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n    x2 = cx + rx * math.cos(f2);\r\n    y2 = cy + ry * math.sin(f2);\r\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n  }\r\n\r\n  df = f2 - f1;\r\n\r\n  var c1 = math.cos(f1),\r\n      s1 = math.sin(f1),\r\n      c2 = math.cos(f2),\r\n      s2 = math.sin(f2),\r\n      t = math.tan(df / 4),\r\n      hx = 4 / 3 * rx * t,\r\n      hy = 4 / 3 * ry * t,\r\n      m1 = [x1, y1],\r\n      m2 = [x1 + hx * s1, y1 - hy * c1],\r\n      m3 = [x2 + hx * s2, y2 - hy * c2],\r\n      m4 = [x2, y2];\r\n\r\n  m2[0] = 2 * m1[0] - m2[0];\r\n  m2[1] = 2 * m1[1] - m2[1];\r\n\r\n  if (recursive) {\r\n    return [m2, m3, m4].concat(res);\r\n  } else {\r\n    res = [m2, m3, m4].concat(res).join().split(',');\r\n    var newres = [];\r\n\r\n    for (var i = 0, ii = res.length; i < ii; i++) {\r\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n    }\r\n\r\n    return newres;\r\n  }\r\n}\r\n\r\n// http://schepers.cc/getting-to-the-point\r\nfunction catmulRomToBezier(crp, z) {\r\n  var d = [];\r\n\r\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n    var p = [\r\n      { x: +crp[i - 2], y: +crp[i - 1] },\r\n      { x: +crp[i], y: +crp[i + 1] },\r\n      { x: +crp[i + 2], y: +crp[i + 3] },\r\n      { x: +crp[i + 4], y: +crp[i + 5] }\r\n    ];\r\n\r\n    if (z) {\r\n\r\n      if (!i) {\r\n        p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\r\n      } else if (iLen - 4 == i) {\r\n        p[3] = { x: +crp[0], y: +crp[1] };\r\n      } else if (iLen - 2 == i) {\r\n        p[2] = { x: +crp[0], y: +crp[1] };\r\n        p[3] = { x: +crp[2], y: +crp[3] };\r\n      }\r\n\r\n    } else {\r\n\r\n      if (iLen - 4 == i) {\r\n        p[3] = p[2];\r\n      } else if (!i) {\r\n        p[0] = { x: +crp[i], y: +crp[i + 1] };\r\n      }\r\n\r\n    }\r\n\r\n    d.push(['C',\r\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n      (p[1].y + 6*p[2].y - p[3].y) / 6,\r\n      p[2].x,\r\n      p[2].y\r\n    ]);\r\n  }\r\n\r\n  return d;\r\n}\r\n\r\n// Returns bounding box of cubic bezier curve.\r\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\r\n// Original version: NISHIO Hirokazu\r\n// Modifications: https://github.com/timo22345\r\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n  var tvalues = [],\r\n      bounds = [[], []],\r\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n  for (var i = 0; i < 2; ++i) {\r\n\r\n    if (i == 0) {\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n    } else {\r\n      b = 6 * y0 - 12 * y1 + 6 * y2;\r\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n      c = 3 * y1 - 3 * y0;\r\n    }\r\n\r\n    if (abs(a) < 1e-12) {\r\n\r\n      if (abs(b) < 1e-12) {\r\n        continue;\r\n      }\r\n\r\n      t = -c / b;\r\n\r\n      if (0 < t && t < 1) {\r\n        tvalues.push(t);\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    b2ac = b * b - 4 * c * a;\r\n    sqrtb2ac = math.sqrt(b2ac);\r\n\r\n    if (b2ac < 0) {\r\n      continue;\r\n    }\r\n\r\n    t1 = (-b + sqrtb2ac) / (2 * a);\r\n\r\n    if (0 < t1 && t1 < 1) {\r\n      tvalues.push(t1);\r\n    }\r\n\r\n    t2 = (-b - sqrtb2ac) / (2 * a);\r\n\r\n    if (0 < t2 && t2 < 1) {\r\n      tvalues.push(t2);\r\n    }\r\n  }\r\n\r\n  var j = tvalues.length,\r\n      jlen = j,\r\n      mt;\r\n\r\n  while (j--) {\r\n    t = tvalues[j];\r\n    mt = 1 - t;\r\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n  }\r\n\r\n  bounds[0][jlen] = x0;\r\n  bounds[1][jlen] = y0;\r\n  bounds[0][jlen + 1] = x3;\r\n  bounds[1][jlen + 1] = y3;\r\n  bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n  return {\r\n    min: { x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1]) },\r\n    max: { x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1]) }\r\n  };\r\n}\r\n\r\nfunction pathToCurve(path, path2) {\r\n  var pth = !path2 && paths(path);\r\n\r\n  if (!path2 && pth.curve) {\r\n    return pathClone(pth.curve);\r\n  }\r\n\r\n  var p = pathToAbsolute(path),\r\n      p2 = path2 && pathToAbsolute(path2),\r\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n      attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n      processPath = function(path, d, pcom) {\r\n        var nx, ny;\r\n\r\n        if (!path) {\r\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n        }\r\n\r\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\r\n\r\n        switch (path[0]) {\r\n        case 'M':\r\n          d.X = path[1];\r\n          d.Y = path[2];\r\n          break;\r\n        case 'A':\r\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\r\n          break;\r\n        case 'S':\r\n          if (pcom == 'C' || pcom == 'S') {\r\n            // In 'S' case we have to take into account, if the previous command is C/S.\r\n            nx = d.x * 2 - d.bx;\r\n            // And reflect the previous\r\n            ny = d.y * 2 - d.by;\r\n            // command's control point relative to the current point.\r\n          }\r\n          else {\r\n            // or some else or nothing\r\n            nx = d.x;\r\n            ny = d.y;\r\n          }\r\n          path = ['C', nx, ny].concat(path.slice(1));\r\n          break;\r\n        case 'T':\r\n          if (pcom == 'Q' || pcom == 'T') {\r\n            // In 'T' case we have to take into account, if the previous command is Q/T.\r\n            d.qx = d.x * 2 - d.qx;\r\n            // And make a reflection similar\r\n            d.qy = d.y * 2 - d.qy;\r\n            // to case 'S'.\r\n          }\r\n          else {\r\n            // or something else or nothing\r\n            d.qx = d.x;\r\n            d.qy = d.y;\r\n          }\r\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n          break;\r\n        case 'Q':\r\n          d.qx = path[1];\r\n          d.qy = path[2];\r\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n          break;\r\n        case 'L':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\r\n          break;\r\n        case 'H':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\r\n          break;\r\n        case 'V':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\r\n          break;\r\n        case 'Z':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\r\n          break;\r\n        }\r\n\r\n        return path;\r\n      },\r\n\r\n      fixArc = function(pp, i) {\r\n\r\n        if (pp[i].length > 7) {\r\n          pp[i].shift();\r\n          var pi = pp[i];\r\n\r\n          while (pi.length) {\r\n            pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\r\n            p2 && (pcoms2[i] = 'A'); // the same as above\r\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\r\n          }\r\n\r\n          pp.splice(i, 1);\r\n          ii = mmax(p.length, p2 && p2.length || 0);\r\n        }\r\n      },\r\n\r\n      fixM = function(path1, path2, a1, a2, i) {\r\n\r\n        if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\r\n          path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n          a1.bx = 0;\r\n          a1.by = 0;\r\n          a1.x = path1[i][1];\r\n          a1.y = path1[i][2];\r\n          ii = mmax(p.length, p2 && p2.length || 0);\r\n        }\r\n      },\r\n\r\n      pcoms1 = [], // path commands of original path p\r\n      pcoms2 = [], // path commands of original path p2\r\n      pfirst = '', // temporary holder for original path command\r\n      pcom = ''; // holder for previous path command of original path\r\n\r\n  for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n    p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\r\n    {\r\n      pcoms1[i] = pfirst; // Save current path command\r\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\r\n    }\r\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n    if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\r\n    // which may produce multiple C:s\r\n    // so we have to make sure that C is also C in original path\r\n\r\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n    if (p2) { // the same procedures is done to p2\r\n      p2[i] && (pfirst = p2[i][0]);\r\n\r\n      if (pfirst != 'C') {\r\n        pcoms2[i] = pfirst;\r\n        i && (pcom = pcoms2[i - 1]);\r\n      }\r\n\r\n      p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n      if (pcoms2[i] != 'A' && pfirst == 'C') {\r\n        pcoms2[i] = 'C';\r\n      }\r\n\r\n      fixArc(p2, i);\r\n    }\r\n\r\n    fixM(p, p2, attrs, attrs2, i);\r\n    fixM(p2, p, attrs2, attrs, i);\r\n\r\n    var seg = p[i],\r\n        seg2 = p2 && p2[i],\r\n        seglen = seg.length,\r\n        seg2len = p2 && seg2.length;\r\n\r\n    attrs.x = seg[seglen - 2];\r\n    attrs.y = seg[seglen - 1];\r\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n    attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n    attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n    attrs2.x = p2 && seg2[seg2len - 2];\r\n    attrs2.y = p2 && seg2[seg2len - 1];\r\n  }\r\n\r\n  if (!p2) {\r\n    pth.curve = pathClone(p);\r\n  }\r\n\r\n  return p2 ? [p, p2] : p;\r\n}\r\n\r\nmodule.exports = findPathIntersections;","/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nvar printWarning = function() {};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\r\n  var loggedTypeFailures = {};\r\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\r\n\r\n  printWarning = function(text) {\r\n    var message = 'Warning: ' + text;\r\n    if (typeof console !== 'undefined') {\r\n      console.error(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n}\r\n\r\n/**\r\n * Assert that the values match with the type specs.\r\n * Error messages are memorized and will only be shown once.\r\n *\r\n * @param {object} typeSpecs Map of name to a ReactPropType\r\n * @param {object} values Runtime values that need to be type-checked\r\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\r\n * @param {string} componentName Name of the component for error messages.\r\n * @param {?Function} getStack Returns the component stack.\r\n * @private\r\n */\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error;\r\n        // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n            var err = Error(\r\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\r\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\r\n            );\r\n            err.name = 'Invariant Violation';\r\n            throw err;\r\n          }\r\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\r\n        } catch (ex) {\r\n          error = ex;\r\n        }\r\n        if (error && !(error instanceof Error)) {\r\n          printWarning(\r\n            (componentName || 'React class') + ': type specification of ' +\r\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\r\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\r\n            'You may have forgotten to pass an argument to the type checker ' +\r\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n            'shape all require an argument).'\r\n          );\r\n        }\r\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error.message] = true;\r\n\r\n          var stack = getStack ? getStack() : '';\r\n\r\n          printWarning(\r\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Resets warning cache when testing.\r\n *\r\n * @private\r\n */\r\ncheckPropTypes.resetWarningCache = function() {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    loggedTypeFailures = {};\r\n  }\r\n}\r\n\r\nmodule.exports = checkPropTypes;\r\n","/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\r\n\r\nmodule.exports = ReactPropTypesSecret;\r\n","/** @license React v16.8.4\r\n * react-dom.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n'use strict';\r\n\r\nvar React = require('react');\r\nvar _assign = require('object-assign');\r\nvar checkPropTypes = require('prop-types/checkPropTypes');\r\nvar scheduler = require('scheduler');\r\nvar tracing = require('scheduler/tracing');\r\n\r\n/**\r\n * Use invariant() to assert state which your program assumes to be true.\r\n *\r\n * Provide sprintf-style format (only %s is supported) and arguments\r\n * to provide information about what broke and what you were\r\n * expecting.\r\n *\r\n * The invariant message will be stripped in production, but the invariant\r\n * will remain to ensure logic does not differ in production.\r\n */\r\n\r\nvar validateFormat = function () {};\r\n\r\n{\r\n  validateFormat = function (format) {\r\n    if (format === undefined) {\r\n      throw new Error('invariant requires an error message argument');\r\n    }\r\n  };\r\n}\r\n\r\nfunction invariant(condition, format, a, b, c, d, e, f) {\r\n  validateFormat(format);\r\n\r\n  if (!condition) {\r\n    var error = void 0;\r\n    if (format === undefined) {\r\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\r\n    } else {\r\n      var args = [a, b, c, d, e, f];\r\n      var argIndex = 0;\r\n      error = new Error(format.replace(/%s/g, function () {\r\n        return args[argIndex++];\r\n      }));\r\n      error.name = 'Invariant Violation';\r\n    }\r\n\r\n    error.framesToPop = 1; // we don't care about invariant's own frame\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Relying on the `invariant()` implementation lets us\r\n// preserve the format and params in the www builds.\r\n\r\n!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;\r\n\r\nvar invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {\r\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\r\n  try {\r\n    func.apply(context, funcArgs);\r\n  } catch (error) {\r\n    this.onError(error);\r\n  }\r\n};\r\n\r\n{\r\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\r\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\r\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\r\n  // functions in invokeGuardedCallback, and the production version of\r\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\r\n  // like caught exceptions, and the DevTools won't pause unless the developer\r\n  // takes the extra step of enabling pause on caught exceptions. This is\r\n  // unintuitive, though, because even though React has caught the error, from\r\n  // the developer's perspective, the error is uncaught.\r\n  //\r\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\r\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\r\n  // DOM node, and call the user-provided callback from inside an event handler\r\n  // for that fake event. If the callback throws, the error is \"captured\" using\r\n  // a global event handler. But because the error happens in a different\r\n  // event loop context, it does not interrupt the normal program flow.\r\n  // Effectively, this gives us try-catch behavior without actually using\r\n  // try-catch. Neat!\r\n\r\n  // Check that the browser supports the APIs we need to implement our special\r\n  // DEV version of invokeGuardedCallback\r\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\r\n    var fakeNode = document.createElement('react');\r\n\r\n    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {\r\n      // If document doesn't exist we know for sure we will crash in this method\r\n      // when we call document.createEvent(). However this can cause confusing\r\n      // errors: https://github.com/facebookincubator/create-react-app/issues/3482\r\n      // So we preemptively throw with a better message instead.\r\n      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;\r\n      var evt = document.createEvent('Event');\r\n\r\n      // Keeps track of whether the user-provided callback threw an error. We\r\n      // set this to true at the beginning, then set it to false right after\r\n      // calling the function. If the function errors, `didError` will never be\r\n      // set to false. This strategy works even if the browser is flaky and\r\n      // fails to call our global error handler, because it doesn't rely on\r\n      // the error event at all.\r\n      var didError = true;\r\n\r\n      // Keeps track of the value of window.event so that we can reset it\r\n      // during the callback to let user code access window.event in the\r\n      // browsers that support it.\r\n      var windowEvent = window.event;\r\n\r\n      // Keeps track of the descriptor of window.event to restore it after event\r\n      // dispatching: https://github.com/facebook/react/issues/13688\r\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\r\n\r\n      // Create an event handler for our fake event. We will synchronously\r\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\r\n      // call the user-provided callback.\r\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\r\n      function callCallback() {\r\n        // We immediately remove the callback from event listeners so that\r\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\r\n        // nested call would trigger the fake event handlers of any call higher\r\n        // in the stack.\r\n        fakeNode.removeEventListener(evtType, callCallback, false);\r\n\r\n        // We check for window.hasOwnProperty('event') to prevent the\r\n        // window.event assignment in both IE <= 10 as they throw an error\r\n        // \"Member not found\" in strict mode, and in Firefox which does not\r\n        // support window.event.\r\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\r\n          window.event = windowEvent;\r\n        }\r\n\r\n        func.apply(context, funcArgs);\r\n        didError = false;\r\n      }\r\n\r\n      // Create a global error event handler. We use this to capture the value\r\n      // that was thrown. It's possible that this error handler will fire more\r\n      // than once; for example, if non-React code also calls `dispatchEvent`\r\n      // and a handler for that event throws. We should be resilient to most of\r\n      // those cases. Even if our error event handler fires more than once, the\r\n      // last error event is always used. If the callback actually does error,\r\n      // we know that the last error event is the correct one, because it's not\r\n      // possible for anything else to have happened in between our callback\r\n      // erroring and the code that follows the `dispatchEvent` call below. If\r\n      // the callback doesn't error, but the error event was fired, we know to\r\n      // ignore it because `didError` will be false, as described above.\r\n      var error = void 0;\r\n      // Use this to track whether the error event is ever called.\r\n      var didSetError = false;\r\n      var isCrossOriginError = false;\r\n\r\n      function handleWindowError(event) {\r\n        error = event.error;\r\n        didSetError = true;\r\n        if (error === null && event.colno === 0 && event.lineno === 0) {\r\n          isCrossOriginError = true;\r\n        }\r\n        if (event.defaultPrevented) {\r\n          // Some other error handler has prevented default.\r\n          // Browsers silence the error report if this happens.\r\n          // We'll remember this to later decide whether to log it or not.\r\n          if (error != null && typeof error === 'object') {\r\n            try {\r\n              error._suppressLogging = true;\r\n            } catch (inner) {\r\n              // Ignore.\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Create a fake event type.\r\n      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');\r\n\r\n      // Attach our event handlers\r\n      window.addEventListener('error', handleWindowError);\r\n      fakeNode.addEventListener(evtType, callCallback, false);\r\n\r\n      // Synchronously dispatch our fake event. If the user-provided function\r\n      // errors, it will trigger our global error handler.\r\n      evt.initEvent(evtType, false, false);\r\n      fakeNode.dispatchEvent(evt);\r\n\r\n      if (windowEventDescriptor) {\r\n        Object.defineProperty(window, 'event', windowEventDescriptor);\r\n      }\r\n\r\n      if (didError) {\r\n        if (!didSetError) {\r\n          // The callback errored, but the error event never fired.\r\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\r\n        } else if (isCrossOriginError) {\r\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');\r\n        }\r\n        this.onError(error);\r\n      }\r\n\r\n      // Remove our event listeners\r\n      window.removeEventListener('error', handleWindowError);\r\n    };\r\n\r\n    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;\r\n  }\r\n}\r\n\r\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\r\n\r\n// Used by Fiber to simulate a try-catch.\r\nvar hasError = false;\r\nvar caughtError = null;\r\n\r\n// Used by event system to capture/rethrow the first error.\r\nvar hasRethrowError = false;\r\nvar rethrowError = null;\r\n\r\nvar reporter = {\r\n  onError: function (error) {\r\n    hasError = true;\r\n    caughtError = error;\r\n  }\r\n};\r\n\r\n/**\r\n * Call a function while guarding against errors that happens within it.\r\n * Returns an error if it throws, otherwise null.\r\n *\r\n * In production, this is implemented using a try-catch. The reason we don't\r\n * use a try-catch directly is so that we can swap out a different\r\n * implementation in DEV mode.\r\n *\r\n * @param {String} name of the guard to use for logging or debugging\r\n * @param {Function} func The function to invoke\r\n * @param {*} context The context to use when calling the function\r\n * @param {...*} args Arguments for function\r\n */\r\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\r\n  hasError = false;\r\n  caughtError = null;\r\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\r\n}\r\n\r\n/**\r\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\r\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\r\n * TODO: See if caughtError and rethrowError can be unified.\r\n *\r\n * @param {String} name of the guard to use for logging or debugging\r\n * @param {Function} func The function to invoke\r\n * @param {*} context The context to use when calling the function\r\n * @param {...*} args Arguments for function\r\n */\r\nfunction invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\r\n  invokeGuardedCallback.apply(this, arguments);\r\n  if (hasError) {\r\n    var error = clearCaughtError();\r\n    if (!hasRethrowError) {\r\n      hasRethrowError = true;\r\n      rethrowError = error;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * During execution of guarded functions we will capture the first error which\r\n * we will rethrow to be handled by the top level error handler.\r\n */\r\nfunction rethrowCaughtError() {\r\n  if (hasRethrowError) {\r\n    var error = rethrowError;\r\n    hasRethrowError = false;\r\n    rethrowError = null;\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction hasCaughtError() {\r\n  return hasError;\r\n}\r\n\r\nfunction clearCaughtError() {\r\n  if (hasError) {\r\n    var error = caughtError;\r\n    hasError = false;\r\n    caughtError = null;\r\n    return error;\r\n  } else {\r\n    invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n}\r\n\r\n/**\r\n * Injectable ordering of event plugins.\r\n */\r\nvar eventPluginOrder = null;\r\n\r\n/**\r\n * Injectable mapping from names to event plugin modules.\r\n */\r\nvar namesToPlugins = {};\r\n\r\n/**\r\n * Recomputes the plugin list using the injected plugins and plugin ordering.\r\n *\r\n * @private\r\n */\r\nfunction recomputePluginOrdering() {\r\n  if (!eventPluginOrder) {\r\n    // Wait until an `eventPluginOrder` is injected.\r\n    return;\r\n  }\r\n  for (var pluginName in namesToPlugins) {\r\n    var pluginModule = namesToPlugins[pluginName];\r\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\r\n    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;\r\n    if (plugins[pluginIndex]) {\r\n      continue;\r\n    }\r\n    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;\r\n    plugins[pluginIndex] = pluginModule;\r\n    var publishedEvents = pluginModule.eventTypes;\r\n    for (var eventName in publishedEvents) {\r\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Publishes an event so that it can be dispatched by the supplied plugin.\r\n *\r\n * @param {object} dispatchConfig Dispatch configuration for the event.\r\n * @param {object} PluginModule Plugin publishing the event.\r\n * @return {boolean} True if the event was successfully published.\r\n * @private\r\n */\r\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\r\n  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;\r\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\r\n\r\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\r\n  if (phasedRegistrationNames) {\r\n    for (var phaseName in phasedRegistrationNames) {\r\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\r\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\r\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\r\n      }\r\n    }\r\n    return true;\r\n  } else if (dispatchConfig.registrationName) {\r\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Publishes a registration name that is used to identify dispatched events.\r\n *\r\n * @param {string} registrationName Registration name to add.\r\n * @param {object} PluginModule Plugin publishing the event.\r\n * @private\r\n */\r\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\r\n  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;\r\n  registrationNameModules[registrationName] = pluginModule;\r\n  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\r\n\r\n  {\r\n    var lowerCasedName = registrationName.toLowerCase();\r\n    possibleRegistrationNames[lowerCasedName] = registrationName;\r\n\r\n    if (registrationName === 'onDoubleClick') {\r\n      possibleRegistrationNames.ondblclick = registrationName;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Registers plugins so that they can extract and dispatch events.\r\n *\r\n * @see {EventPluginHub}\r\n */\r\n\r\n/**\r\n * Ordered list of injected plugins.\r\n */\r\nvar plugins = [];\r\n\r\n/**\r\n * Mapping from event name to dispatch config\r\n */\r\nvar eventNameDispatchConfigs = {};\r\n\r\n/**\r\n * Mapping from registration name to plugin module\r\n */\r\nvar registrationNameModules = {};\r\n\r\n/**\r\n * Mapping from registration name to event name\r\n */\r\nvar registrationNameDependencies = {};\r\n\r\n/**\r\n * Mapping from lowercase registration names to the properly cased version,\r\n * used to warn in the case of missing event handlers. Available\r\n * only in true.\r\n * @type {Object}\r\n */\r\nvar possibleRegistrationNames = {};\r\n// Trust the developer to only use possibleRegistrationNames in true\r\n\r\n/**\r\n * Injects an ordering of plugins (by plugin name). This allows the ordering\r\n * to be decoupled from injection of the actual plugins so that ordering is\r\n * always deterministic regardless of packaging, on-the-fly injection, etc.\r\n *\r\n * @param {array} InjectedEventPluginOrder\r\n * @internal\r\n * @see {EventPluginHub.injection.injectEventPluginOrder}\r\n */\r\nfunction injectEventPluginOrder(injectedEventPluginOrder) {\r\n  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;\r\n  // Clone the ordering so it cannot be dynamically mutated.\r\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\r\n  recomputePluginOrdering();\r\n}\r\n\r\n/**\r\n * Injects plugins to be used by `EventPluginHub`. The plugin names must be\r\n * in the ordering injected by `injectEventPluginOrder`.\r\n *\r\n * Plugins can be injected as part of page initialization or on-the-fly.\r\n *\r\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\r\n * @internal\r\n * @see {EventPluginHub.injection.injectEventPluginsByName}\r\n */\r\nfunction injectEventPluginsByName(injectedNamesToPlugins) {\r\n  var isOrderingDirty = false;\r\n  for (var pluginName in injectedNamesToPlugins) {\r\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\r\n      continue;\r\n    }\r\n    var pluginModule = injectedNamesToPlugins[pluginName];\r\n    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\r\n      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;\r\n      namesToPlugins[pluginName] = pluginModule;\r\n      isOrderingDirty = true;\r\n    }\r\n  }\r\n  if (isOrderingDirty) {\r\n    recomputePluginOrdering();\r\n  }\r\n}\r\n\r\n/**\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar warningWithoutStack = function () {};\r\n\r\n{\r\n  warningWithoutStack = function (condition, format) {\r\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n      args[_key - 2] = arguments[_key];\r\n    }\r\n\r\n    if (format === undefined) {\r\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\r\n    }\r\n    if (args.length > 8) {\r\n      // Check before the condition to catch violations early.\r\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\r\n    }\r\n    if (condition) {\r\n      return;\r\n    }\r\n    if (typeof console !== 'undefined') {\r\n      var argsWithFormat = args.map(function (item) {\r\n        return '' + item;\r\n      });\r\n      argsWithFormat.unshift('Warning: ' + format);\r\n\r\n      // We intentionally don't use spread (or .apply) directly because it\r\n      // breaks IE9: https://github.com/facebook/react/issues/13610\r\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      var argIndex = 0;\r\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\r\n        return args[argIndex++];\r\n      });\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n}\r\n\r\nvar warningWithoutStack$1 = warningWithoutStack;\r\n\r\nvar getFiberCurrentPropsFromNode = null;\r\nvar getInstanceFromNode = null;\r\nvar getNodeFromInstance = null;\r\n\r\nfunction setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\r\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\r\n  getInstanceFromNode = getInstanceFromNodeImpl;\r\n  getNodeFromInstance = getNodeFromInstanceImpl;\r\n  {\r\n    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\r\n  }\r\n}\r\n\r\nvar validateEventDispatches = void 0;\r\n{\r\n  validateEventDispatches = function (event) {\r\n    var dispatchListeners = event._dispatchListeners;\r\n    var dispatchInstances = event._dispatchInstances;\r\n\r\n    var listenersIsArr = Array.isArray(dispatchListeners);\r\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\r\n\r\n    var instancesIsArr = Array.isArray(dispatchInstances);\r\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\r\n\r\n    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch the event to the listener.\r\n * @param {SyntheticEvent} event SyntheticEvent to handle\r\n * @param {function} listener Application-level callback\r\n * @param {*} inst Internal component instance\r\n */\r\nfunction executeDispatch(event, listener, inst) {\r\n  var type = event.type || 'unknown-event';\r\n  event.currentTarget = getNodeFromInstance(inst);\r\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\r\n  event.currentTarget = null;\r\n}\r\n\r\n/**\r\n * Standard/simple iteration through an event's collected dispatches.\r\n */\r\nfunction executeDispatchesInOrder(event) {\r\n  var dispatchListeners = event._dispatchListeners;\r\n  var dispatchInstances = event._dispatchInstances;\r\n  {\r\n    validateEventDispatches(event);\r\n  }\r\n  if (Array.isArray(dispatchListeners)) {\r\n    for (var i = 0; i < dispatchListeners.length; i++) {\r\n      if (event.isPropagationStopped()) {\r\n        break;\r\n      }\r\n      // Listeners and Instances are two parallel arrays that are always in sync.\r\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\r\n    }\r\n  } else if (dispatchListeners) {\r\n    executeDispatch(event, dispatchListeners, dispatchInstances);\r\n  }\r\n  event._dispatchListeners = null;\r\n  event._dispatchInstances = null;\r\n}\r\n\r\n/**\r\n * @see executeDispatchesInOrderStopAtTrueImpl\r\n */\r\n\r\n\r\n/**\r\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\r\n * accumulated on the event or it is considered an error. It doesn't really make\r\n * sense for an event with multiple dispatches (bubbled) to keep track of the\r\n * return values at each dispatch execution, but it does tend to make sense when\r\n * dealing with \"direct\" dispatches.\r\n *\r\n * @return {*} The return value of executing the single dispatch.\r\n */\r\n\r\n\r\n/**\r\n * @param {SyntheticEvent} event\r\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\r\n */\r\n\r\n/**\r\n * Accumulates items that must not be null or undefined into the first one. This\r\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\r\n * API cleanness. Since `current` can be null before being passed in and not\r\n * null after this function, make sure to assign it back to `current`:\r\n *\r\n * `a = accumulateInto(a, b);`\r\n *\r\n * This API should be sparingly used. Try `accumulate` for something cleaner.\r\n *\r\n * @return {*|array<*>} An accumulation of items.\r\n */\r\n\r\nfunction accumulateInto(current, next) {\r\n  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;\r\n\r\n  if (current == null) {\r\n    return next;\r\n  }\r\n\r\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\r\n  // certain that x is an Array (x could be a string with concat method).\r\n  if (Array.isArray(current)) {\r\n    if (Array.isArray(next)) {\r\n      current.push.apply(current, next);\r\n      return current;\r\n    }\r\n    current.push(next);\r\n    return current;\r\n  }\r\n\r\n  if (Array.isArray(next)) {\r\n    // A bit too dangerous to mutate `next`.\r\n    return [current].concat(next);\r\n  }\r\n\r\n  return [current, next];\r\n}\r\n\r\n/**\r\n * @param {array} arr an \"accumulation\" of items which is either an Array or\r\n * a single item. Useful when paired with the `accumulate` module. This is a\r\n * simple utility that allows us to reason about a collection of items, but\r\n * handling the case when there is exactly one item (and we do not need to\r\n * allocate an array).\r\n * @param {function} cb Callback invoked with each element or a collection.\r\n * @param {?} [scope] Scope used as `this` in a callback.\r\n */\r\nfunction forEachAccumulated(arr, cb, scope) {\r\n  if (Array.isArray(arr)) {\r\n    arr.forEach(cb, scope);\r\n  } else if (arr) {\r\n    cb.call(scope, arr);\r\n  }\r\n}\r\n\r\n/**\r\n * Internal queue of events that have accumulated their dispatches and are\r\n * waiting to have their dispatches executed.\r\n */\r\nvar eventQueue = null;\r\n\r\n/**\r\n * Dispatches an event and releases it back into the pool, unless persistent.\r\n *\r\n * @param {?object} event Synthetic event to be dispatched.\r\n * @private\r\n */\r\nvar executeDispatchesAndRelease = function (event) {\r\n  if (event) {\r\n    executeDispatchesInOrder(event);\r\n\r\n    if (!event.isPersistent()) {\r\n      event.constructor.release(event);\r\n    }\r\n  }\r\n};\r\nvar executeDispatchesAndReleaseTopLevel = function (e) {\r\n  return executeDispatchesAndRelease(e);\r\n};\r\n\r\nfunction isInteractive(tag) {\r\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\r\n}\r\n\r\nfunction shouldPreventMouseEvent(name, type, props) {\r\n  switch (name) {\r\n    case 'onClick':\r\n    case 'onClickCapture':\r\n    case 'onDoubleClick':\r\n    case 'onDoubleClickCapture':\r\n    case 'onMouseDown':\r\n    case 'onMouseDownCapture':\r\n    case 'onMouseMove':\r\n    case 'onMouseMoveCapture':\r\n    case 'onMouseUp':\r\n    case 'onMouseUpCapture':\r\n      return !!(props.disabled && isInteractive(type));\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n/**\r\n * This is a unified interface for event plugins to be installed and configured.\r\n *\r\n * Event plugins can implement the following properties:\r\n *\r\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\r\n *     Required. When a top-level event is fired, this method is expected to\r\n *     extract synthetic events that will in turn be queued and dispatched.\r\n *\r\n *   `eventTypes` {object}\r\n *     Optional, plugins that fire events must publish a mapping of registration\r\n *     names that are used to register listeners. Values of this mapping must\r\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\r\n *\r\n *   `executeDispatch` {function(object, function, string)}\r\n *     Optional, allows plugins to override how an event gets dispatched. By\r\n *     default, the listener is simply invoked.\r\n *\r\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\r\n *\r\n * @public\r\n */\r\n\r\n/**\r\n * Methods for injecting dependencies.\r\n */\r\nvar injection = {\r\n  /**\r\n   * @param {array} InjectedEventPluginOrder\r\n   * @public\r\n   */\r\n  injectEventPluginOrder: injectEventPluginOrder,\r\n\r\n  /**\r\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\r\n   */\r\n  injectEventPluginsByName: injectEventPluginsByName\r\n};\r\n\r\n/**\r\n * @param {object} inst The instance, which is the source of events.\r\n * @param {string} registrationName Name of listener (e.g. `onClick`).\r\n * @return {?function} The stored callback.\r\n */\r\nfunction getListener(inst, registrationName) {\r\n  var listener = void 0;\r\n\r\n  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\r\n  // live here; needs to be moved to a better place soon\r\n  var stateNode = inst.stateNode;\r\n  if (!stateNode) {\r\n    // Work in progress (ex: onload events in incremental mode).\r\n    return null;\r\n  }\r\n  var props = getFiberCurrentPropsFromNode(stateNode);\r\n  if (!props) {\r\n    // Work in progress.\r\n    return null;\r\n  }\r\n  listener = props[registrationName];\r\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\r\n    return null;\r\n  }\r\n  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;\r\n  return listener;\r\n}\r\n\r\n/**\r\n * Allows registered plugins an opportunity to extract events from top-level\r\n * native browser events.\r\n *\r\n * @return {*} An accumulation of synthetic events.\r\n * @internal\r\n */\r\nfunction extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n  var events = null;\r\n  for (var i = 0; i < plugins.length; i++) {\r\n    // Not every plugin in the ordering may be loaded at runtime.\r\n    var possiblePlugin = plugins[i];\r\n    if (possiblePlugin) {\r\n      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\r\n      if (extractedEvents) {\r\n        events = accumulateInto(events, extractedEvents);\r\n      }\r\n    }\r\n  }\r\n  return events;\r\n}\r\n\r\nfunction runEventsInBatch(events) {\r\n  if (events !== null) {\r\n    eventQueue = accumulateInto(eventQueue, events);\r\n  }\r\n\r\n  // Set `eventQueue` to null before processing it so that we can tell if more\r\n  // events get enqueued while processing.\r\n  var processingEventQueue = eventQueue;\r\n  eventQueue = null;\r\n\r\n  if (!processingEventQueue) {\r\n    return;\r\n  }\r\n\r\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\r\n  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;\r\n  // This would be a good time to rethrow if any of the event handlers threw.\r\n  rethrowCaughtError();\r\n}\r\n\r\nfunction runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\r\n  runEventsInBatch(events);\r\n}\r\n\r\nvar FunctionComponent = 0;\r\nvar ClassComponent = 1;\r\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\r\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\r\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\r\nvar HostComponent = 5;\r\nvar HostText = 6;\r\nvar Fragment = 7;\r\nvar Mode = 8;\r\nvar ContextConsumer = 9;\r\nvar ContextProvider = 10;\r\nvar ForwardRef = 11;\r\nvar Profiler = 12;\r\nvar SuspenseComponent = 13;\r\nvar MemoComponent = 14;\r\nvar SimpleMemoComponent = 15;\r\nvar LazyComponent = 16;\r\nvar IncompleteClassComponent = 17;\r\nvar DehydratedSuspenseComponent = 18;\r\n\r\nvar randomKey = Math.random().toString(36).slice(2);\r\nvar internalInstanceKey = '__reactInternalInstance$' + randomKey;\r\nvar internalEventHandlersKey = '__reactEventHandlers$' + randomKey;\r\n\r\nfunction precacheFiberNode(hostInst, node) {\r\n  node[internalInstanceKey] = hostInst;\r\n}\r\n\r\n/**\r\n * Given a DOM node, return the closest ReactDOMComponent or\r\n * ReactDOMTextComponent instance ancestor.\r\n */\r\nfunction getClosestInstanceFromNode(node) {\r\n  if (node[internalInstanceKey]) {\r\n    return node[internalInstanceKey];\r\n  }\r\n\r\n  while (!node[internalInstanceKey]) {\r\n    if (node.parentNode) {\r\n      node = node.parentNode;\r\n    } else {\r\n      // Top of the tree. This node must not be part of a React tree (or is\r\n      // unmounted, potentially).\r\n      return null;\r\n    }\r\n  }\r\n\r\n  var inst = node[internalInstanceKey];\r\n  if (inst.tag === HostComponent || inst.tag === HostText) {\r\n    // In Fiber, this will always be the deepest root.\r\n    return inst;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\r\n * instance, or null if the node was not rendered by this React.\r\n */\r\nfunction getInstanceFromNode$1(node) {\r\n  var inst = node[internalInstanceKey];\r\n  if (inst) {\r\n    if (inst.tag === HostComponent || inst.tag === HostText) {\r\n      return inst;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\r\n * DOM node.\r\n */\r\nfunction getNodeFromInstance$1(inst) {\r\n  if (inst.tag === HostComponent || inst.tag === HostText) {\r\n    // In Fiber this, is just the state node right now. We assume it will be\r\n    // a host component or host text.\r\n    return inst.stateNode;\r\n  }\r\n\r\n  // Without this first invariant, passing a non-DOM-component triggers the next\r\n  // invariant for a missing parent, which is super confusing.\r\n  invariant(false, 'getNodeFromInstance: Invalid argument.');\r\n}\r\n\r\nfunction getFiberCurrentPropsFromNode$1(node) {\r\n  return node[internalEventHandlersKey] || null;\r\n}\r\n\r\nfunction updateFiberProps(node, props) {\r\n  node[internalEventHandlersKey] = props;\r\n}\r\n\r\nfunction getParent(inst) {\r\n  do {\r\n    inst = inst.return;\r\n    // TODO: If this is a HostRoot we might want to bail out.\r\n    // That is depending on if we want nested subtrees (layers) to bubble\r\n    // events to their parent. We could also go through parentNode on the\r\n    // host node but that wouldn't work for React Native and doesn't let us\r\n    // do the portal feature.\r\n  } while (inst && inst.tag !== HostComponent);\r\n  if (inst) {\r\n    return inst;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Return the lowest common ancestor of A and B, or null if they are in\r\n * different trees.\r\n */\r\nfunction getLowestCommonAncestor(instA, instB) {\r\n  var depthA = 0;\r\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\r\n    depthA++;\r\n  }\r\n  var depthB = 0;\r\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\r\n    depthB++;\r\n  }\r\n\r\n  // If A is deeper, crawl up.\r\n  while (depthA - depthB > 0) {\r\n    instA = getParent(instA);\r\n    depthA--;\r\n  }\r\n\r\n  // If B is deeper, crawl up.\r\n  while (depthB - depthA > 0) {\r\n    instB = getParent(instB);\r\n    depthB--;\r\n  }\r\n\r\n  // Walk in lockstep until we find a match.\r\n  var depth = depthA;\r\n  while (depth--) {\r\n    if (instA === instB || instA === instB.alternate) {\r\n      return instA;\r\n    }\r\n    instA = getParent(instA);\r\n    instB = getParent(instB);\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Return if A is an ancestor of B.\r\n */\r\n\r\n\r\n/**\r\n * Return the parent instance of the passed-in instance.\r\n */\r\n\r\n\r\n/**\r\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\r\n */\r\nfunction traverseTwoPhase(inst, fn, arg) {\r\n  var path = [];\r\n  while (inst) {\r\n    path.push(inst);\r\n    inst = getParent(inst);\r\n  }\r\n  var i = void 0;\r\n  for (i = path.length; i-- > 0;) {\r\n    fn(path[i], 'captured', arg);\r\n  }\r\n  for (i = 0; i < path.length; i++) {\r\n    fn(path[i], 'bubbled', arg);\r\n  }\r\n}\r\n\r\n/**\r\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\r\n * should would receive a `mouseEnter` or `mouseLeave` event.\r\n *\r\n * Does not invoke the callback on the nearest common ancestor because nothing\r\n * \"entered\" or \"left\" that element.\r\n */\r\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\r\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\r\n  var pathFrom = [];\r\n  while (true) {\r\n    if (!from) {\r\n      break;\r\n    }\r\n    if (from === common) {\r\n      break;\r\n    }\r\n    var alternate = from.alternate;\r\n    if (alternate !== null && alternate === common) {\r\n      break;\r\n    }\r\n    pathFrom.push(from);\r\n    from = getParent(from);\r\n  }\r\n  var pathTo = [];\r\n  while (true) {\r\n    if (!to) {\r\n      break;\r\n    }\r\n    if (to === common) {\r\n      break;\r\n    }\r\n    var _alternate = to.alternate;\r\n    if (_alternate !== null && _alternate === common) {\r\n      break;\r\n    }\r\n    pathTo.push(to);\r\n    to = getParent(to);\r\n  }\r\n  for (var i = 0; i < pathFrom.length; i++) {\r\n    fn(pathFrom[i], 'bubbled', argFrom);\r\n  }\r\n  for (var _i = pathTo.length; _i-- > 0;) {\r\n    fn(pathTo[_i], 'captured', argTo);\r\n  }\r\n}\r\n\r\n/**\r\n * Some event types have a notion of different registration names for different\r\n * \"phases\" of propagation. This finds listeners by a given phase.\r\n */\r\nfunction listenerAtPhase(inst, event, propagationPhase) {\r\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\r\n  return getListener(inst, registrationName);\r\n}\r\n\r\n/**\r\n * A small set of propagation patterns, each of which will accept a small amount\r\n * of information, and generate a set of \"dispatch ready event objects\" - which\r\n * are sets of events that have already been annotated with a set of dispatched\r\n * listener functions/ids. The API is designed this way to discourage these\r\n * propagation strategies from actually executing the dispatches, since we\r\n * always want to collect the entire set of dispatches before executing even a\r\n * single one.\r\n */\r\n\r\n/**\r\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\r\n * here, allows us to not have to bind or create functions for each event.\r\n * Mutating the event's members allows us to not have to create a wrapping\r\n * \"dispatch\" object that pairs the event with the listener.\r\n */\r\nfunction accumulateDirectionalDispatches(inst, phase, event) {\r\n  {\r\n    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;\r\n  }\r\n  var listener = listenerAtPhase(inst, event, phase);\r\n  if (listener) {\r\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\r\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\r\n  }\r\n}\r\n\r\n/**\r\n * Collect dispatches (must be entirely collected before dispatching - see unit\r\n * tests). Lazily allocate the array to conserve memory.  We must loop through\r\n * each event and perform the traversal for each one. We cannot perform a\r\n * single traversal for the entire collection of events because each event may\r\n * have a different target.\r\n */\r\nfunction accumulateTwoPhaseDispatchesSingle(event) {\r\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\r\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\r\n  }\r\n}\r\n\r\n/**\r\n * Accumulates without regard to direction, does not look for phased\r\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\r\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\r\n */\r\nfunction accumulateDispatches(inst, ignoredDirection, event) {\r\n  if (inst && event && event.dispatchConfig.registrationName) {\r\n    var registrationName = event.dispatchConfig.registrationName;\r\n    var listener = getListener(inst, registrationName);\r\n    if (listener) {\r\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\r\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\r\n * `dispatchMarker`.\r\n * @param {SyntheticEvent} event\r\n */\r\nfunction accumulateDirectDispatchesSingle(event) {\r\n  if (event && event.dispatchConfig.registrationName) {\r\n    accumulateDispatches(event._targetInst, null, event);\r\n  }\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatches(events) {\r\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\r\n}\r\n\r\n\r\n\r\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\r\n  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\r\n}\r\n\r\nfunction accumulateDirectDispatches(events) {\r\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\r\n}\r\n\r\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\n\r\n// Do not uses the below two methods directly!\r\n// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.\r\n// (It is the only module that is allowed to access these methods.)\r\n\r\nfunction unsafeCastStringToDOMTopLevelType(topLevelType) {\r\n  return topLevelType;\r\n}\r\n\r\nfunction unsafeCastDOMTopLevelTypeToString(topLevelType) {\r\n  return topLevelType;\r\n}\r\n\r\n/**\r\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\r\n *\r\n * @param {string} styleProp\r\n * @param {string} eventName\r\n * @returns {object}\r\n */\r\nfunction makePrefixMap(styleProp, eventName) {\r\n  var prefixes = {};\r\n\r\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\r\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\r\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\r\n\r\n  return prefixes;\r\n}\r\n\r\n/**\r\n * A list of event names to a configurable list of vendor prefixes.\r\n */\r\nvar vendorPrefixes = {\r\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\r\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\r\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\r\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\r\n};\r\n\r\n/**\r\n * Event names that have already been detected and prefixed (if applicable).\r\n */\r\nvar prefixedEventNames = {};\r\n\r\n/**\r\n * Element to check for prefixes on.\r\n */\r\nvar style = {};\r\n\r\n/**\r\n * Bootstrap if a DOM exists.\r\n */\r\nif (canUseDOM) {\r\n  style = document.createElement('div').style;\r\n\r\n  // On some platforms, in particular some releases of Android 4.x,\r\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\r\n  // style object but the events that fire will still be prefixed, so we need\r\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\r\n  if (!('AnimationEvent' in window)) {\r\n    delete vendorPrefixes.animationend.animation;\r\n    delete vendorPrefixes.animationiteration.animation;\r\n    delete vendorPrefixes.animationstart.animation;\r\n  }\r\n\r\n  // Same as above\r\n  if (!('TransitionEvent' in window)) {\r\n    delete vendorPrefixes.transitionend.transition;\r\n  }\r\n}\r\n\r\n/**\r\n * Attempts to determine the correct vendor prefixed event name.\r\n *\r\n * @param {string} eventName\r\n * @returns {string}\r\n */\r\nfunction getVendorPrefixedEventName(eventName) {\r\n  if (prefixedEventNames[eventName]) {\r\n    return prefixedEventNames[eventName];\r\n  } else if (!vendorPrefixes[eventName]) {\r\n    return eventName;\r\n  }\r\n\r\n  var prefixMap = vendorPrefixes[eventName];\r\n\r\n  for (var styleProp in prefixMap) {\r\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\r\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\r\n    }\r\n  }\r\n\r\n  return eventName;\r\n}\r\n\r\n/**\r\n * To identify top level events in ReactDOM, we use constants defined by this\r\n * module. This is the only module that uses the unsafe* methods to express\r\n * that the constants actually correspond to the browser event names. This lets\r\n * us save some bundle size by avoiding a top level type -> event name map.\r\n * The rest of ReactDOM code should import top level types from this file.\r\n */\r\nvar TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\r\nvar TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));\r\nvar TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));\r\nvar TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));\r\nvar TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\r\nvar TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\r\nvar TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');\r\nvar TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\r\nvar TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\r\nvar TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\r\nvar TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\r\nvar TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');\r\nvar TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');\r\nvar TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');\r\nvar TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');\r\nvar TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\r\nvar TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\r\nvar TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\r\nvar TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\r\nvar TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\r\nvar TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\r\nvar TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\r\nvar TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\r\nvar TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\r\nvar TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\r\nvar TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\r\nvar TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\r\nvar TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');\r\nvar TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\r\nvar TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\r\nvar TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\r\nvar TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\r\nvar TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\r\nvar TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');\r\nvar TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\r\nvar TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\r\nvar TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\r\nvar TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\r\nvar TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\r\nvar TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\r\nvar TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\r\nvar TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\r\nvar TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');\r\nvar TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');\r\nvar TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\r\nvar TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\r\nvar TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\r\nvar TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\r\nvar TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\r\nvar TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\r\nvar TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\r\nvar TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\r\nvar TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\r\nvar TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');\r\nvar TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');\r\n\r\n\r\nvar TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');\r\nvar TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\r\nvar TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');\r\nvar TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\r\nvar TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\r\nvar TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\r\nvar TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\r\nvar TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\r\nvar TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\r\nvar TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\r\nvar TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');\r\nvar TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\r\nvar TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\r\nvar TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\r\nvar TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\r\nvar TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\r\nvar TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\r\nvar TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');\r\nvar TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\r\nvar TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\r\nvar TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\r\nvar TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));\r\nvar TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');\r\nvar TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\r\nvar TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');\r\n\r\n// List of events that need to be individually attached to media elements.\r\n// Note that events in this list will *not* be listened to at the top level\r\n// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\r\nvar mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];\r\n\r\nfunction getRawEventName(topLevelType) {\r\n  return unsafeCastDOMTopLevelTypeToString(topLevelType);\r\n}\r\n\r\n/**\r\n * These variables store information about text content of a target node,\r\n * allowing comparison of content before and after a given event.\r\n *\r\n * Identify the node where selection currently begins, then observe\r\n * both its text content and its current position in the DOM. Since the\r\n * browser may natively replace the target node during composition, we can\r\n * use its position to find its replacement.\r\n *\r\n *\r\n */\r\n\r\nvar root = null;\r\nvar startText = null;\r\nvar fallbackText = null;\r\n\r\nfunction initialize(nativeEventTarget) {\r\n  root = nativeEventTarget;\r\n  startText = getText();\r\n  return true;\r\n}\r\n\r\nfunction reset() {\r\n  root = null;\r\n  startText = null;\r\n  fallbackText = null;\r\n}\r\n\r\nfunction getData() {\r\n  if (fallbackText) {\r\n    return fallbackText;\r\n  }\r\n\r\n  var start = void 0;\r\n  var startValue = startText;\r\n  var startLength = startValue.length;\r\n  var end = void 0;\r\n  var endValue = getText();\r\n  var endLength = endValue.length;\r\n\r\n  for (start = 0; start < startLength; start++) {\r\n    if (startValue[start] !== endValue[start]) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  var minEnd = startLength - start;\r\n  for (end = 1; end <= minEnd; end++) {\r\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  var sliceTail = end > 1 ? 1 - end : undefined;\r\n  fallbackText = endValue.slice(start, sliceTail);\r\n  return fallbackText;\r\n}\r\n\r\nfunction getText() {\r\n  if ('value' in root) {\r\n    return root.value;\r\n  }\r\n  return root.textContent;\r\n}\r\n\r\n/* eslint valid-typeof: 0 */\r\n\r\nvar EVENT_POOL_SIZE = 10;\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar EventInterface = {\r\n  type: null,\r\n  target: null,\r\n  // currentTarget is set when dispatching; no use in copying it here\r\n  currentTarget: function () {\r\n    return null;\r\n  },\r\n  eventPhase: null,\r\n  bubbles: null,\r\n  cancelable: null,\r\n  timeStamp: function (event) {\r\n    return event.timeStamp || Date.now();\r\n  },\r\n  defaultPrevented: null,\r\n  isTrusted: null\r\n};\r\n\r\nfunction functionThatReturnsTrue() {\r\n  return true;\r\n}\r\n\r\nfunction functionThatReturnsFalse() {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Synthetic events are dispatched by event plugins, typically in response to a\r\n * top-level event delegation handler.\r\n *\r\n * These systems should generally use pooling to reduce the frequency of garbage\r\n * collection. The system should check `isPersistent` to determine whether the\r\n * event should be released into the pool after being dispatched. Users that\r\n * need a persisted event should invoke `persist`.\r\n *\r\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\r\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\r\n * DOM interface; custom application-specific events can also subclass this.\r\n *\r\n * @param {object} dispatchConfig Configuration used to dispatch this event.\r\n * @param {*} targetInst Marker identifying the event target.\r\n * @param {object} nativeEvent Native browser event.\r\n * @param {DOMEventTarget} nativeEventTarget Target node.\r\n */\r\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\r\n  {\r\n    // these have a getter/setter for warnings\r\n    delete this.nativeEvent;\r\n    delete this.preventDefault;\r\n    delete this.stopPropagation;\r\n    delete this.isDefaultPrevented;\r\n    delete this.isPropagationStopped;\r\n  }\r\n\r\n  this.dispatchConfig = dispatchConfig;\r\n  this._targetInst = targetInst;\r\n  this.nativeEvent = nativeEvent;\r\n\r\n  var Interface = this.constructor.Interface;\r\n  for (var propName in Interface) {\r\n    if (!Interface.hasOwnProperty(propName)) {\r\n      continue;\r\n    }\r\n    {\r\n      delete this[propName]; // this has a getter/setter for warnings\r\n    }\r\n    var normalize = Interface[propName];\r\n    if (normalize) {\r\n      this[propName] = normalize(nativeEvent);\r\n    } else {\r\n      if (propName === 'target') {\r\n        this.target = nativeEventTarget;\r\n      } else {\r\n        this[propName] = nativeEvent[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\r\n  if (defaultPrevented) {\r\n    this.isDefaultPrevented = functionThatReturnsTrue;\r\n  } else {\r\n    this.isDefaultPrevented = functionThatReturnsFalse;\r\n  }\r\n  this.isPropagationStopped = functionThatReturnsFalse;\r\n  return this;\r\n}\r\n\r\n_assign(SyntheticEvent.prototype, {\r\n  preventDefault: function () {\r\n    this.defaultPrevented = true;\r\n    var event = this.nativeEvent;\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    if (event.preventDefault) {\r\n      event.preventDefault();\r\n    } else if (typeof event.returnValue !== 'unknown') {\r\n      event.returnValue = false;\r\n    }\r\n    this.isDefaultPrevented = functionThatReturnsTrue;\r\n  },\r\n\r\n  stopPropagation: function () {\r\n    var event = this.nativeEvent;\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    if (event.stopPropagation) {\r\n      event.stopPropagation();\r\n    } else if (typeof event.cancelBubble !== 'unknown') {\r\n      // The ChangeEventPlugin registers a \"propertychange\" event for\r\n      // IE. This event does not support bubbling or cancelling, and\r\n      // any references to cancelBubble throw \"Member not found\".  A\r\n      // typeof check of \"unknown\" circumvents this issue (and is also\r\n      // IE specific).\r\n      event.cancelBubble = true;\r\n    }\r\n\r\n    this.isPropagationStopped = functionThatReturnsTrue;\r\n  },\r\n\r\n  /**\r\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\r\n   * them back into the pool. This allows a way to hold onto a reference that\r\n   * won't be added back into the pool.\r\n   */\r\n  persist: function () {\r\n    this.isPersistent = functionThatReturnsTrue;\r\n  },\r\n\r\n  /**\r\n   * Checks if this event should be released back into the pool.\r\n   *\r\n   * @return {boolean} True if this should not be released, false otherwise.\r\n   */\r\n  isPersistent: functionThatReturnsFalse,\r\n\r\n  /**\r\n   * `PooledClass` looks for `destructor` on each instance it releases.\r\n   */\r\n  destructor: function () {\r\n    var Interface = this.constructor.Interface;\r\n    for (var propName in Interface) {\r\n      {\r\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\r\n      }\r\n    }\r\n    this.dispatchConfig = null;\r\n    this._targetInst = null;\r\n    this.nativeEvent = null;\r\n    this.isDefaultPrevented = functionThatReturnsFalse;\r\n    this.isPropagationStopped = functionThatReturnsFalse;\r\n    this._dispatchListeners = null;\r\n    this._dispatchInstances = null;\r\n    {\r\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\r\n      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));\r\n      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));\r\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));\r\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));\r\n    }\r\n  }\r\n});\r\n\r\nSyntheticEvent.Interface = EventInterface;\r\n\r\n/**\r\n * Helper to reduce boilerplate when creating subclasses.\r\n */\r\nSyntheticEvent.extend = function (Interface) {\r\n  var Super = this;\r\n\r\n  var E = function () {};\r\n  E.prototype = Super.prototype;\r\n  var prototype = new E();\r\n\r\n  function Class() {\r\n    return Super.apply(this, arguments);\r\n  }\r\n  _assign(prototype, Class.prototype);\r\n  Class.prototype = prototype;\r\n  Class.prototype.constructor = Class;\r\n\r\n  Class.Interface = _assign({}, Super.Interface, Interface);\r\n  Class.extend = Super.extend;\r\n  addEventPoolingTo(Class);\r\n\r\n  return Class;\r\n};\r\n\r\naddEventPoolingTo(SyntheticEvent);\r\n\r\n/**\r\n * Helper to nullify syntheticEvent instance properties when destructing\r\n *\r\n * @param {String} propName\r\n * @param {?object} getVal\r\n * @return {object} defineProperty object\r\n */\r\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\r\n  var isFunction = typeof getVal === 'function';\r\n  return {\r\n    configurable: true,\r\n    set: set,\r\n    get: get\r\n  };\r\n\r\n  function set(val) {\r\n    var action = isFunction ? 'setting the method' : 'setting the property';\r\n    warn(action, 'This is effectively a no-op');\r\n    return val;\r\n  }\r\n\r\n  function get() {\r\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\r\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\r\n    warn(action, result);\r\n    return getVal;\r\n  }\r\n\r\n  function warn(action, result) {\r\n    var warningCondition = false;\r\n    !warningCondition ? warningWithoutStack$1(false, \"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\r\n  }\r\n}\r\n\r\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\r\n  var EventConstructor = this;\r\n  if (EventConstructor.eventPool.length) {\r\n    var instance = EventConstructor.eventPool.pop();\r\n    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\r\n    return instance;\r\n  }\r\n  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\r\n}\r\n\r\nfunction releasePooledEvent(event) {\r\n  var EventConstructor = this;\r\n  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;\r\n  event.destructor();\r\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\r\n    EventConstructor.eventPool.push(event);\r\n  }\r\n}\r\n\r\nfunction addEventPoolingTo(EventConstructor) {\r\n  EventConstructor.eventPool = [];\r\n  EventConstructor.getPooled = getPooledEvent;\r\n  EventConstructor.release = releasePooledEvent;\r\n}\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\r\n */\r\nvar SyntheticCompositionEvent = SyntheticEvent.extend({\r\n  data: null\r\n});\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\r\n *      /#events-inputevents\r\n */\r\nvar SyntheticInputEvent = SyntheticEvent.extend({\r\n  data: null\r\n});\r\n\r\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\r\nvar START_KEYCODE = 229;\r\n\r\nvar canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\r\n\r\nvar documentMode = null;\r\nif (canUseDOM && 'documentMode' in document) {\r\n  documentMode = document.documentMode;\r\n}\r\n\r\n// Webkit offers a very useful `textInput` event that can be used to\r\n// directly represent `beforeInput`. The IE `textinput` event is not as\r\n// useful, so we don't use it.\r\nvar canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode;\r\n\r\n// In IE9+, we have access to composition events, but the data supplied\r\n// by the native compositionend event may be incorrect. Japanese ideographic\r\n// spaces, for instance (\\u3000) are not recorded correctly.\r\nvar useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\r\n\r\nvar SPACEBAR_CODE = 32;\r\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\r\n\r\n// Events and their corresponding property names.\r\nvar eventTypes = {\r\n  beforeInput: {\r\n    phasedRegistrationNames: {\r\n      bubbled: 'onBeforeInput',\r\n      captured: 'onBeforeInputCapture'\r\n    },\r\n    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]\r\n  },\r\n  compositionEnd: {\r\n    phasedRegistrationNames: {\r\n      bubbled: 'onCompositionEnd',\r\n      captured: 'onCompositionEndCapture'\r\n    },\r\n    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\r\n  },\r\n  compositionStart: {\r\n    phasedRegistrationNames: {\r\n      bubbled: 'onCompositionStart',\r\n      captured: 'onCompositionStartCapture'\r\n    },\r\n    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\r\n  },\r\n  compositionUpdate: {\r\n    phasedRegistrationNames: {\r\n      bubbled: 'onCompositionUpdate',\r\n      captured: 'onCompositionUpdateCapture'\r\n    },\r\n    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\r\n  }\r\n};\r\n\r\n// Track whether we've ever handled a keypress on the space key.\r\nvar hasSpaceKeypress = false;\r\n\r\n/**\r\n * Return whether a native keypress event is assumed to be a command.\r\n * This is required because Firefox fires `keypress` events for key commands\r\n * (cut, copy, select-all, etc.) even though no character is inserted.\r\n */\r\nfunction isKeypressCommand(nativeEvent) {\r\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\r\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\r\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\r\n}\r\n\r\n/**\r\n * Translate native top level events into event types.\r\n *\r\n * @param {string} topLevelType\r\n * @return {object}\r\n */\r\nfunction getCompositionEventType(topLevelType) {\r\n  switch (topLevelType) {\r\n    case TOP_COMPOSITION_START:\r\n      return eventTypes.compositionStart;\r\n    case TOP_COMPOSITION_END:\r\n      return eventTypes.compositionEnd;\r\n    case TOP_COMPOSITION_UPDATE:\r\n      return eventTypes.compositionUpdate;\r\n  }\r\n}\r\n\r\n/**\r\n * Does our fallback best-guess model think this event signifies that\r\n * composition has begun?\r\n *\r\n * @param {string} topLevelType\r\n * @param {object} nativeEvent\r\n * @return {boolean}\r\n */\r\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\r\n  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;\r\n}\r\n\r\n/**\r\n * Does our fallback mode think that this event is the end of composition?\r\n *\r\n * @param {string} topLevelType\r\n * @param {object} nativeEvent\r\n * @return {boolean}\r\n */\r\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\r\n  switch (topLevelType) {\r\n    case TOP_KEY_UP:\r\n      // Command keys insert or clear IME input.\r\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\r\n    case TOP_KEY_DOWN:\r\n      // Expect IME keyCode on each keydown. If we get any other\r\n      // code we must have exited earlier.\r\n      return nativeEvent.keyCode !== START_KEYCODE;\r\n    case TOP_KEY_PRESS:\r\n    case TOP_MOUSE_DOWN:\r\n    case TOP_BLUR:\r\n      // Events are not possible without cancelling IME.\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Google Input Tools provides composition data via a CustomEvent,\r\n * with the `data` property populated in the `detail` object. If this\r\n * is available on the event object, use it. If not, this is a plain\r\n * composition event and we have nothing special to extract.\r\n *\r\n * @param {object} nativeEvent\r\n * @return {?string}\r\n */\r\nfunction getDataFromCustomEvent(nativeEvent) {\r\n  var detail = nativeEvent.detail;\r\n  if (typeof detail === 'object' && 'data' in detail) {\r\n    return detail.data;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Check if a composition event was triggered by Korean IME.\r\n * Our fallback mode does not work well with IE's Korean IME,\r\n * so just use native composition events when Korean IME is used.\r\n * Although CompositionEvent.locale property is deprecated,\r\n * it is available in IE, where our fallback mode is enabled.\r\n *\r\n * @param {object} nativeEvent\r\n * @return {boolean}\r\n */\r\nfunction isUsingKoreanIME(nativeEvent) {\r\n  return nativeEvent.locale === 'ko';\r\n}\r\n\r\n// Track the current IME composition status, if any.\r\nvar isComposing = false;\r\n\r\n/**\r\n * @return {?object} A SyntheticCompositionEvent.\r\n */\r\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n  var eventType = void 0;\r\n  var fallbackData = void 0;\r\n\r\n  if (canUseCompositionEvent) {\r\n    eventType = getCompositionEventType(topLevelType);\r\n  } else if (!isComposing) {\r\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\r\n      eventType = eventTypes.compositionStart;\r\n    }\r\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\r\n    eventType = eventTypes.compositionEnd;\r\n  }\r\n\r\n  if (!eventType) {\r\n    return null;\r\n  }\r\n\r\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\r\n    // The current composition is stored statically and must not be\r\n    // overwritten while composition continues.\r\n    if (!isComposing && eventType === eventTypes.compositionStart) {\r\n      isComposing = initialize(nativeEventTarget);\r\n    } else if (eventType === eventTypes.compositionEnd) {\r\n      if (isComposing) {\r\n        fallbackData = getData();\r\n      }\r\n    }\r\n  }\r\n\r\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\r\n\r\n  if (fallbackData) {\r\n    // Inject data generated from fallback path into the synthetic event.\r\n    // This matches the property of native CompositionEventInterface.\r\n    event.data = fallbackData;\r\n  } else {\r\n    var customData = getDataFromCustomEvent(nativeEvent);\r\n    if (customData !== null) {\r\n      event.data = customData;\r\n    }\r\n  }\r\n\r\n  accumulateTwoPhaseDispatches(event);\r\n  return event;\r\n}\r\n\r\n/**\r\n * @param {TopLevelType} topLevelType Number from `TopLevelType`.\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {?string} The string corresponding to this `beforeInput` event.\r\n */\r\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\r\n  switch (topLevelType) {\r\n    case TOP_COMPOSITION_END:\r\n      return getDataFromCustomEvent(nativeEvent);\r\n    case TOP_KEY_PRESS:\r\n      /**\r\n       * If native `textInput` events are available, our goal is to make\r\n       * use of them. However, there is a special case: the spacebar key.\r\n       * In Webkit, preventing default on a spacebar `textInput` event\r\n       * cancels character insertion, but it *also* causes the browser\r\n       * to fall back to its default spacebar behavior of scrolling the\r\n       * page.\r\n       *\r\n       * Tracking at:\r\n       * https://code.google.com/p/chromium/issues/detail?id=355103\r\n       *\r\n       * To avoid this issue, use the keypress event as if no `textInput`\r\n       * event is available.\r\n       */\r\n      var which = nativeEvent.which;\r\n      if (which !== SPACEBAR_CODE) {\r\n        return null;\r\n      }\r\n\r\n      hasSpaceKeypress = true;\r\n      return SPACEBAR_CHAR;\r\n\r\n    case TOP_TEXT_INPUT:\r\n      // Record the characters to be added to the DOM.\r\n      var chars = nativeEvent.data;\r\n\r\n      // If it's a spacebar character, assume that we have already handled\r\n      // it at the keypress level and bail immediately. Android Chrome\r\n      // doesn't give us keycodes, so we need to ignore it.\r\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\r\n        return null;\r\n      }\r\n\r\n      return chars;\r\n\r\n    default:\r\n      // For other native event types, do nothing.\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * For browsers that do not provide the `textInput` event, extract the\r\n * appropriate string to use for SyntheticInputEvent.\r\n *\r\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {?string} The fallback string for this `beforeInput` event.\r\n */\r\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\r\n  // If we are currently composing (IME) and using a fallback to do so,\r\n  // try to extract the composed characters from the fallback object.\r\n  // If composition event is available, we extract a string only at\r\n  // compositionevent, otherwise extract it at fallback events.\r\n  if (isComposing) {\r\n    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\r\n      var chars = getData();\r\n      reset();\r\n      isComposing = false;\r\n      return chars;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  switch (topLevelType) {\r\n    case TOP_PASTE:\r\n      // If a paste event occurs after a keypress, throw out the input\r\n      // chars. Paste events should not lead to BeforeInput events.\r\n      return null;\r\n    case TOP_KEY_PRESS:\r\n      /**\r\n       * As of v27, Firefox may fire keypress events even when no character\r\n       * will be inserted. A few possibilities:\r\n       *\r\n       * - `which` is `0`. Arrow keys, Esc key, etc.\r\n       *\r\n       * - `which` is the pressed key code, but no char is available.\r\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\r\n       *   this key combination and no character is inserted into the\r\n       *   document, but FF fires the keypress for char code `100` anyway.\r\n       *   No `input` event will occur.\r\n       *\r\n       * - `which` is the pressed key code, but a command combination is\r\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\r\n       *   `input` event will occur.\r\n       */\r\n      if (!isKeypressCommand(nativeEvent)) {\r\n        // IE fires the `keypress` event when a user types an emoji via\r\n        // Touch keyboard of Windows.  In such a case, the `char` property\r\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\r\n        // is 2, the property `which` does not represent an emoji correctly.\r\n        // In such a case, we directly return the `char` property instead of\r\n        // using `which`.\r\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\r\n          return nativeEvent.char;\r\n        } else if (nativeEvent.which) {\r\n          return String.fromCharCode(nativeEvent.which);\r\n        }\r\n      }\r\n      return null;\r\n    case TOP_COMPOSITION_END:\r\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\r\n * `textInput` or fallback behavior.\r\n *\r\n * @return {?object} A SyntheticInputEvent.\r\n */\r\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n  var chars = void 0;\r\n\r\n  if (canUseTextInputEvent) {\r\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\r\n  } else {\r\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\r\n  }\r\n\r\n  // If no characters are being inserted, no BeforeInput event should\r\n  // be fired.\r\n  if (!chars) {\r\n    return null;\r\n  }\r\n\r\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\r\n\r\n  event.data = chars;\r\n  accumulateTwoPhaseDispatches(event);\r\n  return event;\r\n}\r\n\r\n/**\r\n * Create an `onBeforeInput` event to match\r\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\r\n *\r\n * This event plugin is based on the native `textInput` event\r\n * available in Chrome, Safari, Opera, and IE. This event fires after\r\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\r\n *\r\n * `beforeInput` is spec'd but not implemented in any browsers, and\r\n * the `input` event does not provide any useful information about what has\r\n * actually been added, contrary to the spec. Thus, `textInput` is the best\r\n * available event to identify the characters that have actually been inserted\r\n * into the target node.\r\n *\r\n * This plugin is also responsible for emitting `composition` events, thus\r\n * allowing us to share composition fallback code for both `beforeInput` and\r\n * `composition` event types.\r\n */\r\nvar BeforeInputEventPlugin = {\r\n  eventTypes: eventTypes,\r\n\r\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);\r\n\r\n    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);\r\n\r\n    if (composition === null) {\r\n      return beforeInput;\r\n    }\r\n\r\n    if (beforeInput === null) {\r\n      return composition;\r\n    }\r\n\r\n    return [composition, beforeInput];\r\n  }\r\n};\r\n\r\n// Use to restore controlled state after a change event has fired.\r\n\r\nvar restoreImpl = null;\r\nvar restoreTarget = null;\r\nvar restoreQueue = null;\r\n\r\nfunction restoreStateOfTarget(target) {\r\n  // We perform this translation at the end of the event loop so that we\r\n  // always receive the correct fiber here\r\n  var internalInstance = getInstanceFromNode(target);\r\n  if (!internalInstance) {\r\n    // Unmounted\r\n    return;\r\n  }\r\n  !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);\r\n  restoreImpl(internalInstance.stateNode, internalInstance.type, props);\r\n}\r\n\r\nfunction setRestoreImplementation(impl) {\r\n  restoreImpl = impl;\r\n}\r\n\r\nfunction enqueueStateRestore(target) {\r\n  if (restoreTarget) {\r\n    if (restoreQueue) {\r\n      restoreQueue.push(target);\r\n    } else {\r\n      restoreQueue = [target];\r\n    }\r\n  } else {\r\n    restoreTarget = target;\r\n  }\r\n}\r\n\r\nfunction needsStateRestore() {\r\n  return restoreTarget !== null || restoreQueue !== null;\r\n}\r\n\r\nfunction restoreStateIfNeeded() {\r\n  if (!restoreTarget) {\r\n    return;\r\n  }\r\n  var target = restoreTarget;\r\n  var queuedTargets = restoreQueue;\r\n  restoreTarget = null;\r\n  restoreQueue = null;\r\n\r\n  restoreStateOfTarget(target);\r\n  if (queuedTargets) {\r\n    for (var i = 0; i < queuedTargets.length; i++) {\r\n      restoreStateOfTarget(queuedTargets[i]);\r\n    }\r\n  }\r\n}\r\n\r\n// Used as a way to call batchedUpdates when we don't have a reference to\r\n// the renderer. Such as when we're dispatching events or if third party\r\n// libraries need to call batchedUpdates. Eventually, this API will go away when\r\n// everything is batched by default. We'll then have a similar API to opt-out of\r\n// scheduled work and instead do synchronous work.\r\n\r\n// Defaults\r\nvar _batchedUpdatesImpl = function (fn, bookkeeping) {\r\n  return fn(bookkeeping);\r\n};\r\nvar _interactiveUpdatesImpl = function (fn, a, b) {\r\n  return fn(a, b);\r\n};\r\nvar _flushInteractiveUpdatesImpl = function () {};\r\n\r\nvar isBatching = false;\r\nfunction batchedUpdates(fn, bookkeeping) {\r\n  if (isBatching) {\r\n    // If we are currently inside another batch, we need to wait until it\r\n    // fully completes before restoring state.\r\n    return fn(bookkeeping);\r\n  }\r\n  isBatching = true;\r\n  try {\r\n    return _batchedUpdatesImpl(fn, bookkeeping);\r\n  } finally {\r\n    // Here we wait until all updates have propagated, which is important\r\n    // when using controlled components within layers:\r\n    // https://github.com/facebook/react/issues/1698\r\n    // Then we restore state of any controlled component.\r\n    isBatching = false;\r\n    var controlledComponentsHavePendingUpdates = needsStateRestore();\r\n    if (controlledComponentsHavePendingUpdates) {\r\n      // If a controlled event was fired, we may need to restore the state of\r\n      // the DOM node back to the controlled value. This is necessary when React\r\n      // bails out of the update without touching the DOM.\r\n      _flushInteractiveUpdatesImpl();\r\n      restoreStateIfNeeded();\r\n    }\r\n  }\r\n}\r\n\r\nfunction interactiveUpdates(fn, a, b) {\r\n  return _interactiveUpdatesImpl(fn, a, b);\r\n}\r\n\r\n\r\n\r\nfunction setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {\r\n  _batchedUpdatesImpl = batchedUpdatesImpl;\r\n  _interactiveUpdatesImpl = interactiveUpdatesImpl;\r\n  _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;\r\n}\r\n\r\n/**\r\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\r\n */\r\nvar supportedInputTypes = {\r\n  color: true,\r\n  date: true,\r\n  datetime: true,\r\n  'datetime-local': true,\r\n  email: true,\r\n  month: true,\r\n  number: true,\r\n  password: true,\r\n  range: true,\r\n  search: true,\r\n  tel: true,\r\n  text: true,\r\n  time: true,\r\n  url: true,\r\n  week: true\r\n};\r\n\r\nfunction isTextInputElement(elem) {\r\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\r\n\r\n  if (nodeName === 'input') {\r\n    return !!supportedInputTypes[elem.type];\r\n  }\r\n\r\n  if (nodeName === 'textarea') {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * HTML nodeType values that represent the type of the node\r\n */\r\n\r\nvar ELEMENT_NODE = 1;\r\nvar TEXT_NODE = 3;\r\nvar COMMENT_NODE = 8;\r\nvar DOCUMENT_NODE = 9;\r\nvar DOCUMENT_FRAGMENT_NODE = 11;\r\n\r\n/**\r\n * Gets the target node from a native browser event by accounting for\r\n * inconsistencies in browser DOM APIs.\r\n *\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {DOMEventTarget} Target node.\r\n */\r\nfunction getEventTarget(nativeEvent) {\r\n  // Fallback to nativeEvent.srcElement for IE9\r\n  // https://github.com/facebook/react/issues/12506\r\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\r\n\r\n  // Normalize SVG <use> element events #4963\r\n  if (target.correspondingUseElement) {\r\n    target = target.correspondingUseElement;\r\n  }\r\n\r\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\r\n  // @see http://www.quirksmode.org/js/events_properties.html\r\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\r\n}\r\n\r\n/**\r\n * Checks if an event is supported in the current execution environment.\r\n *\r\n * NOTE: This will not work correctly for non-generic events such as `change`,\r\n * `reset`, `load`, `error`, and `select`.\r\n *\r\n * Borrows from Modernizr.\r\n *\r\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\r\n * @return {boolean} True if the event is supported.\r\n * @internal\r\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\r\n */\r\nfunction isEventSupported(eventNameSuffix) {\r\n  if (!canUseDOM) {\r\n    return false;\r\n  }\r\n\r\n  var eventName = 'on' + eventNameSuffix;\r\n  var isSupported = eventName in document;\r\n\r\n  if (!isSupported) {\r\n    var element = document.createElement('div');\r\n    element.setAttribute(eventName, 'return;');\r\n    isSupported = typeof element[eventName] === 'function';\r\n  }\r\n\r\n  return isSupported;\r\n}\r\n\r\nfunction isCheckable(elem) {\r\n  var type = elem.type;\r\n  var nodeName = elem.nodeName;\r\n  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');\r\n}\r\n\r\nfunction getTracker(node) {\r\n  return node._valueTracker;\r\n}\r\n\r\nfunction detachTracker(node) {\r\n  node._valueTracker = null;\r\n}\r\n\r\nfunction getValueFromNode(node) {\r\n  var value = '';\r\n  if (!node) {\r\n    return value;\r\n  }\r\n\r\n  if (isCheckable(node)) {\r\n    value = node.checked ? 'true' : 'false';\r\n  } else {\r\n    value = node.value;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction trackValueOnNode(node) {\r\n  var valueField = isCheckable(node) ? 'checked' : 'value';\r\n  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);\r\n\r\n  var currentValue = '' + node[valueField];\r\n\r\n  // if someone has already defined a value or Safari, then bail\r\n  // and don't track value will cause over reporting of changes,\r\n  // but it's better then a hard failure\r\n  // (needed for certain tests that spyOn input values and Safari)\r\n  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {\r\n    return;\r\n  }\r\n  var get = descriptor.get,\r\n      set = descriptor.set;\r\n\r\n  Object.defineProperty(node, valueField, {\r\n    configurable: true,\r\n    get: function () {\r\n      return get.call(this);\r\n    },\r\n    set: function (value) {\r\n      currentValue = '' + value;\r\n      set.call(this, value);\r\n    }\r\n  });\r\n  // We could've passed this the first time\r\n  // but it triggers a bug in IE11 and Edge 14/15.\r\n  // Calling defineProperty() again should be equivalent.\r\n  // https://github.com/facebook/react/issues/11768\r\n  Object.defineProperty(node, valueField, {\r\n    enumerable: descriptor.enumerable\r\n  });\r\n\r\n  var tracker = {\r\n    getValue: function () {\r\n      return currentValue;\r\n    },\r\n    setValue: function (value) {\r\n      currentValue = '' + value;\r\n    },\r\n    stopTracking: function () {\r\n      detachTracker(node);\r\n      delete node[valueField];\r\n    }\r\n  };\r\n  return tracker;\r\n}\r\n\r\nfunction track(node) {\r\n  if (getTracker(node)) {\r\n    return;\r\n  }\r\n\r\n  // TODO: Once it's just Fiber we can move this to node._wrapperState\r\n  node._valueTracker = trackValueOnNode(node);\r\n}\r\n\r\nfunction updateValueIfChanged(node) {\r\n  if (!node) {\r\n    return false;\r\n  }\r\n\r\n  var tracker = getTracker(node);\r\n  // if there is no tracker at this point it's unlikely\r\n  // that trying again will succeed\r\n  if (!tracker) {\r\n    return true;\r\n  }\r\n\r\n  var lastValue = tracker.getValue();\r\n  var nextValue = getValueFromNode(node);\r\n  if (nextValue !== lastValue) {\r\n    tracker.setValue(nextValue);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\n// Prevent newer renderers from RTE when used with older react package versions.\r\n// Current owner and dispatcher used to share the same ref,\r\n// but PR #14548 split them out to better support the react-debug-tools package.\r\nif (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {\r\n  ReactSharedInternals.ReactCurrentDispatcher = {\r\n    current: null\r\n  };\r\n}\r\n\r\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nvar describeComponentFrame = function (name, source, ownerName) {\r\n  var sourceInfo = '';\r\n  if (source) {\r\n    var path = source.fileName;\r\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    {\r\n      // In DEV, include code for a common special case:\r\n      // prefer \"folder/index.js\" instead of just \"index.js\".\r\n      if (/^index\\./.test(fileName)) {\r\n        var match = path.match(BEFORE_SLASH_RE);\r\n        if (match) {\r\n          var pathBeforeSlash = match[1];\r\n          if (pathBeforeSlash) {\r\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n            fileName = folderName + '/' + fileName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n};\r\n\r\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\r\n// nor polyfill, then a plain number is used for performance.\r\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\r\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\r\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\r\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\r\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\r\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\r\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\r\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\r\n\r\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\r\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\r\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\r\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\r\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\r\n\r\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n\r\nvar Pending = 0;\r\nvar Resolved = 1;\r\nvar Rejected = 2;\r\n\r\nfunction refineResolvedLazyComponent(lazyComponent) {\r\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\r\n}\r\n\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  var functionName = innerType.displayName || innerType.name || '';\r\n  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);\r\n}\r\n\r\nfunction getComponentName(type) {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  {\r\n    if (typeof type.tag === 'number') {\r\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return type.displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_CONCURRENT_MODE_TYPE:\r\n      return 'ConcurrentMode';\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        return 'Context.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        return 'Context.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        return getComponentName(type.type);\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var thenable = type;\r\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\r\n          if (resolvedThenable) {\r\n            return getComponentName(resolvedThenable);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction describeFiber(fiber) {\r\n  switch (fiber.tag) {\r\n    case HostRoot:\r\n    case HostPortal:\r\n    case HostText:\r\n    case Fragment:\r\n    case ContextProvider:\r\n    case ContextConsumer:\r\n      return '';\r\n    default:\r\n      var owner = fiber._debugOwner;\r\n      var source = fiber._debugSource;\r\n      var name = getComponentName(fiber.type);\r\n      var ownerName = null;\r\n      if (owner) {\r\n        ownerName = getComponentName(owner.type);\r\n      }\r\n      return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction getStackByFiberInDevAndProd(workInProgress) {\r\n  var info = '';\r\n  var node = workInProgress;\r\n  do {\r\n    info += describeFiber(node);\r\n    node = node.return;\r\n  } while (node);\r\n  return info;\r\n}\r\n\r\nvar current = null;\r\nvar phase = null;\r\n\r\nfunction getCurrentFiberOwnerNameInDevOrNull() {\r\n  {\r\n    if (current === null) {\r\n      return null;\r\n    }\r\n    var owner = current._debugOwner;\r\n    if (owner !== null && typeof owner !== 'undefined') {\r\n      return getComponentName(owner.type);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getCurrentFiberStackInDev() {\r\n  {\r\n    if (current === null) {\r\n      return '';\r\n    }\r\n    // Safe because if current fiber exists, we are reconciling,\r\n    // and it is guaranteed to be the work-in-progress version.\r\n    return getStackByFiberInDevAndProd(current);\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction resetCurrentFiber() {\r\n  {\r\n    ReactDebugCurrentFrame.getCurrentStack = null;\r\n    current = null;\r\n    phase = null;\r\n  }\r\n}\r\n\r\nfunction setCurrentFiber(fiber) {\r\n  {\r\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\r\n    current = fiber;\r\n    phase = null;\r\n  }\r\n}\r\n\r\nfunction setCurrentPhase(lifeCyclePhase) {\r\n  {\r\n    phase = lifeCyclePhase;\r\n  }\r\n}\r\n\r\n/**\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar warning = warningWithoutStack$1;\r\n\r\n{\r\n  warning = function (condition, format) {\r\n    if (condition) {\r\n      return;\r\n    }\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\r\n\r\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n      args[_key - 2] = arguments[_key];\r\n    }\r\n\r\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\r\n  };\r\n}\r\n\r\nvar warning$1 = warning;\r\n\r\n// A reserved attribute.\r\n// It is handled by React separately and shouldn't be written to the DOM.\r\nvar RESERVED = 0;\r\n\r\n// A simple string attribute.\r\n// Attributes that aren't in the whitelist are presumed to have this type.\r\nvar STRING = 1;\r\n\r\n// A string attribute that accepts booleans in React. In HTML, these are called\r\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\r\n// When true, it should be set to a \"true\" string.\r\n// When false, it should be set to a \"false\" string.\r\nvar BOOLEANISH_STRING = 2;\r\n\r\n// A real boolean attribute.\r\n// When true, it should be present (set either to an empty string or its name).\r\n// When false, it should be omitted.\r\nvar BOOLEAN = 3;\r\n\r\n// An attribute that can be used as a flag as well as with a value.\r\n// When true, it should be present (set either to an empty string or its name).\r\n// When false, it should be omitted.\r\n// For any other value, should be present with that value.\r\nvar OVERLOADED_BOOLEAN = 4;\r\n\r\n// An attribute that must be numeric or parse as a numeric.\r\n// When falsy, it should be removed.\r\nvar NUMERIC = 5;\r\n\r\n// An attribute that must be positive numeric or parse as a positive numeric.\r\n// When falsy, it should be removed.\r\nvar POSITIVE_NUMERIC = 6;\r\n\r\n/* eslint-disable max-len */\r\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\r\n/* eslint-enable max-len */\r\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\r\n\r\n\r\nvar ROOT_ATTRIBUTE_NAME = 'data-reactroot';\r\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar illegalAttributeNameCache = {};\r\nvar validatedAttributeNameCache = {};\r\n\r\nfunction isAttributeNameSafe(attributeName) {\r\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\r\n    return true;\r\n  }\r\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\r\n    return false;\r\n  }\r\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\r\n    validatedAttributeNameCache[attributeName] = true;\r\n    return true;\r\n  }\r\n  illegalAttributeNameCache[attributeName] = true;\r\n  {\r\n    warning$1(false, 'Invalid attribute name: `%s`', attributeName);\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {\r\n  if (propertyInfo !== null) {\r\n    return propertyInfo.type === RESERVED;\r\n  }\r\n  if (isCustomComponentTag) {\r\n    return false;\r\n  }\r\n  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\r\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\r\n    return false;\r\n  }\r\n  switch (typeof value) {\r\n    case 'function':\r\n    // $FlowIssue symbol is perfectly valid here\r\n    case 'symbol':\r\n      // eslint-disable-line\r\n      return true;\r\n    case 'boolean':\r\n      {\r\n        if (isCustomComponentTag) {\r\n          return false;\r\n        }\r\n        if (propertyInfo !== null) {\r\n          return !propertyInfo.acceptsBooleans;\r\n        } else {\r\n          var prefix = name.toLowerCase().slice(0, 5);\r\n          return prefix !== 'data-' && prefix !== 'aria-';\r\n        }\r\n      }\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {\r\n  if (value === null || typeof value === 'undefined') {\r\n    return true;\r\n  }\r\n  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {\r\n    return true;\r\n  }\r\n  if (isCustomComponentTag) {\r\n    return false;\r\n  }\r\n  if (propertyInfo !== null) {\r\n    switch (propertyInfo.type) {\r\n      case BOOLEAN:\r\n        return !value;\r\n      case OVERLOADED_BOOLEAN:\r\n        return value === false;\r\n      case NUMERIC:\r\n        return isNaN(value);\r\n      case POSITIVE_NUMERIC:\r\n        return isNaN(value) || value < 1;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getPropertyInfo(name) {\r\n  return properties.hasOwnProperty(name) ? properties[name] : null;\r\n}\r\n\r\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {\r\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\r\n  this.attributeName = attributeName;\r\n  this.attributeNamespace = attributeNamespace;\r\n  this.mustUseProperty = mustUseProperty;\r\n  this.propertyName = name;\r\n  this.type = type;\r\n}\r\n\r\n// When adding attributes to this list, be sure to also add them to\r\n// the `possibleStandardNames` module to ensure casing and incorrect\r\n// name warnings.\r\nvar properties = {};\r\n\r\n// These props are reserved by React. They shouldn't be written to the DOM.\r\n['children', 'dangerouslySetInnerHTML',\r\n// TODO: This prevents the assignment of defaultValue to regular\r\n// elements (not just inputs). Now that ReactDOMInput assigns to the\r\n// defaultValue property -- do we need this?\r\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\r\n  name, // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// A few React string attributes have a different name.\r\n// This is a mapping from React prop names to the attribute names.\r\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\r\n  var name = _ref[0],\r\n      attributeName = _ref[1];\r\n\r\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\r\n  attributeName, // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\r\n// In React, we let users pass `true` and `false` even though technically\r\n// these aren't boolean attributes (they are coerced to strings).\r\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\r\n  name.toLowerCase(), // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\r\n// In React, we let users pass `true` and `false` even though technically\r\n// these aren't boolean attributes (they are coerced to strings).\r\n// Since these are SVG attributes, their attribute names are case-sensitive.\r\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\r\n  name, // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are HTML boolean attributes.\r\n['allowFullScreen', 'async',\r\n// Note: there is a special case that prevents it from being written to the DOM\r\n// on the client side because the browsers are inconsistent. Instead we call focus().\r\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',\r\n// Microdata\r\n'itemScope'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\r\n  name.toLowerCase(), // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are the few React props that we set as DOM properties\r\n// rather than attributes. These are all booleans.\r\n['checked',\r\n// Note: `option.selected` is not updated if `select.multiple` is\r\n// disabled with `removeAttribute`. We have special logic for handling this.\r\n'multiple', 'muted', 'selected'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\r\n  name, // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are HTML attributes that are \"overloaded booleans\": they behave like\r\n// booleans, but can also accept a string value.\r\n['capture', 'download'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\r\n  name, // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are HTML attributes that must be positive numbers.\r\n['cols', 'rows', 'size', 'span'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\r\n  name, // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n// These are HTML attributes that must be numbers.\r\n['rowSpan', 'start'].forEach(function (name) {\r\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\r\n  name.toLowerCase(), // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\r\nvar capitalize = function (token) {\r\n  return token[1].toUpperCase();\r\n};\r\n\r\n// This is a list of all SVG attributes that need special casing, namespacing,\r\n// or boolean value assignment. Regular attributes that just accept strings\r\n// and have the same names are omitted, just like in the HTML whitelist.\r\n// Some of these attributes can be hard to find. This list was created by\r\n// scrapping the MDN documentation.\r\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {\r\n  var name = attributeName.replace(CAMELIZE, capitalize);\r\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\r\n  attributeName, null);\r\n} // attributeNamespace\r\n);\r\n\r\n// String SVG attributes with the xlink namespace.\r\n['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {\r\n  var name = attributeName.replace(CAMELIZE, capitalize);\r\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\r\n  attributeName, 'http://www.w3.org/1999/xlink');\r\n});\r\n\r\n// String SVG attributes with the xml namespace.\r\n['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {\r\n  var name = attributeName.replace(CAMELIZE, capitalize);\r\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\r\n  attributeName, 'http://www.w3.org/XML/1998/namespace');\r\n});\r\n\r\n// These attribute exists both in HTML and SVG.\r\n// The attribute name is case-sensitive in SVG so we can't just use\r\n// the React name like we do for attributes that exist only in HTML.\r\n['tabIndex', 'crossOrigin'].forEach(function (attributeName) {\r\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\r\n  attributeName.toLowerCase(), // attributeName\r\n  null);\r\n} // attributeNamespace\r\n);\r\n\r\n/**\r\n * Get the value for a property on a node. Only used in DEV for SSR validation.\r\n * The \"expected\" argument is used as a hint of what the expected value is.\r\n * Some properties have multiple equivalent values.\r\n */\r\nfunction getValueForProperty(node, name, expected, propertyInfo) {\r\n  {\r\n    if (propertyInfo.mustUseProperty) {\r\n      var propertyName = propertyInfo.propertyName;\r\n\r\n      return node[propertyName];\r\n    } else {\r\n      var attributeName = propertyInfo.attributeName;\r\n\r\n      var stringValue = null;\r\n\r\n      if (propertyInfo.type === OVERLOADED_BOOLEAN) {\r\n        if (node.hasAttribute(attributeName)) {\r\n          var value = node.getAttribute(attributeName);\r\n          if (value === '') {\r\n            return true;\r\n          }\r\n          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\r\n            return value;\r\n          }\r\n          if (value === '' + expected) {\r\n            return expected;\r\n          }\r\n          return value;\r\n        }\r\n      } else if (node.hasAttribute(attributeName)) {\r\n        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\r\n          // We had an attribute but shouldn't have had one, so read it\r\n          // for the error message.\r\n          return node.getAttribute(attributeName);\r\n        }\r\n        if (propertyInfo.type === BOOLEAN) {\r\n          // If this was a boolean, it doesn't matter what the value is\r\n          // the fact that we have it is the same as the expected.\r\n          return expected;\r\n        }\r\n        // Even if this property uses a namespace we use getAttribute\r\n        // because we assume its namespaced name is the same as our config.\r\n        // To use getAttributeNS we need the local name which we don't have\r\n        // in our config atm.\r\n        stringValue = node.getAttribute(attributeName);\r\n      }\r\n\r\n      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\r\n        return stringValue === null ? expected : stringValue;\r\n      } else if (stringValue === '' + expected) {\r\n        return expected;\r\n      } else {\r\n        return stringValue;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the value for a attribute on a node. Only used in DEV for SSR validation.\r\n * The third argument is used as a hint of what the expected value is. Some\r\n * attributes have multiple equivalent values.\r\n */\r\nfunction getValueForAttribute(node, name, expected) {\r\n  {\r\n    if (!isAttributeNameSafe(name)) {\r\n      return;\r\n    }\r\n    if (!node.hasAttribute(name)) {\r\n      return expected === undefined ? undefined : null;\r\n    }\r\n    var value = node.getAttribute(name);\r\n    if (value === '' + expected) {\r\n      return expected;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Sets the value for a property on a node.\r\n *\r\n * @param {DOMElement} node\r\n * @param {string} name\r\n * @param {*} value\r\n */\r\nfunction setValueForProperty(node, name, value, isCustomComponentTag) {\r\n  var propertyInfo = getPropertyInfo(name);\r\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\r\n    return;\r\n  }\r\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\r\n    value = null;\r\n  }\r\n  // If the prop isn't in the special list, treat it as a simple attribute.\r\n  if (isCustomComponentTag || propertyInfo === null) {\r\n    if (isAttributeNameSafe(name)) {\r\n      var _attributeName = name;\r\n      if (value === null) {\r\n        node.removeAttribute(_attributeName);\r\n      } else {\r\n        node.setAttribute(_attributeName, '' + value);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n  var mustUseProperty = propertyInfo.mustUseProperty;\r\n\r\n  if (mustUseProperty) {\r\n    var propertyName = propertyInfo.propertyName;\r\n\r\n    if (value === null) {\r\n      var type = propertyInfo.type;\r\n\r\n      node[propertyName] = type === BOOLEAN ? false : '';\r\n    } else {\r\n      // Contrary to `setAttribute`, object properties are properly\r\n      // `toString`ed by IE8/9.\r\n      node[propertyName] = value;\r\n    }\r\n    return;\r\n  }\r\n  // The rest are treated as attributes with special cases.\r\n  var attributeName = propertyInfo.attributeName,\r\n      attributeNamespace = propertyInfo.attributeNamespace;\r\n\r\n  if (value === null) {\r\n    node.removeAttribute(attributeName);\r\n  } else {\r\n    var _type = propertyInfo.type;\r\n\r\n    var attributeValue = void 0;\r\n    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {\r\n      attributeValue = '';\r\n    } else {\r\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\r\n      // ('' + value) makes it output the correct toString()-value.\r\n      attributeValue = '' + value;\r\n    }\r\n    if (attributeNamespace) {\r\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\r\n    } else {\r\n      node.setAttribute(attributeName, attributeValue);\r\n    }\r\n  }\r\n}\r\n\r\n// Flow does not allow string concatenation of most non-string types. To work\r\n// around this limitation, we use an opaque type that can only be obtained by\r\n// passing the value through getToStringValue first.\r\nfunction toString(value) {\r\n  return '' + value;\r\n}\r\n\r\nfunction getToStringValue(value) {\r\n  switch (typeof value) {\r\n    case 'boolean':\r\n    case 'number':\r\n    case 'object':\r\n    case 'string':\r\n    case 'undefined':\r\n      return value;\r\n    default:\r\n      // function, symbol are assigned as empty strings\r\n      return '';\r\n  }\r\n}\r\n\r\nvar ReactDebugCurrentFrame$1 = null;\r\n\r\nvar ReactControlledValuePropTypes = {\r\n  checkPropTypes: null\r\n};\r\n\r\n{\r\n  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\n  var hasReadOnlyValue = {\r\n    button: true,\r\n    checkbox: true,\r\n    image: true,\r\n    hidden: true,\r\n    radio: true,\r\n    reset: true,\r\n    submit: true\r\n  };\r\n\r\n  var propTypes = {\r\n    value: function (props, propName, componentName) {\r\n      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {\r\n        return null;\r\n      }\r\n      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\r\n    },\r\n    checked: function (props, propName, componentName) {\r\n      if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {\r\n        return null;\r\n      }\r\n      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Provide a linked `value` attribute for controlled forms. You should not use\r\n   * this outside of the ReactDOM controlled form components.\r\n   */\r\n  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {\r\n    checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);\r\n  };\r\n}\r\n\r\nvar enableUserTimingAPI = true;\r\n\r\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\r\nvar debugRenderPhaseSideEffects = false;\r\n\r\n// In some cases, StrictMode should also double-render lifecycles.\r\n// This can be confusing for tests though,\r\n// And it can be bad for performance in production.\r\n// This feature flag can be used to control the behavior:\r\nvar debugRenderPhaseSideEffectsForStrictMode = true;\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\nvar replayFailedUnitOfWorkWithInvokeGuardedCallback = true;\r\n\r\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\r\nvar warnAboutDeprecatedLifecycles = false;\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\nvar enableProfilerTimer = true;\r\n\r\n// Trace which interactions trigger each commit.\r\nvar enableSchedulerTracing = true;\r\n\r\n// Only used in www builds.\r\nvar enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// React Fire: prevent the value and checked attributes from syncing\r\n// with their related DOM properties\r\nvar disableInputAttributeSyncing = false;\r\n\r\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\r\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\r\nvar enableStableConcurrentModeAPIs = false;\r\n\r\nvar warnAboutShorthandPropertyCollision = false;\r\n\r\n// TODO: direct imports like some-package/src/* are bad. Fix me.\r\nvar didWarnValueDefaultValue = false;\r\nvar didWarnCheckedDefaultChecked = false;\r\nvar didWarnControlledToUncontrolled = false;\r\nvar didWarnUncontrolledToControlled = false;\r\n\r\nfunction isControlled(props) {\r\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\r\n  return usesChecked ? props.checked != null : props.value != null;\r\n}\r\n\r\n/**\r\n * Implements an <input> host component that allows setting these optional\r\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\r\n *\r\n * If `checked` or `value` are not supplied (or null/undefined), user actions\r\n * that affect the checked state or value will trigger updates to the element.\r\n *\r\n * If they are supplied (and not null/undefined), the rendered element will not\r\n * trigger updates to the element. Instead, the props must change in order for\r\n * the rendered element to be updated.\r\n *\r\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\r\n * with an empty value (or `defaultValue`).\r\n *\r\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\r\n */\r\n\r\nfunction getHostProps(element, props) {\r\n  var node = element;\r\n  var checked = props.checked;\r\n\r\n  var hostProps = _assign({}, props, {\r\n    defaultChecked: undefined,\r\n    defaultValue: undefined,\r\n    value: undefined,\r\n    checked: checked != null ? checked : node._wrapperState.initialChecked\r\n  });\r\n\r\n  return hostProps;\r\n}\r\n\r\nfunction initWrapperState(element, props) {\r\n  {\r\n    ReactControlledValuePropTypes.checkPropTypes('input', props);\r\n\r\n    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\r\n      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\r\n      didWarnCheckedDefaultChecked = true;\r\n    }\r\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\r\n      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\r\n      didWarnValueDefaultValue = true;\r\n    }\r\n  }\r\n\r\n  var node = element;\r\n  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;\r\n\r\n  node._wrapperState = {\r\n    initialChecked: props.checked != null ? props.checked : props.defaultChecked,\r\n    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),\r\n    controlled: isControlled(props)\r\n  };\r\n}\r\n\r\nfunction updateChecked(element, props) {\r\n  var node = element;\r\n  var checked = props.checked;\r\n  if (checked != null) {\r\n    setValueForProperty(node, 'checked', checked, false);\r\n  }\r\n}\r\n\r\nfunction updateWrapper(element, props) {\r\n  var node = element;\r\n  {\r\n    var _controlled = isControlled(props);\r\n\r\n    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {\r\n      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);\r\n      didWarnUncontrolledToControlled = true;\r\n    }\r\n    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {\r\n      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);\r\n      didWarnControlledToUncontrolled = true;\r\n    }\r\n  }\r\n\r\n  updateChecked(element, props);\r\n\r\n  var value = getToStringValue(props.value);\r\n  var type = props.type;\r\n\r\n  if (value != null) {\r\n    if (type === 'number') {\r\n      if (value === 0 && node.value === '' ||\r\n      // We explicitly want to coerce to number here if possible.\r\n      // eslint-disable-next-line\r\n      node.value != value) {\r\n        node.value = toString(value);\r\n      }\r\n    } else if (node.value !== toString(value)) {\r\n      node.value = toString(value);\r\n    }\r\n  } else if (type === 'submit' || type === 'reset') {\r\n    // Submit/reset inputs need the attribute removed completely to avoid\r\n    // blank-text buttons.\r\n    node.removeAttribute('value');\r\n    return;\r\n  }\r\n\r\n  if (disableInputAttributeSyncing) {\r\n    // When not syncing the value attribute, React only assigns a new value\r\n    // whenever the defaultValue React prop has changed. When not present,\r\n    // React does nothing\r\n    if (props.hasOwnProperty('defaultValue')) {\r\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\r\n    }\r\n  } else {\r\n    // When syncing the value attribute, the value comes from a cascade of\r\n    // properties:\r\n    //  1. The value React property\r\n    //  2. The defaultValue React property\r\n    //  3. Otherwise there should be no change\r\n    if (props.hasOwnProperty('value')) {\r\n      setDefaultValue(node, props.type, value);\r\n    } else if (props.hasOwnProperty('defaultValue')) {\r\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\r\n    }\r\n  }\r\n\r\n  if (disableInputAttributeSyncing) {\r\n    // When not syncing the checked attribute, the attribute is directly\r\n    // controllable from the defaultValue React property. It needs to be\r\n    // updated as new props come in.\r\n    if (props.defaultChecked == null) {\r\n      node.removeAttribute('checked');\r\n    } else {\r\n      node.defaultChecked = !!props.defaultChecked;\r\n    }\r\n  } else {\r\n    // When syncing the checked attribute, it only changes when it needs\r\n    // to be removed, such as transitioning from a checkbox into a text input\r\n    if (props.checked == null && props.defaultChecked != null) {\r\n      node.defaultChecked = !!props.defaultChecked;\r\n    }\r\n  }\r\n}\r\n\r\nfunction postMountWrapper(element, props, isHydrating) {\r\n  var node = element;\r\n\r\n  // Do not assign value if it is already set. This prevents user text input\r\n  // from being lost during SSR hydration.\r\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\r\n    var type = props.type;\r\n    var isButton = type === 'submit' || type === 'reset';\r\n\r\n    // Avoid setting value attribute on submit/reset inputs as it overrides the\r\n    // default value provided by the browser. See: #12872\r\n    if (isButton && (props.value === undefined || props.value === null)) {\r\n      return;\r\n    }\r\n\r\n    var _initialValue = toString(node._wrapperState.initialValue);\r\n\r\n    // Do not assign value if it is already set. This prevents user text input\r\n    // from being lost during SSR hydration.\r\n    if (!isHydrating) {\r\n      if (disableInputAttributeSyncing) {\r\n        var value = getToStringValue(props.value);\r\n\r\n        // When not syncing the value attribute, the value property points\r\n        // directly to the React prop. Only assign it if it exists.\r\n        if (value != null) {\r\n          // Always assign on buttons so that it is possible to assign an\r\n          // empty string to clear button text.\r\n          //\r\n          // Otherwise, do not re-assign the value property if is empty. This\r\n          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from\r\n          // prematurely marking required inputs as invalid. Equality is compared\r\n          // to the current value in case the browser provided value is not an\r\n          // empty string.\r\n          if (isButton || value !== node.value) {\r\n            node.value = toString(value);\r\n          }\r\n        }\r\n      } else {\r\n        // When syncing the value attribute, the value property should use\r\n        // the wrapperState._initialValue property. This uses:\r\n        //\r\n        //   1. The value React property when present\r\n        //   2. The defaultValue React property when present\r\n        //   3. An empty string\r\n        if (_initialValue !== node.value) {\r\n          node.value = _initialValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (disableInputAttributeSyncing) {\r\n      // When not syncing the value attribute, assign the value attribute\r\n      // directly from the defaultValue React property (when present)\r\n      var defaultValue = getToStringValue(props.defaultValue);\r\n      if (defaultValue != null) {\r\n        node.defaultValue = toString(defaultValue);\r\n      }\r\n    } else {\r\n      // Otherwise, the value attribute is synchronized to the property,\r\n      // so we assign defaultValue to the same thing as the value property\r\n      // assignment step above.\r\n      node.defaultValue = _initialValue;\r\n    }\r\n  }\r\n\r\n  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\r\n  // this is needed to work around a chrome bug where setting defaultChecked\r\n  // will sometimes influence the value of checked (even after detachment).\r\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\r\n  // We need to temporarily unset name to avoid disrupting radio button groups.\r\n  var name = node.name;\r\n  if (name !== '') {\r\n    node.name = '';\r\n  }\r\n\r\n  if (disableInputAttributeSyncing) {\r\n    // When not syncing the checked attribute, the checked property\r\n    // never gets assigned. It must be manually set. We don't want\r\n    // to do this when hydrating so that existing user input isn't\r\n    // modified\r\n    if (!isHydrating) {\r\n      updateChecked(element, props);\r\n    }\r\n\r\n    // Only assign the checked attribute if it is defined. This saves\r\n    // a DOM write when controlling the checked attribute isn't needed\r\n    // (text inputs, submit/reset)\r\n    if (props.hasOwnProperty('defaultChecked')) {\r\n      node.defaultChecked = !node.defaultChecked;\r\n      node.defaultChecked = !!props.defaultChecked;\r\n    }\r\n  } else {\r\n    // When syncing the checked attribute, both the checked property and\r\n    // attribute are assigned at the same time using defaultChecked. This uses:\r\n    //\r\n    //   1. The checked React property when present\r\n    //   2. The defaultChecked React property when present\r\n    //   3. Otherwise, false\r\n    node.defaultChecked = !node.defaultChecked;\r\n    node.defaultChecked = !!node._wrapperState.initialChecked;\r\n  }\r\n\r\n  if (name !== '') {\r\n    node.name = name;\r\n  }\r\n}\r\n\r\nfunction restoreControlledState(element, props) {\r\n  var node = element;\r\n  updateWrapper(node, props);\r\n  updateNamedCousins(node, props);\r\n}\r\n\r\nfunction updateNamedCousins(rootNode, props) {\r\n  var name = props.name;\r\n  if (props.type === 'radio' && name != null) {\r\n    var queryRoot = rootNode;\r\n\r\n    while (queryRoot.parentNode) {\r\n      queryRoot = queryRoot.parentNode;\r\n    }\r\n\r\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\r\n    // but that sometimes behaves strangely in IE8. We could also try using\r\n    // `form.getElementsByName`, but that will only return direct children\r\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\r\n    // the input might not even be in a form. It might not even be in the\r\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\r\n    // miss anything.\r\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\r\n\r\n    for (var i = 0; i < group.length; i++) {\r\n      var otherNode = group[i];\r\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\r\n        continue;\r\n      }\r\n      // This will throw if radio buttons rendered by different copies of React\r\n      // and the same name are rendered into the same form (same as #1939).\r\n      // That's probably okay; we don't support it just as we don't support\r\n      // mixing React radio buttons with non-React ones.\r\n      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);\r\n      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;\r\n\r\n      // We need update the tracked value on the named cousin since the value\r\n      // was changed but the input saw no event or value set\r\n      updateValueIfChanged(otherNode);\r\n\r\n      // If this is a controlled radio button group, forcing the input that\r\n      // was previously checked to update will cause it to be come re-checked\r\n      // as appropriate.\r\n      updateWrapper(otherNode, otherProps);\r\n    }\r\n  }\r\n}\r\n\r\n// In Chrome, assigning defaultValue to certain input types triggers input validation.\r\n// For number inputs, the display value loses trailing decimal points. For email inputs,\r\n// Chrome raises \"The specified value <x> is not a valid email address\".\r\n//\r\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\r\n// when the user is inputting text\r\n//\r\n// https://github.com/facebook/react/issues/7253\r\nfunction setDefaultValue(node, type, value) {\r\n  if (\r\n  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\r\n  type !== 'number' || node.ownerDocument.activeElement !== node) {\r\n    if (value == null) {\r\n      node.defaultValue = toString(node._wrapperState.initialValue);\r\n    } else if (node.defaultValue !== toString(value)) {\r\n      node.defaultValue = toString(value);\r\n    }\r\n  }\r\n}\r\n\r\nvar eventTypes$1 = {\r\n  change: {\r\n    phasedRegistrationNames: {\r\n      bubbled: 'onChange',\r\n      captured: 'onChangeCapture'\r\n    },\r\n    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]\r\n  }\r\n};\r\n\r\nfunction createAndAccumulateChangeEvent(inst, nativeEvent, target) {\r\n  var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);\r\n  event.type = 'change';\r\n  // Flag this event loop as needing state restore.\r\n  enqueueStateRestore(target);\r\n  accumulateTwoPhaseDispatches(event);\r\n  return event;\r\n}\r\n/**\r\n * For IE shims\r\n */\r\nvar activeElement = null;\r\nvar activeElementInst = null;\r\n\r\n/**\r\n * SECTION: handle `change` event\r\n */\r\nfunction shouldUseChangeEvent(elem) {\r\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\r\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\r\n}\r\n\r\nfunction manualDispatchChangeEvent(nativeEvent) {\r\n  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));\r\n\r\n  // If change and propertychange bubbled, we'd just bind to it like all the\r\n  // other events and have it go through ReactBrowserEventEmitter. Since it\r\n  // doesn't, we manually listen for the events and so we have to enqueue and\r\n  // process the abstract event manually.\r\n  //\r\n  // Batching is necessary here in order to ensure that all event handlers run\r\n  // before the next rerender (including event handlers attached to ancestor\r\n  // elements instead of directly on the input). Without this, controlled\r\n  // components don't work properly in conjunction with event bubbling because\r\n  // the component is rerendered and the value reverted before all the event\r\n  // handlers can run. See https://github.com/facebook/react/issues/708.\r\n  batchedUpdates(runEventInBatch, event);\r\n}\r\n\r\nfunction runEventInBatch(event) {\r\n  runEventsInBatch(event);\r\n}\r\n\r\nfunction getInstIfValueChanged(targetInst) {\r\n  var targetNode = getNodeFromInstance$1(targetInst);\r\n  if (updateValueIfChanged(targetNode)) {\r\n    return targetInst;\r\n  }\r\n}\r\n\r\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\r\n  if (topLevelType === TOP_CHANGE) {\r\n    return targetInst;\r\n  }\r\n}\r\n\r\n/**\r\n * SECTION: handle `input` event\r\n */\r\nvar isInputEventSupported = false;\r\nif (canUseDOM) {\r\n  // IE9 claims to support the input event but fails to trigger it when\r\n  // deleting text, so we ignore its input events.\r\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);\r\n}\r\n\r\n/**\r\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\r\n * and override the value property so that we can distinguish user events from\r\n * value changes in JS.\r\n */\r\nfunction startWatchingForValueChange(target, targetInst) {\r\n  activeElement = target;\r\n  activeElementInst = targetInst;\r\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\r\n}\r\n\r\n/**\r\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\r\n * if any exists.\r\n */\r\nfunction stopWatchingForValueChange() {\r\n  if (!activeElement) {\r\n    return;\r\n  }\r\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\r\n  activeElement = null;\r\n  activeElementInst = null;\r\n}\r\n\r\n/**\r\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\r\n * the value of the active element has changed.\r\n */\r\nfunction handlePropertyChange(nativeEvent) {\r\n  if (nativeEvent.propertyName !== 'value') {\r\n    return;\r\n  }\r\n  if (getInstIfValueChanged(activeElementInst)) {\r\n    manualDispatchChangeEvent(nativeEvent);\r\n  }\r\n}\r\n\r\nfunction handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {\r\n  if (topLevelType === TOP_FOCUS) {\r\n    // In IE9, propertychange fires for most input events but is buggy and\r\n    // doesn't fire when text is deleted, but conveniently, selectionchange\r\n    // appears to fire in all of the remaining cases so we catch those and\r\n    // forward the event if the value has changed\r\n    // In either case, we don't want to call the event handler if the value\r\n    // is changed from JS so we redefine a setter for `.value` that updates\r\n    // our activeElementValue variable, allowing us to ignore those changes\r\n    //\r\n    // stopWatching() should be a noop here but we call it just in case we\r\n    // missed a blur event somehow.\r\n    stopWatchingForValueChange();\r\n    startWatchingForValueChange(target, targetInst);\r\n  } else if (topLevelType === TOP_BLUR) {\r\n    stopWatchingForValueChange();\r\n  }\r\n}\r\n\r\n// For IE8 and IE9.\r\nfunction getTargetInstForInputEventPolyfill(topLevelType, targetInst) {\r\n  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {\r\n    // On the selectionchange event, the target is just document which isn't\r\n    // helpful for us so just check activeElement instead.\r\n    //\r\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\r\n    // propertychange on the first input event after setting `value` from a\r\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\r\n    // gets it and catching keydown lets us fire an event for the first\r\n    // keystroke if user does a key repeat (it'll be a little delayed: right\r\n    // before the second keystroke). Other input methods (e.g., paste) seem to\r\n    // fire selectionchange normally.\r\n    return getInstIfValueChanged(activeElementInst);\r\n  }\r\n}\r\n\r\n/**\r\n * SECTION: handle `click` event\r\n */\r\nfunction shouldUseClickEvent(elem) {\r\n  // Use the `click` event to detect changes to checkbox and radio inputs.\r\n  // This approach works across all browsers, whereas `change` does not fire\r\n  // until `blur` in IE8.\r\n  var nodeName = elem.nodeName;\r\n  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\r\n}\r\n\r\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\r\n  if (topLevelType === TOP_CLICK) {\r\n    return getInstIfValueChanged(targetInst);\r\n  }\r\n}\r\n\r\nfunction getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {\r\n  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {\r\n    return getInstIfValueChanged(targetInst);\r\n  }\r\n}\r\n\r\nfunction handleControlledInputBlur(node) {\r\n  var state = node._wrapperState;\r\n\r\n  if (!state || !state.controlled || node.type !== 'number') {\r\n    return;\r\n  }\r\n\r\n  if (!disableInputAttributeSyncing) {\r\n    // If controlled, assign the value attribute to the current value on blur\r\n    setDefaultValue(node, 'number', node.value);\r\n  }\r\n}\r\n\r\n/**\r\n * This plugin creates an `onChange` event that normalizes change events\r\n * across form elements. This event fires at a time when it's possible to\r\n * change the element's value without seeing a flicker.\r\n *\r\n * Supported elements are:\r\n * - input (see `isTextInputElement`)\r\n * - textarea\r\n * - select\r\n */\r\nvar ChangeEventPlugin = {\r\n  eventTypes: eventTypes$1,\r\n\r\n  _isInputEventSupported: isInputEventSupported,\r\n\r\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;\r\n\r\n    var getTargetInstFunc = void 0,\r\n        handleEventFunc = void 0;\r\n    if (shouldUseChangeEvent(targetNode)) {\r\n      getTargetInstFunc = getTargetInstForChangeEvent;\r\n    } else if (isTextInputElement(targetNode)) {\r\n      if (isInputEventSupported) {\r\n        getTargetInstFunc = getTargetInstForInputOrChangeEvent;\r\n      } else {\r\n        getTargetInstFunc = getTargetInstForInputEventPolyfill;\r\n        handleEventFunc = handleEventsForInputEventPolyfill;\r\n      }\r\n    } else if (shouldUseClickEvent(targetNode)) {\r\n      getTargetInstFunc = getTargetInstForClickEvent;\r\n    }\r\n\r\n    if (getTargetInstFunc) {\r\n      var inst = getTargetInstFunc(topLevelType, targetInst);\r\n      if (inst) {\r\n        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);\r\n        return event;\r\n      }\r\n    }\r\n\r\n    if (handleEventFunc) {\r\n      handleEventFunc(topLevelType, targetNode, targetInst);\r\n    }\r\n\r\n    // When blurring, set the value attribute for number inputs\r\n    if (topLevelType === TOP_BLUR) {\r\n      handleControlledInputBlur(targetNode);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Module that is injectable into `EventPluginHub`, that specifies a\r\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\r\n * plugins, without having to package every one of them. This is better than\r\n * having plugins be ordered in the same order that they are injected because\r\n * that ordering would be influenced by the packaging order.\r\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\r\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\r\n */\r\nvar DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\r\n\r\nvar SyntheticUIEvent = SyntheticEvent.extend({\r\n  view: null,\r\n  detail: null\r\n});\r\n\r\nvar modifierKeyToProp = {\r\n  Alt: 'altKey',\r\n  Control: 'ctrlKey',\r\n  Meta: 'metaKey',\r\n  Shift: 'shiftKey'\r\n};\r\n\r\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\r\n// getModifierState. If getModifierState is not supported, we map it to a set of\r\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\r\n/**\r\n * Translation from modifier key to the associated property in the event.\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\r\n */\r\n\r\nfunction modifierStateGetter(keyArg) {\r\n  var syntheticEvent = this;\r\n  var nativeEvent = syntheticEvent.nativeEvent;\r\n  if (nativeEvent.getModifierState) {\r\n    return nativeEvent.getModifierState(keyArg);\r\n  }\r\n  var keyProp = modifierKeyToProp[keyArg];\r\n  return keyProp ? !!nativeEvent[keyProp] : false;\r\n}\r\n\r\nfunction getEventModifierState(nativeEvent) {\r\n  return modifierStateGetter;\r\n}\r\n\r\nvar previousScreenX = 0;\r\nvar previousScreenY = 0;\r\n// Use flags to signal movementX/Y has already been set\r\nvar isMovementXSet = false;\r\nvar isMovementYSet = false;\r\n\r\n/**\r\n * @interface MouseEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar SyntheticMouseEvent = SyntheticUIEvent.extend({\r\n  screenX: null,\r\n  screenY: null,\r\n  clientX: null,\r\n  clientY: null,\r\n  pageX: null,\r\n  pageY: null,\r\n  ctrlKey: null,\r\n  shiftKey: null,\r\n  altKey: null,\r\n  metaKey: null,\r\n  getModifierState: getEventModifierState,\r\n  button: null,\r\n  buttons: null,\r\n  relatedTarget: function (event) {\r\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\r\n  },\r\n  movementX: function (event) {\r\n    if ('movementX' in event) {\r\n      return event.movementX;\r\n    }\r\n\r\n    var screenX = previousScreenX;\r\n    previousScreenX = event.screenX;\r\n\r\n    if (!isMovementXSet) {\r\n      isMovementXSet = true;\r\n      return 0;\r\n    }\r\n\r\n    return event.type === 'mousemove' ? event.screenX - screenX : 0;\r\n  },\r\n  movementY: function (event) {\r\n    if ('movementY' in event) {\r\n      return event.movementY;\r\n    }\r\n\r\n    var screenY = previousScreenY;\r\n    previousScreenY = event.screenY;\r\n\r\n    if (!isMovementYSet) {\r\n      isMovementYSet = true;\r\n      return 0;\r\n    }\r\n\r\n    return event.type === 'mousemove' ? event.screenY - screenY : 0;\r\n  }\r\n});\r\n\r\n/**\r\n * @interface PointerEvent\r\n * @see http://www.w3.org/TR/pointerevents/\r\n */\r\nvar SyntheticPointerEvent = SyntheticMouseEvent.extend({\r\n  pointerId: null,\r\n  width: null,\r\n  height: null,\r\n  pressure: null,\r\n  tangentialPressure: null,\r\n  tiltX: null,\r\n  tiltY: null,\r\n  twist: null,\r\n  pointerType: null,\r\n  isPrimary: null\r\n});\r\n\r\nvar eventTypes$2 = {\r\n  mouseEnter: {\r\n    registrationName: 'onMouseEnter',\r\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]\r\n  },\r\n  mouseLeave: {\r\n    registrationName: 'onMouseLeave',\r\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]\r\n  },\r\n  pointerEnter: {\r\n    registrationName: 'onPointerEnter',\r\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]\r\n  },\r\n  pointerLeave: {\r\n    registrationName: 'onPointerLeave',\r\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]\r\n  }\r\n};\r\n\r\nvar EnterLeaveEventPlugin = {\r\n  eventTypes: eventTypes$2,\r\n\r\n  /**\r\n   * For almost every interaction we care about, there will be both a top-level\r\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\r\n   * we do not extract duplicate events. However, moving the mouse into the\r\n   * browser from outside will not fire a `mouseout` event. In this case, we use\r\n   * the `mouseover` top-level event.\r\n   */\r\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;\r\n    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;\r\n\r\n    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\r\n      return null;\r\n    }\r\n\r\n    if (!isOutEvent && !isOverEvent) {\r\n      // Must not be a mouse or pointer in or out - ignoring.\r\n      return null;\r\n    }\r\n\r\n    var win = void 0;\r\n    if (nativeEventTarget.window === nativeEventTarget) {\r\n      // `nativeEventTarget` is probably a window object.\r\n      win = nativeEventTarget;\r\n    } else {\r\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\r\n      var doc = nativeEventTarget.ownerDocument;\r\n      if (doc) {\r\n        win = doc.defaultView || doc.parentWindow;\r\n      } else {\r\n        win = window;\r\n      }\r\n    }\r\n\r\n    var from = void 0;\r\n    var to = void 0;\r\n    if (isOutEvent) {\r\n      from = targetInst;\r\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\r\n      to = related ? getClosestInstanceFromNode(related) : null;\r\n    } else {\r\n      // Moving to a node from outside the window.\r\n      from = null;\r\n      to = targetInst;\r\n    }\r\n\r\n    if (from === to) {\r\n      // Nothing pertains to our managed components.\r\n      return null;\r\n    }\r\n\r\n    var eventInterface = void 0,\r\n        leaveEventType = void 0,\r\n        enterEventType = void 0,\r\n        eventTypePrefix = void 0;\r\n\r\n    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {\r\n      eventInterface = SyntheticMouseEvent;\r\n      leaveEventType = eventTypes$2.mouseLeave;\r\n      enterEventType = eventTypes$2.mouseEnter;\r\n      eventTypePrefix = 'mouse';\r\n    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {\r\n      eventInterface = SyntheticPointerEvent;\r\n      leaveEventType = eventTypes$2.pointerLeave;\r\n      enterEventType = eventTypes$2.pointerEnter;\r\n      eventTypePrefix = 'pointer';\r\n    }\r\n\r\n    var fromNode = from == null ? win : getNodeFromInstance$1(from);\r\n    var toNode = to == null ? win : getNodeFromInstance$1(to);\r\n\r\n    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);\r\n    leave.type = eventTypePrefix + 'leave';\r\n    leave.target = fromNode;\r\n    leave.relatedTarget = toNode;\r\n\r\n    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);\r\n    enter.type = eventTypePrefix + 'enter';\r\n    enter.target = toNode;\r\n    enter.relatedTarget = fromNode;\r\n\r\n    accumulateEnterLeaveDispatches(leave, enter, from, to);\r\n\r\n    return [leave, enter];\r\n  }\r\n};\r\n\r\n/**\r\n * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n */\r\nfunction is(x, y) {\r\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\r\n  ;\r\n}\r\n\r\nvar hasOwnProperty$1 = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Performs equality by iterating through keys on an object and returning false\r\n * when any key has values which are not strictly equal between the arguments.\r\n * Returns true when the values of all keys are strictly equal.\r\n */\r\nfunction shallowEqual(objA, objB) {\r\n  if (is(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\r\n    return false;\r\n  }\r\n\r\n  var keysA = Object.keys(objA);\r\n  var keysB = Object.keys(objB);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n\r\n  // Test for A's keys different from B.\r\n  for (var i = 0; i < keysA.length; i++) {\r\n    if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\r\n * instance (key) and the internal representation (value). This allows public\r\n * methods to accept the user facing instance as an argument and map them back\r\n * to internal methods.\r\n *\r\n * Note that this module is currently shared and assumed to be stateless.\r\n * If this becomes an actual Map, that will break.\r\n */\r\n\r\n/**\r\n * This API should be called `delete` but we'd have to make sure to always\r\n * transform these to strings for IE support. When this transform is fully\r\n * supported we can rename it.\r\n */\r\n\r\n\r\nfunction get(key) {\r\n  return key._reactInternalFiber;\r\n}\r\n\r\nfunction has(key) {\r\n  return key._reactInternalFiber !== undefined;\r\n}\r\n\r\nfunction set(key, value) {\r\n  key._reactInternalFiber = value;\r\n}\r\n\r\n// Don't change these two values. They're used by React Dev Tools.\r\nvar NoEffect = /*              */0;\r\nvar PerformedWork = /*         */1;\r\n\r\n// You can change the rest (and add more).\r\nvar Placement = /*             */2;\r\nvar Update = /*                */4;\r\nvar PlacementAndUpdate = /*    */6;\r\nvar Deletion = /*              */8;\r\nvar ContentReset = /*          */16;\r\nvar Callback = /*              */32;\r\nvar DidCapture = /*            */64;\r\nvar Ref = /*                   */128;\r\nvar Snapshot = /*              */256;\r\nvar Passive = /*               */512;\r\n\r\n// Passive & Update & Callback & Ref & Snapshot\r\nvar LifecycleEffectMask = /*   */932;\r\n\r\n// Union of all host effects\r\nvar HostEffectMask = /*        */1023;\r\n\r\nvar Incomplete = /*            */1024;\r\nvar ShouldCapture = /*         */2048;\r\n\r\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nvar MOUNTING = 1;\r\nvar MOUNTED = 2;\r\nvar UNMOUNTED = 3;\r\n\r\nfunction isFiberMountedImpl(fiber) {\r\n  var node = fiber;\r\n  if (!fiber.alternate) {\r\n    // If there is no alternate, this might be a new tree that isn't inserted\r\n    // yet. If it is, then it will have a pending insertion effect on it.\r\n    if ((node.effectTag & Placement) !== NoEffect) {\r\n      return MOUNTING;\r\n    }\r\n    while (node.return) {\r\n      node = node.return;\r\n      if ((node.effectTag & Placement) !== NoEffect) {\r\n        return MOUNTING;\r\n      }\r\n    }\r\n  } else {\r\n    while (node.return) {\r\n      node = node.return;\r\n    }\r\n  }\r\n  if (node.tag === HostRoot) {\r\n    // TODO: Check if this was a nested HostRoot when used with\r\n    // renderContainerIntoSubtree.\r\n    return MOUNTED;\r\n  }\r\n  // If we didn't hit the root, that means that we're in an disconnected tree\r\n  // that has been unmounted.\r\n  return UNMOUNTED;\r\n}\r\n\r\nfunction isFiberMounted(fiber) {\r\n  return isFiberMountedImpl(fiber) === MOUNTED;\r\n}\r\n\r\nfunction isMounted(component) {\r\n  {\r\n    var owner = ReactCurrentOwner$1.current;\r\n    if (owner !== null && owner.tag === ClassComponent) {\r\n      var ownerFiber = owner;\r\n      var instance = ownerFiber.stateNode;\r\n      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;\r\n      instance._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n\r\n  var fiber = get(component);\r\n  if (!fiber) {\r\n    return false;\r\n  }\r\n  return isFiberMountedImpl(fiber) === MOUNTED;\r\n}\r\n\r\nfunction assertIsMounted(fiber) {\r\n  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\r\n}\r\n\r\nfunction findCurrentFiberUsingSlowPath(fiber) {\r\n  var alternate = fiber.alternate;\r\n  if (!alternate) {\r\n    // If there is no alternate, then we only need to check if it is mounted.\r\n    var state = isFiberMountedImpl(fiber);\r\n    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\r\n    if (state === MOUNTING) {\r\n      return null;\r\n    }\r\n    return fiber;\r\n  }\r\n  // If we have two possible branches, we'll walk backwards up to the root\r\n  // to see what path the root points to. On the way we may hit one of the\r\n  // special cases and we'll deal with them.\r\n  var a = fiber;\r\n  var b = alternate;\r\n  while (true) {\r\n    var parentA = a.return;\r\n    var parentB = parentA ? parentA.alternate : null;\r\n    if (!parentA || !parentB) {\r\n      // We're at the root.\r\n      break;\r\n    }\r\n\r\n    // If both copies of the parent fiber point to the same child, we can\r\n    // assume that the child is current. This happens when we bailout on low\r\n    // priority: the bailed out fiber's child reuses the current child.\r\n    if (parentA.child === parentB.child) {\r\n      var child = parentA.child;\r\n      while (child) {\r\n        if (child === a) {\r\n          // We've determined that A is the current branch.\r\n          assertIsMounted(parentA);\r\n          return fiber;\r\n        }\r\n        if (child === b) {\r\n          // We've determined that B is the current branch.\r\n          assertIsMounted(parentA);\r\n          return alternate;\r\n        }\r\n        child = child.sibling;\r\n      }\r\n      // We should never have an alternate for any mounting node. So the only\r\n      // way this could possibly happen is if this was unmounted, if at all.\r\n      invariant(false, 'Unable to find node on an unmounted component.');\r\n    }\r\n\r\n    if (a.return !== b.return) {\r\n      // The return pointer of A and the return pointer of B point to different\r\n      // fibers. We assume that return pointers never criss-cross, so A must\r\n      // belong to the child set of A.return, and B must belong to the child\r\n      // set of B.return.\r\n      a = parentA;\r\n      b = parentB;\r\n    } else {\r\n      // The return pointers point to the same fiber. We'll have to use the\r\n      // default, slow path: scan the child sets of each parent alternate to see\r\n      // which child belongs to which set.\r\n      //\r\n      // Search parent A's child set\r\n      var didFindChild = false;\r\n      var _child = parentA.child;\r\n      while (_child) {\r\n        if (_child === a) {\r\n          didFindChild = true;\r\n          a = parentA;\r\n          b = parentB;\r\n          break;\r\n        }\r\n        if (_child === b) {\r\n          didFindChild = true;\r\n          b = parentA;\r\n          a = parentB;\r\n          break;\r\n        }\r\n        _child = _child.sibling;\r\n      }\r\n      if (!didFindChild) {\r\n        // Search parent B's child set\r\n        _child = parentB.child;\r\n        while (_child) {\r\n          if (_child === a) {\r\n            didFindChild = true;\r\n            a = parentB;\r\n            b = parentA;\r\n            break;\r\n          }\r\n          if (_child === b) {\r\n            didFindChild = true;\r\n            b = parentB;\r\n            a = parentA;\r\n            break;\r\n          }\r\n          _child = _child.sibling;\r\n        }\r\n        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;\r\n      }\r\n    }\r\n\r\n    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  }\r\n  // If the root is not a host container, we're in a disconnected tree. I.e.\r\n  // unmounted.\r\n  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\r\n  if (a.stateNode.current === a) {\r\n    // We've determined that A is the current branch.\r\n    return fiber;\r\n  }\r\n  // Otherwise B has to be current branch.\r\n  return alternate;\r\n}\r\n\r\nfunction findCurrentHostFiber(parent) {\r\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\r\n  if (!currentParent) {\r\n    return null;\r\n  }\r\n\r\n  // Next we'll drill down this component to find the first HostComponent/Text.\r\n  var node = currentParent;\r\n  while (true) {\r\n    if (node.tag === HostComponent || node.tag === HostText) {\r\n      return node;\r\n    } else if (node.child) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n    if (node === currentParent) {\r\n      return null;\r\n    }\r\n    while (!node.sibling) {\r\n      if (!node.return || node.return === currentParent) {\r\n        return null;\r\n      }\r\n      node = node.return;\r\n    }\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n  // Flow needs the return null here, but ESLint complains about it.\r\n  // eslint-disable-next-line no-unreachable\r\n  return null;\r\n}\r\n\r\nfunction findCurrentHostFiberWithNoPortals(parent) {\r\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\r\n  if (!currentParent) {\r\n    return null;\r\n  }\r\n\r\n  // Next we'll drill down this component to find the first HostComponent/Text.\r\n  var node = currentParent;\r\n  while (true) {\r\n    if (node.tag === HostComponent || node.tag === HostText) {\r\n      return node;\r\n    } else if (node.child && node.tag !== HostPortal) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n    if (node === currentParent) {\r\n      return null;\r\n    }\r\n    while (!node.sibling) {\r\n      if (!node.return || node.return === currentParent) {\r\n        return null;\r\n      }\r\n      node = node.return;\r\n    }\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n  // Flow needs the return null here, but ESLint complains about it.\r\n  // eslint-disable-next-line no-unreachable\r\n  return null;\r\n}\r\n\r\nfunction addEventBubbleListener(element, eventType, listener) {\r\n  element.addEventListener(eventType, listener, false);\r\n}\r\n\r\nfunction addEventCaptureListener(element, eventType, listener) {\r\n  element.addEventListener(eventType, listener, true);\r\n}\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\r\n */\r\nvar SyntheticAnimationEvent = SyntheticEvent.extend({\r\n  animationName: null,\r\n  elapsedTime: null,\r\n  pseudoElement: null\r\n});\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/clipboard-apis/\r\n */\r\nvar SyntheticClipboardEvent = SyntheticEvent.extend({\r\n  clipboardData: function (event) {\r\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\r\n  }\r\n});\r\n\r\n/**\r\n * @interface FocusEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar SyntheticFocusEvent = SyntheticUIEvent.extend({\r\n  relatedTarget: null\r\n});\r\n\r\n/**\r\n * `charCode` represents the actual \"character code\" and is safe to use with\r\n * `String.fromCharCode`. As such, only keys that correspond to printable\r\n * characters produce a valid `charCode`, the only exception to this is Enter.\r\n * The Tab-key is considered non-printable and does not have a `charCode`,\r\n * presumably because it does not produce a tab-character in browsers.\r\n *\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {number} Normalized `charCode` property.\r\n */\r\nfunction getEventCharCode(nativeEvent) {\r\n  var charCode = void 0;\r\n  var keyCode = nativeEvent.keyCode;\r\n\r\n  if ('charCode' in nativeEvent) {\r\n    charCode = nativeEvent.charCode;\r\n\r\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\r\n    if (charCode === 0 && keyCode === 13) {\r\n      charCode = 13;\r\n    }\r\n  } else {\r\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\r\n    charCode = keyCode;\r\n  }\r\n\r\n  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\r\n  // report Enter as charCode 10 when ctrl is pressed.\r\n  if (charCode === 10) {\r\n    charCode = 13;\r\n  }\r\n\r\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\r\n  // Must not discard the (non-)printable Enter-key.\r\n  if (charCode >= 32 || charCode === 13) {\r\n    return charCode;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Normalization of deprecated HTML5 `key` values\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\r\n */\r\nvar normalizeKey = {\r\n  Esc: 'Escape',\r\n  Spacebar: ' ',\r\n  Left: 'ArrowLeft',\r\n  Up: 'ArrowUp',\r\n  Right: 'ArrowRight',\r\n  Down: 'ArrowDown',\r\n  Del: 'Delete',\r\n  Win: 'OS',\r\n  Menu: 'ContextMenu',\r\n  Apps: 'ContextMenu',\r\n  Scroll: 'ScrollLock',\r\n  MozPrintableKey: 'Unidentified'\r\n};\r\n\r\n/**\r\n * Translation from legacy `keyCode` to HTML5 `key`\r\n * Only special keys supported, all others depend on keyboard layout or browser\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\r\n */\r\nvar translateToKey = {\r\n  '8': 'Backspace',\r\n  '9': 'Tab',\r\n  '12': 'Clear',\r\n  '13': 'Enter',\r\n  '16': 'Shift',\r\n  '17': 'Control',\r\n  '18': 'Alt',\r\n  '19': 'Pause',\r\n  '20': 'CapsLock',\r\n  '27': 'Escape',\r\n  '32': ' ',\r\n  '33': 'PageUp',\r\n  '34': 'PageDown',\r\n  '35': 'End',\r\n  '36': 'Home',\r\n  '37': 'ArrowLeft',\r\n  '38': 'ArrowUp',\r\n  '39': 'ArrowRight',\r\n  '40': 'ArrowDown',\r\n  '45': 'Insert',\r\n  '46': 'Delete',\r\n  '112': 'F1',\r\n  '113': 'F2',\r\n  '114': 'F3',\r\n  '115': 'F4',\r\n  '116': 'F5',\r\n  '117': 'F6',\r\n  '118': 'F7',\r\n  '119': 'F8',\r\n  '120': 'F9',\r\n  '121': 'F10',\r\n  '122': 'F11',\r\n  '123': 'F12',\r\n  '144': 'NumLock',\r\n  '145': 'ScrollLock',\r\n  '224': 'Meta'\r\n};\r\n\r\n/**\r\n * @param {object} nativeEvent Native browser event.\r\n * @return {string} Normalized `key` property.\r\n */\r\nfunction getEventKey(nativeEvent) {\r\n  if (nativeEvent.key) {\r\n    // Normalize inconsistent values reported by browsers due to\r\n    // implementations of a working draft specification.\r\n\r\n    // FireFox implements `key` but returns `MozPrintableKey` for all\r\n    // printable characters (normalized to `Unidentified`), ignore it.\r\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\r\n    if (key !== 'Unidentified') {\r\n      return key;\r\n    }\r\n  }\r\n\r\n  // Browser does not implement `key`, polyfill as much of it as we can.\r\n  if (nativeEvent.type === 'keypress') {\r\n    var charCode = getEventCharCode(nativeEvent);\r\n\r\n    // The enter-key is technically both printable and non-printable and can\r\n    // thus be captured by `keypress`, no other non-printable key should.\r\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\r\n  }\r\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\r\n    // While user keyboard layout determines the actual meaning of each\r\n    // `keyCode` value, almost all function keys have a universal value.\r\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * @interface KeyboardEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar SyntheticKeyboardEvent = SyntheticUIEvent.extend({\r\n  key: getEventKey,\r\n  location: null,\r\n  ctrlKey: null,\r\n  shiftKey: null,\r\n  altKey: null,\r\n  metaKey: null,\r\n  repeat: null,\r\n  locale: null,\r\n  getModifierState: getEventModifierState,\r\n  // Legacy Interface\r\n  charCode: function (event) {\r\n    // `charCode` is the result of a KeyPress event and represents the value of\r\n    // the actual printable character.\r\n\r\n    // KeyPress is deprecated, but its replacement is not yet final and not\r\n    // implemented in any major browser. Only KeyPress has charCode.\r\n    if (event.type === 'keypress') {\r\n      return getEventCharCode(event);\r\n    }\r\n    return 0;\r\n  },\r\n  keyCode: function (event) {\r\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\r\n    // physical keyboard key.\r\n\r\n    // The actual meaning of the value depends on the users' keyboard layout\r\n    // which cannot be detected. Assuming that it is a US keyboard layout\r\n    // provides a surprisingly accurate mapping for US and European users.\r\n    // Due to this, it is left to the user to implement at this time.\r\n    if (event.type === 'keydown' || event.type === 'keyup') {\r\n      return event.keyCode;\r\n    }\r\n    return 0;\r\n  },\r\n  which: function (event) {\r\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\r\n    // type of the event.\r\n    if (event.type === 'keypress') {\r\n      return getEventCharCode(event);\r\n    }\r\n    if (event.type === 'keydown' || event.type === 'keyup') {\r\n      return event.keyCode;\r\n    }\r\n    return 0;\r\n  }\r\n});\r\n\r\n/**\r\n * @interface DragEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar SyntheticDragEvent = SyntheticMouseEvent.extend({\r\n  dataTransfer: null\r\n});\r\n\r\n/**\r\n * @interface TouchEvent\r\n * @see http://www.w3.org/TR/touch-events/\r\n */\r\nvar SyntheticTouchEvent = SyntheticUIEvent.extend({\r\n  touches: null,\r\n  targetTouches: null,\r\n  changedTouches: null,\r\n  altKey: null,\r\n  metaKey: null,\r\n  ctrlKey: null,\r\n  shiftKey: null,\r\n  getModifierState: getEventModifierState\r\n});\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\r\n */\r\nvar SyntheticTransitionEvent = SyntheticEvent.extend({\r\n  propertyName: null,\r\n  elapsedTime: null,\r\n  pseudoElement: null\r\n});\r\n\r\n/**\r\n * @interface WheelEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar SyntheticWheelEvent = SyntheticMouseEvent.extend({\r\n  deltaX: function (event) {\r\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\r\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\r\n  },\r\n  deltaY: function (event) {\r\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\r\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\r\n    'wheelDelta' in event ? -event.wheelDelta : 0;\r\n  },\r\n\r\n  deltaZ: null,\r\n\r\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\r\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\r\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\r\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\r\n  deltaMode: null\r\n});\r\n\r\n/**\r\n * Turns\r\n * ['abort', ...]\r\n * into\r\n * eventTypes = {\r\n *   'abort': {\r\n *     phasedRegistrationNames: {\r\n *       bubbled: 'onAbort',\r\n *       captured: 'onAbortCapture',\r\n *     },\r\n *     dependencies: [TOP_ABORT],\r\n *   },\r\n *   ...\r\n * };\r\n * topLevelEventsToDispatchConfig = new Map([\r\n *   [TOP_ABORT, { sameConfig }],\r\n * ]);\r\n */\r\n\r\nvar interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];\r\nvar nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];\r\n\r\nvar eventTypes$4 = {};\r\nvar topLevelEventsToDispatchConfig = {};\r\n\r\nfunction addEventTypeNameToConfig(_ref, isInteractive) {\r\n  var topEvent = _ref[0],\r\n      event = _ref[1];\r\n\r\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\r\n  var onEvent = 'on' + capitalizedEvent;\r\n\r\n  var type = {\r\n    phasedRegistrationNames: {\r\n      bubbled: onEvent,\r\n      captured: onEvent + 'Capture'\r\n    },\r\n    dependencies: [topEvent],\r\n    isInteractive: isInteractive\r\n  };\r\n  eventTypes$4[event] = type;\r\n  topLevelEventsToDispatchConfig[topEvent] = type;\r\n}\r\n\r\ninteractiveEventTypeNames.forEach(function (eventTuple) {\r\n  addEventTypeNameToConfig(eventTuple, true);\r\n});\r\nnonInteractiveEventTypeNames.forEach(function (eventTuple) {\r\n  addEventTypeNameToConfig(eventTuple, false);\r\n});\r\n\r\n// Only used in DEV for exhaustiveness validation.\r\nvar knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];\r\n\r\nvar SimpleEventPlugin = {\r\n  eventTypes: eventTypes$4,\r\n\r\n  isInteractiveTopLevelEventType: function (topLevelType) {\r\n    var config = topLevelEventsToDispatchConfig[topLevelType];\r\n    return config !== undefined && config.isInteractive === true;\r\n  },\r\n\r\n\r\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\r\n    if (!dispatchConfig) {\r\n      return null;\r\n    }\r\n    var EventConstructor = void 0;\r\n    switch (topLevelType) {\r\n      case TOP_KEY_PRESS:\r\n        // Firefox creates a keypress event for function keys too. This removes\r\n        // the unwanted keypress events. Enter is however both printable and\r\n        // non-printable. One would expect Tab to be as well (but it isn't).\r\n        if (getEventCharCode(nativeEvent) === 0) {\r\n          return null;\r\n        }\r\n      /* falls through */\r\n      case TOP_KEY_DOWN:\r\n      case TOP_KEY_UP:\r\n        EventConstructor = SyntheticKeyboardEvent;\r\n        break;\r\n      case TOP_BLUR:\r\n      case TOP_FOCUS:\r\n        EventConstructor = SyntheticFocusEvent;\r\n        break;\r\n      case TOP_CLICK:\r\n        // Firefox creates a click event on right mouse clicks. This removes the\r\n        // unwanted click events.\r\n        if (nativeEvent.button === 2) {\r\n          return null;\r\n        }\r\n      /* falls through */\r\n      case TOP_AUX_CLICK:\r\n      case TOP_DOUBLE_CLICK:\r\n      case TOP_MOUSE_DOWN:\r\n      case TOP_MOUSE_MOVE:\r\n      case TOP_MOUSE_UP:\r\n      // TODO: Disabled elements should not respond to mouse events\r\n      /* falls through */\r\n      case TOP_MOUSE_OUT:\r\n      case TOP_MOUSE_OVER:\r\n      case TOP_CONTEXT_MENU:\r\n        EventConstructor = SyntheticMouseEvent;\r\n        break;\r\n      case TOP_DRAG:\r\n      case TOP_DRAG_END:\r\n      case TOP_DRAG_ENTER:\r\n      case TOP_DRAG_EXIT:\r\n      case TOP_DRAG_LEAVE:\r\n      case TOP_DRAG_OVER:\r\n      case TOP_DRAG_START:\r\n      case TOP_DROP:\r\n        EventConstructor = SyntheticDragEvent;\r\n        break;\r\n      case TOP_TOUCH_CANCEL:\r\n      case TOP_TOUCH_END:\r\n      case TOP_TOUCH_MOVE:\r\n      case TOP_TOUCH_START:\r\n        EventConstructor = SyntheticTouchEvent;\r\n        break;\r\n      case TOP_ANIMATION_END:\r\n      case TOP_ANIMATION_ITERATION:\r\n      case TOP_ANIMATION_START:\r\n        EventConstructor = SyntheticAnimationEvent;\r\n        break;\r\n      case TOP_TRANSITION_END:\r\n        EventConstructor = SyntheticTransitionEvent;\r\n        break;\r\n      case TOP_SCROLL:\r\n        EventConstructor = SyntheticUIEvent;\r\n        break;\r\n      case TOP_WHEEL:\r\n        EventConstructor = SyntheticWheelEvent;\r\n        break;\r\n      case TOP_COPY:\r\n      case TOP_CUT:\r\n      case TOP_PASTE:\r\n        EventConstructor = SyntheticClipboardEvent;\r\n        break;\r\n      case TOP_GOT_POINTER_CAPTURE:\r\n      case TOP_LOST_POINTER_CAPTURE:\r\n      case TOP_POINTER_CANCEL:\r\n      case TOP_POINTER_DOWN:\r\n      case TOP_POINTER_MOVE:\r\n      case TOP_POINTER_OUT:\r\n      case TOP_POINTER_OVER:\r\n      case TOP_POINTER_UP:\r\n        EventConstructor = SyntheticPointerEvent;\r\n        break;\r\n      default:\r\n        {\r\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\r\n            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);\r\n          }\r\n        }\r\n        // HTML Events\r\n        // @see http://www.w3.org/TR/html5/index.html#events-0\r\n        EventConstructor = SyntheticEvent;\r\n        break;\r\n    }\r\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\r\n    accumulateTwoPhaseDispatches(event);\r\n    return event;\r\n  }\r\n};\r\n\r\nvar isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;\r\n\r\n\r\nvar CALLBACK_BOOKKEEPING_POOL_SIZE = 10;\r\nvar callbackBookkeepingPool = [];\r\n\r\n/**\r\n * Find the deepest React component completely containing the root of the\r\n * passed-in instance (for use when entire React trees are nested within each\r\n * other). If React trees are not nested, returns null.\r\n */\r\nfunction findRootContainerNode(inst) {\r\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\r\n  // traversal, but caching is difficult to do correctly without using a\r\n  // mutation observer to listen for all DOM changes.\r\n  while (inst.return) {\r\n    inst = inst.return;\r\n  }\r\n  if (inst.tag !== HostRoot) {\r\n    // This can happen if we're in a detached tree.\r\n    return null;\r\n  }\r\n  return inst.stateNode.containerInfo;\r\n}\r\n\r\n// Used to store ancestor hierarchy in top level callback\r\nfunction getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {\r\n  if (callbackBookkeepingPool.length) {\r\n    var instance = callbackBookkeepingPool.pop();\r\n    instance.topLevelType = topLevelType;\r\n    instance.nativeEvent = nativeEvent;\r\n    instance.targetInst = targetInst;\r\n    return instance;\r\n  }\r\n  return {\r\n    topLevelType: topLevelType,\r\n    nativeEvent: nativeEvent,\r\n    targetInst: targetInst,\r\n    ancestors: []\r\n  };\r\n}\r\n\r\nfunction releaseTopLevelCallbackBookKeeping(instance) {\r\n  instance.topLevelType = null;\r\n  instance.nativeEvent = null;\r\n  instance.targetInst = null;\r\n  instance.ancestors.length = 0;\r\n  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {\r\n    callbackBookkeepingPool.push(instance);\r\n  }\r\n}\r\n\r\nfunction handleTopLevel(bookKeeping) {\r\n  var targetInst = bookKeeping.targetInst;\r\n\r\n  // Loop through the hierarchy, in case there's any nested components.\r\n  // It's important that we build the array of ancestors before calling any\r\n  // event handlers, because event handlers can modify the DOM, leading to\r\n  // inconsistencies with ReactMount's node cache. See #1105.\r\n  var ancestor = targetInst;\r\n  do {\r\n    if (!ancestor) {\r\n      bookKeeping.ancestors.push(ancestor);\r\n      break;\r\n    }\r\n    var root = findRootContainerNode(ancestor);\r\n    if (!root) {\r\n      break;\r\n    }\r\n    bookKeeping.ancestors.push(ancestor);\r\n    ancestor = getClosestInstanceFromNode(root);\r\n  } while (ancestor);\r\n\r\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\r\n    targetInst = bookKeeping.ancestors[i];\r\n    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\r\n  }\r\n}\r\n\r\n// TODO: can we stop exporting these?\r\nvar _enabled = true;\r\n\r\nfunction setEnabled(enabled) {\r\n  _enabled = !!enabled;\r\n}\r\n\r\nfunction isEnabled() {\r\n  return _enabled;\r\n}\r\n\r\n/**\r\n * Traps top-level events by using event bubbling.\r\n *\r\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\r\n * @param {object} element Element on which to attach listener.\r\n * @return {?object} An object with a remove function which will forcefully\r\n *                  remove the listener.\r\n * @internal\r\n */\r\nfunction trapBubbledEvent(topLevelType, element) {\r\n  if (!element) {\r\n    return null;\r\n  }\r\n  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;\r\n\r\n  addEventBubbleListener(element, getRawEventName(topLevelType),\r\n  // Check if interactive and wrap in interactiveUpdates\r\n  dispatch.bind(null, topLevelType));\r\n}\r\n\r\n/**\r\n * Traps a top-level event by using event capturing.\r\n *\r\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\r\n * @param {object} element Element on which to attach listener.\r\n * @return {?object} An object with a remove function which will forcefully\r\n *                  remove the listener.\r\n * @internal\r\n */\r\nfunction trapCapturedEvent(topLevelType, element) {\r\n  if (!element) {\r\n    return null;\r\n  }\r\n  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;\r\n\r\n  addEventCaptureListener(element, getRawEventName(topLevelType),\r\n  // Check if interactive and wrap in interactiveUpdates\r\n  dispatch.bind(null, topLevelType));\r\n}\r\n\r\nfunction dispatchInteractiveEvent(topLevelType, nativeEvent) {\r\n  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);\r\n}\r\n\r\nfunction dispatchEvent(topLevelType, nativeEvent) {\r\n  if (!_enabled) {\r\n    return;\r\n  }\r\n\r\n  var nativeEventTarget = getEventTarget(nativeEvent);\r\n  var targetInst = getClosestInstanceFromNode(nativeEventTarget);\r\n  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {\r\n    // If we get an event (ex: img onload) before committing that\r\n    // component's mount, ignore it for now (that is, treat it as if it was an\r\n    // event on a non-React tree). We might also consider queueing events and\r\n    // dispatching them after the mount.\r\n    targetInst = null;\r\n  }\r\n\r\n  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);\r\n\r\n  try {\r\n    // Event queue being processed in the same cycle allows\r\n    // `preventDefault`.\r\n    batchedUpdates(handleTopLevel, bookKeeping);\r\n  } finally {\r\n    releaseTopLevelCallbackBookKeeping(bookKeeping);\r\n  }\r\n}\r\n\r\n/**\r\n * Summary of `ReactBrowserEventEmitter` event handling:\r\n *\r\n *  - Top-level delegation is used to trap most native browser events. This\r\n *    may only occur in the main thread and is the responsibility of\r\n *    ReactDOMEventListener, which is injected and can therefore support\r\n *    pluggable event sources. This is the only work that occurs in the main\r\n *    thread.\r\n *\r\n *  - We normalize and de-duplicate events to account for browser quirks. This\r\n *    may be done in the worker thread.\r\n *\r\n *  - Forward these native events (with the associated top-level type used to\r\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\r\n *    to extract any synthetic events.\r\n *\r\n *  - The `EventPluginHub` will then process each event by annotating them with\r\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\r\n *\r\n *  - The `EventPluginHub` then dispatches the events.\r\n *\r\n * Overview of React and the event system:\r\n *\r\n * +------------+    .\r\n * |    DOM     |    .\r\n * +------------+    .\r\n *       |           .\r\n *       v           .\r\n * +------------+    .\r\n * | ReactEvent |    .\r\n * |  Listener  |    .\r\n * +------------+    .                         +-----------+\r\n *       |           .               +--------+|SimpleEvent|\r\n *       |           .               |         |Plugin     |\r\n * +-----|------+    .               v         +-----------+\r\n * |     |      |    .    +--------------+                    +------------+\r\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\r\n * |            |    .    |              |     +-----------+  | Propagators|\r\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\r\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\r\n * |            |    .    |              |     +-----------+  |  utilities |\r\n * |     +-----------.--->|              |                    +------------+\r\n * |     |      |    .    +--------------+\r\n * +-----|------+    .                ^        +-----------+\r\n *       |           .                |        |Enter/Leave|\r\n *       +           .                +-------+|Plugin     |\r\n * +-------------+   .                         +-----------+\r\n * | application |   .\r\n * |-------------|   .\r\n * |             |   .\r\n * |             |   .\r\n * +-------------+   .\r\n *                   .\r\n *    React Core     .  General Purpose Event Plugin System\r\n */\r\n\r\nvar alreadyListeningTo = {};\r\nvar reactTopListenersCounter = 0;\r\n\r\n/**\r\n * To ensure no conflicts with other potential React instances on the page\r\n */\r\nvar topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);\r\n\r\nfunction getListeningForDocument(mountAt) {\r\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\r\n  // directly.\r\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\r\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\r\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\r\n  }\r\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\r\n}\r\n\r\n/**\r\n * We listen for bubbled touch events on the document object.\r\n *\r\n * Firefox v8.01 (and possibly others) exhibited strange behavior when\r\n * mounting `onmousemove` events at some node that was not the document\r\n * element. The symptoms were that if your mouse is not moving over something\r\n * contained within that mount point (for example on the background) the\r\n * top-level listeners for `onmousemove` won't be called. However, if you\r\n * register the `mousemove` on the document object, then it will of course\r\n * catch all `mousemove`s. This along with iOS quirks, justifies restricting\r\n * top-level listeners to the document object only, at least for these\r\n * movement types of events and possibly all events.\r\n *\r\n * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n *\r\n * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\r\n * they bubble to document.\r\n *\r\n * @param {string} registrationName Name of listener (e.g. `onClick`).\r\n * @param {object} mountAt Container where to mount the listener\r\n */\r\nfunction listenTo(registrationName, mountAt) {\r\n  var isListening = getListeningForDocument(mountAt);\r\n  var dependencies = registrationNameDependencies[registrationName];\r\n\r\n  for (var i = 0; i < dependencies.length; i++) {\r\n    var dependency = dependencies[i];\r\n    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\r\n      switch (dependency) {\r\n        case TOP_SCROLL:\r\n          trapCapturedEvent(TOP_SCROLL, mountAt);\r\n          break;\r\n        case TOP_FOCUS:\r\n        case TOP_BLUR:\r\n          trapCapturedEvent(TOP_FOCUS, mountAt);\r\n          trapCapturedEvent(TOP_BLUR, mountAt);\r\n          // We set the flag for a single dependency later in this function,\r\n          // but this ensures we mark both as attached rather than just one.\r\n          isListening[TOP_BLUR] = true;\r\n          isListening[TOP_FOCUS] = true;\r\n          break;\r\n        case TOP_CANCEL:\r\n        case TOP_CLOSE:\r\n          if (isEventSupported(getRawEventName(dependency))) {\r\n            trapCapturedEvent(dependency, mountAt);\r\n          }\r\n          break;\r\n        case TOP_INVALID:\r\n        case TOP_SUBMIT:\r\n        case TOP_RESET:\r\n          // We listen to them on the target DOM elements.\r\n          // Some of them bubble so we don't want them to fire twice.\r\n          break;\r\n        default:\r\n          // By default, listen on the top level to all non-media events.\r\n          // Media events don't bubble so adding the listener wouldn't do anything.\r\n          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;\r\n          if (!isMediaEvent) {\r\n            trapBubbledEvent(dependency, mountAt);\r\n          }\r\n          break;\r\n      }\r\n      isListening[dependency] = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isListeningToAllDependencies(registrationName, mountAt) {\r\n  var isListening = getListeningForDocument(mountAt);\r\n  var dependencies = registrationNameDependencies[registrationName];\r\n  for (var i = 0; i < dependencies.length; i++) {\r\n    var dependency = dependencies[i];\r\n    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction getActiveElement(doc) {\r\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\r\n  if (typeof doc === 'undefined') {\r\n    return null;\r\n  }\r\n  try {\r\n    return doc.activeElement || doc.body;\r\n  } catch (e) {\r\n    return doc.body;\r\n  }\r\n}\r\n\r\n/**\r\n * Given any node return the first leaf node without children.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @return {DOMElement|DOMTextNode}\r\n */\r\nfunction getLeafNode(node) {\r\n  while (node && node.firstChild) {\r\n    node = node.firstChild;\r\n  }\r\n  return node;\r\n}\r\n\r\n/**\r\n * Get the next sibling within a container. This will walk up the\r\n * DOM if a node's siblings have been exhausted.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @return {?DOMElement|DOMTextNode}\r\n */\r\nfunction getSiblingNode(node) {\r\n  while (node) {\r\n    if (node.nextSibling) {\r\n      return node.nextSibling;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n}\r\n\r\n/**\r\n * Get object describing the nodes which contain characters at offset.\r\n *\r\n * @param {DOMElement|DOMTextNode} root\r\n * @param {number} offset\r\n * @return {?object}\r\n */\r\nfunction getNodeForCharacterOffset(root, offset) {\r\n  var node = getLeafNode(root);\r\n  var nodeStart = 0;\r\n  var nodeEnd = 0;\r\n\r\n  while (node) {\r\n    if (node.nodeType === TEXT_NODE) {\r\n      nodeEnd = nodeStart + node.textContent.length;\r\n\r\n      if (nodeStart <= offset && nodeEnd >= offset) {\r\n        return {\r\n          node: node,\r\n          offset: offset - nodeStart\r\n        };\r\n      }\r\n\r\n      nodeStart = nodeEnd;\r\n    }\r\n\r\n    node = getLeafNode(getSiblingNode(node));\r\n  }\r\n}\r\n\r\n/**\r\n * @param {DOMElement} outerNode\r\n * @return {?object}\r\n */\r\nfunction getOffsets(outerNode) {\r\n  var ownerDocument = outerNode.ownerDocument;\r\n\r\n  var win = ownerDocument && ownerDocument.defaultView || window;\r\n  var selection = win.getSelection && win.getSelection();\r\n\r\n  if (!selection || selection.rangeCount === 0) {\r\n    return null;\r\n  }\r\n\r\n  var anchorNode = selection.anchorNode,\r\n      anchorOffset = selection.anchorOffset,\r\n      focusNode = selection.focusNode,\r\n      focusOffset = selection.focusOffset;\r\n\r\n  // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\r\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\r\n  // expose properties, triggering a \"Permission denied error\" if any of its\r\n  // properties are accessed. The only seemingly possible way to avoid erroring\r\n  // is to access a property that typically works for non-anonymous divs and\r\n  // catch any error that may otherwise arise. See\r\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\r\n\r\n  try {\r\n    /* eslint-disable no-unused-expressions */\r\n    anchorNode.nodeType;\r\n    focusNode.nodeType;\r\n    /* eslint-enable no-unused-expressions */\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n\r\n  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);\r\n}\r\n\r\n/**\r\n * Returns {start, end} where `start` is the character/codepoint index of\r\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\r\n * `end` is the index of (focusNode, focusOffset).\r\n *\r\n * Returns null if you pass in garbage input but we should probably just crash.\r\n *\r\n * Exported only for testing.\r\n */\r\nfunction getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {\r\n  var length = 0;\r\n  var start = -1;\r\n  var end = -1;\r\n  var indexWithinAnchor = 0;\r\n  var indexWithinFocus = 0;\r\n  var node = outerNode;\r\n  var parentNode = null;\r\n\r\n  outer: while (true) {\r\n    var next = null;\r\n\r\n    while (true) {\r\n      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {\r\n        start = length + anchorOffset;\r\n      }\r\n      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {\r\n        end = length + focusOffset;\r\n      }\r\n\r\n      if (node.nodeType === TEXT_NODE) {\r\n        length += node.nodeValue.length;\r\n      }\r\n\r\n      if ((next = node.firstChild) === null) {\r\n        break;\r\n      }\r\n      // Moving from `node` to its first child `next`.\r\n      parentNode = node;\r\n      node = next;\r\n    }\r\n\r\n    while (true) {\r\n      if (node === outerNode) {\r\n        // If `outerNode` has children, this is always the second time visiting\r\n        // it. If it has no children, this is still the first loop, and the only\r\n        // valid selection is anchorNode and focusNode both equal to this node\r\n        // and both offsets 0, in which case we will have handled above.\r\n        break outer;\r\n      }\r\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\r\n        start = length;\r\n      }\r\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\r\n        end = length;\r\n      }\r\n      if ((next = node.nextSibling) !== null) {\r\n        break;\r\n      }\r\n      node = parentNode;\r\n      parentNode = node.parentNode;\r\n    }\r\n\r\n    // Moving from `node` to its next sibling `next`.\r\n    node = next;\r\n  }\r\n\r\n  if (start === -1 || end === -1) {\r\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\r\n    // actually inside the passed-in node.)\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    start: start,\r\n    end: end\r\n  };\r\n}\r\n\r\n/**\r\n * In modern non-IE browsers, we can support both forward and backward\r\n * selections.\r\n *\r\n * Note: IE10+ supports the Selection object, but it does not support\r\n * the `extend` method, which means that even in modern IE, it's not possible\r\n * to programmatically create a backward selection. Thus, for all IE\r\n * versions, we use the old IE API to create our selections.\r\n *\r\n * @param {DOMElement|DOMTextNode} node\r\n * @param {object} offsets\r\n */\r\nfunction setOffsets(node, offsets) {\r\n  var doc = node.ownerDocument || document;\r\n  var win = doc && doc.defaultView || window;\r\n\r\n  // Edge fails with \"Object expected\" in some scenarios.\r\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\r\n  // fails when pasting 100+ items)\r\n  if (!win.getSelection) {\r\n    return;\r\n  }\r\n\r\n  var selection = win.getSelection();\r\n  var length = node.textContent.length;\r\n  var start = Math.min(offsets.start, length);\r\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\r\n\r\n  // IE 11 uses modern selection, but doesn't support the extend method.\r\n  // Flip backward selections, so we can set with a single range.\r\n  if (!selection.extend && start > end) {\r\n    var temp = end;\r\n    end = start;\r\n    start = temp;\r\n  }\r\n\r\n  var startMarker = getNodeForCharacterOffset(node, start);\r\n  var endMarker = getNodeForCharacterOffset(node, end);\r\n\r\n  if (startMarker && endMarker) {\r\n    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {\r\n      return;\r\n    }\r\n    var range = doc.createRange();\r\n    range.setStart(startMarker.node, startMarker.offset);\r\n    selection.removeAllRanges();\r\n\r\n    if (start > end) {\r\n      selection.addRange(range);\r\n      selection.extend(endMarker.node, endMarker.offset);\r\n    } else {\r\n      range.setEnd(endMarker.node, endMarker.offset);\r\n      selection.addRange(range);\r\n    }\r\n  }\r\n}\r\n\r\nfunction isTextNode(node) {\r\n  return node && node.nodeType === TEXT_NODE;\r\n}\r\n\r\nfunction containsNode(outerNode, innerNode) {\r\n  if (!outerNode || !innerNode) {\r\n    return false;\r\n  } else if (outerNode === innerNode) {\r\n    return true;\r\n  } else if (isTextNode(outerNode)) {\r\n    return false;\r\n  } else if (isTextNode(innerNode)) {\r\n    return containsNode(outerNode, innerNode.parentNode);\r\n  } else if ('contains' in outerNode) {\r\n    return outerNode.contains(innerNode);\r\n  } else if (outerNode.compareDocumentPosition) {\r\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction isInDocument(node) {\r\n  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);\r\n}\r\n\r\nfunction getActiveElementDeep() {\r\n  var win = window;\r\n  var element = getActiveElement();\r\n  while (element instanceof win.HTMLIFrameElement) {\r\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\r\n    // to throw, e.g. if it has a cross-origin src attribute\r\n    try {\r\n      win = element.contentDocument.defaultView;\r\n    } catch (e) {\r\n      return element;\r\n    }\r\n    element = getActiveElement(win.document);\r\n  }\r\n  return element;\r\n}\r\n\r\n/**\r\n * @ReactInputSelection: React input selection module. Based on Selection.js,\r\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\r\n * assume buttons have range selections allowed).\r\n * Input selection module for React.\r\n */\r\n\r\n/**\r\n * @hasSelectionCapabilities: we get the element types that support selection\r\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\r\n * and `selectionEnd` rows.\r\n */\r\nfunction hasSelectionCapabilities(elem) {\r\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\r\n  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');\r\n}\r\n\r\nfunction getSelectionInformation() {\r\n  var focusedElem = getActiveElementDeep();\r\n  return {\r\n    focusedElem: focusedElem,\r\n    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null\r\n  };\r\n}\r\n\r\n/**\r\n * @restoreSelection: If any selection information was potentially lost,\r\n * restore it. This is useful when performing operations that could remove dom\r\n * nodes and place them back in, resulting in focus being lost.\r\n */\r\nfunction restoreSelection(priorSelectionInformation) {\r\n  var curFocusedElem = getActiveElementDeep();\r\n  var priorFocusedElem = priorSelectionInformation.focusedElem;\r\n  var priorSelectionRange = priorSelectionInformation.selectionRange;\r\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\r\n    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {\r\n      setSelection(priorFocusedElem, priorSelectionRange);\r\n    }\r\n\r\n    // Focusing a node can change the scroll position, which is undesirable\r\n    var ancestors = [];\r\n    var ancestor = priorFocusedElem;\r\n    while (ancestor = ancestor.parentNode) {\r\n      if (ancestor.nodeType === ELEMENT_NODE) {\r\n        ancestors.push({\r\n          element: ancestor,\r\n          left: ancestor.scrollLeft,\r\n          top: ancestor.scrollTop\r\n        });\r\n      }\r\n    }\r\n\r\n    if (typeof priorFocusedElem.focus === 'function') {\r\n      priorFocusedElem.focus();\r\n    }\r\n\r\n    for (var i = 0; i < ancestors.length; i++) {\r\n      var info = ancestors[i];\r\n      info.element.scrollLeft = info.left;\r\n      info.element.scrollTop = info.top;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @getSelection: Gets the selection bounds of a focused textarea, input or\r\n * contentEditable node.\r\n * -@input: Look up selection bounds of this input\r\n * -@return {start: selectionStart, end: selectionEnd}\r\n */\r\nfunction getSelection$1(input) {\r\n  var selection = void 0;\r\n\r\n  if ('selectionStart' in input) {\r\n    // Modern browser with input or textarea.\r\n    selection = {\r\n      start: input.selectionStart,\r\n      end: input.selectionEnd\r\n    };\r\n  } else {\r\n    // Content editable or old IE textarea.\r\n    selection = getOffsets(input);\r\n  }\r\n\r\n  return selection || { start: 0, end: 0 };\r\n}\r\n\r\n/**\r\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\r\n * the input.\r\n * -@input     Set selection bounds of this input or textarea\r\n * -@offsets   Object of same form that is returned from get*\r\n */\r\nfunction setSelection(input, offsets) {\r\n  var start = offsets.start,\r\n      end = offsets.end;\r\n\r\n  if (end === undefined) {\r\n    end = start;\r\n  }\r\n\r\n  if ('selectionStart' in input) {\r\n    input.selectionStart = start;\r\n    input.selectionEnd = Math.min(end, input.value.length);\r\n  } else {\r\n    setOffsets(input, offsets);\r\n  }\r\n}\r\n\r\nvar skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;\r\n\r\nvar eventTypes$3 = {\r\n  select: {\r\n    phasedRegistrationNames: {\r\n      bubbled: 'onSelect',\r\n      captured: 'onSelectCapture'\r\n    },\r\n    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]\r\n  }\r\n};\r\n\r\nvar activeElement$1 = null;\r\nvar activeElementInst$1 = null;\r\nvar lastSelection = null;\r\nvar mouseDown = false;\r\n\r\n/**\r\n * Get an object which is a unique representation of the current selection.\r\n *\r\n * The return value will not be consistent across nodes or browsers, but\r\n * two identical selections on the same node will return identical objects.\r\n *\r\n * @param {DOMElement} node\r\n * @return {object}\r\n */\r\nfunction getSelection(node) {\r\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\r\n    return {\r\n      start: node.selectionStart,\r\n      end: node.selectionEnd\r\n    };\r\n  } else {\r\n    var win = node.ownerDocument && node.ownerDocument.defaultView || window;\r\n    var selection = win.getSelection();\r\n    return {\r\n      anchorNode: selection.anchorNode,\r\n      anchorOffset: selection.anchorOffset,\r\n      focusNode: selection.focusNode,\r\n      focusOffset: selection.focusOffset\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Get document associated with the event target.\r\n *\r\n * @param {object} nativeEventTarget\r\n * @return {Document}\r\n */\r\nfunction getEventTargetDocument(eventTarget) {\r\n  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;\r\n}\r\n\r\n/**\r\n * Poll selection to see whether it's changed.\r\n *\r\n * @param {object} nativeEvent\r\n * @param {object} nativeEventTarget\r\n * @return {?SyntheticEvent}\r\n */\r\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\r\n  // Ensure we have the right element, and that the user is not dragging a\r\n  // selection (this matches native `select` event behavior). In HTML5, select\r\n  // fires only on input and textarea thus if there's no focused element we\r\n  // won't dispatch.\r\n  var doc = getEventTargetDocument(nativeEventTarget);\r\n\r\n  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {\r\n    return null;\r\n  }\r\n\r\n  // Only fire when selection has actually changed.\r\n  var currentSelection = getSelection(activeElement$1);\r\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\r\n    lastSelection = currentSelection;\r\n\r\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);\r\n\r\n    syntheticEvent.type = 'select';\r\n    syntheticEvent.target = activeElement$1;\r\n\r\n    accumulateTwoPhaseDispatches(syntheticEvent);\r\n\r\n    return syntheticEvent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * This plugin creates an `onSelect` event that normalizes select events\r\n * across form elements.\r\n *\r\n * Supported elements are:\r\n * - input (see `isTextInputElement`)\r\n * - textarea\r\n * - contentEditable\r\n *\r\n * This differs from native browser implementations in the following ways:\r\n * - Fires on contentEditable fields as well as inputs.\r\n * - Fires for collapsed selection.\r\n * - Fires after user input.\r\n */\r\nvar SelectEventPlugin = {\r\n  eventTypes: eventTypes$3,\r\n\r\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\r\n    var doc = getEventTargetDocument(nativeEventTarget);\r\n    // Track whether all listeners exists for this plugin. If none exist, we do\r\n    // not extract events. See #3639.\r\n    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {\r\n      return null;\r\n    }\r\n\r\n    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;\r\n\r\n    switch (topLevelType) {\r\n      // Track the input node that has focus.\r\n      case TOP_FOCUS:\r\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\r\n          activeElement$1 = targetNode;\r\n          activeElementInst$1 = targetInst;\r\n          lastSelection = null;\r\n        }\r\n        break;\r\n      case TOP_BLUR:\r\n        activeElement$1 = null;\r\n        activeElementInst$1 = null;\r\n        lastSelection = null;\r\n        break;\r\n      // Don't fire the event while the user is dragging. This matches the\r\n      // semantics of the native select event.\r\n      case TOP_MOUSE_DOWN:\r\n        mouseDown = true;\r\n        break;\r\n      case TOP_CONTEXT_MENU:\r\n      case TOP_MOUSE_UP:\r\n      case TOP_DRAG_END:\r\n        mouseDown = false;\r\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\r\n      // Chrome and IE fire non-standard event when selection is changed (and\r\n      // sometimes when it hasn't). IE's event fires out of order with respect\r\n      // to key and input events on deletion, so we discard it.\r\n      //\r\n      // Firefox doesn't support selectionchange, so check selection status\r\n      // after each key entry. The selection changes after keydown and before\r\n      // keyup, but we check on keydown as well in the case of holding down a\r\n      // key, when multiple keydown events are fired but only one keyup is.\r\n      // This is also our approach for IE handling, for the reason above.\r\n      case TOP_SELECTION_CHANGE:\r\n        if (skipSelectionChangeEvent) {\r\n          break;\r\n        }\r\n      // falls through\r\n      case TOP_KEY_DOWN:\r\n      case TOP_KEY_UP:\r\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\r\n    }\r\n\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Inject modules for resolving DOM hierarchy and plugin ordering.\r\n */\r\ninjection.injectEventPluginOrder(DOMEventPluginOrder);\r\nsetComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);\r\n\r\n/**\r\n * Some important event plugins included by default (without having to require\r\n * them).\r\n */\r\ninjection.injectEventPluginsByName({\r\n  SimpleEventPlugin: SimpleEventPlugin,\r\n  EnterLeaveEventPlugin: EnterLeaveEventPlugin,\r\n  ChangeEventPlugin: ChangeEventPlugin,\r\n  SelectEventPlugin: SelectEventPlugin,\r\n  BeforeInputEventPlugin: BeforeInputEventPlugin\r\n});\r\n\r\nvar didWarnSelectedSetOnOption = false;\r\nvar didWarnInvalidChild = false;\r\n\r\nfunction flattenChildren(children) {\r\n  var content = '';\r\n\r\n  // Flatten children. We'll warn if they are invalid\r\n  // during validateProps() which runs for hydration too.\r\n  // Note that this would throw on non-element objects.\r\n  // Elements are stringified (which is normally irrelevant\r\n  // but matters for <fbt>).\r\n  React.Children.forEach(children, function (child) {\r\n    if (child == null) {\r\n      return;\r\n    }\r\n    content += child;\r\n    // Note: we don't warn about invalid children here.\r\n    // Instead, this is done separately below so that\r\n    // it happens during the hydration codepath too.\r\n  });\r\n\r\n  return content;\r\n}\r\n\r\n/**\r\n * Implements an <option> host component that warns when `selected` is set.\r\n */\r\n\r\nfunction validateProps(element, props) {\r\n  {\r\n    // This mirrors the codepath above, but runs for hydration too.\r\n    // Warn about invalid children here so that client and hydration are consistent.\r\n    // TODO: this seems like it could cause a DEV-only throw for hydration\r\n    // if children contains a non-element object. We should try to avoid that.\r\n    if (typeof props.children === 'object' && props.children !== null) {\r\n      React.Children.forEach(props.children, function (child) {\r\n        if (child == null) {\r\n          return;\r\n        }\r\n        if (typeof child === 'string' || typeof child === 'number') {\r\n          return;\r\n        }\r\n        if (typeof child.type !== 'string') {\r\n          return;\r\n        }\r\n        if (!didWarnInvalidChild) {\r\n          didWarnInvalidChild = true;\r\n          warning$1(false, 'Only strings and numbers are supported as <option> children.');\r\n        }\r\n      });\r\n    }\r\n\r\n    // TODO: Remove support for `selected` in <option>.\r\n    if (props.selected != null && !didWarnSelectedSetOnOption) {\r\n      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');\r\n      didWarnSelectedSetOnOption = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction postMountWrapper$1(element, props) {\r\n  // value=\"\" should make a value attribute (#6219)\r\n  if (props.value != null) {\r\n    element.setAttribute('value', toString(getToStringValue(props.value)));\r\n  }\r\n}\r\n\r\nfunction getHostProps$1(element, props) {\r\n  var hostProps = _assign({ children: undefined }, props);\r\n  var content = flattenChildren(props.children);\r\n\r\n  if (content) {\r\n    hostProps.children = content;\r\n  }\r\n\r\n  return hostProps;\r\n}\r\n\r\n// TODO: direct imports like some-package/src/* are bad. Fix me.\r\nvar didWarnValueDefaultValue$1 = void 0;\r\n\r\n{\r\n  didWarnValueDefaultValue$1 = false;\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  var ownerName = getCurrentFiberOwnerNameInDevOrNull();\r\n  if (ownerName) {\r\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\r\n  }\r\n  return '';\r\n}\r\n\r\nvar valuePropNames = ['value', 'defaultValue'];\r\n\r\n/**\r\n * Validation function for `value` and `defaultValue`.\r\n */\r\nfunction checkSelectPropTypes(props) {\r\n  ReactControlledValuePropTypes.checkPropTypes('select', props);\r\n\r\n  for (var i = 0; i < valuePropNames.length; i++) {\r\n    var propName = valuePropNames[i];\r\n    if (props[propName] == null) {\r\n      continue;\r\n    }\r\n    var isArray = Array.isArray(props[propName]);\r\n    if (props.multiple && !isArray) {\r\n      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());\r\n    } else if (!props.multiple && isArray) {\r\n      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\r\n  var options = node.options;\r\n\r\n  if (multiple) {\r\n    var selectedValues = propValue;\r\n    var selectedValue = {};\r\n    for (var i = 0; i < selectedValues.length; i++) {\r\n      // Prefix to avoid chaos with special keys.\r\n      selectedValue['$' + selectedValues[i]] = true;\r\n    }\r\n    for (var _i = 0; _i < options.length; _i++) {\r\n      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);\r\n      if (options[_i].selected !== selected) {\r\n        options[_i].selected = selected;\r\n      }\r\n      if (selected && setDefaultSelected) {\r\n        options[_i].defaultSelected = true;\r\n      }\r\n    }\r\n  } else {\r\n    // Do not set `select.value` as exact behavior isn't consistent across all\r\n    // browsers for all cases.\r\n    var _selectedValue = toString(getToStringValue(propValue));\r\n    var defaultSelected = null;\r\n    for (var _i2 = 0; _i2 < options.length; _i2++) {\r\n      if (options[_i2].value === _selectedValue) {\r\n        options[_i2].selected = true;\r\n        if (setDefaultSelected) {\r\n          options[_i2].defaultSelected = true;\r\n        }\r\n        return;\r\n      }\r\n      if (defaultSelected === null && !options[_i2].disabled) {\r\n        defaultSelected = options[_i2];\r\n      }\r\n    }\r\n    if (defaultSelected !== null) {\r\n      defaultSelected.selected = true;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Implements a <select> host component that allows optionally setting the\r\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\r\n * stringable. If `multiple` is true, the prop must be an array of stringables.\r\n *\r\n * If `value` is not supplied (or null/undefined), user actions that change the\r\n * selected option will trigger updates to the rendered options.\r\n *\r\n * If it is supplied (and not null/undefined), the rendered options will not\r\n * update in response to user actions. Instead, the `value` prop must change in\r\n * order for the rendered options to update.\r\n *\r\n * If `defaultValue` is provided, any options with the supplied values will be\r\n * selected.\r\n */\r\n\r\nfunction getHostProps$2(element, props) {\r\n  return _assign({}, props, {\r\n    value: undefined\r\n  });\r\n}\r\n\r\nfunction initWrapperState$1(element, props) {\r\n  var node = element;\r\n  {\r\n    checkSelectPropTypes(props);\r\n  }\r\n\r\n  node._wrapperState = {\r\n    wasMultiple: !!props.multiple\r\n  };\r\n\r\n  {\r\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {\r\n      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');\r\n      didWarnValueDefaultValue$1 = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction postMountWrapper$2(element, props) {\r\n  var node = element;\r\n  node.multiple = !!props.multiple;\r\n  var value = props.value;\r\n  if (value != null) {\r\n    updateOptions(node, !!props.multiple, value, false);\r\n  } else if (props.defaultValue != null) {\r\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\r\n  }\r\n}\r\n\r\nfunction postUpdateWrapper(element, props) {\r\n  var node = element;\r\n  var wasMultiple = node._wrapperState.wasMultiple;\r\n  node._wrapperState.wasMultiple = !!props.multiple;\r\n\r\n  var value = props.value;\r\n  if (value != null) {\r\n    updateOptions(node, !!props.multiple, value, false);\r\n  } else if (wasMultiple !== !!props.multiple) {\r\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\r\n    if (props.defaultValue != null) {\r\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\r\n    } else {\r\n      // Revert the select back to its default unselected state.\r\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\r\n    }\r\n  }\r\n}\r\n\r\nfunction restoreControlledState$2(element, props) {\r\n  var node = element;\r\n  var value = props.value;\r\n\r\n  if (value != null) {\r\n    updateOptions(node, !!props.multiple, value, false);\r\n  }\r\n}\r\n\r\nvar didWarnValDefaultVal = false;\r\n\r\n/**\r\n * Implements a <textarea> host component that allows setting `value`, and\r\n * `defaultValue`. This differs from the traditional DOM API because value is\r\n * usually set as PCDATA children.\r\n *\r\n * If `value` is not supplied (or null/undefined), user actions that affect the\r\n * value will trigger updates to the element.\r\n *\r\n * If `value` is supplied (and not null/undefined), the rendered element will\r\n * not trigger updates to the element. Instead, the `value` prop must change in\r\n * order for the rendered element to be updated.\r\n *\r\n * The rendered element will be initialized with an empty value, the prop\r\n * `defaultValue` if specified, or the children content (deprecated).\r\n */\r\n\r\nfunction getHostProps$3(element, props) {\r\n  var node = element;\r\n  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;\r\n\r\n  // Always set children to the same thing. In IE9, the selection range will\r\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\r\n  // to only set the value if/when the value differs from the node value (which would\r\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\r\n  // solution. The value can be a boolean or object so that's why it's forced\r\n  // to be a string.\r\n  var hostProps = _assign({}, props, {\r\n    value: undefined,\r\n    defaultValue: undefined,\r\n    children: toString(node._wrapperState.initialValue)\r\n  });\r\n\r\n  return hostProps;\r\n}\r\n\r\nfunction initWrapperState$2(element, props) {\r\n  var node = element;\r\n  {\r\n    ReactControlledValuePropTypes.checkPropTypes('textarea', props);\r\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\r\n      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\r\n      didWarnValDefaultVal = true;\r\n    }\r\n  }\r\n\r\n  var initialValue = props.value;\r\n\r\n  // Only bother fetching default value if we're going to use it\r\n  if (initialValue == null) {\r\n    var defaultValue = props.defaultValue;\r\n    // TODO (yungsters): Remove support for children content in <textarea>.\r\n    var children = props.children;\r\n    if (children != null) {\r\n      {\r\n        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\r\n      }\r\n      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;\r\n      if (Array.isArray(children)) {\r\n        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;\r\n        children = children[0];\r\n      }\r\n\r\n      defaultValue = children;\r\n    }\r\n    if (defaultValue == null) {\r\n      defaultValue = '';\r\n    }\r\n    initialValue = defaultValue;\r\n  }\r\n\r\n  node._wrapperState = {\r\n    initialValue: getToStringValue(initialValue)\r\n  };\r\n}\r\n\r\nfunction updateWrapper$1(element, props) {\r\n  var node = element;\r\n  var value = getToStringValue(props.value);\r\n  var defaultValue = getToStringValue(props.defaultValue);\r\n  if (value != null) {\r\n    // Cast `value` to a string to ensure the value is set correctly. While\r\n    // browsers typically do this as necessary, jsdom doesn't.\r\n    var newValue = toString(value);\r\n    // To avoid side effects (such as losing text selection), only set value if changed\r\n    if (newValue !== node.value) {\r\n      node.value = newValue;\r\n    }\r\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\r\n      node.defaultValue = newValue;\r\n    }\r\n  }\r\n  if (defaultValue != null) {\r\n    node.defaultValue = toString(defaultValue);\r\n  }\r\n}\r\n\r\nfunction postMountWrapper$3(element, props) {\r\n  var node = element;\r\n  // This is in postMount because we need access to the DOM node, which is not\r\n  // available until after the component has mounted.\r\n  var textContent = node.textContent;\r\n\r\n  // Only set node.value if textContent is equal to the expected\r\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\r\n  // will populate textContent as well.\r\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\r\n  if (textContent === node._wrapperState.initialValue) {\r\n    node.value = textContent;\r\n  }\r\n}\r\n\r\nfunction restoreControlledState$3(element, props) {\r\n  // DOM component is still mounted; update\r\n  updateWrapper$1(element, props);\r\n}\r\n\r\nvar HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';\r\nvar MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\r\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n\r\nvar Namespaces = {\r\n  html: HTML_NAMESPACE$1,\r\n  mathml: MATH_NAMESPACE,\r\n  svg: SVG_NAMESPACE\r\n};\r\n\r\n// Assumes there is no parent namespace.\r\nfunction getIntrinsicNamespace(type) {\r\n  switch (type) {\r\n    case 'svg':\r\n      return SVG_NAMESPACE;\r\n    case 'math':\r\n      return MATH_NAMESPACE;\r\n    default:\r\n      return HTML_NAMESPACE$1;\r\n  }\r\n}\r\n\r\nfunction getChildNamespace(parentNamespace, type) {\r\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {\r\n    // No (or default) parent namespace: potential entry point.\r\n    return getIntrinsicNamespace(type);\r\n  }\r\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\r\n    // We're leaving SVG.\r\n    return HTML_NAMESPACE$1;\r\n  }\r\n  // By default, pass namespace below.\r\n  return parentNamespace;\r\n}\r\n\r\n/* globals MSApp */\r\n\r\n/**\r\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\r\n */\r\nvar createMicrosoftUnsafeLocalFunction = function (func) {\r\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\r\n    return function (arg0, arg1, arg2, arg3) {\r\n      MSApp.execUnsafeLocalFunction(function () {\r\n        return func(arg0, arg1, arg2, arg3);\r\n      });\r\n    };\r\n  } else {\r\n    return func;\r\n  }\r\n};\r\n\r\n// SVG temp container for IE lacking innerHTML\r\nvar reusableSVGContainer = void 0;\r\n\r\n/**\r\n * Set the innerHTML property of a node\r\n *\r\n * @param {DOMElement} node\r\n * @param {string} html\r\n * @internal\r\n */\r\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\r\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\r\n  // new markup in a temp node and then move the child nodes across into\r\n  // the target node\r\n\r\n  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {\r\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\r\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\r\n    var svgNode = reusableSVGContainer.firstChild;\r\n    while (node.firstChild) {\r\n      node.removeChild(node.firstChild);\r\n    }\r\n    while (svgNode.firstChild) {\r\n      node.appendChild(svgNode.firstChild);\r\n    }\r\n  } else {\r\n    node.innerHTML = html;\r\n  }\r\n});\r\n\r\n/**\r\n * Set the textContent property of a node. For text updates, it's faster\r\n * to set the `nodeValue` of the Text node directly instead of using\r\n * `.textContent` which will remove the existing node and create a new one.\r\n *\r\n * @param {DOMElement} node\r\n * @param {string} text\r\n * @internal\r\n */\r\nvar setTextContent = function (node, text) {\r\n  if (text) {\r\n    var firstChild = node.firstChild;\r\n\r\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {\r\n      firstChild.nodeValue = text;\r\n      return;\r\n    }\r\n  }\r\n  node.textContent = text;\r\n};\r\n\r\n// List derived from Gecko source code:\r\n// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js\r\nvar shorthandToLonghand = {\r\n  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],\r\n  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],\r\n  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],\r\n  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],\r\n  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],\r\n  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],\r\n  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],\r\n  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],\r\n  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\r\n  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],\r\n  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],\r\n  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],\r\n  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\r\n  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],\r\n  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],\r\n  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],\r\n  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],\r\n  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],\r\n  columns: ['columnCount', 'columnWidth'],\r\n  flex: ['flexBasis', 'flexGrow', 'flexShrink'],\r\n  flexFlow: ['flexDirection', 'flexWrap'],\r\n  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],\r\n  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],\r\n  gap: ['columnGap', 'rowGap'],\r\n  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\r\n  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],\r\n  gridColumn: ['gridColumnEnd', 'gridColumnStart'],\r\n  gridColumnGap: ['columnGap'],\r\n  gridGap: ['columnGap', 'rowGap'],\r\n  gridRow: ['gridRowEnd', 'gridRowStart'],\r\n  gridRowGap: ['rowGap'],\r\n  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\r\n  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],\r\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\r\n  marker: ['markerEnd', 'markerMid', 'markerStart'],\r\n  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],\r\n  maskPosition: ['maskPositionX', 'maskPositionY'],\r\n  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],\r\n  overflow: ['overflowX', 'overflowY'],\r\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\r\n  placeContent: ['alignContent', 'justifyContent'],\r\n  placeItems: ['alignItems', 'justifyItems'],\r\n  placeSelf: ['alignSelf', 'justifySelf'],\r\n  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],\r\n  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],\r\n  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],\r\n  wordWrap: ['overflowWrap']\r\n};\r\n\r\n/**\r\n * CSS properties which accept numbers but are not in units of \"px\".\r\n */\r\nvar isUnitlessNumber = {\r\n  animationIterationCount: true,\r\n  borderImageOutset: true,\r\n  borderImageSlice: true,\r\n  borderImageWidth: true,\r\n  boxFlex: true,\r\n  boxFlexGroup: true,\r\n  boxOrdinalGroup: true,\r\n  columnCount: true,\r\n  columns: true,\r\n  flex: true,\r\n  flexGrow: true,\r\n  flexPositive: true,\r\n  flexShrink: true,\r\n  flexNegative: true,\r\n  flexOrder: true,\r\n  gridArea: true,\r\n  gridRow: true,\r\n  gridRowEnd: true,\r\n  gridRowSpan: true,\r\n  gridRowStart: true,\r\n  gridColumn: true,\r\n  gridColumnEnd: true,\r\n  gridColumnSpan: true,\r\n  gridColumnStart: true,\r\n  fontWeight: true,\r\n  lineClamp: true,\r\n  lineHeight: true,\r\n  opacity: true,\r\n  order: true,\r\n  orphans: true,\r\n  tabSize: true,\r\n  widows: true,\r\n  zIndex: true,\r\n  zoom: true,\r\n\r\n  // SVG-related properties\r\n  fillOpacity: true,\r\n  floodOpacity: true,\r\n  stopOpacity: true,\r\n  strokeDasharray: true,\r\n  strokeDashoffset: true,\r\n  strokeMiterlimit: true,\r\n  strokeOpacity: true,\r\n  strokeWidth: true\r\n};\r\n\r\n/**\r\n * @param {string} prefix vendor-specific prefix, eg: Webkit\r\n * @param {string} key style name, eg: transitionDuration\r\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\r\n * WebkitTransitionDuration\r\n */\r\nfunction prefixKey(prefix, key) {\r\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\r\n}\r\n\r\n/**\r\n * Support style names that may come passed in prefixed by adding permutations\r\n * of vendor prefixes.\r\n */\r\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\r\n\r\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\r\n// infinite loop, because it iterates over the newly added props too.\r\nObject.keys(isUnitlessNumber).forEach(function (prop) {\r\n  prefixes.forEach(function (prefix) {\r\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\r\n  });\r\n});\r\n\r\n/**\r\n * Convert a value into the proper css writable value. The style name `name`\r\n * should be logical (no hyphens), as specified\r\n * in `CSSProperty.isUnitlessNumber`.\r\n *\r\n * @param {string} name CSS property name such as `topMargin`.\r\n * @param {*} value CSS property value such as `10px`.\r\n * @return {string} Normalized style value with dimensions applied.\r\n */\r\nfunction dangerousStyleValue(name, value, isCustomProperty) {\r\n  // Note that we've removed escapeTextForBrowser() calls here since the\r\n  // whole string will be escaped when the attribute is injected into\r\n  // the markup. If you provide unsafe user data here they can inject\r\n  // arbitrary CSS which may be problematic (I couldn't repro this):\r\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\r\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\r\n  // This is not an XSS hole but instead a potential CSS injection issue\r\n  // which has lead to a greater discussion about how we're going to\r\n  // trust URLs moving forward. See #2115901\r\n\r\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\r\n  if (isEmpty) {\r\n    return '';\r\n  }\r\n\r\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\r\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\r\n  }\r\n\r\n  return ('' + value).trim();\r\n}\r\n\r\nvar uppercasePattern = /([A-Z])/g;\r\nvar msPattern = /^ms-/;\r\n\r\n/**\r\n * Hyphenates a camelcased CSS property name, for example:\r\n *\r\n *   > hyphenateStyleName('backgroundColor')\r\n *   < \"background-color\"\r\n *   > hyphenateStyleName('MozTransition')\r\n *   < \"-moz-transition\"\r\n *   > hyphenateStyleName('msTransition')\r\n *   < \"-ms-transition\"\r\n *\r\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\r\n * is converted to `-ms-`.\r\n */\r\nfunction hyphenateStyleName(name) {\r\n  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');\r\n}\r\n\r\nvar warnValidStyle = function () {};\r\n\r\n{\r\n  // 'msTransform' is correct, but the other prefixes should be capitalized\r\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\r\n  var msPattern$1 = /^-ms-/;\r\n  var hyphenPattern = /-(.)/g;\r\n\r\n  // style values shouldn't contain a semicolon\r\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\r\n\r\n  var warnedStyleNames = {};\r\n  var warnedStyleValues = {};\r\n  var warnedForNaNValue = false;\r\n  var warnedForInfinityValue = false;\r\n\r\n  var camelize = function (string) {\r\n    return string.replace(hyphenPattern, function (_, character) {\r\n      return character.toUpperCase();\r\n    });\r\n  };\r\n\r\n  var warnHyphenatedStyleName = function (name) {\r\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\r\n      return;\r\n    }\r\n\r\n    warnedStyleNames[name] = true;\r\n    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name,\r\n    // As Andi Smith suggests\r\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\r\n    // is converted to lowercase `ms`.\r\n    camelize(name.replace(msPattern$1, 'ms-')));\r\n  };\r\n\r\n  var warnBadVendoredStyleName = function (name) {\r\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\r\n      return;\r\n    }\r\n\r\n    warnedStyleNames[name] = true;\r\n    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\r\n  };\r\n\r\n  var warnStyleValueWithSemicolon = function (name, value) {\r\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\r\n      return;\r\n    }\r\n\r\n    warnedStyleValues[value] = true;\r\n    warning$1(false, \"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\r\n  };\r\n\r\n  var warnStyleValueIsNaN = function (name, value) {\r\n    if (warnedForNaNValue) {\r\n      return;\r\n    }\r\n\r\n    warnedForNaNValue = true;\r\n    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);\r\n  };\r\n\r\n  var warnStyleValueIsInfinity = function (name, value) {\r\n    if (warnedForInfinityValue) {\r\n      return;\r\n    }\r\n\r\n    warnedForInfinityValue = true;\r\n    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);\r\n  };\r\n\r\n  warnValidStyle = function (name, value) {\r\n    if (name.indexOf('-') > -1) {\r\n      warnHyphenatedStyleName(name);\r\n    } else if (badVendoredStyleNamePattern.test(name)) {\r\n      warnBadVendoredStyleName(name);\r\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\r\n      warnStyleValueWithSemicolon(name, value);\r\n    }\r\n\r\n    if (typeof value === 'number') {\r\n      if (isNaN(value)) {\r\n        warnStyleValueIsNaN(name, value);\r\n      } else if (!isFinite(value)) {\r\n        warnStyleValueIsInfinity(name, value);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nvar warnValidStyle$1 = warnValidStyle;\r\n\r\n/**\r\n * Operations for dealing with CSS properties.\r\n */\r\n\r\n/**\r\n * This creates a string that is expected to be equivalent to the style\r\n * attribute generated by server-side rendering. It by-passes warnings and\r\n * security checks so it's not safe to use this value for anything other than\r\n * comparison. It is only used in DEV for SSR validation.\r\n */\r\nfunction createDangerousStringForStyles(styles) {\r\n  {\r\n    var serialized = '';\r\n    var delimiter = '';\r\n    for (var styleName in styles) {\r\n      if (!styles.hasOwnProperty(styleName)) {\r\n        continue;\r\n      }\r\n      var styleValue = styles[styleName];\r\n      if (styleValue != null) {\r\n        var isCustomProperty = styleName.indexOf('--') === 0;\r\n        serialized += delimiter + hyphenateStyleName(styleName) + ':';\r\n        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);\r\n\r\n        delimiter = ';';\r\n      }\r\n    }\r\n    return serialized || null;\r\n  }\r\n}\r\n\r\n/**\r\n * Sets the value for multiple styles on a node.  If a value is specified as\r\n * '' (empty string), the corresponding style property will be unset.\r\n *\r\n * @param {DOMElement} node\r\n * @param {object} styles\r\n */\r\nfunction setValueForStyles(node, styles) {\r\n  var style = node.style;\r\n  for (var styleName in styles) {\r\n    if (!styles.hasOwnProperty(styleName)) {\r\n      continue;\r\n    }\r\n    var isCustomProperty = styleName.indexOf('--') === 0;\r\n    {\r\n      if (!isCustomProperty) {\r\n        warnValidStyle$1(styleName, styles[styleName]);\r\n      }\r\n    }\r\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\r\n    if (styleName === 'float') {\r\n      styleName = 'cssFloat';\r\n    }\r\n    if (isCustomProperty) {\r\n      style.setProperty(styleName, styleValue);\r\n    } else {\r\n      style[styleName] = styleValue;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isValueEmpty(value) {\r\n  return value == null || typeof value === 'boolean' || value === '';\r\n}\r\n\r\n/**\r\n * Given {color: 'red', overflow: 'hidden'} returns {\r\n *   color: 'color',\r\n *   overflowX: 'overflow',\r\n *   overflowY: 'overflow',\r\n * }. This can be read as \"the overflowY property was set by the overflow\r\n * shorthand\". That is, the values are the property that each was derived from.\r\n */\r\nfunction expandShorthandMap(styles) {\r\n  var expanded = {};\r\n  for (var key in styles) {\r\n    var longhands = shorthandToLonghand[key] || [key];\r\n    for (var i = 0; i < longhands.length; i++) {\r\n      expanded[longhands[i]] = key;\r\n    }\r\n  }\r\n  return expanded;\r\n}\r\n\r\n/**\r\n * When mixing shorthand and longhand property names, we warn during updates if\r\n * we expect an incorrect result to occur. In particular, we warn for:\r\n *\r\n * Updating a shorthand property (longhand gets overwritten):\r\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\r\n *   becomes .style.font = 'baz'\r\n * Removing a shorthand property (longhand gets lost too):\r\n *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\r\n *   becomes .style.font = ''\r\n * Removing a longhand property (should revert to shorthand; doesn't):\r\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\r\n *   becomes .style.fontVariant = ''\r\n */\r\nfunction validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {\r\n  if (!warnAboutShorthandPropertyCollision) {\r\n    return;\r\n  }\r\n\r\n  if (!nextStyles) {\r\n    return;\r\n  }\r\n\r\n  var expandedUpdates = expandShorthandMap(styleUpdates);\r\n  var expandedStyles = expandShorthandMap(nextStyles);\r\n  var warnedAbout = {};\r\n  for (var key in expandedUpdates) {\r\n    var originalKey = expandedUpdates[key];\r\n    var correctOriginalKey = expandedStyles[key];\r\n    if (correctOriginalKey && originalKey !== correctOriginalKey) {\r\n      var warningKey = originalKey + ',' + correctOriginalKey;\r\n      if (warnedAbout[warningKey]) {\r\n        continue;\r\n      }\r\n      warnedAbout[warningKey] = true;\r\n      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + \"avoid this, don't mix shorthand and non-shorthand properties \" + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);\r\n    }\r\n  }\r\n}\r\n\r\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\r\n// those special-case tags.\r\n\r\nvar omittedCloseTags = {\r\n  area: true,\r\n  base: true,\r\n  br: true,\r\n  col: true,\r\n  embed: true,\r\n  hr: true,\r\n  img: true,\r\n  input: true,\r\n  keygen: true,\r\n  link: true,\r\n  meta: true,\r\n  param: true,\r\n  source: true,\r\n  track: true,\r\n  wbr: true\r\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\r\n};\r\n\r\n// For HTML, certain tags cannot have children. This has the same purpose as\r\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\r\n\r\nvar voidElementTags = _assign({\r\n  menuitem: true\r\n}, omittedCloseTags);\r\n\r\n// TODO: We can remove this if we add invariantWithStack()\r\n// or add stack by default to invariants where possible.\r\nvar HTML$1 = '__html';\r\n\r\nvar ReactDebugCurrentFrame$2 = null;\r\n{\r\n  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;\r\n}\r\n\r\nfunction assertValidProps(tag, props) {\r\n  if (!props) {\r\n    return;\r\n  }\r\n  // Note the use of `==` which checks for null or undefined.\r\n  if (voidElementTags[tag]) {\r\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\r\n  }\r\n  if (props.dangerouslySetInnerHTML != null) {\r\n    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;\r\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;\r\n  }\r\n  {\r\n    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\r\n  }\r\n  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\r\n}\r\n\r\nfunction isCustomComponent(tagName, props) {\r\n  if (tagName.indexOf('-') === -1) {\r\n    return typeof props.is === 'string';\r\n  }\r\n  switch (tagName) {\r\n    // These are reserved SVG and MathML elements.\r\n    // We don't mind this whitelist too much because we expect it to never grow.\r\n    // The alternative is to track the namespace in a few places which is convoluted.\r\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\r\n    case 'annotation-xml':\r\n    case 'color-profile':\r\n    case 'font-face':\r\n    case 'font-face-src':\r\n    case 'font-face-uri':\r\n    case 'font-face-format':\r\n    case 'font-face-name':\r\n    case 'missing-glyph':\r\n      return false;\r\n    default:\r\n      return true;\r\n  }\r\n}\r\n\r\n// When adding attributes to the HTML or SVG whitelist, be sure to\r\n// also add them to this module to ensure casing and incorrect name\r\n// warnings.\r\nvar possibleStandardNames = {\r\n  // HTML\r\n  accept: 'accept',\r\n  acceptcharset: 'acceptCharset',\r\n  'accept-charset': 'acceptCharset',\r\n  accesskey: 'accessKey',\r\n  action: 'action',\r\n  allowfullscreen: 'allowFullScreen',\r\n  alt: 'alt',\r\n  as: 'as',\r\n  async: 'async',\r\n  autocapitalize: 'autoCapitalize',\r\n  autocomplete: 'autoComplete',\r\n  autocorrect: 'autoCorrect',\r\n  autofocus: 'autoFocus',\r\n  autoplay: 'autoPlay',\r\n  autosave: 'autoSave',\r\n  capture: 'capture',\r\n  cellpadding: 'cellPadding',\r\n  cellspacing: 'cellSpacing',\r\n  challenge: 'challenge',\r\n  charset: 'charSet',\r\n  checked: 'checked',\r\n  children: 'children',\r\n  cite: 'cite',\r\n  class: 'className',\r\n  classid: 'classID',\r\n  classname: 'className',\r\n  cols: 'cols',\r\n  colspan: 'colSpan',\r\n  content: 'content',\r\n  contenteditable: 'contentEditable',\r\n  contextmenu: 'contextMenu',\r\n  controls: 'controls',\r\n  controlslist: 'controlsList',\r\n  coords: 'coords',\r\n  crossorigin: 'crossOrigin',\r\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\r\n  data: 'data',\r\n  datetime: 'dateTime',\r\n  default: 'default',\r\n  defaultchecked: 'defaultChecked',\r\n  defaultvalue: 'defaultValue',\r\n  defer: 'defer',\r\n  dir: 'dir',\r\n  disabled: 'disabled',\r\n  download: 'download',\r\n  draggable: 'draggable',\r\n  enctype: 'encType',\r\n  for: 'htmlFor',\r\n  form: 'form',\r\n  formmethod: 'formMethod',\r\n  formaction: 'formAction',\r\n  formenctype: 'formEncType',\r\n  formnovalidate: 'formNoValidate',\r\n  formtarget: 'formTarget',\r\n  frameborder: 'frameBorder',\r\n  headers: 'headers',\r\n  height: 'height',\r\n  hidden: 'hidden',\r\n  high: 'high',\r\n  href: 'href',\r\n  hreflang: 'hrefLang',\r\n  htmlfor: 'htmlFor',\r\n  httpequiv: 'httpEquiv',\r\n  'http-equiv': 'httpEquiv',\r\n  icon: 'icon',\r\n  id: 'id',\r\n  innerhtml: 'innerHTML',\r\n  inputmode: 'inputMode',\r\n  integrity: 'integrity',\r\n  is: 'is',\r\n  itemid: 'itemID',\r\n  itemprop: 'itemProp',\r\n  itemref: 'itemRef',\r\n  itemscope: 'itemScope',\r\n  itemtype: 'itemType',\r\n  keyparams: 'keyParams',\r\n  keytype: 'keyType',\r\n  kind: 'kind',\r\n  label: 'label',\r\n  lang: 'lang',\r\n  list: 'list',\r\n  loop: 'loop',\r\n  low: 'low',\r\n  manifest: 'manifest',\r\n  marginwidth: 'marginWidth',\r\n  marginheight: 'marginHeight',\r\n  max: 'max',\r\n  maxlength: 'maxLength',\r\n  media: 'media',\r\n  mediagroup: 'mediaGroup',\r\n  method: 'method',\r\n  min: 'min',\r\n  minlength: 'minLength',\r\n  multiple: 'multiple',\r\n  muted: 'muted',\r\n  name: 'name',\r\n  nomodule: 'noModule',\r\n  nonce: 'nonce',\r\n  novalidate: 'noValidate',\r\n  open: 'open',\r\n  optimum: 'optimum',\r\n  pattern: 'pattern',\r\n  placeholder: 'placeholder',\r\n  playsinline: 'playsInline',\r\n  poster: 'poster',\r\n  preload: 'preload',\r\n  profile: 'profile',\r\n  radiogroup: 'radioGroup',\r\n  readonly: 'readOnly',\r\n  referrerpolicy: 'referrerPolicy',\r\n  rel: 'rel',\r\n  required: 'required',\r\n  reversed: 'reversed',\r\n  role: 'role',\r\n  rows: 'rows',\r\n  rowspan: 'rowSpan',\r\n  sandbox: 'sandbox',\r\n  scope: 'scope',\r\n  scoped: 'scoped',\r\n  scrolling: 'scrolling',\r\n  seamless: 'seamless',\r\n  selected: 'selected',\r\n  shape: 'shape',\r\n  size: 'size',\r\n  sizes: 'sizes',\r\n  span: 'span',\r\n  spellcheck: 'spellCheck',\r\n  src: 'src',\r\n  srcdoc: 'srcDoc',\r\n  srclang: 'srcLang',\r\n  srcset: 'srcSet',\r\n  start: 'start',\r\n  step: 'step',\r\n  style: 'style',\r\n  summary: 'summary',\r\n  tabindex: 'tabIndex',\r\n  target: 'target',\r\n  title: 'title',\r\n  type: 'type',\r\n  usemap: 'useMap',\r\n  value: 'value',\r\n  width: 'width',\r\n  wmode: 'wmode',\r\n  wrap: 'wrap',\r\n\r\n  // SVG\r\n  about: 'about',\r\n  accentheight: 'accentHeight',\r\n  'accent-height': 'accentHeight',\r\n  accumulate: 'accumulate',\r\n  additive: 'additive',\r\n  alignmentbaseline: 'alignmentBaseline',\r\n  'alignment-baseline': 'alignmentBaseline',\r\n  allowreorder: 'allowReorder',\r\n  alphabetic: 'alphabetic',\r\n  amplitude: 'amplitude',\r\n  arabicform: 'arabicForm',\r\n  'arabic-form': 'arabicForm',\r\n  ascent: 'ascent',\r\n  attributename: 'attributeName',\r\n  attributetype: 'attributeType',\r\n  autoreverse: 'autoReverse',\r\n  azimuth: 'azimuth',\r\n  basefrequency: 'baseFrequency',\r\n  baselineshift: 'baselineShift',\r\n  'baseline-shift': 'baselineShift',\r\n  baseprofile: 'baseProfile',\r\n  bbox: 'bbox',\r\n  begin: 'begin',\r\n  bias: 'bias',\r\n  by: 'by',\r\n  calcmode: 'calcMode',\r\n  capheight: 'capHeight',\r\n  'cap-height': 'capHeight',\r\n  clip: 'clip',\r\n  clippath: 'clipPath',\r\n  'clip-path': 'clipPath',\r\n  clippathunits: 'clipPathUnits',\r\n  cliprule: 'clipRule',\r\n  'clip-rule': 'clipRule',\r\n  color: 'color',\r\n  colorinterpolation: 'colorInterpolation',\r\n  'color-interpolation': 'colorInterpolation',\r\n  colorinterpolationfilters: 'colorInterpolationFilters',\r\n  'color-interpolation-filters': 'colorInterpolationFilters',\r\n  colorprofile: 'colorProfile',\r\n  'color-profile': 'colorProfile',\r\n  colorrendering: 'colorRendering',\r\n  'color-rendering': 'colorRendering',\r\n  contentscripttype: 'contentScriptType',\r\n  contentstyletype: 'contentStyleType',\r\n  cursor: 'cursor',\r\n  cx: 'cx',\r\n  cy: 'cy',\r\n  d: 'd',\r\n  datatype: 'datatype',\r\n  decelerate: 'decelerate',\r\n  descent: 'descent',\r\n  diffuseconstant: 'diffuseConstant',\r\n  direction: 'direction',\r\n  display: 'display',\r\n  divisor: 'divisor',\r\n  dominantbaseline: 'dominantBaseline',\r\n  'dominant-baseline': 'dominantBaseline',\r\n  dur: 'dur',\r\n  dx: 'dx',\r\n  dy: 'dy',\r\n  edgemode: 'edgeMode',\r\n  elevation: 'elevation',\r\n  enablebackground: 'enableBackground',\r\n  'enable-background': 'enableBackground',\r\n  end: 'end',\r\n  exponent: 'exponent',\r\n  externalresourcesrequired: 'externalResourcesRequired',\r\n  fill: 'fill',\r\n  fillopacity: 'fillOpacity',\r\n  'fill-opacity': 'fillOpacity',\r\n  fillrule: 'fillRule',\r\n  'fill-rule': 'fillRule',\r\n  filter: 'filter',\r\n  filterres: 'filterRes',\r\n  filterunits: 'filterUnits',\r\n  floodopacity: 'floodOpacity',\r\n  'flood-opacity': 'floodOpacity',\r\n  floodcolor: 'floodColor',\r\n  'flood-color': 'floodColor',\r\n  focusable: 'focusable',\r\n  fontfamily: 'fontFamily',\r\n  'font-family': 'fontFamily',\r\n  fontsize: 'fontSize',\r\n  'font-size': 'fontSize',\r\n  fontsizeadjust: 'fontSizeAdjust',\r\n  'font-size-adjust': 'fontSizeAdjust',\r\n  fontstretch: 'fontStretch',\r\n  'font-stretch': 'fontStretch',\r\n  fontstyle: 'fontStyle',\r\n  'font-style': 'fontStyle',\r\n  fontvariant: 'fontVariant',\r\n  'font-variant': 'fontVariant',\r\n  fontweight: 'fontWeight',\r\n  'font-weight': 'fontWeight',\r\n  format: 'format',\r\n  from: 'from',\r\n  fx: 'fx',\r\n  fy: 'fy',\r\n  g1: 'g1',\r\n  g2: 'g2',\r\n  glyphname: 'glyphName',\r\n  'glyph-name': 'glyphName',\r\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\r\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\r\n  glyphorientationvertical: 'glyphOrientationVertical',\r\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\r\n  glyphref: 'glyphRef',\r\n  gradienttransform: 'gradientTransform',\r\n  gradientunits: 'gradientUnits',\r\n  hanging: 'hanging',\r\n  horizadvx: 'horizAdvX',\r\n  'horiz-adv-x': 'horizAdvX',\r\n  horizoriginx: 'horizOriginX',\r\n  'horiz-origin-x': 'horizOriginX',\r\n  ideographic: 'ideographic',\r\n  imagerendering: 'imageRendering',\r\n  'image-rendering': 'imageRendering',\r\n  in2: 'in2',\r\n  in: 'in',\r\n  inlist: 'inlist',\r\n  intercept: 'intercept',\r\n  k1: 'k1',\r\n  k2: 'k2',\r\n  k3: 'k3',\r\n  k4: 'k4',\r\n  k: 'k',\r\n  kernelmatrix: 'kernelMatrix',\r\n  kernelunitlength: 'kernelUnitLength',\r\n  kerning: 'kerning',\r\n  keypoints: 'keyPoints',\r\n  keysplines: 'keySplines',\r\n  keytimes: 'keyTimes',\r\n  lengthadjust: 'lengthAdjust',\r\n  letterspacing: 'letterSpacing',\r\n  'letter-spacing': 'letterSpacing',\r\n  lightingcolor: 'lightingColor',\r\n  'lighting-color': 'lightingColor',\r\n  limitingconeangle: 'limitingConeAngle',\r\n  local: 'local',\r\n  markerend: 'markerEnd',\r\n  'marker-end': 'markerEnd',\r\n  markerheight: 'markerHeight',\r\n  markermid: 'markerMid',\r\n  'marker-mid': 'markerMid',\r\n  markerstart: 'markerStart',\r\n  'marker-start': 'markerStart',\r\n  markerunits: 'markerUnits',\r\n  markerwidth: 'markerWidth',\r\n  mask: 'mask',\r\n  maskcontentunits: 'maskContentUnits',\r\n  maskunits: 'maskUnits',\r\n  mathematical: 'mathematical',\r\n  mode: 'mode',\r\n  numoctaves: 'numOctaves',\r\n  offset: 'offset',\r\n  opacity: 'opacity',\r\n  operator: 'operator',\r\n  order: 'order',\r\n  orient: 'orient',\r\n  orientation: 'orientation',\r\n  origin: 'origin',\r\n  overflow: 'overflow',\r\n  overlineposition: 'overlinePosition',\r\n  'overline-position': 'overlinePosition',\r\n  overlinethickness: 'overlineThickness',\r\n  'overline-thickness': 'overlineThickness',\r\n  paintorder: 'paintOrder',\r\n  'paint-order': 'paintOrder',\r\n  panose1: 'panose1',\r\n  'panose-1': 'panose1',\r\n  pathlength: 'pathLength',\r\n  patterncontentunits: 'patternContentUnits',\r\n  patterntransform: 'patternTransform',\r\n  patternunits: 'patternUnits',\r\n  pointerevents: 'pointerEvents',\r\n  'pointer-events': 'pointerEvents',\r\n  points: 'points',\r\n  pointsatx: 'pointsAtX',\r\n  pointsaty: 'pointsAtY',\r\n  pointsatz: 'pointsAtZ',\r\n  prefix: 'prefix',\r\n  preservealpha: 'preserveAlpha',\r\n  preserveaspectratio: 'preserveAspectRatio',\r\n  primitiveunits: 'primitiveUnits',\r\n  property: 'property',\r\n  r: 'r',\r\n  radius: 'radius',\r\n  refx: 'refX',\r\n  refy: 'refY',\r\n  renderingintent: 'renderingIntent',\r\n  'rendering-intent': 'renderingIntent',\r\n  repeatcount: 'repeatCount',\r\n  repeatdur: 'repeatDur',\r\n  requiredextensions: 'requiredExtensions',\r\n  requiredfeatures: 'requiredFeatures',\r\n  resource: 'resource',\r\n  restart: 'restart',\r\n  result: 'result',\r\n  results: 'results',\r\n  rotate: 'rotate',\r\n  rx: 'rx',\r\n  ry: 'ry',\r\n  scale: 'scale',\r\n  security: 'security',\r\n  seed: 'seed',\r\n  shaperendering: 'shapeRendering',\r\n  'shape-rendering': 'shapeRendering',\r\n  slope: 'slope',\r\n  spacing: 'spacing',\r\n  specularconstant: 'specularConstant',\r\n  specularexponent: 'specularExponent',\r\n  speed: 'speed',\r\n  spreadmethod: 'spreadMethod',\r\n  startoffset: 'startOffset',\r\n  stddeviation: 'stdDeviation',\r\n  stemh: 'stemh',\r\n  stemv: 'stemv',\r\n  stitchtiles: 'stitchTiles',\r\n  stopcolor: 'stopColor',\r\n  'stop-color': 'stopColor',\r\n  stopopacity: 'stopOpacity',\r\n  'stop-opacity': 'stopOpacity',\r\n  strikethroughposition: 'strikethroughPosition',\r\n  'strikethrough-position': 'strikethroughPosition',\r\n  strikethroughthickness: 'strikethroughThickness',\r\n  'strikethrough-thickness': 'strikethroughThickness',\r\n  string: 'string',\r\n  stroke: 'stroke',\r\n  strokedasharray: 'strokeDasharray',\r\n  'stroke-dasharray': 'strokeDasharray',\r\n  strokedashoffset: 'strokeDashoffset',\r\n  'stroke-dashoffset': 'strokeDashoffset',\r\n  strokelinecap: 'strokeLinecap',\r\n  'stroke-linecap': 'strokeLinecap',\r\n  strokelinejoin: 'strokeLinejoin',\r\n  'stroke-linejoin': 'strokeLinejoin',\r\n  strokemiterlimit: 'strokeMiterlimit',\r\n  'stroke-miterlimit': 'strokeMiterlimit',\r\n  strokewidth: 'strokeWidth',\r\n  'stroke-width': 'strokeWidth',\r\n  strokeopacity: 'strokeOpacity',\r\n  'stroke-opacity': 'strokeOpacity',\r\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\r\n  suppresshydrationwarning: 'suppressHydrationWarning',\r\n  surfacescale: 'surfaceScale',\r\n  systemlanguage: 'systemLanguage',\r\n  tablevalues: 'tableValues',\r\n  targetx: 'targetX',\r\n  targety: 'targetY',\r\n  textanchor: 'textAnchor',\r\n  'text-anchor': 'textAnchor',\r\n  textdecoration: 'textDecoration',\r\n  'text-decoration': 'textDecoration',\r\n  textlength: 'textLength',\r\n  textrendering: 'textRendering',\r\n  'text-rendering': 'textRendering',\r\n  to: 'to',\r\n  transform: 'transform',\r\n  typeof: 'typeof',\r\n  u1: 'u1',\r\n  u2: 'u2',\r\n  underlineposition: 'underlinePosition',\r\n  'underline-position': 'underlinePosition',\r\n  underlinethickness: 'underlineThickness',\r\n  'underline-thickness': 'underlineThickness',\r\n  unicode: 'unicode',\r\n  unicodebidi: 'unicodeBidi',\r\n  'unicode-bidi': 'unicodeBidi',\r\n  unicoderange: 'unicodeRange',\r\n  'unicode-range': 'unicodeRange',\r\n  unitsperem: 'unitsPerEm',\r\n  'units-per-em': 'unitsPerEm',\r\n  unselectable: 'unselectable',\r\n  valphabetic: 'vAlphabetic',\r\n  'v-alphabetic': 'vAlphabetic',\r\n  values: 'values',\r\n  vectoreffect: 'vectorEffect',\r\n  'vector-effect': 'vectorEffect',\r\n  version: 'version',\r\n  vertadvy: 'vertAdvY',\r\n  'vert-adv-y': 'vertAdvY',\r\n  vertoriginx: 'vertOriginX',\r\n  'vert-origin-x': 'vertOriginX',\r\n  vertoriginy: 'vertOriginY',\r\n  'vert-origin-y': 'vertOriginY',\r\n  vhanging: 'vHanging',\r\n  'v-hanging': 'vHanging',\r\n  videographic: 'vIdeographic',\r\n  'v-ideographic': 'vIdeographic',\r\n  viewbox: 'viewBox',\r\n  viewtarget: 'viewTarget',\r\n  visibility: 'visibility',\r\n  vmathematical: 'vMathematical',\r\n  'v-mathematical': 'vMathematical',\r\n  vocab: 'vocab',\r\n  widths: 'widths',\r\n  wordspacing: 'wordSpacing',\r\n  'word-spacing': 'wordSpacing',\r\n  writingmode: 'writingMode',\r\n  'writing-mode': 'writingMode',\r\n  x1: 'x1',\r\n  x2: 'x2',\r\n  x: 'x',\r\n  xchannelselector: 'xChannelSelector',\r\n  xheight: 'xHeight',\r\n  'x-height': 'xHeight',\r\n  xlinkactuate: 'xlinkActuate',\r\n  'xlink:actuate': 'xlinkActuate',\r\n  xlinkarcrole: 'xlinkArcrole',\r\n  'xlink:arcrole': 'xlinkArcrole',\r\n  xlinkhref: 'xlinkHref',\r\n  'xlink:href': 'xlinkHref',\r\n  xlinkrole: 'xlinkRole',\r\n  'xlink:role': 'xlinkRole',\r\n  xlinkshow: 'xlinkShow',\r\n  'xlink:show': 'xlinkShow',\r\n  xlinktitle: 'xlinkTitle',\r\n  'xlink:title': 'xlinkTitle',\r\n  xlinktype: 'xlinkType',\r\n  'xlink:type': 'xlinkType',\r\n  xmlbase: 'xmlBase',\r\n  'xml:base': 'xmlBase',\r\n  xmllang: 'xmlLang',\r\n  'xml:lang': 'xmlLang',\r\n  xmlns: 'xmlns',\r\n  'xml:space': 'xmlSpace',\r\n  xmlnsxlink: 'xmlnsXlink',\r\n  'xmlns:xlink': 'xmlnsXlink',\r\n  xmlspace: 'xmlSpace',\r\n  y1: 'y1',\r\n  y2: 'y2',\r\n  y: 'y',\r\n  ychannelselector: 'yChannelSelector',\r\n  z: 'z',\r\n  zoomandpan: 'zoomAndPan'\r\n};\r\n\r\nvar ariaProperties = {\r\n  'aria-current': 0, // state\r\n  'aria-details': 0,\r\n  'aria-disabled': 0, // state\r\n  'aria-hidden': 0, // state\r\n  'aria-invalid': 0, // state\r\n  'aria-keyshortcuts': 0,\r\n  'aria-label': 0,\r\n  'aria-roledescription': 0,\r\n  // Widget Attributes\r\n  'aria-autocomplete': 0,\r\n  'aria-checked': 0,\r\n  'aria-expanded': 0,\r\n  'aria-haspopup': 0,\r\n  'aria-level': 0,\r\n  'aria-modal': 0,\r\n  'aria-multiline': 0,\r\n  'aria-multiselectable': 0,\r\n  'aria-orientation': 0,\r\n  'aria-placeholder': 0,\r\n  'aria-pressed': 0,\r\n  'aria-readonly': 0,\r\n  'aria-required': 0,\r\n  'aria-selected': 0,\r\n  'aria-sort': 0,\r\n  'aria-valuemax': 0,\r\n  'aria-valuemin': 0,\r\n  'aria-valuenow': 0,\r\n  'aria-valuetext': 0,\r\n  // Live Region Attributes\r\n  'aria-atomic': 0,\r\n  'aria-busy': 0,\r\n  'aria-live': 0,\r\n  'aria-relevant': 0,\r\n  // Drag-and-Drop Attributes\r\n  'aria-dropeffect': 0,\r\n  'aria-grabbed': 0,\r\n  // Relationship Attributes\r\n  'aria-activedescendant': 0,\r\n  'aria-colcount': 0,\r\n  'aria-colindex': 0,\r\n  'aria-colspan': 0,\r\n  'aria-controls': 0,\r\n  'aria-describedby': 0,\r\n  'aria-errormessage': 0,\r\n  'aria-flowto': 0,\r\n  'aria-labelledby': 0,\r\n  'aria-owns': 0,\r\n  'aria-posinset': 0,\r\n  'aria-rowcount': 0,\r\n  'aria-rowindex': 0,\r\n  'aria-rowspan': 0,\r\n  'aria-setsize': 0\r\n};\r\n\r\nvar warnedProperties = {};\r\nvar rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\r\nvar rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\r\n\r\nvar hasOwnProperty$2 = Object.prototype.hasOwnProperty;\r\n\r\nfunction validateProperty(tagName, name) {\r\n  if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {\r\n    return true;\r\n  }\r\n\r\n  if (rARIACamel.test(name)) {\r\n    var ariaName = 'aria-' + name.slice(4).toLowerCase();\r\n    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;\r\n\r\n    // If this is an aria-* attribute, but is not listed in the known DOM\r\n    // DOM properties, then it is an invalid aria-* attribute.\r\n    if (correctName == null) {\r\n      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\r\n      warnedProperties[name] = true;\r\n      return true;\r\n    }\r\n    // aria-* attributes should be lowercase; suggest the lowercase version.\r\n    if (name !== correctName) {\r\n      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\r\n      warnedProperties[name] = true;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  if (rARIA.test(name)) {\r\n    var lowerCasedName = name.toLowerCase();\r\n    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;\r\n\r\n    // If this is an aria-* attribute, but is not listed in the known DOM\r\n    // DOM properties, then it is an invalid aria-* attribute.\r\n    if (standardName == null) {\r\n      warnedProperties[name] = true;\r\n      return false;\r\n    }\r\n    // aria-* attributes should be lowercase; suggest the lowercase version.\r\n    if (name !== standardName) {\r\n      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\r\n      warnedProperties[name] = true;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction warnInvalidARIAProps(type, props) {\r\n  var invalidProps = [];\r\n\r\n  for (var key in props) {\r\n    var isValid = validateProperty(type, key);\r\n    if (!isValid) {\r\n      invalidProps.push(key);\r\n    }\r\n  }\r\n\r\n  var unknownPropString = invalidProps.map(function (prop) {\r\n    return '`' + prop + '`';\r\n  }).join(', ');\r\n\r\n  if (invalidProps.length === 1) {\r\n    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\r\n  } else if (invalidProps.length > 1) {\r\n    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\r\n  }\r\n}\r\n\r\nfunction validateProperties(type, props) {\r\n  if (isCustomComponent(type, props)) {\r\n    return;\r\n  }\r\n  warnInvalidARIAProps(type, props);\r\n}\r\n\r\nvar didWarnValueNull = false;\r\n\r\nfunction validateProperties$1(type, props) {\r\n  if (type !== 'input' && type !== 'textarea' && type !== 'select') {\r\n    return;\r\n  }\r\n\r\n  if (props != null && props.value === null && !didWarnValueNull) {\r\n    didWarnValueNull = true;\r\n    if (type === 'select' && props.multiple) {\r\n      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\r\n    } else {\r\n      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\r\n    }\r\n  }\r\n}\r\n\r\nvar validateProperty$1 = function () {};\r\n\r\n{\r\n  var warnedProperties$1 = {};\r\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\r\n  var EVENT_NAME_REGEX = /^on./;\r\n  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\r\n  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\r\n  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\r\n\r\n  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {\r\n    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\r\n      return true;\r\n    }\r\n\r\n    var lowerCasedName = name.toLowerCase();\r\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\r\n      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    // We can't rely on the event system being injected on the server.\r\n    if (canUseEventSystem) {\r\n      if (registrationNameModules.hasOwnProperty(name)) {\r\n        return true;\r\n      }\r\n      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\r\n      if (registrationName != null) {\r\n        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\r\n        warnedProperties$1[name] = true;\r\n        return true;\r\n      }\r\n      if (EVENT_NAME_REGEX.test(name)) {\r\n        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);\r\n        warnedProperties$1[name] = true;\r\n        return true;\r\n      }\r\n    } else if (EVENT_NAME_REGEX.test(name)) {\r\n      // If no event plugins have been injected, we are in a server environment.\r\n      // So we can't tell if the event name is correct for sure, but we can filter\r\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\r\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\r\n        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\r\n      }\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    // Let the ARIA attribute hook validate ARIA attributes\r\n    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\r\n      return true;\r\n    }\r\n\r\n    if (lowerCasedName === 'innerhtml') {\r\n      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    if (lowerCasedName === 'aria') {\r\n      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\r\n      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    if (typeof value === 'number' && isNaN(value)) {\r\n      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    var propertyInfo = getPropertyInfo(name);\r\n    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;\r\n\r\n    // Known attributes should match the casing specified in the property config.\r\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\r\n      var standardName = possibleStandardNames[lowerCasedName];\r\n      if (standardName !== name) {\r\n        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\r\n        warnedProperties$1[name] = true;\r\n        return true;\r\n      }\r\n    } else if (!isReserved && name !== lowerCasedName) {\r\n      // Unknown attributes should have lowercase casing since that's how they\r\n      // will be cased anyway with server rendering.\r\n      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\r\n      if (value) {\r\n        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\r\n      } else {\r\n        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\r\n      }\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    // Now that we've validated casing, do not validate\r\n    // data types for reserved props\r\n    if (isReserved) {\r\n      return true;\r\n    }\r\n\r\n    // Warn when a known attribute is a bad type\r\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\r\n      warnedProperties$1[name] = true;\r\n      return false;\r\n    }\r\n\r\n    // Warn when passing the strings 'false' or 'true' into a boolean prop\r\n    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\r\n      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\r\n      warnedProperties$1[name] = true;\r\n      return true;\r\n    }\r\n\r\n    return true;\r\n  };\r\n}\r\n\r\nvar warnUnknownProperties = function (type, props, canUseEventSystem) {\r\n  var unknownProps = [];\r\n  for (var key in props) {\r\n    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);\r\n    if (!isValid) {\r\n      unknownProps.push(key);\r\n    }\r\n  }\r\n\r\n  var unknownPropString = unknownProps.map(function (prop) {\r\n    return '`' + prop + '`';\r\n  }).join(', ');\r\n  if (unknownProps.length === 1) {\r\n    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\r\n  } else if (unknownProps.length > 1) {\r\n    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\r\n  }\r\n};\r\n\r\nfunction validateProperties$2(type, props, canUseEventSystem) {\r\n  if (isCustomComponent(type, props)) {\r\n    return;\r\n  }\r\n  warnUnknownProperties(type, props, canUseEventSystem);\r\n}\r\n\r\n// TODO: direct imports like some-package/src/* are bad. Fix me.\r\nvar didWarnInvalidHydration = false;\r\nvar didWarnShadyDOM = false;\r\n\r\nvar DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\r\nvar SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\r\nvar SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';\r\nvar AUTOFOCUS = 'autoFocus';\r\nvar CHILDREN = 'children';\r\nvar STYLE$1 = 'style';\r\nvar HTML = '__html';\r\n\r\nvar HTML_NAMESPACE = Namespaces.html;\r\n\r\n\r\nvar warnedUnknownTags = void 0;\r\nvar suppressHydrationWarning = void 0;\r\n\r\nvar validatePropertiesInDevelopment = void 0;\r\nvar warnForTextDifference = void 0;\r\nvar warnForPropDifference = void 0;\r\nvar warnForExtraAttributes = void 0;\r\nvar warnForInvalidEventListener = void 0;\r\nvar canDiffStyleForHydrationWarning = void 0;\r\n\r\nvar normalizeMarkupForTextOrAttribute = void 0;\r\nvar normalizeHTML = void 0;\r\n\r\n{\r\n  warnedUnknownTags = {\r\n    // Chrome is the only major browser not shipping <time>. But as of July\r\n    // 2017 it intends to ship it due to widespread usage. We intentionally\r\n    // *don't* warn for <time> even if it's unrecognized by Chrome because\r\n    // it soon will be, and many apps have been using it anyway.\r\n    time: true,\r\n    // There are working polyfills for <dialog>. Let people use it.\r\n    dialog: true,\r\n    // Electron ships a custom <webview> tag to display external web content in\r\n    // an isolated frame and process.\r\n    // This tag is not present in non Electron environments such as JSDom which\r\n    // is often used for testing purposes.\r\n    // @see https://electronjs.org/docs/api/webview-tag\r\n    webview: true\r\n  };\r\n\r\n  validatePropertiesInDevelopment = function (type, props) {\r\n    validateProperties(type, props);\r\n    validateProperties$1(type, props);\r\n    validateProperties$2(type, props, /* canUseEventSystem */true);\r\n  };\r\n\r\n  // IE 11 parses & normalizes the style attribute as opposed to other\r\n  // browsers. It adds spaces and sorts the properties in some\r\n  // non-alphabetical order. Handling that would require sorting CSS\r\n  // properties in the client & server versions or applying\r\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\r\n  // normalized. Since it only affects IE, we're skipping style warnings\r\n  // in that browser completely in favor of doing all that work.\r\n  // See https://github.com/facebook/react/issues/11807\r\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\r\n\r\n  // HTML parsing normalizes CR and CRLF to LF.\r\n  // It also can turn \\u0000 into \\uFFFD inside attributes.\r\n  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\r\n  // If we have a mismatch, it might be caused by that.\r\n  // We will still patch up in this case but not fire the warning.\r\n  var NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\r\n  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\r\n\r\n  normalizeMarkupForTextOrAttribute = function (markup) {\r\n    var markupString = typeof markup === 'string' ? markup : '' + markup;\r\n    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\r\n  };\r\n\r\n  warnForTextDifference = function (serverText, clientText) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\r\n    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\r\n    if (normalizedServerText === normalizedClientText) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    warningWithoutStack$1(false, 'Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\r\n  };\r\n\r\n  warnForPropDifference = function (propName, serverValue, clientValue) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\r\n    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\r\n    if (normalizedServerValue === normalizedClientValue) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\r\n  };\r\n\r\n  warnForExtraAttributes = function (attributeNames) {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    var names = [];\r\n    attributeNames.forEach(function (name) {\r\n      names.push(name);\r\n    });\r\n    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);\r\n  };\r\n\r\n  warnForInvalidEventListener = function (registrationName, listener) {\r\n    if (listener === false) {\r\n      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\r\n    } else {\r\n      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\r\n    }\r\n  };\r\n\r\n  // Parse the HTML and read it back to normalize the HTML string so that it\r\n  // can be used for comparison.\r\n  normalizeHTML = function (parent, html) {\r\n    // We could have created a separate document here to avoid\r\n    // re-initializing custom elements if they exist. But this breaks\r\n    // how <noscript> is being handled. So we use the same document.\r\n    // See the discussion in https://github.com/facebook/react/pull/11157.\r\n    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\r\n    testElement.innerHTML = html;\r\n    return testElement.innerHTML;\r\n  };\r\n}\r\n\r\nfunction ensureListeningTo(rootContainerElement, registrationName) {\r\n  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\r\n  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;\r\n  listenTo(registrationName, doc);\r\n}\r\n\r\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\r\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\r\n}\r\n\r\nfunction noop() {}\r\n\r\nfunction trapClickOnNonInteractiveElement(node) {\r\n  // Mobile Safari does not fire properly bubble click events on\r\n  // non-interactive elements, which means delegated click listeners do not\r\n  // fire. The workaround for this bug involves attaching an empty click\r\n  // listener on the target node.\r\n  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n  // Just set it using the onclick property so that we don't have to manage any\r\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n  // removed.\r\n  // TODO: Only do this for the relevant Safaris maybe?\r\n  node.onclick = noop;\r\n}\r\n\r\nfunction setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\r\n  for (var propKey in nextProps) {\r\n    if (!nextProps.hasOwnProperty(propKey)) {\r\n      continue;\r\n    }\r\n    var nextProp = nextProps[propKey];\r\n    if (propKey === STYLE$1) {\r\n      {\r\n        if (nextProp) {\r\n          // Freeze the next style object so that we can assume it won't be\r\n          // mutated. We have already warned for this in the past.\r\n          Object.freeze(nextProp);\r\n        }\r\n      }\r\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\r\n      setValueForStyles(domElement, nextProp);\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n      var nextHtml = nextProp ? nextProp[HTML] : undefined;\r\n      if (nextHtml != null) {\r\n        setInnerHTML(domElement, nextHtml);\r\n      }\r\n    } else if (propKey === CHILDREN) {\r\n      if (typeof nextProp === 'string') {\r\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\r\n        // textContent on a <textarea> will cause the placeholder to not\r\n        // show within the <textarea> until it has been focused and blurred again.\r\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\r\n        var canSetTextContent = tag !== 'textarea' || nextProp !== '';\r\n        if (canSetTextContent) {\r\n          setTextContent(domElement, nextProp);\r\n        }\r\n      } else if (typeof nextProp === 'number') {\r\n        setTextContent(domElement, '' + nextProp);\r\n      }\r\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {\r\n      // Noop\r\n    } else if (propKey === AUTOFOCUS) {\r\n      // We polyfill it separately on the client during commit.\r\n      // We could have excluded it in the property list instead of\r\n      // adding a special case here, but then it wouldn't be emitted\r\n      // on server rendering (but we *do* want to emit it in SSR).\r\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\r\n      if (nextProp != null) {\r\n        if (true && typeof nextProp !== 'function') {\r\n          warnForInvalidEventListener(propKey, nextProp);\r\n        }\r\n        ensureListeningTo(rootContainerElement, propKey);\r\n      }\r\n    } else if (nextProp != null) {\r\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\r\n  // TODO: Handle wasCustomComponentTag\r\n  for (var i = 0; i < updatePayload.length; i += 2) {\r\n    var propKey = updatePayload[i];\r\n    var propValue = updatePayload[i + 1];\r\n    if (propKey === STYLE$1) {\r\n      setValueForStyles(domElement, propValue);\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n      setInnerHTML(domElement, propValue);\r\n    } else if (propKey === CHILDREN) {\r\n      setTextContent(domElement, propValue);\r\n    } else {\r\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createElement(type, props, rootContainerElement, parentNamespace) {\r\n  var isCustomComponentTag = void 0;\r\n\r\n  // We create tags in the namespace of their parent container, except HTML\r\n  // tags get no namespace.\r\n  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\r\n  var domElement = void 0;\r\n  var namespaceURI = parentNamespace;\r\n  if (namespaceURI === HTML_NAMESPACE) {\r\n    namespaceURI = getIntrinsicNamespace(type);\r\n  }\r\n  if (namespaceURI === HTML_NAMESPACE) {\r\n    {\r\n      isCustomComponentTag = isCustomComponent(type, props);\r\n      // Should this check be gated by parent namespace? Not sure we want to\r\n      // allow <SVG> or <mATH>.\r\n      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;\r\n    }\r\n\r\n    if (type === 'script') {\r\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\r\n      // set to true and it does not execute\r\n      var div = ownerDocument.createElement('div');\r\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\r\n      // This is guaranteed to yield a script element.\r\n      var firstChild = div.firstChild;\r\n      domElement = div.removeChild(firstChild);\r\n    } else if (typeof props.is === 'string') {\r\n      // $FlowIssue `createElement` should be updated for Web Components\r\n      domElement = ownerDocument.createElement(type, { is: props.is });\r\n    } else {\r\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\r\n      // See discussion in https://github.com/facebook/react/pull/6896\r\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\r\n      domElement = ownerDocument.createElement(type);\r\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple`\r\n      // attribute on `select`s needs to be added before `option`s are inserted. This prevents\r\n      // a bug where the `select` does not scroll to the correct option because singular\r\n      // `select` elements automatically pick the first item.\r\n      // See https://github.com/facebook/react/issues/13222\r\n      if (type === 'select' && props.multiple) {\r\n        var node = domElement;\r\n        node.multiple = true;\r\n      }\r\n    }\r\n  } else {\r\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\r\n  }\r\n\r\n  {\r\n    if (namespaceURI === HTML_NAMESPACE) {\r\n      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {\r\n        warnedUnknownTags[type] = true;\r\n        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\r\n      }\r\n    }\r\n  }\r\n\r\n  return domElement;\r\n}\r\n\r\nfunction createTextNode(text, rootContainerElement) {\r\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\r\n}\r\n\r\nfunction setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\r\n  var isCustomComponentTag = isCustomComponent(tag, rawProps);\r\n  {\r\n    validatePropertiesInDevelopment(tag, rawProps);\r\n    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {\r\n      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\r\n      didWarnShadyDOM = true;\r\n    }\r\n  }\r\n\r\n  // TODO: Make sure that we check isMounted before firing any of these events.\r\n  var props = void 0;\r\n  switch (tag) {\r\n    case 'iframe':\r\n    case 'object':\r\n      trapBubbledEvent(TOP_LOAD, domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'video':\r\n    case 'audio':\r\n      // Create listener for each media event\r\n      for (var i = 0; i < mediaEventTypes.length; i++) {\r\n        trapBubbledEvent(mediaEventTypes[i], domElement);\r\n      }\r\n      props = rawProps;\r\n      break;\r\n    case 'source':\r\n      trapBubbledEvent(TOP_ERROR, domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'img':\r\n    case 'image':\r\n    case 'link':\r\n      trapBubbledEvent(TOP_ERROR, domElement);\r\n      trapBubbledEvent(TOP_LOAD, domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'form':\r\n      trapBubbledEvent(TOP_RESET, domElement);\r\n      trapBubbledEvent(TOP_SUBMIT, domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'details':\r\n      trapBubbledEvent(TOP_TOGGLE, domElement);\r\n      props = rawProps;\r\n      break;\r\n    case 'input':\r\n      initWrapperState(domElement, rawProps);\r\n      props = getHostProps(domElement, rawProps);\r\n      trapBubbledEvent(TOP_INVALID, domElement);\r\n      // For controlled components we always need to ensure we're listening\r\n      // to onChange. Even if there is no listener.\r\n      ensureListeningTo(rootContainerElement, 'onChange');\r\n      break;\r\n    case 'option':\r\n      validateProps(domElement, rawProps);\r\n      props = getHostProps$1(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n      initWrapperState$1(domElement, rawProps);\r\n      props = getHostProps$2(domElement, rawProps);\r\n      trapBubbledEvent(TOP_INVALID, domElement);\r\n      // For controlled components we always need to ensure we're listening\r\n      // to onChange. Even if there is no listener.\r\n      ensureListeningTo(rootContainerElement, 'onChange');\r\n      break;\r\n    case 'textarea':\r\n      initWrapperState$2(domElement, rawProps);\r\n      props = getHostProps$3(domElement, rawProps);\r\n      trapBubbledEvent(TOP_INVALID, domElement);\r\n      // For controlled components we always need to ensure we're listening\r\n      // to onChange. Even if there is no listener.\r\n      ensureListeningTo(rootContainerElement, 'onChange');\r\n      break;\r\n    default:\r\n      props = rawProps;\r\n  }\r\n\r\n  assertValidProps(tag, props);\r\n\r\n  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\r\n\r\n  switch (tag) {\r\n    case 'input':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track(domElement);\r\n      postMountWrapper(domElement, rawProps, false);\r\n      break;\r\n    case 'textarea':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track(domElement);\r\n      postMountWrapper$3(domElement, rawProps);\r\n      break;\r\n    case 'option':\r\n      postMountWrapper$1(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n      postMountWrapper$2(domElement, rawProps);\r\n      break;\r\n    default:\r\n      if (typeof props.onClick === 'function') {\r\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n        trapClickOnNonInteractiveElement(domElement);\r\n      }\r\n      break;\r\n  }\r\n}\r\n\r\n// Calculate the diff between the two objects.\r\nfunction diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\r\n  {\r\n    validatePropertiesInDevelopment(tag, nextRawProps);\r\n  }\r\n\r\n  var updatePayload = null;\r\n\r\n  var lastProps = void 0;\r\n  var nextProps = void 0;\r\n  switch (tag) {\r\n    case 'input':\r\n      lastProps = getHostProps(domElement, lastRawProps);\r\n      nextProps = getHostProps(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    case 'option':\r\n      lastProps = getHostProps$1(domElement, lastRawProps);\r\n      nextProps = getHostProps$1(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    case 'select':\r\n      lastProps = getHostProps$2(domElement, lastRawProps);\r\n      nextProps = getHostProps$2(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    case 'textarea':\r\n      lastProps = getHostProps$3(domElement, lastRawProps);\r\n      nextProps = getHostProps$3(domElement, nextRawProps);\r\n      updatePayload = [];\r\n      break;\r\n    default:\r\n      lastProps = lastRawProps;\r\n      nextProps = nextRawProps;\r\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\r\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n        trapClickOnNonInteractiveElement(domElement);\r\n      }\r\n      break;\r\n  }\r\n\r\n  assertValidProps(tag, nextProps);\r\n\r\n  var propKey = void 0;\r\n  var styleName = void 0;\r\n  var styleUpdates = null;\r\n  for (propKey in lastProps) {\r\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\r\n      continue;\r\n    }\r\n    if (propKey === STYLE$1) {\r\n      var lastStyle = lastProps[propKey];\r\n      for (styleName in lastStyle) {\r\n        if (lastStyle.hasOwnProperty(styleName)) {\r\n          if (!styleUpdates) {\r\n            styleUpdates = {};\r\n          }\r\n          styleUpdates[styleName] = '';\r\n        }\r\n      }\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\r\n      // Noop. This is handled by the clear text mechanism.\r\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {\r\n      // Noop\r\n    } else if (propKey === AUTOFOCUS) {\r\n      // Noop. It doesn't work on updates anyway.\r\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\r\n      // This is a special case. If any listener updates we need to ensure\r\n      // that the \"current\" fiber pointer gets updated so we need a commit\r\n      // to update this element.\r\n      if (!updatePayload) {\r\n        updatePayload = [];\r\n      }\r\n    } else {\r\n      // For all other deleted properties we add it to the queue. We use\r\n      // the whitelist in the commit phase instead.\r\n      (updatePayload = updatePayload || []).push(propKey, null);\r\n    }\r\n  }\r\n  for (propKey in nextProps) {\r\n    var nextProp = nextProps[propKey];\r\n    var lastProp = lastProps != null ? lastProps[propKey] : undefined;\r\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\r\n      continue;\r\n    }\r\n    if (propKey === STYLE$1) {\r\n      {\r\n        if (nextProp) {\r\n          // Freeze the next style object so that we can assume it won't be\r\n          // mutated. We have already warned for this in the past.\r\n          Object.freeze(nextProp);\r\n        }\r\n      }\r\n      if (lastProp) {\r\n        // Unset styles on `lastProp` but not on `nextProp`.\r\n        for (styleName in lastProp) {\r\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\r\n            if (!styleUpdates) {\r\n              styleUpdates = {};\r\n            }\r\n            styleUpdates[styleName] = '';\r\n          }\r\n        }\r\n        // Update styles that changed since `lastProp`.\r\n        for (styleName in nextProp) {\r\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\r\n            if (!styleUpdates) {\r\n              styleUpdates = {};\r\n            }\r\n            styleUpdates[styleName] = nextProp[styleName];\r\n          }\r\n        }\r\n      } else {\r\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\r\n        if (!styleUpdates) {\r\n          if (!updatePayload) {\r\n            updatePayload = [];\r\n          }\r\n          updatePayload.push(propKey, styleUpdates);\r\n        }\r\n        styleUpdates = nextProp;\r\n      }\r\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n      var nextHtml = nextProp ? nextProp[HTML] : undefined;\r\n      var lastHtml = lastProp ? lastProp[HTML] : undefined;\r\n      if (nextHtml != null) {\r\n        if (lastHtml !== nextHtml) {\r\n          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);\r\n        }\r\n      } else {\r\n        // TODO: It might be too late to clear this if we have children\r\n        // inserted already.\r\n      }\r\n    } else if (propKey === CHILDREN) {\r\n      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {\r\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\r\n      }\r\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {\r\n      // Noop\r\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\r\n      if (nextProp != null) {\r\n        // We eagerly listen to this even though we haven't committed yet.\r\n        if (true && typeof nextProp !== 'function') {\r\n          warnForInvalidEventListener(propKey, nextProp);\r\n        }\r\n        ensureListeningTo(rootContainerElement, propKey);\r\n      }\r\n      if (!updatePayload && lastProp !== nextProp) {\r\n        // This is a special case. If any listener updates we need to ensure\r\n        // that the \"current\" props pointer gets updated so we need a commit\r\n        // to update this element.\r\n        updatePayload = [];\r\n      }\r\n    } else {\r\n      // For any other property we always add it to the queue and then we\r\n      // filter it out using the whitelist during the commit.\r\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\r\n    }\r\n  }\r\n  if (styleUpdates) {\r\n    {\r\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);\r\n    }\r\n    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);\r\n  }\r\n  return updatePayload;\r\n}\r\n\r\n// Apply the diff.\r\nfunction updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\r\n  // Update checked *before* name.\r\n  // In the middle of an update, it is possible to have multiple checked.\r\n  // When a checked radio tries to change name, browser makes another radio's checked false.\r\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\r\n    updateChecked(domElement, nextRawProps);\r\n  }\r\n\r\n  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\r\n  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);\r\n  // Apply the diff.\r\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);\r\n\r\n  // TODO: Ensure that an update gets scheduled if any of the special props\r\n  // changed.\r\n  switch (tag) {\r\n    case 'input':\r\n      // Update the wrapper around inputs *after* updating props. This has to\r\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\r\n      // raise warnings and prevent the new value from being assigned.\r\n      updateWrapper(domElement, nextRawProps);\r\n      break;\r\n    case 'textarea':\r\n      updateWrapper$1(domElement, nextRawProps);\r\n      break;\r\n    case 'select':\r\n      // <select> value update needs to occur after <option> children\r\n      // reconciliation\r\n      postUpdateWrapper(domElement, nextRawProps);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction getPossibleStandardName(propName) {\r\n  {\r\n    var lowerCasedName = propName.toLowerCase();\r\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\r\n      return null;\r\n    }\r\n    return possibleStandardNames[lowerCasedName] || null;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {\r\n  var isCustomComponentTag = void 0;\r\n  var extraAttributeNames = void 0;\r\n\r\n  {\r\n    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;\r\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\r\n    validatePropertiesInDevelopment(tag, rawProps);\r\n    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {\r\n      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\r\n      didWarnShadyDOM = true;\r\n    }\r\n  }\r\n\r\n  // TODO: Make sure that we check isMounted before firing any of these events.\r\n  switch (tag) {\r\n    case 'iframe':\r\n    case 'object':\r\n      trapBubbledEvent(TOP_LOAD, domElement);\r\n      break;\r\n    case 'video':\r\n    case 'audio':\r\n      // Create listener for each media event\r\n      for (var i = 0; i < mediaEventTypes.length; i++) {\r\n        trapBubbledEvent(mediaEventTypes[i], domElement);\r\n      }\r\n      break;\r\n    case 'source':\r\n      trapBubbledEvent(TOP_ERROR, domElement);\r\n      break;\r\n    case 'img':\r\n    case 'image':\r\n    case 'link':\r\n      trapBubbledEvent(TOP_ERROR, domElement);\r\n      trapBubbledEvent(TOP_LOAD, domElement);\r\n      break;\r\n    case 'form':\r\n      trapBubbledEvent(TOP_RESET, domElement);\r\n      trapBubbledEvent(TOP_SUBMIT, domElement);\r\n      break;\r\n    case 'details':\r\n      trapBubbledEvent(TOP_TOGGLE, domElement);\r\n      break;\r\n    case 'input':\r\n      initWrapperState(domElement, rawProps);\r\n      trapBubbledEvent(TOP_INVALID, domElement);\r\n      // For controlled components we always need to ensure we're listening\r\n      // to onChange. Even if there is no listener.\r\n      ensureListeningTo(rootContainerElement, 'onChange');\r\n      break;\r\n    case 'option':\r\n      validateProps(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n      initWrapperState$1(domElement, rawProps);\r\n      trapBubbledEvent(TOP_INVALID, domElement);\r\n      // For controlled components we always need to ensure we're listening\r\n      // to onChange. Even if there is no listener.\r\n      ensureListeningTo(rootContainerElement, 'onChange');\r\n      break;\r\n    case 'textarea':\r\n      initWrapperState$2(domElement, rawProps);\r\n      trapBubbledEvent(TOP_INVALID, domElement);\r\n      // For controlled components we always need to ensure we're listening\r\n      // to onChange. Even if there is no listener.\r\n      ensureListeningTo(rootContainerElement, 'onChange');\r\n      break;\r\n  }\r\n\r\n  assertValidProps(tag, rawProps);\r\n\r\n  {\r\n    extraAttributeNames = new Set();\r\n    var attributes = domElement.attributes;\r\n    for (var _i = 0; _i < attributes.length; _i++) {\r\n      var name = attributes[_i].name.toLowerCase();\r\n      switch (name) {\r\n        // Built-in SSR attribute is whitelisted\r\n        case 'data-reactroot':\r\n          break;\r\n        // Controlled attributes are not validated\r\n        // TODO: Only ignore them on controlled tags.\r\n        case 'value':\r\n          break;\r\n        case 'checked':\r\n          break;\r\n        case 'selected':\r\n          break;\r\n        default:\r\n          // Intentionally use the original name.\r\n          // See discussion in https://github.com/facebook/react/pull/10676.\r\n          extraAttributeNames.add(attributes[_i].name);\r\n      }\r\n    }\r\n  }\r\n\r\n  var updatePayload = null;\r\n  for (var propKey in rawProps) {\r\n    if (!rawProps.hasOwnProperty(propKey)) {\r\n      continue;\r\n    }\r\n    var nextProp = rawProps[propKey];\r\n    if (propKey === CHILDREN) {\r\n      // For text content children we compare against textContent. This\r\n      // might match additional HTML that is hidden when we read it using\r\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\r\n      // satisfies our requirement. Our requirement is not to produce perfect\r\n      // HTML and attributes. Ideally we should preserve structure but it's\r\n      // ok not to if the visible content is still enough to indicate what\r\n      // even listeners these nodes might be wired up to.\r\n      // TODO: Warn if there is more than a single textNode as a child.\r\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\r\n      if (typeof nextProp === 'string') {\r\n        if (domElement.textContent !== nextProp) {\r\n          if (true && !suppressHydrationWarning) {\r\n            warnForTextDifference(domElement.textContent, nextProp);\r\n          }\r\n          updatePayload = [CHILDREN, nextProp];\r\n        }\r\n      } else if (typeof nextProp === 'number') {\r\n        if (domElement.textContent !== '' + nextProp) {\r\n          if (true && !suppressHydrationWarning) {\r\n            warnForTextDifference(domElement.textContent, nextProp);\r\n          }\r\n          updatePayload = [CHILDREN, '' + nextProp];\r\n        }\r\n      }\r\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\r\n      if (nextProp != null) {\r\n        if (true && typeof nextProp !== 'function') {\r\n          warnForInvalidEventListener(propKey, nextProp);\r\n        }\r\n        ensureListeningTo(rootContainerElement, propKey);\r\n      }\r\n    } else if (true &&\r\n    // Convince Flow we've calculated it (it's DEV-only in this method.)\r\n    typeof isCustomComponentTag === 'boolean') {\r\n      // Validate that the properties correspond to their expected values.\r\n      var serverValue = void 0;\r\n      var propertyInfo = getPropertyInfo(propKey);\r\n      if (suppressHydrationWarning) {\r\n        // Don't bother comparing. We're ignoring all these warnings.\r\n      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||\r\n      // Controlled attributes are not validated\r\n      // TODO: Only ignore them on controlled tags.\r\n      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {\r\n        // Noop\r\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\r\n        var serverHTML = domElement.innerHTML;\r\n        var nextHtml = nextProp ? nextProp[HTML] : undefined;\r\n        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');\r\n        if (expectedHTML !== serverHTML) {\r\n          warnForPropDifference(propKey, serverHTML, expectedHTML);\r\n        }\r\n      } else if (propKey === STYLE$1) {\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        extraAttributeNames.delete(propKey);\r\n\r\n        if (canDiffStyleForHydrationWarning) {\r\n          var expectedStyle = createDangerousStringForStyles(nextProp);\r\n          serverValue = domElement.getAttribute('style');\r\n          if (expectedStyle !== serverValue) {\r\n            warnForPropDifference(propKey, serverValue, expectedStyle);\r\n          }\r\n        }\r\n      } else if (isCustomComponentTag) {\r\n        // $FlowFixMe - Should be inferred as not undefined.\r\n        extraAttributeNames.delete(propKey.toLowerCase());\r\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\r\n\r\n        if (nextProp !== serverValue) {\r\n          warnForPropDifference(propKey, serverValue, nextProp);\r\n        }\r\n      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\r\n        var isMismatchDueToBadCasing = false;\r\n        if (propertyInfo !== null) {\r\n          // $FlowFixMe - Should be inferred as not undefined.\r\n          extraAttributeNames.delete(propertyInfo.attributeName);\r\n          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\r\n        } else {\r\n          var ownNamespace = parentNamespace;\r\n          if (ownNamespace === HTML_NAMESPACE) {\r\n            ownNamespace = getIntrinsicNamespace(tag);\r\n          }\r\n          if (ownNamespace === HTML_NAMESPACE) {\r\n            // $FlowFixMe - Should be inferred as not undefined.\r\n            extraAttributeNames.delete(propKey.toLowerCase());\r\n          } else {\r\n            var standardName = getPossibleStandardName(propKey);\r\n            if (standardName !== null && standardName !== propKey) {\r\n              // If an SVG prop is supplied with bad casing, it will\r\n              // be successfully parsed from HTML, but will produce a mismatch\r\n              // (and would be incorrectly rendered on the client).\r\n              // However, we already warn about bad casing elsewhere.\r\n              // So we'll skip the misleading extra mismatch warning in this case.\r\n              isMismatchDueToBadCasing = true;\r\n              // $FlowFixMe - Should be inferred as not undefined.\r\n              extraAttributeNames.delete(standardName);\r\n            }\r\n            // $FlowFixMe - Should be inferred as not undefined.\r\n            extraAttributeNames.delete(propKey);\r\n          }\r\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\r\n        }\r\n\r\n        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\r\n          warnForPropDifference(propKey, serverValue, nextProp);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  {\r\n    // $FlowFixMe - Should be inferred as not undefined.\r\n    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\r\n      // $FlowFixMe - Should be inferred as not undefined.\r\n      warnForExtraAttributes(extraAttributeNames);\r\n    }\r\n  }\r\n\r\n  switch (tag) {\r\n    case 'input':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track(domElement);\r\n      postMountWrapper(domElement, rawProps, true);\r\n      break;\r\n    case 'textarea':\r\n      // TODO: Make sure we check if this is still unmounted or do any clean\r\n      // up necessary since we never stop tracking anymore.\r\n      track(domElement);\r\n      postMountWrapper$3(domElement, rawProps);\r\n      break;\r\n    case 'select':\r\n    case 'option':\r\n      // For input and textarea we current always set the value property at\r\n      // post mount to force it to diverge from attributes. However, for\r\n      // option and select we don't quite do the same thing and select\r\n      // is not resilient to the DOM state changing so we don't do that here.\r\n      // TODO: Consider not doing this for input and textarea.\r\n      break;\r\n    default:\r\n      if (typeof rawProps.onClick === 'function') {\r\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n        trapClickOnNonInteractiveElement(domElement);\r\n      }\r\n      break;\r\n  }\r\n\r\n  return updatePayload;\r\n}\r\n\r\nfunction diffHydratedText(textNode, text) {\r\n  var isDifferent = textNode.nodeValue !== text;\r\n  return isDifferent;\r\n}\r\n\r\nfunction warnForUnmatchedText(textNode, text) {\r\n  {\r\n    warnForTextDifference(textNode.nodeValue, text);\r\n  }\r\n}\r\n\r\nfunction warnForDeletedHydratableElement(parentNode, child) {\r\n  {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\r\n  }\r\n}\r\n\r\nfunction warnForDeletedHydratableText(parentNode, child) {\r\n  {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\r\n  }\r\n}\r\n\r\nfunction warnForInsertedHydratedElement(parentNode, tag, props) {\r\n  {\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\r\n  }\r\n}\r\n\r\nfunction warnForInsertedHydratedText(parentNode, text) {\r\n  {\r\n    if (text === '') {\r\n      // We expect to insert empty text nodes since they're not represented in\r\n      // the HTML.\r\n      // TODO: Remove this special case if we can just avoid inserting empty\r\n      // text nodes.\r\n      return;\r\n    }\r\n    if (didWarnInvalidHydration) {\r\n      return;\r\n    }\r\n    didWarnInvalidHydration = true;\r\n    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\r\n  }\r\n}\r\n\r\nfunction restoreControlledState$1(domElement, tag, props) {\r\n  switch (tag) {\r\n    case 'input':\r\n      restoreControlledState(domElement, props);\r\n      return;\r\n    case 'textarea':\r\n      restoreControlledState$3(domElement, props);\r\n      return;\r\n    case 'select':\r\n      restoreControlledState$2(domElement, props);\r\n      return;\r\n  }\r\n}\r\n\r\n// TODO: direct imports like some-package/src/* are bad. Fix me.\r\nvar validateDOMNesting = function () {};\r\nvar updatedAncestorInfo = function () {};\r\n\r\n{\r\n  // This validation code was written based on the HTML5 parsing spec:\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\r\n  //\r\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\r\n  // not clear what practical benefit doing so provides); instead, we warn only\r\n  // for cases where the parser will give a parse tree differing from what React\r\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\r\n  // because it still parses correctly; we do warn for other cases like nested\r\n  // <p> tags where the beginning of the second element implicitly closes the\r\n  // first, causing a confusing mess.\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\r\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\r\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\r\n  // TODO: Distinguish by namespace here -- for <title>, including it here\r\n  // errs on the side of fewer warnings\r\n  'foreignObject', 'desc', 'title'];\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\r\n  var buttonScopeTags = inScopeTags.concat(['button']);\r\n\r\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\r\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\r\n\r\n  var emptyAncestorInfo = {\r\n    current: null,\r\n\r\n    formTag: null,\r\n    aTagInScope: null,\r\n    buttonTagInScope: null,\r\n    nobrTagInScope: null,\r\n    pTagInButtonScope: null,\r\n\r\n    listItemTagAutoclosing: null,\r\n    dlItemTagAutoclosing: null\r\n  };\r\n\r\n  updatedAncestorInfo = function (oldInfo, tag) {\r\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\r\n    var info = { tag: tag };\r\n\r\n    if (inScopeTags.indexOf(tag) !== -1) {\r\n      ancestorInfo.aTagInScope = null;\r\n      ancestorInfo.buttonTagInScope = null;\r\n      ancestorInfo.nobrTagInScope = null;\r\n    }\r\n    if (buttonScopeTags.indexOf(tag) !== -1) {\r\n      ancestorInfo.pTagInButtonScope = null;\r\n    }\r\n\r\n    // See rules for 'li', 'dd', 'dt' start tags in\r\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\r\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\r\n      ancestorInfo.listItemTagAutoclosing = null;\r\n      ancestorInfo.dlItemTagAutoclosing = null;\r\n    }\r\n\r\n    ancestorInfo.current = info;\r\n\r\n    if (tag === 'form') {\r\n      ancestorInfo.formTag = info;\r\n    }\r\n    if (tag === 'a') {\r\n      ancestorInfo.aTagInScope = info;\r\n    }\r\n    if (tag === 'button') {\r\n      ancestorInfo.buttonTagInScope = info;\r\n    }\r\n    if (tag === 'nobr') {\r\n      ancestorInfo.nobrTagInScope = info;\r\n    }\r\n    if (tag === 'p') {\r\n      ancestorInfo.pTagInButtonScope = info;\r\n    }\r\n    if (tag === 'li') {\r\n      ancestorInfo.listItemTagAutoclosing = info;\r\n    }\r\n    if (tag === 'dd' || tag === 'dt') {\r\n      ancestorInfo.dlItemTagAutoclosing = info;\r\n    }\r\n\r\n    return ancestorInfo;\r\n  };\r\n\r\n  /**\r\n   * Returns whether\r\n   */\r\n  var isTagValidWithParent = function (tag, parentTag) {\r\n    // First, let's check if we're in an unusual parsing mode...\r\n    switch (parentTag) {\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\r\n      case 'select':\r\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\r\n      case 'optgroup':\r\n        return tag === 'option' || tag === '#text';\r\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\r\n      // but\r\n      case 'option':\r\n        return tag === '#text';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\r\n      // No special behavior since these rules fall back to \"in body\" mode for\r\n      // all except special table nodes which cause bad parsing behavior anyway.\r\n\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\r\n      case 'tr':\r\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\r\n      case 'tbody':\r\n      case 'thead':\r\n      case 'tfoot':\r\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\r\n      case 'colgroup':\r\n        return tag === 'col' || tag === 'template';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\r\n      case 'table':\r\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\r\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\r\n      case 'head':\r\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\r\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\r\n      case 'html':\r\n        return tag === 'head' || tag === 'body';\r\n      case '#document':\r\n        return tag === 'html';\r\n    }\r\n\r\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\r\n    // where the parsing rules cause implicit opens or closes to be added.\r\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\r\n    switch (tag) {\r\n      case 'h1':\r\n      case 'h2':\r\n      case 'h3':\r\n      case 'h4':\r\n      case 'h5':\r\n      case 'h6':\r\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\r\n\r\n      case 'rp':\r\n      case 'rt':\r\n        return impliedEndTags.indexOf(parentTag) === -1;\r\n\r\n      case 'body':\r\n      case 'caption':\r\n      case 'col':\r\n      case 'colgroup':\r\n      case 'frame':\r\n      case 'head':\r\n      case 'html':\r\n      case 'tbody':\r\n      case 'td':\r\n      case 'tfoot':\r\n      case 'th':\r\n      case 'thead':\r\n      case 'tr':\r\n        // These tags are only valid with a few parents that have special child\r\n        // parsing rules -- if we're down here, then none of those matched and\r\n        // so we allow it only if we don't know what the parent is, as all other\r\n        // cases are invalid.\r\n        return parentTag == null;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Returns whether\r\n   */\r\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\r\n    switch (tag) {\r\n      case 'address':\r\n      case 'article':\r\n      case 'aside':\r\n      case 'blockquote':\r\n      case 'center':\r\n      case 'details':\r\n      case 'dialog':\r\n      case 'dir':\r\n      case 'div':\r\n      case 'dl':\r\n      case 'fieldset':\r\n      case 'figcaption':\r\n      case 'figure':\r\n      case 'footer':\r\n      case 'header':\r\n      case 'hgroup':\r\n      case 'main':\r\n      case 'menu':\r\n      case 'nav':\r\n      case 'ol':\r\n      case 'p':\r\n      case 'section':\r\n      case 'summary':\r\n      case 'ul':\r\n      case 'pre':\r\n      case 'listing':\r\n      case 'table':\r\n      case 'hr':\r\n      case 'xmp':\r\n      case 'h1':\r\n      case 'h2':\r\n      case 'h3':\r\n      case 'h4':\r\n      case 'h5':\r\n      case 'h6':\r\n        return ancestorInfo.pTagInButtonScope;\r\n\r\n      case 'form':\r\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\r\n\r\n      case 'li':\r\n        return ancestorInfo.listItemTagAutoclosing;\r\n\r\n      case 'dd':\r\n      case 'dt':\r\n        return ancestorInfo.dlItemTagAutoclosing;\r\n\r\n      case 'button':\r\n        return ancestorInfo.buttonTagInScope;\r\n\r\n      case 'a':\r\n        // Spec says something about storing a list of markers, but it sounds\r\n        // equivalent to this check.\r\n        return ancestorInfo.aTagInScope;\r\n\r\n      case 'nobr':\r\n        return ancestorInfo.nobrTagInScope;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var didWarn = {};\r\n\r\n  validateDOMNesting = function (childTag, childText, ancestorInfo) {\r\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\r\n    var parentInfo = ancestorInfo.current;\r\n    var parentTag = parentInfo && parentInfo.tag;\r\n\r\n    if (childText != null) {\r\n      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\r\n      childTag = '#text';\r\n    }\r\n\r\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\r\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\r\n    var invalidParentOrAncestor = invalidParent || invalidAncestor;\r\n    if (!invalidParentOrAncestor) {\r\n      return;\r\n    }\r\n\r\n    var ancestorTag = invalidParentOrAncestor.tag;\r\n    var addendum = getCurrentFiberStackInDev();\r\n\r\n    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;\r\n    if (didWarn[warnKey]) {\r\n      return;\r\n    }\r\n    didWarn[warnKey] = true;\r\n\r\n    var tagDisplayName = childTag;\r\n    var whitespaceInfo = '';\r\n    if (childTag === '#text') {\r\n      if (/\\S/.test(childText)) {\r\n        tagDisplayName = 'Text nodes';\r\n      } else {\r\n        tagDisplayName = 'Whitespace text nodes';\r\n        whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\r\n      }\r\n    } else {\r\n      tagDisplayName = '<' + childTag + '>';\r\n    }\r\n\r\n    if (invalidParent) {\r\n      var info = '';\r\n      if (ancestorTag === 'table' && childTag === 'tr') {\r\n        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\r\n      }\r\n      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);\r\n    } else {\r\n      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);\r\n    }\r\n  };\r\n}\r\n\r\n// Renderers that don't support persistence\r\n// can re-export everything from this module.\r\n\r\nfunction shim() {\r\n  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');\r\n}\r\n\r\n// Persistence (when unsupported)\r\nvar supportsPersistence = false;\r\nvar cloneInstance = shim;\r\nvar createContainerChildSet = shim;\r\nvar appendChildToContainerChildSet = shim;\r\nvar finalizeContainerChildren = shim;\r\nvar replaceContainerChildren = shim;\r\nvar cloneHiddenInstance = shim;\r\nvar cloneUnhiddenInstance = shim;\r\nvar createHiddenTextInstance = shim;\r\n\r\nvar SUPPRESS_HYDRATION_WARNING = void 0;\r\n{\r\n  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\r\n}\r\n\r\nvar SUSPENSE_START_DATA = '$';\r\nvar SUSPENSE_END_DATA = '/$';\r\n\r\nvar STYLE = 'style';\r\n\r\nvar eventsEnabled = null;\r\nvar selectionInformation = null;\r\n\r\nfunction shouldAutoFocusHostComponent(type, props) {\r\n  switch (type) {\r\n    case 'button':\r\n    case 'input':\r\n    case 'select':\r\n    case 'textarea':\r\n      return !!props.autoFocus;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getRootHostContext(rootContainerInstance) {\r\n  var type = void 0;\r\n  var namespace = void 0;\r\n  var nodeType = rootContainerInstance.nodeType;\r\n  switch (nodeType) {\r\n    case DOCUMENT_NODE:\r\n    case DOCUMENT_FRAGMENT_NODE:\r\n      {\r\n        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\r\n        var root = rootContainerInstance.documentElement;\r\n        namespace = root ? root.namespaceURI : getChildNamespace(null, '');\r\n        break;\r\n      }\r\n    default:\r\n      {\r\n        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;\r\n        var ownNamespace = container.namespaceURI || null;\r\n        type = container.tagName;\r\n        namespace = getChildNamespace(ownNamespace, type);\r\n        break;\r\n      }\r\n  }\r\n  {\r\n    var validatedTag = type.toLowerCase();\r\n    var _ancestorInfo = updatedAncestorInfo(null, validatedTag);\r\n    return { namespace: namespace, ancestorInfo: _ancestorInfo };\r\n  }\r\n  return namespace;\r\n}\r\n\r\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\r\n  {\r\n    var parentHostContextDev = parentHostContext;\r\n    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);\r\n    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);\r\n    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };\r\n  }\r\n  var parentNamespace = parentHostContext;\r\n  return getChildNamespace(parentNamespace, type);\r\n}\r\n\r\nfunction getPublicInstance(instance) {\r\n  return instance;\r\n}\r\n\r\nfunction prepareForCommit(containerInfo) {\r\n  eventsEnabled = isEnabled();\r\n  selectionInformation = getSelectionInformation();\r\n  setEnabled(false);\r\n}\r\n\r\nfunction resetAfterCommit(containerInfo) {\r\n  restoreSelection(selectionInformation);\r\n  selectionInformation = null;\r\n  setEnabled(eventsEnabled);\r\n  eventsEnabled = null;\r\n}\r\n\r\nfunction createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\r\n  var parentNamespace = void 0;\r\n  {\r\n    // TODO: take namespace into account when validating.\r\n    var hostContextDev = hostContext;\r\n    validateDOMNesting(type, null, hostContextDev.ancestorInfo);\r\n    if (typeof props.children === 'string' || typeof props.children === 'number') {\r\n      var string = '' + props.children;\r\n      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\r\n      validateDOMNesting(null, string, ownAncestorInfo);\r\n    }\r\n    parentNamespace = hostContextDev.namespace;\r\n  }\r\n  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);\r\n  precacheFiberNode(internalInstanceHandle, domElement);\r\n  updateFiberProps(domElement, props);\r\n  return domElement;\r\n}\r\n\r\nfunction appendInitialChild(parentInstance, child) {\r\n  parentInstance.appendChild(child);\r\n}\r\n\r\nfunction finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {\r\n  setInitialProperties(domElement, type, props, rootContainerInstance);\r\n  return shouldAutoFocusHostComponent(type, props);\r\n}\r\n\r\nfunction prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\r\n  {\r\n    var hostContextDev = hostContext;\r\n    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {\r\n      var string = '' + newProps.children;\r\n      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\r\n      validateDOMNesting(null, string, ownAncestorInfo);\r\n    }\r\n  }\r\n  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);\r\n}\r\n\r\nfunction shouldSetTextContent(type, props) {\r\n  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;\r\n}\r\n\r\nfunction shouldDeprioritizeSubtree(type, props) {\r\n  return !!props.hidden;\r\n}\r\n\r\nfunction createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\r\n  {\r\n    var hostContextDev = hostContext;\r\n    validateDOMNesting(null, text, hostContextDev.ancestorInfo);\r\n  }\r\n  var textNode = createTextNode(text, rootContainerInstance);\r\n  precacheFiberNode(internalInstanceHandle, textNode);\r\n  return textNode;\r\n}\r\n\r\nvar isPrimaryRenderer = true;\r\n// This initialization code may run even on server environments\r\n// if a component just imports ReactDOM (e.g. for findDOMNode).\r\n// Some environments might not have setTimeout or clearTimeout.\r\nvar scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\r\nvar cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\r\nvar noTimeout = -1;\r\nvar schedulePassiveEffects = scheduler.unstable_scheduleCallback;\r\nvar cancelPassiveEffects = scheduler.unstable_cancelCallback;\r\n\r\n// -------------------\r\n//     Mutation\r\n// -------------------\r\n\r\nvar supportsMutation = true;\r\n\r\nfunction commitMount(domElement, type, newProps, internalInstanceHandle) {\r\n  // Despite the naming that might imply otherwise, this method only\r\n  // fires if there is an `Update` effect scheduled during mounting.\r\n  // This happens if `finalizeInitialChildren` returns `true` (which it\r\n  // does to implement the `autoFocus` attribute on the client). But\r\n  // there are also other cases when this might happen (such as patching\r\n  // up text content during hydration mismatch). So we'll check this again.\r\n  if (shouldAutoFocusHostComponent(type, newProps)) {\r\n    domElement.focus();\r\n  }\r\n}\r\n\r\nfunction commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\r\n  // Update the props handle so that we know which props are the ones with\r\n  // with current event handlers.\r\n  updateFiberProps(domElement, newProps);\r\n  // Apply the diff to the DOM node.\r\n  updateProperties(domElement, updatePayload, type, oldProps, newProps);\r\n}\r\n\r\nfunction resetTextContent(domElement) {\r\n  setTextContent(domElement, '');\r\n}\r\n\r\nfunction commitTextUpdate(textInstance, oldText, newText) {\r\n  textInstance.nodeValue = newText;\r\n}\r\n\r\nfunction appendChild(parentInstance, child) {\r\n  parentInstance.appendChild(child);\r\n}\r\n\r\nfunction appendChildToContainer(container, child) {\r\n  var parentNode = void 0;\r\n  if (container.nodeType === COMMENT_NODE) {\r\n    parentNode = container.parentNode;\r\n    parentNode.insertBefore(child, container);\r\n  } else {\r\n    parentNode = container;\r\n    parentNode.appendChild(child);\r\n  }\r\n  // This container might be used for a portal.\r\n  // If something inside a portal is clicked, that click should bubble\r\n  // through the React tree. However, on Mobile Safari the click would\r\n  // never bubble through the *DOM* tree unless an ancestor with onclick\r\n  // event exists. So we wouldn't see it and dispatch it.\r\n  // This is why we ensure that non React root containers have inline onclick\r\n  // defined.\r\n  // https://github.com/facebook/react/issues/11918\r\n  var reactRootContainer = container._reactRootContainer;\r\n  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {\r\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\r\n    trapClickOnNonInteractiveElement(parentNode);\r\n  }\r\n}\r\n\r\nfunction insertBefore(parentInstance, child, beforeChild) {\r\n  parentInstance.insertBefore(child, beforeChild);\r\n}\r\n\r\nfunction insertInContainerBefore(container, child, beforeChild) {\r\n  if (container.nodeType === COMMENT_NODE) {\r\n    container.parentNode.insertBefore(child, beforeChild);\r\n  } else {\r\n    container.insertBefore(child, beforeChild);\r\n  }\r\n}\r\n\r\nfunction removeChild(parentInstance, child) {\r\n  parentInstance.removeChild(child);\r\n}\r\n\r\nfunction removeChildFromContainer(container, child) {\r\n  if (container.nodeType === COMMENT_NODE) {\r\n    container.parentNode.removeChild(child);\r\n  } else {\r\n    container.removeChild(child);\r\n  }\r\n}\r\n\r\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\r\n  var node = suspenseInstance;\r\n  // Delete all nodes within this suspense boundary.\r\n  // There might be nested nodes so we need to keep track of how\r\n  // deep we are and only break out when we're back on top.\r\n  var depth = 0;\r\n  do {\r\n    var nextNode = node.nextSibling;\r\n    parentInstance.removeChild(node);\r\n    if (nextNode && nextNode.nodeType === COMMENT_NODE) {\r\n      var data = nextNode.data;\r\n      if (data === SUSPENSE_END_DATA) {\r\n        if (depth === 0) {\r\n          parentInstance.removeChild(nextNode);\r\n          return;\r\n        } else {\r\n          depth--;\r\n        }\r\n      } else if (data === SUSPENSE_START_DATA) {\r\n        depth++;\r\n      }\r\n    }\r\n    node = nextNode;\r\n  } while (node);\r\n  // TODO: Warn, we didn't find the end comment boundary.\r\n}\r\n\r\nfunction clearSuspenseBoundaryFromContainer(container, suspenseInstance) {\r\n  if (container.nodeType === COMMENT_NODE) {\r\n    clearSuspenseBoundary(container.parentNode, suspenseInstance);\r\n  } else if (container.nodeType === ELEMENT_NODE) {\r\n    clearSuspenseBoundary(container, suspenseInstance);\r\n  } else {\r\n    // Document nodes should never contain suspense boundaries.\r\n  }\r\n}\r\n\r\nfunction hideInstance(instance) {\r\n  // TODO: Does this work for all element types? What about MathML? Should we\r\n  // pass host context to this method?\r\n  instance = instance;\r\n  instance.style.display = 'none';\r\n}\r\n\r\nfunction hideTextInstance(textInstance) {\r\n  textInstance.nodeValue = '';\r\n}\r\n\r\nfunction unhideInstance(instance, props) {\r\n  instance = instance;\r\n  var styleProp = props[STYLE];\r\n  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;\r\n  instance.style.display = dangerousStyleValue('display', display);\r\n}\r\n\r\nfunction unhideTextInstance(textInstance, text) {\r\n  textInstance.nodeValue = text;\r\n}\r\n\r\n// -------------------\r\n//     Hydration\r\n// -------------------\r\n\r\nvar supportsHydration = true;\r\n\r\nfunction canHydrateInstance(instance, type, props) {\r\n  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {\r\n    return null;\r\n  }\r\n  // This has now been refined to an element node.\r\n  return instance;\r\n}\r\n\r\nfunction canHydrateTextInstance(instance, text) {\r\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\r\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\r\n    return null;\r\n  }\r\n  // This has now been refined to a text node.\r\n  return instance;\r\n}\r\n\r\nfunction canHydrateSuspenseInstance(instance) {\r\n  if (instance.nodeType !== COMMENT_NODE) {\r\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\r\n    return null;\r\n  }\r\n  // This has now been refined to a suspense node.\r\n  return instance;\r\n}\r\n\r\nfunction getNextHydratableSibling(instance) {\r\n  var node = instance.nextSibling;\r\n  // Skip non-hydratable nodes.\r\n  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || node.nodeType !== COMMENT_NODE || node.data !== SUSPENSE_START_DATA)) {\r\n    node = node.nextSibling;\r\n  }\r\n  return node;\r\n}\r\n\r\nfunction getFirstHydratableChild(parentInstance) {\r\n  var next = parentInstance.firstChild;\r\n  // Skip non-hydratable nodes.\r\n  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || next.nodeType !== COMMENT_NODE || next.data !== SUSPENSE_START_DATA)) {\r\n    next = next.nextSibling;\r\n  }\r\n  return next;\r\n}\r\n\r\nfunction hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\r\n  precacheFiberNode(internalInstanceHandle, instance);\r\n  // TODO: Possibly defer this until the commit phase where all the events\r\n  // get attached.\r\n  updateFiberProps(instance, props);\r\n  var parentNamespace = void 0;\r\n  {\r\n    var hostContextDev = hostContext;\r\n    parentNamespace = hostContextDev.namespace;\r\n  }\r\n  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);\r\n}\r\n\r\nfunction hydrateTextInstance(textInstance, text, internalInstanceHandle) {\r\n  precacheFiberNode(internalInstanceHandle, textInstance);\r\n  return diffHydratedText(textInstance, text);\r\n}\r\n\r\nfunction getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {\r\n  var node = suspenseInstance.nextSibling;\r\n  // Skip past all nodes within this suspense boundary.\r\n  // There might be nested nodes so we need to keep track of how\r\n  // deep we are and only break out when we're back on top.\r\n  var depth = 0;\r\n  while (node) {\r\n    if (node.nodeType === COMMENT_NODE) {\r\n      var data = node.data;\r\n      if (data === SUSPENSE_END_DATA) {\r\n        if (depth === 0) {\r\n          return getNextHydratableSibling(node);\r\n        } else {\r\n          depth--;\r\n        }\r\n      } else if (data === SUSPENSE_START_DATA) {\r\n        depth++;\r\n      }\r\n    }\r\n    node = node.nextSibling;\r\n  }\r\n  // TODO: Warn, we didn't find the end comment boundary.\r\n  return null;\r\n}\r\n\r\nfunction didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {\r\n  {\r\n    warnForUnmatchedText(textInstance, text);\r\n  }\r\n}\r\n\r\nfunction didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {\r\n  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n    warnForUnmatchedText(textInstance, text);\r\n  }\r\n}\r\n\r\nfunction didNotHydrateContainerInstance(parentContainer, instance) {\r\n  {\r\n    if (instance.nodeType === ELEMENT_NODE) {\r\n      warnForDeletedHydratableElement(parentContainer, instance);\r\n    } else if (instance.nodeType === COMMENT_NODE) {\r\n      // TODO: warnForDeletedHydratableSuspenseBoundary\r\n    } else {\r\n      warnForDeletedHydratableText(parentContainer, instance);\r\n    }\r\n  }\r\n}\r\n\r\nfunction didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {\r\n  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n    if (instance.nodeType === ELEMENT_NODE) {\r\n      warnForDeletedHydratableElement(parentInstance, instance);\r\n    } else if (instance.nodeType === COMMENT_NODE) {\r\n      // TODO: warnForDeletedHydratableSuspenseBoundary\r\n    } else {\r\n      warnForDeletedHydratableText(parentInstance, instance);\r\n    }\r\n  }\r\n}\r\n\r\nfunction didNotFindHydratableContainerInstance(parentContainer, type, props) {\r\n  {\r\n    warnForInsertedHydratedElement(parentContainer, type, props);\r\n  }\r\n}\r\n\r\nfunction didNotFindHydratableContainerTextInstance(parentContainer, text) {\r\n  {\r\n    warnForInsertedHydratedText(parentContainer, text);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {\r\n  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n    warnForInsertedHydratedElement(parentInstance, type, props);\r\n  }\r\n}\r\n\r\nfunction didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {\r\n  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n    warnForInsertedHydratedText(parentInstance, text);\r\n  }\r\n}\r\n\r\nfunction didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {\r\n  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\r\n    // TODO: warnForInsertedHydratedSuspense(parentInstance);\r\n  }\r\n}\r\n\r\n// Prefix measurements so that it's possible to filter them.\r\n// Longer prefixes are hard to read in DevTools.\r\nvar reactEmoji = '\\u269B';\r\nvar warningEmoji = '\\u26D4';\r\nvar supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';\r\n\r\n// Keep track of current fiber so that we know the path to unwind on pause.\r\n// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?\r\nvar currentFiber = null;\r\n// If we're in the middle of user code, which fiber and method is it?\r\n// Reusing `currentFiber` would be confusing for this because user code fiber\r\n// can change during commit phase too, but we don't need to unwind it (since\r\n// lifecycles in the commit phase don't resemble a tree).\r\nvar currentPhase = null;\r\nvar currentPhaseFiber = null;\r\n// Did lifecycle hook schedule an update? This is often a performance problem,\r\n// so we will keep track of it, and include it in the report.\r\n// Track commits caused by cascading updates.\r\nvar isCommitting = false;\r\nvar hasScheduledUpdateInCurrentCommit = false;\r\nvar hasScheduledUpdateInCurrentPhase = false;\r\nvar commitCountInCurrentWorkLoop = 0;\r\nvar effectCountInCurrentCommit = 0;\r\nvar isWaitingForCallback = false;\r\n// During commits, we only show a measurement once per method name\r\n// to avoid stretch the commit phase with measurement overhead.\r\nvar labelsInCurrentCommit = new Set();\r\n\r\nvar formatMarkName = function (markName) {\r\n  return reactEmoji + ' ' + markName;\r\n};\r\n\r\nvar formatLabel = function (label, warning) {\r\n  var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';\r\n  var suffix = warning ? ' Warning: ' + warning : '';\r\n  return '' + prefix + label + suffix;\r\n};\r\n\r\nvar beginMark = function (markName) {\r\n  performance.mark(formatMarkName(markName));\r\n};\r\n\r\nvar clearMark = function (markName) {\r\n  performance.clearMarks(formatMarkName(markName));\r\n};\r\n\r\nvar endMark = function (label, markName, warning) {\r\n  var formattedMarkName = formatMarkName(markName);\r\n  var formattedLabel = formatLabel(label, warning);\r\n  try {\r\n    performance.measure(formattedLabel, formattedMarkName);\r\n  } catch (err) {}\r\n  // If previous mark was missing for some reason, this will throw.\r\n  // This could only happen if React crashed in an unexpected place earlier.\r\n  // Don't pile on with more errors.\r\n\r\n  // Clear marks immediately to avoid growing buffer.\r\n  performance.clearMarks(formattedMarkName);\r\n  performance.clearMeasures(formattedLabel);\r\n};\r\n\r\nvar getFiberMarkName = function (label, debugID) {\r\n  return label + ' (#' + debugID + ')';\r\n};\r\n\r\nvar getFiberLabel = function (componentName, isMounted, phase) {\r\n  if (phase === null) {\r\n    // These are composite component total time measurements.\r\n    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';\r\n  } else {\r\n    // Composite component methods.\r\n    return componentName + '.' + phase;\r\n  }\r\n};\r\n\r\nvar beginFiberMark = function (fiber, phase) {\r\n  var componentName = getComponentName(fiber.type) || 'Unknown';\r\n  var debugID = fiber._debugID;\r\n  var isMounted = fiber.alternate !== null;\r\n  var label = getFiberLabel(componentName, isMounted, phase);\r\n\r\n  if (isCommitting && labelsInCurrentCommit.has(label)) {\r\n    // During the commit phase, we don't show duplicate labels because\r\n    // there is a fixed overhead for every measurement, and we don't\r\n    // want to stretch the commit phase beyond necessary.\r\n    return false;\r\n  }\r\n  labelsInCurrentCommit.add(label);\r\n\r\n  var markName = getFiberMarkName(label, debugID);\r\n  beginMark(markName);\r\n  return true;\r\n};\r\n\r\nvar clearFiberMark = function (fiber, phase) {\r\n  var componentName = getComponentName(fiber.type) || 'Unknown';\r\n  var debugID = fiber._debugID;\r\n  var isMounted = fiber.alternate !== null;\r\n  var label = getFiberLabel(componentName, isMounted, phase);\r\n  var markName = getFiberMarkName(label, debugID);\r\n  clearMark(markName);\r\n};\r\n\r\nvar endFiberMark = function (fiber, phase, warning) {\r\n  var componentName = getComponentName(fiber.type) || 'Unknown';\r\n  var debugID = fiber._debugID;\r\n  var isMounted = fiber.alternate !== null;\r\n  var label = getFiberLabel(componentName, isMounted, phase);\r\n  var markName = getFiberMarkName(label, debugID);\r\n  endMark(label, markName, warning);\r\n};\r\n\r\nvar shouldIgnoreFiber = function (fiber) {\r\n  // Host components should be skipped in the timeline.\r\n  // We could check typeof fiber.type, but does this work with RN?\r\n  switch (fiber.tag) {\r\n    case HostRoot:\r\n    case HostComponent:\r\n    case HostText:\r\n    case HostPortal:\r\n    case Fragment:\r\n    case ContextProvider:\r\n    case ContextConsumer:\r\n    case Mode:\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nvar clearPendingPhaseMeasurement = function () {\r\n  if (currentPhase !== null && currentPhaseFiber !== null) {\r\n    clearFiberMark(currentPhaseFiber, currentPhase);\r\n  }\r\n  currentPhaseFiber = null;\r\n  currentPhase = null;\r\n  hasScheduledUpdateInCurrentPhase = false;\r\n};\r\n\r\nvar pauseTimers = function () {\r\n  // Stops all currently active measurements so that they can be resumed\r\n  // if we continue in a later deferred loop from the same unit of work.\r\n  var fiber = currentFiber;\r\n  while (fiber) {\r\n    if (fiber._debugIsCurrentlyTiming) {\r\n      endFiberMark(fiber, null, null);\r\n    }\r\n    fiber = fiber.return;\r\n  }\r\n};\r\n\r\nvar resumeTimersRecursively = function (fiber) {\r\n  if (fiber.return !== null) {\r\n    resumeTimersRecursively(fiber.return);\r\n  }\r\n  if (fiber._debugIsCurrentlyTiming) {\r\n    beginFiberMark(fiber, null);\r\n  }\r\n};\r\n\r\nvar resumeTimers = function () {\r\n  // Resumes all measurements that were active during the last deferred loop.\r\n  if (currentFiber !== null) {\r\n    resumeTimersRecursively(currentFiber);\r\n  }\r\n};\r\n\r\nfunction recordEffect() {\r\n  if (enableUserTimingAPI) {\r\n    effectCountInCurrentCommit++;\r\n  }\r\n}\r\n\r\nfunction recordScheduleUpdate() {\r\n  if (enableUserTimingAPI) {\r\n    if (isCommitting) {\r\n      hasScheduledUpdateInCurrentCommit = true;\r\n    }\r\n    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {\r\n      hasScheduledUpdateInCurrentPhase = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction startRequestCallbackTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (supportsUserTiming && !isWaitingForCallback) {\r\n      isWaitingForCallback = true;\r\n      beginMark('(Waiting for async callback...)');\r\n    }\r\n  }\r\n}\r\n\r\nfunction stopRequestCallbackTimer(didExpire, expirationTime) {\r\n  if (enableUserTimingAPI) {\r\n    if (supportsUserTiming) {\r\n      isWaitingForCallback = false;\r\n      var warning = didExpire ? 'React was blocked by main thread' : null;\r\n      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);\r\n    }\r\n  }\r\n}\r\n\r\nfunction startWorkTimer(fiber) {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\r\n      return;\r\n    }\r\n    // If we pause, this is the fiber to unwind from.\r\n    currentFiber = fiber;\r\n    if (!beginFiberMark(fiber, null)) {\r\n      return;\r\n    }\r\n    fiber._debugIsCurrentlyTiming = true;\r\n  }\r\n}\r\n\r\nfunction cancelWorkTimer(fiber) {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\r\n      return;\r\n    }\r\n    // Remember we shouldn't complete measurement for this fiber.\r\n    // Otherwise flamechart will be deep even for small updates.\r\n    fiber._debugIsCurrentlyTiming = false;\r\n    clearFiberMark(fiber, null);\r\n  }\r\n}\r\n\r\nfunction stopWorkTimer(fiber) {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\r\n      return;\r\n    }\r\n    // If we pause, its parent is the fiber to unwind from.\r\n    currentFiber = fiber.return;\r\n    if (!fiber._debugIsCurrentlyTiming) {\r\n      return;\r\n    }\r\n    fiber._debugIsCurrentlyTiming = false;\r\n    endFiberMark(fiber, null, null);\r\n  }\r\n}\r\n\r\nfunction stopFailedWorkTimer(fiber) {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\r\n      return;\r\n    }\r\n    // If we pause, its parent is the fiber to unwind from.\r\n    currentFiber = fiber.return;\r\n    if (!fiber._debugIsCurrentlyTiming) {\r\n      return;\r\n    }\r\n    fiber._debugIsCurrentlyTiming = false;\r\n    var warning = fiber.tag === SuspenseComponent || fiber.tag === DehydratedSuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';\r\n    endFiberMark(fiber, null, warning);\r\n  }\r\n}\r\n\r\nfunction startPhaseTimer(fiber, phase) {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    clearPendingPhaseMeasurement();\r\n    if (!beginFiberMark(fiber, phase)) {\r\n      return;\r\n    }\r\n    currentPhaseFiber = fiber;\r\n    currentPhase = phase;\r\n  }\r\n}\r\n\r\nfunction stopPhaseTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    if (currentPhase !== null && currentPhaseFiber !== null) {\r\n      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;\r\n      endFiberMark(currentPhaseFiber, currentPhase, warning);\r\n    }\r\n    currentPhase = null;\r\n    currentPhaseFiber = null;\r\n  }\r\n}\r\n\r\nfunction startWorkLoopTimer(nextUnitOfWork) {\r\n  if (enableUserTimingAPI) {\r\n    currentFiber = nextUnitOfWork;\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    commitCountInCurrentWorkLoop = 0;\r\n    // This is top level call.\r\n    // Any other measurements are performed within.\r\n    beginMark('(React Tree Reconciliation)');\r\n    // Resume any measurements that were in progress during the last loop.\r\n    resumeTimers();\r\n  }\r\n}\r\n\r\nfunction stopWorkLoopTimer(interruptedBy, didCompleteRoot) {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    var warning = null;\r\n    if (interruptedBy !== null) {\r\n      if (interruptedBy.tag === HostRoot) {\r\n        warning = 'A top-level update interrupted the previous render';\r\n      } else {\r\n        var componentName = getComponentName(interruptedBy.type) || 'Unknown';\r\n        warning = 'An update to ' + componentName + ' interrupted the previous render';\r\n      }\r\n    } else if (commitCountInCurrentWorkLoop > 1) {\r\n      warning = 'There were cascading updates';\r\n    }\r\n    commitCountInCurrentWorkLoop = 0;\r\n    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';\r\n    // Pause any measurements until the next loop.\r\n    pauseTimers();\r\n    endMark(label, '(React Tree Reconciliation)', warning);\r\n  }\r\n}\r\n\r\nfunction startCommitTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    isCommitting = true;\r\n    hasScheduledUpdateInCurrentCommit = false;\r\n    labelsInCurrentCommit.clear();\r\n    beginMark('(Committing Changes)');\r\n  }\r\n}\r\n\r\nfunction stopCommitTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n\r\n    var warning = null;\r\n    if (hasScheduledUpdateInCurrentCommit) {\r\n      warning = 'Lifecycle hook scheduled a cascading update';\r\n    } else if (commitCountInCurrentWorkLoop > 0) {\r\n      warning = 'Caused by a cascading update in earlier commit';\r\n    }\r\n    hasScheduledUpdateInCurrentCommit = false;\r\n    commitCountInCurrentWorkLoop++;\r\n    isCommitting = false;\r\n    labelsInCurrentCommit.clear();\r\n\r\n    endMark('(Committing Changes)', '(Committing Changes)', warning);\r\n  }\r\n}\r\n\r\nfunction startCommitSnapshotEffectsTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    effectCountInCurrentCommit = 0;\r\n    beginMark('(Committing Snapshot Effects)');\r\n  }\r\n}\r\n\r\nfunction stopCommitSnapshotEffectsTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    var count = effectCountInCurrentCommit;\r\n    effectCountInCurrentCommit = 0;\r\n    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);\r\n  }\r\n}\r\n\r\nfunction startCommitHostEffectsTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    effectCountInCurrentCommit = 0;\r\n    beginMark('(Committing Host Effects)');\r\n  }\r\n}\r\n\r\nfunction stopCommitHostEffectsTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    var count = effectCountInCurrentCommit;\r\n    effectCountInCurrentCommit = 0;\r\n    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);\r\n  }\r\n}\r\n\r\nfunction startCommitLifeCyclesTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    effectCountInCurrentCommit = 0;\r\n    beginMark('(Calling Lifecycle Methods)');\r\n  }\r\n}\r\n\r\nfunction stopCommitLifeCyclesTimer() {\r\n  if (enableUserTimingAPI) {\r\n    if (!supportsUserTiming) {\r\n      return;\r\n    }\r\n    var count = effectCountInCurrentCommit;\r\n    effectCountInCurrentCommit = 0;\r\n    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);\r\n  }\r\n}\r\n\r\nvar valueStack = [];\r\n\r\nvar fiberStack = void 0;\r\n\r\n{\r\n  fiberStack = [];\r\n}\r\n\r\nvar index = -1;\r\n\r\nfunction createCursor(defaultValue) {\r\n  return {\r\n    current: defaultValue\r\n  };\r\n}\r\n\r\nfunction pop(cursor, fiber) {\r\n  if (index < 0) {\r\n    {\r\n      warningWithoutStack$1(false, 'Unexpected pop.');\r\n    }\r\n    return;\r\n  }\r\n\r\n  {\r\n    if (fiber !== fiberStack[index]) {\r\n      warningWithoutStack$1(false, 'Unexpected Fiber popped.');\r\n    }\r\n  }\r\n\r\n  cursor.current = valueStack[index];\r\n\r\n  valueStack[index] = null;\r\n\r\n  {\r\n    fiberStack[index] = null;\r\n  }\r\n\r\n  index--;\r\n}\r\n\r\nfunction push(cursor, value, fiber) {\r\n  index++;\r\n\r\n  valueStack[index] = cursor.current;\r\n\r\n  {\r\n    fiberStack[index] = fiber;\r\n  }\r\n\r\n  cursor.current = value;\r\n}\r\n\r\nfunction checkThatStackIsEmpty() {\r\n  {\r\n    if (index !== -1) {\r\n      warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');\r\n    }\r\n  }\r\n}\r\n\r\nfunction resetStackAfterFatalErrorInDev() {\r\n  {\r\n    index = -1;\r\n    valueStack.length = 0;\r\n    fiberStack.length = 0;\r\n  }\r\n}\r\n\r\nvar warnedAboutMissingGetChildContext = void 0;\r\n\r\n{\r\n  warnedAboutMissingGetChildContext = {};\r\n}\r\n\r\nvar emptyContextObject = {};\r\n{\r\n  Object.freeze(emptyContextObject);\r\n}\r\n\r\n// A cursor to the current merged context object on the stack.\r\nvar contextStackCursor = createCursor(emptyContextObject);\r\n// A cursor to a boolean indicating whether the context has changed.\r\nvar didPerformWorkStackCursor = createCursor(false);\r\n// Keep track of the previous context object that was on the stack.\r\n// We use this to get access to the parent context after we have already\r\n// pushed the next context provider, and now need to merge their contexts.\r\nvar previousContext = emptyContextObject;\r\n\r\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\r\n  if (didPushOwnContextIfProvider && isContextProvider(Component)) {\r\n    // If the fiber is a context provider itself, when we read its context\r\n    // we may have already pushed its own child context on the stack. A context\r\n    // provider should not \"see\" its own child context. Therefore we read the\r\n    // previous (parent) context instead for a context provider.\r\n    return previousContext;\r\n  }\r\n  return contextStackCursor.current;\r\n}\r\n\r\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\r\n  var instance = workInProgress.stateNode;\r\n  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\r\n  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\r\n}\r\n\r\nfunction getMaskedContext(workInProgress, unmaskedContext) {\r\n  var type = workInProgress.type;\r\n  var contextTypes = type.contextTypes;\r\n  if (!contextTypes) {\r\n    return emptyContextObject;\r\n  }\r\n\r\n  // Avoid recreating masked context unless unmasked context has changed.\r\n  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\r\n  // This may trigger infinite loops if componentWillReceiveProps calls setState.\r\n  var instance = workInProgress.stateNode;\r\n  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\r\n    return instance.__reactInternalMemoizedMaskedChildContext;\r\n  }\r\n\r\n  var context = {};\r\n  for (var key in contextTypes) {\r\n    context[key] = unmaskedContext[key];\r\n  }\r\n\r\n  {\r\n    var name = getComponentName(type) || 'Unknown';\r\n    checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);\r\n  }\r\n\r\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\r\n  // Context is created before the class component is instantiated so check for instance.\r\n  if (instance) {\r\n    cacheContext(workInProgress, unmaskedContext, context);\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nfunction hasContextChanged() {\r\n  return didPerformWorkStackCursor.current;\r\n}\r\n\r\nfunction isContextProvider(type) {\r\n  var childContextTypes = type.childContextTypes;\r\n  return childContextTypes !== null && childContextTypes !== undefined;\r\n}\r\n\r\nfunction popContext(fiber) {\r\n  pop(didPerformWorkStackCursor, fiber);\r\n  pop(contextStackCursor, fiber);\r\n}\r\n\r\nfunction popTopLevelContextObject(fiber) {\r\n  pop(didPerformWorkStackCursor, fiber);\r\n  pop(contextStackCursor, fiber);\r\n}\r\n\r\nfunction pushTopLevelContextObject(fiber, context, didChange) {\r\n  !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n  push(contextStackCursor, context, fiber);\r\n  push(didPerformWorkStackCursor, didChange, fiber);\r\n}\r\n\r\nfunction processChildContext(fiber, type, parentContext) {\r\n  var instance = fiber.stateNode;\r\n  var childContextTypes = type.childContextTypes;\r\n\r\n  // TODO (bvaughn) Replace this behavior with an invariant() in the future.\r\n  // It has only been added in Fiber to match the (unintentional) behavior in Stack.\r\n  if (typeof instance.getChildContext !== 'function') {\r\n    {\r\n      var componentName = getComponentName(type) || 'Unknown';\r\n\r\n      if (!warnedAboutMissingGetChildContext[componentName]) {\r\n        warnedAboutMissingGetChildContext[componentName] = true;\r\n        warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\r\n      }\r\n    }\r\n    return parentContext;\r\n  }\r\n\r\n  var childContext = void 0;\r\n  {\r\n    setCurrentPhase('getChildContext');\r\n  }\r\n  startPhaseTimer(fiber, 'getChildContext');\r\n  childContext = instance.getChildContext();\r\n  stopPhaseTimer();\r\n  {\r\n    setCurrentPhase(null);\r\n  }\r\n  for (var contextKey in childContext) {\r\n    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;\r\n  }\r\n  {\r\n    var name = getComponentName(type) || 'Unknown';\r\n    checkPropTypes(childContextTypes, childContext, 'child context', name,\r\n    // In practice, there is one case in which we won't get a stack. It's when\r\n    // somebody calls unstable_renderSubtreeIntoContainer() and we process\r\n    // context from the parent component instance. The stack will be missing\r\n    // because it's outside of the reconciliation, and so the pointer has not\r\n    // been set. This is rare and doesn't matter. We'll also remove that API.\r\n    getCurrentFiberStackInDev);\r\n  }\r\n\r\n  return _assign({}, parentContext, childContext);\r\n}\r\n\r\nfunction pushContextProvider(workInProgress) {\r\n  var instance = workInProgress.stateNode;\r\n  // We push the context as early as possible to ensure stack integrity.\r\n  // If the instance does not exist yet, we will push null at first,\r\n  // and replace it on the stack later when invalidating the context.\r\n  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;\r\n\r\n  // Remember the parent context so we can merge with it later.\r\n  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\r\n  previousContext = contextStackCursor.current;\r\n  push(contextStackCursor, memoizedMergedChildContext, workInProgress);\r\n  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\r\n\r\n  return true;\r\n}\r\n\r\nfunction invalidateContextProvider(workInProgress, type, didChange) {\r\n  var instance = workInProgress.stateNode;\r\n  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n  if (didChange) {\r\n    // Merge parent and own context.\r\n    // Skip this if we're not updating due to sCU.\r\n    // This avoids unnecessarily recomputing memoized values.\r\n    var mergedContext = processChildContext(workInProgress, type, previousContext);\r\n    instance.__reactInternalMemoizedMergedChildContext = mergedContext;\r\n\r\n    // Replace the old (or empty) context with the new one.\r\n    // It is important to unwind the context in the reverse order.\r\n    pop(didPerformWorkStackCursor, workInProgress);\r\n    pop(contextStackCursor, workInProgress);\r\n    // Now push the new context and mark that it has changed.\r\n    push(contextStackCursor, mergedContext, workInProgress);\r\n    push(didPerformWorkStackCursor, didChange, workInProgress);\r\n  } else {\r\n    pop(didPerformWorkStackCursor, workInProgress);\r\n    push(didPerformWorkStackCursor, didChange, workInProgress);\r\n  }\r\n}\r\n\r\nfunction findCurrentUnmaskedContext(fiber) {\r\n  // Currently this is only used with renderSubtreeIntoContainer; not sure if it\r\n  // makes sense elsewhere\r\n  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n  var node = fiber;\r\n  do {\r\n    switch (node.tag) {\r\n      case HostRoot:\r\n        return node.stateNode.context;\r\n      case ClassComponent:\r\n        {\r\n          var Component = node.type;\r\n          if (isContextProvider(Component)) {\r\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\r\n          }\r\n          break;\r\n        }\r\n    }\r\n    node = node.return;\r\n  } while (node !== null);\r\n  invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');\r\n}\r\n\r\nvar onCommitFiberRoot = null;\r\nvar onCommitFiberUnmount = null;\r\nvar hasLoggedError = false;\r\n\r\nfunction catchErrors(fn) {\r\n  return function (arg) {\r\n    try {\r\n      return fn(arg);\r\n    } catch (err) {\r\n      if (true && !hasLoggedError) {\r\n        hasLoggedError = true;\r\n        warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\r\n\r\nfunction injectInternals(internals) {\r\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\r\n    // No DevTools\r\n    return false;\r\n  }\r\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n  if (hook.isDisabled) {\r\n    // This isn't a real property on the hook, but it can be set to opt out\r\n    // of DevTools integration and associated warnings and logs.\r\n    // https://github.com/facebook/react/issues/3877\r\n    return true;\r\n  }\r\n  if (!hook.supportsFiber) {\r\n    {\r\n      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');\r\n    }\r\n    // DevTools exists, even though it doesn't support Fiber.\r\n    return true;\r\n  }\r\n  try {\r\n    var rendererID = hook.inject(internals);\r\n    // We have successfully injected, so now it is safe to set up hooks.\r\n    onCommitFiberRoot = catchErrors(function (root) {\r\n      return hook.onCommitFiberRoot(rendererID, root);\r\n    });\r\n    onCommitFiberUnmount = catchErrors(function (fiber) {\r\n      return hook.onCommitFiberUnmount(rendererID, fiber);\r\n    });\r\n  } catch (err) {\r\n    // Catch all errors because it is unsafe to throw during initialization.\r\n    {\r\n      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);\r\n    }\r\n  }\r\n  // DevTools exists\r\n  return true;\r\n}\r\n\r\nfunction onCommitRoot(root) {\r\n  if (typeof onCommitFiberRoot === 'function') {\r\n    onCommitFiberRoot(root);\r\n  }\r\n}\r\n\r\nfunction onCommitUnmount(fiber) {\r\n  if (typeof onCommitFiberUnmount === 'function') {\r\n    onCommitFiberUnmount(fiber);\r\n  }\r\n}\r\n\r\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\r\n// Math.pow(2, 30) - 1\r\n// 0b111111111111111111111111111111\r\nvar maxSigned31BitInt = 1073741823;\r\n\r\nvar NoWork = 0;\r\nvar Never = 1;\r\nvar Sync = maxSigned31BitInt;\r\n\r\nvar UNIT_SIZE = 10;\r\nvar MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1;\r\n\r\n// 1 unit of expiration time represents 10ms.\r\nfunction msToExpirationTime(ms) {\r\n  // Always add an offset so that we don't clash with the magic number for NoWork.\r\n  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);\r\n}\r\n\r\nfunction expirationTimeToMs(expirationTime) {\r\n  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;\r\n}\r\n\r\nfunction ceiling(num, precision) {\r\n  return ((num / precision | 0) + 1) * precision;\r\n}\r\n\r\nfunction computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {\r\n  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);\r\n}\r\n\r\nvar LOW_PRIORITY_EXPIRATION = 5000;\r\nvar LOW_PRIORITY_BATCH_SIZE = 250;\r\n\r\nfunction computeAsyncExpiration(currentTime) {\r\n  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);\r\n}\r\n\r\n// We intentionally set a higher expiration time for interactive updates in\r\n// dev than in production.\r\n//\r\n// If the main thread is being blocked so long that you hit the expiration,\r\n// it's a problem that could be solved with better scheduling.\r\n//\r\n// People will be more likely to notice this and fix it with the long\r\n// expiration time in development.\r\n//\r\n// In production we opt for better UX at the risk of masking scheduling\r\n// problems, by expiring fast.\r\nvar HIGH_PRIORITY_EXPIRATION = 500;\r\nvar HIGH_PRIORITY_BATCH_SIZE = 100;\r\n\r\nfunction computeInteractiveExpiration(currentTime) {\r\n  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);\r\n}\r\n\r\nvar NoContext = 0;\r\nvar ConcurrentMode = 1;\r\nvar StrictMode = 2;\r\nvar ProfileMode = 4;\r\n\r\nvar hasBadMapPolyfill = void 0;\r\n\r\n{\r\n  hasBadMapPolyfill = false;\r\n  try {\r\n    var nonExtensibleObject = Object.preventExtensions({});\r\n    var testMap = new Map([[nonExtensibleObject, null]]);\r\n    var testSet = new Set([nonExtensibleObject]);\r\n    // This is necessary for Rollup to not consider these unused.\r\n    // https://github.com/rollup/rollup/issues/1771\r\n    // TODO: we can remove these if Rollup fixes the bug.\r\n    testMap.set(0, 0);\r\n    testSet.add(0);\r\n  } catch (e) {\r\n    // TODO: Consider warning about bad polyfills\r\n    hasBadMapPolyfill = true;\r\n  }\r\n}\r\n\r\n// A Fiber is work on a Component that needs to be done or was done. There can\r\n// be more than one per component.\r\n\r\n\r\nvar debugCounter = void 0;\r\n\r\n{\r\n  debugCounter = 1;\r\n}\r\n\r\nfunction FiberNode(tag, pendingProps, key, mode) {\r\n  // Instance\r\n  this.tag = tag;\r\n  this.key = key;\r\n  this.elementType = null;\r\n  this.type = null;\r\n  this.stateNode = null;\r\n\r\n  // Fiber\r\n  this.return = null;\r\n  this.child = null;\r\n  this.sibling = null;\r\n  this.index = 0;\r\n\r\n  this.ref = null;\r\n\r\n  this.pendingProps = pendingProps;\r\n  this.memoizedProps = null;\r\n  this.updateQueue = null;\r\n  this.memoizedState = null;\r\n  this.contextDependencies = null;\r\n\r\n  this.mode = mode;\r\n\r\n  // Effects\r\n  this.effectTag = NoEffect;\r\n  this.nextEffect = null;\r\n\r\n  this.firstEffect = null;\r\n  this.lastEffect = null;\r\n\r\n  this.expirationTime = NoWork;\r\n  this.childExpirationTime = NoWork;\r\n\r\n  this.alternate = null;\r\n\r\n  if (enableProfilerTimer) {\r\n    // Note: The following is done to avoid a v8 performance cliff.\r\n    //\r\n    // Initializing the fields below to smis and later updating them with\r\n    // double values will cause Fibers to end up having separate shapes.\r\n    // This behavior/bug has something to do with Object.preventExtension().\r\n    // Fortunately this only impacts DEV builds.\r\n    // Unfortunately it makes React unusably slow for some applications.\r\n    // To work around this, initialize the fields below with doubles.\r\n    //\r\n    // Learn more about this here:\r\n    // https://github.com/facebook/react/issues/14365\r\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\r\n    this.actualDuration = Number.NaN;\r\n    this.actualStartTime = Number.NaN;\r\n    this.selfBaseDuration = Number.NaN;\r\n    this.treeBaseDuration = Number.NaN;\r\n\r\n    // It's okay to replace the initial doubles with smis after initialization.\r\n    // This won't trigger the performance cliff mentioned above,\r\n    // and it simplifies other profiler code (including DevTools).\r\n    this.actualDuration = 0;\r\n    this.actualStartTime = -1;\r\n    this.selfBaseDuration = 0;\r\n    this.treeBaseDuration = 0;\r\n  }\r\n\r\n  {\r\n    this._debugID = debugCounter++;\r\n    this._debugSource = null;\r\n    this._debugOwner = null;\r\n    this._debugIsCurrentlyTiming = false;\r\n    this._debugHookTypes = null;\r\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\r\n      Object.preventExtensions(this);\r\n    }\r\n  }\r\n}\r\n\r\n// This is a constructor function, rather than a POJO constructor, still\r\n// please ensure we do the following:\r\n// 1) Nobody should add any instance methods on this. Instance methods can be\r\n//    more difficult to predict when they get optimized and they are almost\r\n//    never inlined properly in static compilers.\r\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\r\n//    always know when it is a fiber.\r\n// 3) We might want to experiment with using numeric keys since they are easier\r\n//    to optimize in a non-JIT environment.\r\n// 4) We can easily go from a constructor to a createFiber object literal if that\r\n//    is faster.\r\n// 5) It should be easy to port this to a C struct and keep a C implementation\r\n//    compatible.\r\nvar createFiber = function (tag, pendingProps, key, mode) {\r\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\r\n  return new FiberNode(tag, pendingProps, key, mode);\r\n};\r\n\r\nfunction shouldConstruct(Component) {\r\n  var prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nfunction isSimpleFunctionComponent(type) {\r\n  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;\r\n}\r\n\r\nfunction resolveLazyComponentTag(Component) {\r\n  if (typeof Component === 'function') {\r\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\r\n  } else if (Component !== undefined && Component !== null) {\r\n    var $$typeof = Component.$$typeof;\r\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\r\n      return ForwardRef;\r\n    }\r\n    if ($$typeof === REACT_MEMO_TYPE) {\r\n      return MemoComponent;\r\n    }\r\n  }\r\n  return IndeterminateComponent;\r\n}\r\n\r\n// This is used to create an alternate fiber to do work on.\r\nfunction createWorkInProgress(current, pendingProps, expirationTime) {\r\n  var workInProgress = current.alternate;\r\n  if (workInProgress === null) {\r\n    // We use a double buffering pooling technique because we know that we'll\r\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\r\n    // node that we're free to reuse. This is lazily created to avoid allocating\r\n    // extra objects for things that are never updated. It also allow us to\r\n    // reclaim the extra memory if needed.\r\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\r\n    workInProgress.elementType = current.elementType;\r\n    workInProgress.type = current.type;\r\n    workInProgress.stateNode = current.stateNode;\r\n\r\n    {\r\n      // DEV-only fields\r\n      workInProgress._debugID = current._debugID;\r\n      workInProgress._debugSource = current._debugSource;\r\n      workInProgress._debugOwner = current._debugOwner;\r\n      workInProgress._debugHookTypes = current._debugHookTypes;\r\n    }\r\n\r\n    workInProgress.alternate = current;\r\n    current.alternate = workInProgress;\r\n  } else {\r\n    workInProgress.pendingProps = pendingProps;\r\n\r\n    // We already have an alternate.\r\n    // Reset the effect tag.\r\n    workInProgress.effectTag = NoEffect;\r\n\r\n    // The effect list is no longer valid.\r\n    workInProgress.nextEffect = null;\r\n    workInProgress.firstEffect = null;\r\n    workInProgress.lastEffect = null;\r\n\r\n    if (enableProfilerTimer) {\r\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\r\n      // This prevents time from endlessly accumulating in new commits.\r\n      // This has the downside of resetting values for different priority renders,\r\n      // But works for yielding (the common case) and should support resuming.\r\n      workInProgress.actualDuration = 0;\r\n      workInProgress.actualStartTime = -1;\r\n    }\r\n  }\r\n\r\n  workInProgress.childExpirationTime = current.childExpirationTime;\r\n  workInProgress.expirationTime = current.expirationTime;\r\n\r\n  workInProgress.child = current.child;\r\n  workInProgress.memoizedProps = current.memoizedProps;\r\n  workInProgress.memoizedState = current.memoizedState;\r\n  workInProgress.updateQueue = current.updateQueue;\r\n  workInProgress.contextDependencies = current.contextDependencies;\r\n\r\n  // These will be overridden during the parent's reconciliation\r\n  workInProgress.sibling = current.sibling;\r\n  workInProgress.index = current.index;\r\n  workInProgress.ref = current.ref;\r\n\r\n  if (enableProfilerTimer) {\r\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\r\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\r\n  }\r\n\r\n  return workInProgress;\r\n}\r\n\r\nfunction createHostRootFiber(isConcurrent) {\r\n  var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;\r\n\r\n  if (enableProfilerTimer && isDevToolsPresent) {\r\n    // Always collect profile timings when DevTools are present.\r\n    // This enables DevTools to start capturing timing at any point–\r\n    // Without some nodes in the tree having empty base times.\r\n    mode |= ProfileMode;\r\n  }\r\n\r\n  return createFiber(HostRoot, null, null, mode);\r\n}\r\n\r\nfunction createFiberFromTypeAndProps(type, // React$ElementType\r\nkey, pendingProps, owner, mode, expirationTime) {\r\n  var fiber = void 0;\r\n\r\n  var fiberTag = IndeterminateComponent;\r\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\r\n  var resolvedType = type;\r\n  if (typeof type === 'function') {\r\n    if (shouldConstruct(type)) {\r\n      fiberTag = ClassComponent;\r\n    }\r\n  } else if (typeof type === 'string') {\r\n    fiberTag = HostComponent;\r\n  } else {\r\n    getTag: switch (type) {\r\n      case REACT_FRAGMENT_TYPE:\r\n        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);\r\n      case REACT_CONCURRENT_MODE_TYPE:\r\n        return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);\r\n      case REACT_STRICT_MODE_TYPE:\r\n        return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);\r\n      case REACT_PROFILER_TYPE:\r\n        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);\r\n      case REACT_SUSPENSE_TYPE:\r\n        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);\r\n      default:\r\n        {\r\n          if (typeof type === 'object' && type !== null) {\r\n            switch (type.$$typeof) {\r\n              case REACT_PROVIDER_TYPE:\r\n                fiberTag = ContextProvider;\r\n                break getTag;\r\n              case REACT_CONTEXT_TYPE:\r\n                // This is a consumer\r\n                fiberTag = ContextConsumer;\r\n                break getTag;\r\n              case REACT_FORWARD_REF_TYPE:\r\n                fiberTag = ForwardRef;\r\n                break getTag;\r\n              case REACT_MEMO_TYPE:\r\n                fiberTag = MemoComponent;\r\n                break getTag;\r\n              case REACT_LAZY_TYPE:\r\n                fiberTag = LazyComponent;\r\n                resolvedType = null;\r\n                break getTag;\r\n            }\r\n          }\r\n          var info = '';\r\n          {\r\n            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\r\n              info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\r\n            }\r\n            var ownerName = owner ? getComponentName(owner.type) : null;\r\n            if (ownerName) {\r\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\r\n            }\r\n          }\r\n          invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);\r\n        }\r\n    }\r\n  }\r\n\r\n  fiber = createFiber(fiberTag, pendingProps, key, mode);\r\n  fiber.elementType = type;\r\n  fiber.type = resolvedType;\r\n  fiber.expirationTime = expirationTime;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromElement(element, mode, expirationTime) {\r\n  var owner = null;\r\n  {\r\n    owner = element._owner;\r\n  }\r\n  var type = element.type;\r\n  var key = element.key;\r\n  var pendingProps = element.props;\r\n  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);\r\n  {\r\n    fiber._debugSource = element._source;\r\n    fiber._debugOwner = element._owner;\r\n  }\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromFragment(elements, mode, expirationTime, key) {\r\n  var fiber = createFiber(Fragment, elements, key, mode);\r\n  fiber.expirationTime = expirationTime;\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromProfiler(pendingProps, mode, expirationTime, key) {\r\n  {\r\n    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {\r\n      warningWithoutStack$1(false, 'Profiler must specify an \"id\" string and \"onRender\" function as props');\r\n    }\r\n  }\r\n\r\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\r\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\r\n  fiber.elementType = REACT_PROFILER_TYPE;\r\n  fiber.type = REACT_PROFILER_TYPE;\r\n  fiber.expirationTime = expirationTime;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromMode(pendingProps, mode, expirationTime, key) {\r\n  var fiber = createFiber(Mode, pendingProps, key, mode);\r\n\r\n  // TODO: The Mode fiber shouldn't have a type. It has a tag.\r\n  var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;\r\n  fiber.elementType = type;\r\n  fiber.type = type;\r\n\r\n  fiber.expirationTime = expirationTime;\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromSuspense(pendingProps, mode, expirationTime, key) {\r\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\r\n\r\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\r\n  var type = REACT_SUSPENSE_TYPE;\r\n  fiber.elementType = type;\r\n  fiber.type = type;\r\n\r\n  fiber.expirationTime = expirationTime;\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromText(content, mode, expirationTime) {\r\n  var fiber = createFiber(HostText, content, null, mode);\r\n  fiber.expirationTime = expirationTime;\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromHostInstanceForDeletion() {\r\n  var fiber = createFiber(HostComponent, null, null, NoContext);\r\n  // TODO: These should not need a type.\r\n  fiber.elementType = 'DELETED';\r\n  fiber.type = 'DELETED';\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromPortal(portal, mode, expirationTime) {\r\n  var pendingProps = portal.children !== null ? portal.children : [];\r\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\r\n  fiber.expirationTime = expirationTime;\r\n  fiber.stateNode = {\r\n    containerInfo: portal.containerInfo,\r\n    pendingChildren: null, // Used by persistent updates\r\n    implementation: portal.implementation\r\n  };\r\n  return fiber;\r\n}\r\n\r\n// Used for stashing WIP properties to replay failed work in DEV.\r\nfunction assignFiberPropertiesInDEV(target, source) {\r\n  if (target === null) {\r\n    // This Fiber's initial properties will always be overwritten.\r\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\r\n    target = createFiber(IndeterminateComponent, null, null, NoContext);\r\n  }\r\n\r\n  // This is intentionally written as a list of all properties.\r\n  // We tried to use Object.assign() instead but this is called in\r\n  // the hottest path, and Object.assign() was too slow:\r\n  // https://github.com/facebook/react/issues/12502\r\n  // This code is DEV-only so size is not a concern.\r\n\r\n  target.tag = source.tag;\r\n  target.key = source.key;\r\n  target.elementType = source.elementType;\r\n  target.type = source.type;\r\n  target.stateNode = source.stateNode;\r\n  target.return = source.return;\r\n  target.child = source.child;\r\n  target.sibling = source.sibling;\r\n  target.index = source.index;\r\n  target.ref = source.ref;\r\n  target.pendingProps = source.pendingProps;\r\n  target.memoizedProps = source.memoizedProps;\r\n  target.updateQueue = source.updateQueue;\r\n  target.memoizedState = source.memoizedState;\r\n  target.contextDependencies = source.contextDependencies;\r\n  target.mode = source.mode;\r\n  target.effectTag = source.effectTag;\r\n  target.nextEffect = source.nextEffect;\r\n  target.firstEffect = source.firstEffect;\r\n  target.lastEffect = source.lastEffect;\r\n  target.expirationTime = source.expirationTime;\r\n  target.childExpirationTime = source.childExpirationTime;\r\n  target.alternate = source.alternate;\r\n  if (enableProfilerTimer) {\r\n    target.actualDuration = source.actualDuration;\r\n    target.actualStartTime = source.actualStartTime;\r\n    target.selfBaseDuration = source.selfBaseDuration;\r\n    target.treeBaseDuration = source.treeBaseDuration;\r\n  }\r\n  target._debugID = source._debugID;\r\n  target._debugSource = source._debugSource;\r\n  target._debugOwner = source._debugOwner;\r\n  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;\r\n  target._debugHookTypes = source._debugHookTypes;\r\n  return target;\r\n}\r\n\r\n// TODO: This should be lifted into the renderer.\r\n\r\n\r\n// The following attributes are only used by interaction tracing builds.\r\n// They enable interactions to be associated with their async work,\r\n// And expose interaction metadata to the React DevTools Profiler plugin.\r\n// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.\r\n\r\n\r\n// Exported FiberRoot type includes all properties,\r\n// To avoid requiring potentially error-prone :any casts throughout the project.\r\n// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).\r\n// The types are defined separately within this file to ensure they stay in sync.\r\n// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)\r\n\r\n\r\nfunction createFiberRoot(containerInfo, isConcurrent, hydrate) {\r\n  // Cyclic construction. This cheats the type system right now because\r\n  // stateNode is any.\r\n  var uninitializedFiber = createHostRootFiber(isConcurrent);\r\n\r\n  var root = void 0;\r\n  if (enableSchedulerTracing) {\r\n    root = {\r\n      current: uninitializedFiber,\r\n      containerInfo: containerInfo,\r\n      pendingChildren: null,\r\n\r\n      earliestPendingTime: NoWork,\r\n      latestPendingTime: NoWork,\r\n      earliestSuspendedTime: NoWork,\r\n      latestSuspendedTime: NoWork,\r\n      latestPingedTime: NoWork,\r\n\r\n      pingCache: null,\r\n\r\n      didError: false,\r\n\r\n      pendingCommitExpirationTime: NoWork,\r\n      finishedWork: null,\r\n      timeoutHandle: noTimeout,\r\n      context: null,\r\n      pendingContext: null,\r\n      hydrate: hydrate,\r\n      nextExpirationTimeToWorkOn: NoWork,\r\n      expirationTime: NoWork,\r\n      firstBatch: null,\r\n      nextScheduledRoot: null,\r\n\r\n      interactionThreadID: tracing.unstable_getThreadID(),\r\n      memoizedInteractions: new Set(),\r\n      pendingInteractionMap: new Map()\r\n    };\r\n  } else {\r\n    root = {\r\n      current: uninitializedFiber,\r\n      containerInfo: containerInfo,\r\n      pendingChildren: null,\r\n\r\n      pingCache: null,\r\n\r\n      earliestPendingTime: NoWork,\r\n      latestPendingTime: NoWork,\r\n      earliestSuspendedTime: NoWork,\r\n      latestSuspendedTime: NoWork,\r\n      latestPingedTime: NoWork,\r\n\r\n      didError: false,\r\n\r\n      pendingCommitExpirationTime: NoWork,\r\n      finishedWork: null,\r\n      timeoutHandle: noTimeout,\r\n      context: null,\r\n      pendingContext: null,\r\n      hydrate: hydrate,\r\n      nextExpirationTimeToWorkOn: NoWork,\r\n      expirationTime: NoWork,\r\n      firstBatch: null,\r\n      nextScheduledRoot: null\r\n    };\r\n  }\r\n\r\n  uninitializedFiber.stateNode = root;\r\n\r\n  // The reason for the way the Flow types are structured in this file,\r\n  // Is to avoid needing :any casts everywhere interaction tracing fields are used.\r\n  // Unfortunately that requires an :any cast for non-interaction tracing capable builds.\r\n  // $FlowFixMe Remove this :any cast and replace it with something better.\r\n  return root;\r\n}\r\n\r\n/**\r\n * Forked from fbjs/warning:\r\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\r\n *\r\n * Only change is we use console.warn instead of console.error,\r\n * and do nothing when 'console' is not supported.\r\n * This really simplifies the code.\r\n * ---\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar lowPriorityWarning = function () {};\r\n\r\n{\r\n  var printWarning = function (format) {\r\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    var argIndex = 0;\r\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\r\n      return args[argIndex++];\r\n    });\r\n    if (typeof console !== 'undefined') {\r\n      console.warn(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n\r\n  lowPriorityWarning = function (condition, format) {\r\n    if (format === undefined) {\r\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\r\n    }\r\n    if (!condition) {\r\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\r\n        args[_key2 - 2] = arguments[_key2];\r\n      }\r\n\r\n      printWarning.apply(undefined, [format].concat(args));\r\n    }\r\n  };\r\n}\r\n\r\nvar lowPriorityWarning$1 = lowPriorityWarning;\r\n\r\nvar ReactStrictModeWarnings = {\r\n  discardPendingWarnings: function () {},\r\n  flushPendingDeprecationWarnings: function () {},\r\n  flushPendingUnsafeLifecycleWarnings: function () {},\r\n  recordDeprecationWarnings: function (fiber, instance) {},\r\n  recordUnsafeLifecycleWarnings: function (fiber, instance) {},\r\n  recordLegacyContextWarning: function (fiber, instance) {},\r\n  flushLegacyContextWarning: function () {}\r\n};\r\n\r\n{\r\n  var LIFECYCLE_SUGGESTIONS = {\r\n    UNSAFE_componentWillMount: 'componentDidMount',\r\n    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',\r\n    UNSAFE_componentWillUpdate: 'componentDidUpdate'\r\n  };\r\n\r\n  var pendingComponentWillMountWarnings = [];\r\n  var pendingComponentWillReceivePropsWarnings = [];\r\n  var pendingComponentWillUpdateWarnings = [];\r\n  var pendingUnsafeLifecycleWarnings = new Map();\r\n  var pendingLegacyContextWarning = new Map();\r\n\r\n  // Tracks components we have already warned about.\r\n  var didWarnAboutDeprecatedLifecycles = new Set();\r\n  var didWarnAboutUnsafeLifecycles = new Set();\r\n  var didWarnAboutLegacyContext = new Set();\r\n\r\n  var setToSortedString = function (set) {\r\n    var array = [];\r\n    set.forEach(function (value) {\r\n      array.push(value);\r\n    });\r\n    return array.sort().join(', ');\r\n  };\r\n\r\n  ReactStrictModeWarnings.discardPendingWarnings = function () {\r\n    pendingComponentWillMountWarnings = [];\r\n    pendingComponentWillReceivePropsWarnings = [];\r\n    pendingComponentWillUpdateWarnings = [];\r\n    pendingUnsafeLifecycleWarnings = new Map();\r\n    pendingLegacyContextWarning = new Map();\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\r\n    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {\r\n      var lifecyclesWarningMessages = [];\r\n\r\n      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {\r\n        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];\r\n        if (lifecycleWarnings.length > 0) {\r\n          var componentNames = new Set();\r\n          lifecycleWarnings.forEach(function (fiber) {\r\n            componentNames.add(getComponentName(fiber.type) || 'Component');\r\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n          });\r\n\r\n          var formatted = lifecycle.replace('UNSAFE_', '');\r\n          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];\r\n          var sortedComponentNames = setToSortedString(componentNames);\r\n\r\n          lifecyclesWarningMessages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));\r\n        }\r\n      });\r\n\r\n      if (lifecyclesWarningMessages.length > 0) {\r\n        var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);\r\n\r\n        warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\\n\\n%s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMessages.join('\\n\\n'));\r\n      }\r\n    });\r\n\r\n    pendingUnsafeLifecycleWarnings = new Map();\r\n  };\r\n\r\n  var findStrictRoot = function (fiber) {\r\n    var maybeStrictRoot = null;\r\n\r\n    var node = fiber;\r\n    while (node !== null) {\r\n      if (node.mode & StrictMode) {\r\n        maybeStrictRoot = node;\r\n      }\r\n      node = node.return;\r\n    }\r\n\r\n    return maybeStrictRoot;\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {\r\n    if (pendingComponentWillMountWarnings.length > 0) {\r\n      var uniqueNames = new Set();\r\n      pendingComponentWillMountWarnings.forEach(function (fiber) {\r\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\r\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\r\n      });\r\n\r\n      var sortedNames = setToSortedString(uniqueNames);\r\n\r\n      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);\r\n\r\n      pendingComponentWillMountWarnings = [];\r\n    }\r\n\r\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\r\n      var _uniqueNames = new Set();\r\n      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\r\n        _uniqueNames.add(getComponentName(fiber.type) || 'Component');\r\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\r\n      });\r\n\r\n      var _sortedNames = setToSortedString(_uniqueNames);\r\n\r\n      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);\r\n\r\n      pendingComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    if (pendingComponentWillUpdateWarnings.length > 0) {\r\n      var _uniqueNames2 = new Set();\r\n      pendingComponentWillUpdateWarnings.forEach(function (fiber) {\r\n        _uniqueNames2.add(getComponentName(fiber.type) || 'Component');\r\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\r\n      });\r\n\r\n      var _sortedNames2 = setToSortedString(_uniqueNames2);\r\n\r\n      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);\r\n\r\n      pendingComponentWillUpdateWarnings = [];\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {\r\n    // Dedup strategy: Warn once per component.\r\n    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    // Don't warn about react-lifecycles-compat polyfilled components.\r\n    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\r\n      pendingComponentWillMountWarnings.push(fiber);\r\n    }\r\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\r\n      pendingComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\r\n      pendingComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\r\n    var strictRoot = findStrictRoot(fiber);\r\n    if (strictRoot === null) {\r\n      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n      return;\r\n    }\r\n\r\n    // Dedup strategy: Warn once per component.\r\n    // This is difficult to track any other way since component names\r\n    // are often vague and are likely to collide between 3rd party libraries.\r\n    // An expand property is probably okay to use here since it's DEV-only,\r\n    // and will only be set in the event of serious warnings.\r\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    var warningsForRoot = void 0;\r\n    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {\r\n      warningsForRoot = {\r\n        UNSAFE_componentWillMount: [],\r\n        UNSAFE_componentWillReceiveProps: [],\r\n        UNSAFE_componentWillUpdate: []\r\n      };\r\n\r\n      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);\r\n    } else {\r\n      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);\r\n    }\r\n\r\n    var unsafeLifecycles = [];\r\n    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {\r\n      unsafeLifecycles.push('UNSAFE_componentWillMount');\r\n    }\r\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\r\n      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');\r\n    }\r\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {\r\n      unsafeLifecycles.push('UNSAFE_componentWillUpdate');\r\n    }\r\n\r\n    if (unsafeLifecycles.length > 0) {\r\n      unsafeLifecycles.forEach(function (lifecycle) {\r\n        warningsForRoot[lifecycle].push(fiber);\r\n      });\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\r\n    var strictRoot = findStrictRoot(fiber);\r\n    if (strictRoot === null) {\r\n      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\r\n      return;\r\n    }\r\n\r\n    // Dedup strategy: Warn once per component.\r\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\r\n\r\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\r\n      if (warningsForRoot === undefined) {\r\n        warningsForRoot = [];\r\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\r\n      }\r\n      warningsForRoot.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushLegacyContextWarning = function () {\r\n    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\r\n      var uniqueNames = new Set();\r\n      fiberArray.forEach(function (fiber) {\r\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\r\n        didWarnAboutLegacyContext.add(fiber.type);\r\n      });\r\n\r\n      var sortedNames = setToSortedString(uniqueNames);\r\n      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);\r\n\r\n      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);\r\n    });\r\n  };\r\n}\r\n\r\n// This lets us hook into Fiber to debug what it's doing.\r\n// See https://github.com/facebook/react/pull/8033.\r\n// This is not part of the public API, not even for React DevTools.\r\n// You may only inject a debugTool if you work on React Fiber itself.\r\nvar ReactFiberInstrumentation = {\r\n  debugTool: null\r\n};\r\n\r\nvar ReactFiberInstrumentation_1 = ReactFiberInstrumentation;\r\n\r\n// TODO: Offscreen updates should never suspend. However, a promise that\r\n// suspended inside an offscreen subtree should be able to ping at the priority\r\n// of the outer render.\r\n\r\nfunction markPendingPriorityLevel(root, expirationTime) {\r\n  // If there's a gap between completing a failed root and retrying it,\r\n  // additional updates may be scheduled. Clear `didError`, in case the update\r\n  // is sufficient to fix the error.\r\n  root.didError = false;\r\n\r\n  // Update the latest and earliest pending times\r\n  var earliestPendingTime = root.earliestPendingTime;\r\n  if (earliestPendingTime === NoWork) {\r\n    // No other pending updates.\r\n    root.earliestPendingTime = root.latestPendingTime = expirationTime;\r\n  } else {\r\n    if (earliestPendingTime < expirationTime) {\r\n      // This is the earliest pending update.\r\n      root.earliestPendingTime = expirationTime;\r\n    } else {\r\n      var latestPendingTime = root.latestPendingTime;\r\n      if (latestPendingTime > expirationTime) {\r\n        // This is the latest pending update\r\n        root.latestPendingTime = expirationTime;\r\n      }\r\n    }\r\n  }\r\n  findNextExpirationTimeToWorkOn(expirationTime, root);\r\n}\r\n\r\nfunction markCommittedPriorityLevels(root, earliestRemainingTime) {\r\n  root.didError = false;\r\n\r\n  if (earliestRemainingTime === NoWork) {\r\n    // Fast path. There's no remaining work. Clear everything.\r\n    root.earliestPendingTime = NoWork;\r\n    root.latestPendingTime = NoWork;\r\n    root.earliestSuspendedTime = NoWork;\r\n    root.latestSuspendedTime = NoWork;\r\n    root.latestPingedTime = NoWork;\r\n    findNextExpirationTimeToWorkOn(NoWork, root);\r\n    return;\r\n  }\r\n\r\n  if (earliestRemainingTime < root.latestPingedTime) {\r\n    root.latestPingedTime = NoWork;\r\n  }\r\n\r\n  // Let's see if the previous latest known pending level was just flushed.\r\n  var latestPendingTime = root.latestPendingTime;\r\n  if (latestPendingTime !== NoWork) {\r\n    if (latestPendingTime > earliestRemainingTime) {\r\n      // We've flushed all the known pending levels.\r\n      root.earliestPendingTime = root.latestPendingTime = NoWork;\r\n    } else {\r\n      var earliestPendingTime = root.earliestPendingTime;\r\n      if (earliestPendingTime > earliestRemainingTime) {\r\n        // We've flushed the earliest known pending level. Set this to the\r\n        // latest pending time.\r\n        root.earliestPendingTime = root.latestPendingTime;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Now let's handle the earliest remaining level in the whole tree. We need to\r\n  // decide whether to treat it as a pending level or as suspended. Check\r\n  // it falls within the range of known suspended levels.\r\n\r\n  var earliestSuspendedTime = root.earliestSuspendedTime;\r\n  if (earliestSuspendedTime === NoWork) {\r\n    // There's no suspended work. Treat the earliest remaining level as a\r\n    // pending level.\r\n    markPendingPriorityLevel(root, earliestRemainingTime);\r\n    findNextExpirationTimeToWorkOn(NoWork, root);\r\n    return;\r\n  }\r\n\r\n  var latestSuspendedTime = root.latestSuspendedTime;\r\n  if (earliestRemainingTime < latestSuspendedTime) {\r\n    // The earliest remaining level is later than all the suspended work. That\r\n    // means we've flushed all the suspended work.\r\n    root.earliestSuspendedTime = NoWork;\r\n    root.latestSuspendedTime = NoWork;\r\n    root.latestPingedTime = NoWork;\r\n\r\n    // There's no suspended work. Treat the earliest remaining level as a\r\n    // pending level.\r\n    markPendingPriorityLevel(root, earliestRemainingTime);\r\n    findNextExpirationTimeToWorkOn(NoWork, root);\r\n    return;\r\n  }\r\n\r\n  if (earliestRemainingTime > earliestSuspendedTime) {\r\n    // The earliest remaining time is earlier than all the suspended work.\r\n    // Treat it as a pending update.\r\n    markPendingPriorityLevel(root, earliestRemainingTime);\r\n    findNextExpirationTimeToWorkOn(NoWork, root);\r\n    return;\r\n  }\r\n\r\n  // The earliest remaining time falls within the range of known suspended\r\n  // levels. We should treat this as suspended work.\r\n  findNextExpirationTimeToWorkOn(NoWork, root);\r\n}\r\n\r\nfunction hasLowerPriorityWork(root, erroredExpirationTime) {\r\n  var latestPendingTime = root.latestPendingTime;\r\n  var latestSuspendedTime = root.latestSuspendedTime;\r\n  var latestPingedTime = root.latestPingedTime;\r\n  return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;\r\n}\r\n\r\nfunction isPriorityLevelSuspended(root, expirationTime) {\r\n  var earliestSuspendedTime = root.earliestSuspendedTime;\r\n  var latestSuspendedTime = root.latestSuspendedTime;\r\n  return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;\r\n}\r\n\r\nfunction markSuspendedPriorityLevel(root, suspendedTime) {\r\n  root.didError = false;\r\n  clearPing(root, suspendedTime);\r\n\r\n  // First, check the known pending levels and update them if needed.\r\n  var earliestPendingTime = root.earliestPendingTime;\r\n  var latestPendingTime = root.latestPendingTime;\r\n  if (earliestPendingTime === suspendedTime) {\r\n    if (latestPendingTime === suspendedTime) {\r\n      // Both known pending levels were suspended. Clear them.\r\n      root.earliestPendingTime = root.latestPendingTime = NoWork;\r\n    } else {\r\n      // The earliest pending level was suspended. Clear by setting it to the\r\n      // latest pending level.\r\n      root.earliestPendingTime = latestPendingTime;\r\n    }\r\n  } else if (latestPendingTime === suspendedTime) {\r\n    // The latest pending level was suspended. Clear by setting it to the\r\n    // latest pending level.\r\n    root.latestPendingTime = earliestPendingTime;\r\n  }\r\n\r\n  // Finally, update the known suspended levels.\r\n  var earliestSuspendedTime = root.earliestSuspendedTime;\r\n  var latestSuspendedTime = root.latestSuspendedTime;\r\n  if (earliestSuspendedTime === NoWork) {\r\n    // No other suspended levels.\r\n    root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;\r\n  } else {\r\n    if (earliestSuspendedTime < suspendedTime) {\r\n      // This is the earliest suspended level.\r\n      root.earliestSuspendedTime = suspendedTime;\r\n    } else if (latestSuspendedTime > suspendedTime) {\r\n      // This is the latest suspended level\r\n      root.latestSuspendedTime = suspendedTime;\r\n    }\r\n  }\r\n\r\n  findNextExpirationTimeToWorkOn(suspendedTime, root);\r\n}\r\n\r\nfunction markPingedPriorityLevel(root, pingedTime) {\r\n  root.didError = false;\r\n\r\n  // TODO: When we add back resuming, we need to ensure the progressed work\r\n  // is thrown out and not reused during the restarted render. One way to\r\n  // invalidate the progressed work is to restart at expirationTime + 1.\r\n  var latestPingedTime = root.latestPingedTime;\r\n  if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {\r\n    root.latestPingedTime = pingedTime;\r\n  }\r\n  findNextExpirationTimeToWorkOn(pingedTime, root);\r\n}\r\n\r\nfunction clearPing(root, completedTime) {\r\n  var latestPingedTime = root.latestPingedTime;\r\n  if (latestPingedTime >= completedTime) {\r\n    root.latestPingedTime = NoWork;\r\n  }\r\n}\r\n\r\nfunction findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {\r\n  var earliestExpirationTime = renderExpirationTime;\r\n\r\n  var earliestPendingTime = root.earliestPendingTime;\r\n  var earliestSuspendedTime = root.earliestSuspendedTime;\r\n  if (earliestPendingTime > earliestExpirationTime) {\r\n    earliestExpirationTime = earliestPendingTime;\r\n  }\r\n  if (earliestSuspendedTime > earliestExpirationTime) {\r\n    earliestExpirationTime = earliestSuspendedTime;\r\n  }\r\n  return earliestExpirationTime;\r\n}\r\n\r\nfunction didExpireAtExpirationTime(root, currentTime) {\r\n  var expirationTime = root.expirationTime;\r\n  if (expirationTime !== NoWork && currentTime <= expirationTime) {\r\n    // The root has expired. Flush all work up to the current time.\r\n    root.nextExpirationTimeToWorkOn = currentTime;\r\n  }\r\n}\r\n\r\nfunction findNextExpirationTimeToWorkOn(completedExpirationTime, root) {\r\n  var earliestSuspendedTime = root.earliestSuspendedTime;\r\n  var latestSuspendedTime = root.latestSuspendedTime;\r\n  var earliestPendingTime = root.earliestPendingTime;\r\n  var latestPingedTime = root.latestPingedTime;\r\n\r\n  // Work on the earliest pending time. Failing that, work on the latest\r\n  // pinged time.\r\n  var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime;\r\n\r\n  // If there is no pending or pinged work, check if there's suspended work\r\n  // that's lower priority than what we just completed.\r\n  if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {\r\n    // The lowest priority suspended work is the work most likely to be\r\n    // committed next. Let's start rendering it again, so that if it times out,\r\n    // it's ready to commit.\r\n    nextExpirationTimeToWorkOn = latestSuspendedTime;\r\n  }\r\n\r\n  var expirationTime = nextExpirationTimeToWorkOn;\r\n  if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {\r\n    // Expire using the earliest known expiration time.\r\n    expirationTime = earliestSuspendedTime;\r\n  }\r\n\r\n  root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;\r\n  root.expirationTime = expirationTime;\r\n}\r\n\r\nfunction resolveDefaultProps(Component, baseProps) {\r\n  if (Component && Component.defaultProps) {\r\n    // Resolve default props. Taken from ReactElement\r\n    var props = _assign({}, baseProps);\r\n    var defaultProps = Component.defaultProps;\r\n    for (var propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n    return props;\r\n  }\r\n  return baseProps;\r\n}\r\n\r\nfunction readLazyComponentType(lazyComponent) {\r\n  var status = lazyComponent._status;\r\n  var result = lazyComponent._result;\r\n  switch (status) {\r\n    case Resolved:\r\n      {\r\n        var Component = result;\r\n        return Component;\r\n      }\r\n    case Rejected:\r\n      {\r\n        var error = result;\r\n        throw error;\r\n      }\r\n    case Pending:\r\n      {\r\n        var thenable = result;\r\n        throw thenable;\r\n      }\r\n    default:\r\n      {\r\n        lazyComponent._status = Pending;\r\n        var ctor = lazyComponent._ctor;\r\n        var _thenable = ctor();\r\n        _thenable.then(function (moduleObject) {\r\n          if (lazyComponent._status === Pending) {\r\n            var defaultExport = moduleObject.default;\r\n            {\r\n              if (defaultExport === undefined) {\r\n                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + \"const MyComponent = lazy(() => import('./MyComponent'))\", moduleObject);\r\n              }\r\n            }\r\n            lazyComponent._status = Resolved;\r\n            lazyComponent._result = defaultExport;\r\n          }\r\n        }, function (error) {\r\n          if (lazyComponent._status === Pending) {\r\n            lazyComponent._status = Rejected;\r\n            lazyComponent._result = error;\r\n          }\r\n        });\r\n        // Handle synchronous thenables.\r\n        switch (lazyComponent._status) {\r\n          case Resolved:\r\n            return lazyComponent._result;\r\n          case Rejected:\r\n            throw lazyComponent._result;\r\n        }\r\n        lazyComponent._result = _thenable;\r\n        throw _thenable;\r\n      }\r\n  }\r\n}\r\n\r\nvar fakeInternalInstance = {};\r\nvar isArray$1 = Array.isArray;\r\n\r\n// React.Component uses a shared frozen object by default.\r\n// We'll use it to determine whether we need to initialize legacy refs.\r\nvar emptyRefsObject = new React.Component().refs;\r\n\r\nvar didWarnAboutStateAssignmentForComponent = void 0;\r\nvar didWarnAboutUninitializedState = void 0;\r\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;\r\nvar didWarnAboutLegacyLifecyclesAndDerivedState = void 0;\r\nvar didWarnAboutUndefinedDerivedState = void 0;\r\nvar warnOnUndefinedDerivedState = void 0;\r\nvar warnOnInvalidCallback$1 = void 0;\r\nvar didWarnAboutDirectlyAssigningPropsToState = void 0;\r\nvar didWarnAboutContextTypeAndContextTypes = void 0;\r\nvar didWarnAboutInvalidateContextType = void 0;\r\n\r\n{\r\n  didWarnAboutStateAssignmentForComponent = new Set();\r\n  didWarnAboutUninitializedState = new Set();\r\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\r\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\r\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\r\n  didWarnAboutUndefinedDerivedState = new Set();\r\n  didWarnAboutContextTypeAndContextTypes = new Set();\r\n  didWarnAboutInvalidateContextType = new Set();\r\n\r\n  var didWarnOnInvalidCallback = new Set();\r\n\r\n  warnOnInvalidCallback$1 = function (callback, callerName) {\r\n    if (callback === null || typeof callback === 'function') {\r\n      return;\r\n    }\r\n    var key = callerName + '_' + callback;\r\n    if (!didWarnOnInvalidCallback.has(key)) {\r\n      didWarnOnInvalidCallback.add(key);\r\n      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\r\n    }\r\n  };\r\n\r\n  warnOnUndefinedDerivedState = function (type, partialState) {\r\n    if (partialState === undefined) {\r\n      var componentName = getComponentName(type) || 'Component';\r\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\r\n        didWarnAboutUndefinedDerivedState.add(componentName);\r\n        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\r\n      }\r\n    }\r\n  };\r\n\r\n  // This is so gross but it's at least non-critical and can be removed if\r\n  // it causes problems. This is meant to give a nicer error message for\r\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\r\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\r\n  // exception.\r\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\r\n    enumerable: false,\r\n    value: function () {\r\n      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');\r\n    }\r\n  });\r\n  Object.freeze(fakeInternalInstance);\r\n}\r\n\r\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\r\n  var prevState = workInProgress.memoizedState;\r\n\r\n  {\r\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n      // Invoke the function an extra time to help detect side-effects.\r\n      getDerivedStateFromProps(nextProps, prevState);\r\n    }\r\n  }\r\n\r\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\r\n\r\n  {\r\n    warnOnUndefinedDerivedState(ctor, partialState);\r\n  }\r\n  // Merge the partial state and the previous state.\r\n  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);\r\n  workInProgress.memoizedState = memoizedState;\r\n\r\n  // Once the update queue is empty, persist the derived state onto the\r\n  // base state.\r\n  var updateQueue = workInProgress.updateQueue;\r\n  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {\r\n    updateQueue.baseState = memoizedState;\r\n  }\r\n}\r\n\r\nvar classComponentUpdater = {\r\n  isMounted: isMounted,\r\n  enqueueSetState: function (inst, payload, callback) {\r\n    var fiber = get(inst);\r\n    var currentTime = requestCurrentTime();\r\n    var expirationTime = computeExpirationForFiber(currentTime, fiber);\r\n\r\n    var update = createUpdate(expirationTime);\r\n    update.payload = payload;\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback$1(callback, 'setState');\r\n      }\r\n      update.callback = callback;\r\n    }\r\n\r\n    flushPassiveEffects();\r\n    enqueueUpdate(fiber, update);\r\n    scheduleWork(fiber, expirationTime);\r\n  },\r\n  enqueueReplaceState: function (inst, payload, callback) {\r\n    var fiber = get(inst);\r\n    var currentTime = requestCurrentTime();\r\n    var expirationTime = computeExpirationForFiber(currentTime, fiber);\r\n\r\n    var update = createUpdate(expirationTime);\r\n    update.tag = ReplaceState;\r\n    update.payload = payload;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback$1(callback, 'replaceState');\r\n      }\r\n      update.callback = callback;\r\n    }\r\n\r\n    flushPassiveEffects();\r\n    enqueueUpdate(fiber, update);\r\n    scheduleWork(fiber, expirationTime);\r\n  },\r\n  enqueueForceUpdate: function (inst, callback) {\r\n    var fiber = get(inst);\r\n    var currentTime = requestCurrentTime();\r\n    var expirationTime = computeExpirationForFiber(currentTime, fiber);\r\n\r\n    var update = createUpdate(expirationTime);\r\n    update.tag = ForceUpdate;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback$1(callback, 'forceUpdate');\r\n      }\r\n      update.callback = callback;\r\n    }\r\n\r\n    flushPassiveEffects();\r\n    enqueueUpdate(fiber, update);\r\n    scheduleWork(fiber, expirationTime);\r\n  }\r\n};\r\n\r\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\r\n  var instance = workInProgress.stateNode;\r\n  if (typeof instance.shouldComponentUpdate === 'function') {\r\n    startPhaseTimer(workInProgress, 'shouldComponentUpdate');\r\n    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\r\n    stopPhaseTimer();\r\n\r\n    {\r\n      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;\r\n    }\r\n\r\n    return shouldUpdate;\r\n  }\r\n\r\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\r\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction checkClassInstance(workInProgress, ctor, newProps) {\r\n  var instance = workInProgress.stateNode;\r\n  {\r\n    var name = getComponentName(ctor) || 'Component';\r\n    var renderPresent = instance.render;\r\n\r\n    if (!renderPresent) {\r\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\r\n        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\r\n      } else {\r\n        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\r\n      }\r\n    }\r\n\r\n    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;\r\n    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;\r\n    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;\r\n    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;\r\n    var noInstancePropTypes = !instance.propTypes;\r\n    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;\r\n    var noInstanceContextType = !instance.contextType;\r\n    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;\r\n    var noInstanceContextTypes = !instance.contextTypes;\r\n    !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;\r\n\r\n    if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\r\n      didWarnAboutContextTypeAndContextTypes.add(ctor);\r\n      warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\r\n    }\r\n\r\n    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';\r\n    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;\r\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\r\n      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');\r\n    }\r\n    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';\r\n    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;\r\n    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';\r\n    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;\r\n    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';\r\n    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;\r\n    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';\r\n    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;\r\n    var hasMutatedProps = instance.props !== newProps;\r\n    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name) : void 0;\r\n    var noInstanceDefaultProps = !instance.defaultProps;\r\n    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\r\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\r\n      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));\r\n    }\r\n\r\n    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';\r\n    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;\r\n    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';\r\n    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;\r\n    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';\r\n    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;\r\n    var _state = instance.state;\r\n    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {\r\n      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);\r\n    }\r\n    if (typeof instance.getChildContext === 'function') {\r\n      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;\r\n    }\r\n  }\r\n}\r\n\r\nfunction adoptClassInstance(workInProgress, instance) {\r\n  instance.updater = classComponentUpdater;\r\n  workInProgress.stateNode = instance;\r\n  // The instance needs access to the fiber so that it can schedule updates\r\n  set(instance, workInProgress);\r\n  {\r\n    instance._reactInternalInstance = fakeInternalInstance;\r\n  }\r\n}\r\n\r\nfunction constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {\r\n  var isLegacyContextConsumer = false;\r\n  var unmaskedContext = emptyContextObject;\r\n  var context = null;\r\n  var contextType = ctor.contextType;\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    {\r\n      if (contextType.$$typeof !== REACT_CONTEXT_TYPE && !didWarnAboutInvalidateContextType.has(ctor)) {\r\n        didWarnAboutInvalidateContextType.add(ctor);\r\n        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext(). ' + 'Did you accidentally pass the Context.Provider instead?', getComponentName(ctor) || 'Component');\r\n      }\r\n    }\r\n\r\n    context = readContext(contextType);\r\n  } else {\r\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    var contextTypes = ctor.contextTypes;\r\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\r\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\r\n  }\r\n\r\n  // Instantiate twice to help detect side-effects.\r\n  {\r\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n      new ctor(props, context); // eslint-disable-line no-new\r\n    }\r\n  }\r\n\r\n  var instance = new ctor(props, context);\r\n  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\r\n  adoptClassInstance(workInProgress, instance);\r\n\r\n  {\r\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\r\n      var componentName = getComponentName(ctor) || 'Component';\r\n      if (!didWarnAboutUninitializedState.has(componentName)) {\r\n        didWarnAboutUninitializedState.add(componentName);\r\n        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\r\n      }\r\n    }\r\n\r\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\r\n    // Warn about these lifecycles if they are present.\r\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\r\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      var foundWillMountName = null;\r\n      var foundWillReceivePropsName = null;\r\n      var foundWillUpdateName = null;\r\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\r\n        foundWillMountName = 'componentWillMount';\r\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\r\n        foundWillMountName = 'UNSAFE_componentWillMount';\r\n      }\r\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\r\n        foundWillReceivePropsName = 'componentWillReceiveProps';\r\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\r\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\r\n      }\r\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\r\n        foundWillUpdateName = 'componentWillUpdate';\r\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\r\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\r\n      }\r\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\r\n        var _componentName = getComponentName(ctor) || 'Component';\r\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\r\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\r\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\r\n          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\r\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\r\n  if (isLegacyContextConsumer) {\r\n    cacheContext(workInProgress, unmaskedContext, context);\r\n  }\r\n\r\n  return instance;\r\n}\r\n\r\nfunction callComponentWillMount(workInProgress, instance) {\r\n  startPhaseTimer(workInProgress, 'componentWillMount');\r\n  var oldState = instance.state;\r\n\r\n  if (typeof instance.componentWillMount === 'function') {\r\n    instance.componentWillMount();\r\n  }\r\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\r\n    instance.UNSAFE_componentWillMount();\r\n  }\r\n\r\n  stopPhaseTimer();\r\n\r\n  if (oldState !== instance.state) {\r\n    {\r\n      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');\r\n    }\r\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\r\n  }\r\n}\r\n\r\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\r\n  var oldState = instance.state;\r\n  startPhaseTimer(workInProgress, 'componentWillReceiveProps');\r\n  if (typeof instance.componentWillReceiveProps === 'function') {\r\n    instance.componentWillReceiveProps(newProps, nextContext);\r\n  }\r\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\r\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\r\n  }\r\n  stopPhaseTimer();\r\n\r\n  if (instance.state !== oldState) {\r\n    {\r\n      var componentName = getComponentName(workInProgress.type) || 'Component';\r\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\r\n        didWarnAboutStateAssignmentForComponent.add(componentName);\r\n        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\r\n      }\r\n    }\r\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\r\n  }\r\n}\r\n\r\n// Invokes the mount life-cycles on a previously never rendered instance.\r\nfunction mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {\r\n  {\r\n    checkClassInstance(workInProgress, ctor, newProps);\r\n  }\r\n\r\n  var instance = workInProgress.stateNode;\r\n  instance.props = newProps;\r\n  instance.state = workInProgress.memoizedState;\r\n  instance.refs = emptyRefsObject;\r\n\r\n  var contextType = ctor.contextType;\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    instance.context = readContext(contextType);\r\n  } else {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  {\r\n    if (instance.state === newProps) {\r\n      var componentName = getComponentName(ctor) || 'Component';\r\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\r\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\r\n        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\r\n      }\r\n    }\r\n\r\n    if (workInProgress.mode & StrictMode) {\r\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\r\n\r\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\r\n    }\r\n\r\n    if (warnAboutDeprecatedLifecycles) {\r\n      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);\r\n    }\r\n  }\r\n\r\n  var updateQueue = workInProgress.updateQueue;\r\n  if (updateQueue !== null) {\r\n    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\r\n    instance.state = workInProgress.memoizedState;\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  if (typeof getDerivedStateFromProps === 'function') {\r\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\r\n    instance.state = workInProgress.memoizedState;\r\n  }\r\n\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\r\n    callComponentWillMount(workInProgress, instance);\r\n    // If we had additional state updates during this life-cycle, let's\r\n    // process them now.\r\n    updateQueue = workInProgress.updateQueue;\r\n    if (updateQueue !== null) {\r\n      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\r\n      instance.state = workInProgress.memoizedState;\r\n    }\r\n  }\r\n\r\n  if (typeof instance.componentDidMount === 'function') {\r\n    workInProgress.effectTag |= Update;\r\n  }\r\n}\r\n\r\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {\r\n  var instance = workInProgress.stateNode;\r\n\r\n  var oldProps = workInProgress.memoizedProps;\r\n  instance.props = oldProps;\r\n\r\n  var oldContext = instance.context;\r\n  var contextType = ctor.contextType;\r\n  var nextContext = void 0;\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    nextContext = readContext(contextType);\r\n  } else {\r\n    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';\r\n\r\n  // Note: During these life-cycles, instance.props/instance.state are what\r\n  // ever the previously attempted to render - not the \"current\". However,\r\n  // during componentDidUpdate we pass the \"current\" props.\r\n\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\r\n    if (oldProps !== newProps || oldContext !== nextContext) {\r\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\r\n    }\r\n  }\r\n\r\n  resetHasForceUpdateBeforeProcessing();\r\n\r\n  var oldState = workInProgress.memoizedState;\r\n  var newState = instance.state = oldState;\r\n  var updateQueue = workInProgress.updateQueue;\r\n  if (updateQueue !== null) {\r\n    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidMount === 'function') {\r\n      workInProgress.effectTag |= Update;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (typeof getDerivedStateFromProps === 'function') {\r\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\r\n\r\n  if (shouldUpdate) {\r\n    // In order to support react-lifecycles-compat polyfilled components,\r\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\r\n      startPhaseTimer(workInProgress, 'componentWillMount');\r\n      if (typeof instance.componentWillMount === 'function') {\r\n        instance.componentWillMount();\r\n      }\r\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\r\n        instance.UNSAFE_componentWillMount();\r\n      }\r\n      stopPhaseTimer();\r\n    }\r\n    if (typeof instance.componentDidMount === 'function') {\r\n      workInProgress.effectTag |= Update;\r\n    }\r\n  } else {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidMount === 'function') {\r\n      workInProgress.effectTag |= Update;\r\n    }\r\n\r\n    // If shouldComponentUpdate returned false, we should still update the\r\n    // memoized state to indicate that this work can be reused.\r\n    workInProgress.memoizedProps = newProps;\r\n    workInProgress.memoizedState = newState;\r\n  }\r\n\r\n  // Update the existing instance's state, props, and context pointers even\r\n  // if shouldComponentUpdate returns false.\r\n  instance.props = newProps;\r\n  instance.state = newState;\r\n  instance.context = nextContext;\r\n\r\n  return shouldUpdate;\r\n}\r\n\r\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\r\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {\r\n  var instance = workInProgress.stateNode;\r\n\r\n  var oldProps = workInProgress.memoizedProps;\r\n  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);\r\n\r\n  var oldContext = instance.context;\r\n  var contextType = ctor.contextType;\r\n  var nextContext = void 0;\r\n  if (typeof contextType === 'object' && contextType !== null) {\r\n    nextContext = readContext(contextType);\r\n  } else {\r\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';\r\n\r\n  // Note: During these life-cycles, instance.props/instance.state are what\r\n  // ever the previously attempted to render - not the \"current\". However,\r\n  // during componentDidUpdate we pass the \"current\" props.\r\n\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\r\n    if (oldProps !== newProps || oldContext !== nextContext) {\r\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\r\n    }\r\n  }\r\n\r\n  resetHasForceUpdateBeforeProcessing();\r\n\r\n  var oldState = workInProgress.memoizedState;\r\n  var newState = instance.state = oldState;\r\n  var updateQueue = workInProgress.updateQueue;\r\n  if (updateQueue !== null) {\r\n    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidUpdate === 'function') {\r\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.effectTag |= Update;\r\n      }\r\n    }\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.effectTag |= Snapshot;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (typeof getDerivedStateFromProps === 'function') {\r\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\r\n\r\n  if (shouldUpdate) {\r\n    // In order to support react-lifecycles-compat polyfilled components,\r\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\r\n      startPhaseTimer(workInProgress, 'componentWillUpdate');\r\n      if (typeof instance.componentWillUpdate === 'function') {\r\n        instance.componentWillUpdate(newProps, newState, nextContext);\r\n      }\r\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\r\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\r\n      }\r\n      stopPhaseTimer();\r\n    }\r\n    if (typeof instance.componentDidUpdate === 'function') {\r\n      workInProgress.effectTag |= Update;\r\n    }\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      workInProgress.effectTag |= Snapshot;\r\n    }\r\n  } else {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidUpdate === 'function') {\r\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.effectTag |= Update;\r\n      }\r\n    }\r\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\r\n      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\r\n        workInProgress.effectTag |= Snapshot;\r\n      }\r\n    }\r\n\r\n    // If shouldComponentUpdate returned false, we should still update the\r\n    // memoized props/state to indicate that this work can be reused.\r\n    workInProgress.memoizedProps = newProps;\r\n    workInProgress.memoizedState = newState;\r\n  }\r\n\r\n  // Update the existing instance's state, props, and context pointers even\r\n  // if shouldComponentUpdate returns false.\r\n  instance.props = newProps;\r\n  instance.state = newState;\r\n  instance.context = nextContext;\r\n\r\n  return shouldUpdate;\r\n}\r\n\r\nvar didWarnAboutMaps = void 0;\r\nvar didWarnAboutGenerators = void 0;\r\nvar didWarnAboutStringRefInStrictMode = void 0;\r\nvar ownerHasKeyUseWarning = void 0;\r\nvar ownerHasFunctionTypeWarning = void 0;\r\nvar warnForMissingKey = function (child) {};\r\n\r\n{\r\n  didWarnAboutMaps = false;\r\n  didWarnAboutGenerators = false;\r\n  didWarnAboutStringRefInStrictMode = {};\r\n\r\n  /**\r\n   * Warn if there's no key explicitly set on dynamic arrays of children or\r\n   * object keys are not valid. This allows us to keep track of children between\r\n   * updates.\r\n   */\r\n  ownerHasKeyUseWarning = {};\r\n  ownerHasFunctionTypeWarning = {};\r\n\r\n  warnForMissingKey = function (child) {\r\n    if (child === null || typeof child !== 'object') {\r\n      return;\r\n    }\r\n    if (!child._store || child._store.validated || child.key != null) {\r\n      return;\r\n    }\r\n    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n    child._store.validated = true;\r\n\r\n    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '\"key\" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    warning$1(false, 'Each child in a list should have a unique ' + '\"key\" prop. See https://fb.me/react-warning-keys for ' + 'more information.');\r\n  };\r\n}\r\n\r\nvar isArray = Array.isArray;\r\n\r\nfunction coerceRef(returnFiber, current$$1, element) {\r\n  var mixedRef = element.ref;\r\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\r\n    {\r\n      if (returnFiber.mode & StrictMode) {\r\n        var componentName = getComponentName(returnFiber.type) || 'Component';\r\n        if (!didWarnAboutStringRefInStrictMode[componentName]) {\r\n          warningWithoutStack$1(false, 'A string ref, \"%s\", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));\r\n          didWarnAboutStringRefInStrictMode[componentName] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (element._owner) {\r\n      var owner = element._owner;\r\n      var inst = void 0;\r\n      if (owner) {\r\n        var ownerFiber = owner;\r\n        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs. Did you mean to use React.forwardRef()?') : void 0;\r\n        inst = ownerFiber.stateNode;\r\n      }\r\n      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;\r\n      var stringRef = '' + mixedRef;\r\n      // Check if previous string ref matches new string ref\r\n      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {\r\n        return current$$1.ref;\r\n      }\r\n      var ref = function (value) {\r\n        var refs = inst.refs;\r\n        if (refs === emptyRefsObject) {\r\n          // This is a lazy pooled frozen object, so we need to initialize.\r\n          refs = inst.refs = {};\r\n        }\r\n        if (value === null) {\r\n          delete refs[stringRef];\r\n        } else {\r\n          refs[stringRef] = value;\r\n        }\r\n      };\r\n      ref._stringRef = stringRef;\r\n      return ref;\r\n    } else {\r\n      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;\r\n      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\\n1. You may be adding a ref to a function component\\n2. You may be adding a ref to a component that was not created inside a component\\'s render method\\n3. You have multiple copies of React loaded\\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;\r\n    }\r\n  }\r\n  return mixedRef;\r\n}\r\n\r\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\r\n  if (returnFiber.type !== 'textarea') {\r\n    var addendum = '';\r\n    {\r\n      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();\r\n    }\r\n    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);\r\n  }\r\n}\r\n\r\nfunction warnOnFunctionType() {\r\n  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();\r\n\r\n  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {\r\n    return;\r\n  }\r\n  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;\r\n\r\n  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\r\n}\r\n\r\n// This wrapper function exists because I expect to clone the code in each path\r\n// to be able to optimize each path individually by branching early. This needs\r\n// a compiler or we can do it manually. Helpers that don't need this branching\r\n// live outside of this function.\r\nfunction ChildReconciler(shouldTrackSideEffects) {\r\n  function deleteChild(returnFiber, childToDelete) {\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return;\r\n    }\r\n    // Deletions are added in reversed order so we add it to the front.\r\n    // At this point, the return fiber's effect list is empty except for\r\n    // deletions, so we can just append the deletion to the list. The remaining\r\n    // effects aren't added until the complete phase. Once we implement\r\n    // resuming, this may not be true.\r\n    var last = returnFiber.lastEffect;\r\n    if (last !== null) {\r\n      last.nextEffect = childToDelete;\r\n      returnFiber.lastEffect = childToDelete;\r\n    } else {\r\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\r\n    }\r\n    childToDelete.nextEffect = null;\r\n    childToDelete.effectTag = Deletion;\r\n  }\r\n\r\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return null;\r\n    }\r\n\r\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\r\n    // assuming that after the first child we've already added everything.\r\n    var childToDelete = currentFirstChild;\r\n    while (childToDelete !== null) {\r\n      deleteChild(returnFiber, childToDelete);\r\n      childToDelete = childToDelete.sibling;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\r\n    // Add the remaining children to a temporary map so that we can find them by\r\n    // keys quickly. Implicit (null) keys get added to this set with their index\r\n    var existingChildren = new Map();\r\n\r\n    var existingChild = currentFirstChild;\r\n    while (existingChild !== null) {\r\n      if (existingChild.key !== null) {\r\n        existingChildren.set(existingChild.key, existingChild);\r\n      } else {\r\n        existingChildren.set(existingChild.index, existingChild);\r\n      }\r\n      existingChild = existingChild.sibling;\r\n    }\r\n    return existingChildren;\r\n  }\r\n\r\n  function useFiber(fiber, pendingProps, expirationTime) {\r\n    // We currently set sibling to null and index to 0 here because it is easy\r\n    // to forget to do before returning it. E.g. for the single child case.\r\n    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);\r\n    clone.index = 0;\r\n    clone.sibling = null;\r\n    return clone;\r\n  }\r\n\r\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\r\n    newFiber.index = newIndex;\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return lastPlacedIndex;\r\n    }\r\n    var current$$1 = newFiber.alternate;\r\n    if (current$$1 !== null) {\r\n      var oldIndex = current$$1.index;\r\n      if (oldIndex < lastPlacedIndex) {\r\n        // This is a move.\r\n        newFiber.effectTag = Placement;\r\n        return lastPlacedIndex;\r\n      } else {\r\n        // This item can stay in place.\r\n        return oldIndex;\r\n      }\r\n    } else {\r\n      // This is an insertion.\r\n      newFiber.effectTag = Placement;\r\n      return lastPlacedIndex;\r\n    }\r\n  }\r\n\r\n  function placeSingleChild(newFiber) {\r\n    // This is simpler for the single child case. We only need to do a\r\n    // placement for inserting new children.\r\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\r\n      newFiber.effectTag = Placement;\r\n    }\r\n    return newFiber;\r\n  }\r\n\r\n  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {\r\n    if (current$$1 === null || current$$1.tag !== HostText) {\r\n      // Insert\r\n      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current$$1, textContent, expirationTime);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function updateElement(returnFiber, current$$1, element, expirationTime) {\r\n    if (current$$1 !== null && current$$1.elementType === element.type) {\r\n      // Move based on index\r\n      var existing = useFiber(current$$1, element.props, expirationTime);\r\n      existing.ref = coerceRef(returnFiber, current$$1, element);\r\n      existing.return = returnFiber;\r\n      {\r\n        existing._debugSource = element._source;\r\n        existing._debugOwner = element._owner;\r\n      }\r\n      return existing;\r\n    } else {\r\n      // Insert\r\n      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);\r\n      created.ref = coerceRef(returnFiber, current$$1, element);\r\n      created.return = returnFiber;\r\n      return created;\r\n    }\r\n  }\r\n\r\n  function updatePortal(returnFiber, current$$1, portal, expirationTime) {\r\n    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {\r\n      // Insert\r\n      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current$$1, portal.children || [], expirationTime);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {\r\n    if (current$$1 === null || current$$1.tag !== Fragment) {\r\n      // Insert\r\n      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current$$1, fragment, expirationTime);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function createChild(returnFiber, newChild, expirationTime) {\r\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\r\n      // Text nodes don't have keys. If the previous node is implicitly keyed\r\n      // we can continue to replace it without aborting even if it is not a text\r\n      // node.\r\n      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);\r\n      created.return = returnFiber;\r\n      return created;\r\n    }\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          {\r\n            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);\r\n            _created.ref = coerceRef(returnFiber, null, newChild);\r\n            _created.return = returnFiber;\r\n            return _created;\r\n          }\r\n        case REACT_PORTAL_TYPE:\r\n          {\r\n            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);\r\n            _created2.return = returnFiber;\r\n            return _created2;\r\n          }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);\r\n        _created3.return = returnFiber;\r\n        return _created3;\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType();\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {\r\n    // Update the fiber if the keys match, otherwise return null.\r\n\r\n    var key = oldFiber !== null ? oldFiber.key : null;\r\n\r\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\r\n      // Text nodes don't have keys. If the previous node is implicitly keyed\r\n      // we can continue to replace it without aborting even if it is not a text\r\n      // node.\r\n      if (key !== null) {\r\n        return null;\r\n      }\r\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);\r\n    }\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          {\r\n            if (newChild.key === key) {\r\n              if (newChild.type === REACT_FRAGMENT_TYPE) {\r\n                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);\r\n              }\r\n              return updateElement(returnFiber, oldFiber, newChild, expirationTime);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        case REACT_PORTAL_TYPE:\r\n          {\r\n            if (newChild.key === key) {\r\n              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        if (key !== null) {\r\n          return null;\r\n        }\r\n\r\n        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType();\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {\r\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\r\n      // Text nodes don't have keys, so we neither have to check the old nor\r\n      // new node for the key. If both are text nodes, they match.\r\n      var matchedFiber = existingChildren.get(newIdx) || null;\r\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);\r\n    }\r\n\r\n    if (typeof newChild === 'object' && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          {\r\n            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\r\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\r\n              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);\r\n            }\r\n            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);\r\n          }\r\n        case REACT_PORTAL_TYPE:\r\n          {\r\n            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\r\n            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);\r\n          }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\r\n        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType();\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Warns if there is a duplicate or missing key\r\n   */\r\n  function warnOnInvalidKey(child, knownKeys) {\r\n    {\r\n      if (typeof child !== 'object' || child === null) {\r\n        return knownKeys;\r\n      }\r\n      switch (child.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n        case REACT_PORTAL_TYPE:\r\n          warnForMissingKey(child);\r\n          var key = child.key;\r\n          if (typeof key !== 'string') {\r\n            break;\r\n          }\r\n          if (knownKeys === null) {\r\n            knownKeys = new Set();\r\n            knownKeys.add(key);\r\n            break;\r\n          }\r\n          if (!knownKeys.has(key)) {\r\n            knownKeys.add(key);\r\n            break;\r\n          }\r\n          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return knownKeys;\r\n  }\r\n\r\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {\r\n    // This algorithm can't optimize by searching from both ends since we\r\n    // don't have backpointers on fibers. I'm trying to see how far we can get\r\n    // with that model. If it ends up not being worth the tradeoffs, we can\r\n    // add it later.\r\n\r\n    // Even with a two ended optimization, we'd want to optimize for the case\r\n    // where there are few changes and brute force the comparison instead of\r\n    // going for the Map. It'd like to explore hitting that path first in\r\n    // forward-only mode and only go for the Map once we notice that we need\r\n    // lots of look ahead. This doesn't handle reversal as well as two ended\r\n    // search but that's unusual. Besides, for the two ended optimization to\r\n    // work on Iterables, we'd need to copy the whole set.\r\n\r\n    // In this first iteration, we'll just live with hitting the bad case\r\n    // (adding everything to a Map) in for every insert/move.\r\n\r\n    // If you change this code, also update reconcileChildrenIterator() which\r\n    // uses the same algorithm.\r\n\r\n    {\r\n      // First, validate keys.\r\n      var knownKeys = null;\r\n      for (var i = 0; i < newChildren.length; i++) {\r\n        var child = newChildren[i];\r\n        knownKeys = warnOnInvalidKey(child, knownKeys);\r\n      }\r\n    }\r\n\r\n    var resultingFirstChild = null;\r\n    var previousNewFiber = null;\r\n\r\n    var oldFiber = currentFirstChild;\r\n    var lastPlacedIndex = 0;\r\n    var newIdx = 0;\r\n    var nextOldFiber = null;\r\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\r\n      if (oldFiber.index > newIdx) {\r\n        nextOldFiber = oldFiber;\r\n        oldFiber = null;\r\n      } else {\r\n        nextOldFiber = oldFiber.sibling;\r\n      }\r\n      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);\r\n      if (newFiber === null) {\r\n        // TODO: This breaks on empty slots like null children. That's\r\n        // unfortunate because it triggers the slow path all the time. We need\r\n        // a better way to communicate whether this was a miss or null,\r\n        // boolean, undefined, etc.\r\n        if (oldFiber === null) {\r\n          oldFiber = nextOldFiber;\r\n        }\r\n        break;\r\n      }\r\n      if (shouldTrackSideEffects) {\r\n        if (oldFiber && newFiber.alternate === null) {\r\n          // We matched the slot, but we didn't reuse the existing fiber, so we\r\n          // need to delete the existing child.\r\n          deleteChild(returnFiber, oldFiber);\r\n        }\r\n      }\r\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\r\n      if (previousNewFiber === null) {\r\n        // TODO: Move out of the loop. This only happens for the first run.\r\n        resultingFirstChild = newFiber;\r\n      } else {\r\n        // TODO: Defer siblings if we're not at the right index for this slot.\r\n        // I.e. if we had null values before, then we want to defer this\r\n        // for each null value. However, we also don't want to call updateSlot\r\n        // with the previous one.\r\n        previousNewFiber.sibling = newFiber;\r\n      }\r\n      previousNewFiber = newFiber;\r\n      oldFiber = nextOldFiber;\r\n    }\r\n\r\n    if (newIdx === newChildren.length) {\r\n      // We've reached the end of the new children. We can delete the rest.\r\n      deleteRemainingChildren(returnFiber, oldFiber);\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    if (oldFiber === null) {\r\n      // If we don't have any more existing children we can choose a fast path\r\n      // since the rest will all be insertions.\r\n      for (; newIdx < newChildren.length; newIdx++) {\r\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);\r\n        if (!_newFiber) {\r\n          continue;\r\n        }\r\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\r\n        if (previousNewFiber === null) {\r\n          // TODO: Move out of the loop. This only happens for the first run.\r\n          resultingFirstChild = _newFiber;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber;\r\n        }\r\n        previousNewFiber = _newFiber;\r\n      }\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    // Add all children to a key map for quick lookups.\r\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\r\n\r\n    // Keep scanning and use the map to restore deleted items as moves.\r\n    for (; newIdx < newChildren.length; newIdx++) {\r\n      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);\r\n      if (_newFiber2) {\r\n        if (shouldTrackSideEffects) {\r\n          if (_newFiber2.alternate !== null) {\r\n            // The new fiber is a work in progress, but if there exists a\r\n            // current, that means that we reused the fiber. We need to delete\r\n            // it from the child list so that we don't add it to the deletion\r\n            // list.\r\n            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\r\n          }\r\n        }\r\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\r\n        if (previousNewFiber === null) {\r\n          resultingFirstChild = _newFiber2;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber2;\r\n        }\r\n        previousNewFiber = _newFiber2;\r\n      }\r\n    }\r\n\r\n    if (shouldTrackSideEffects) {\r\n      // Any existing children that weren't consumed above were deleted. We need\r\n      // to add them to the deletion list.\r\n      existingChildren.forEach(function (child) {\r\n        return deleteChild(returnFiber, child);\r\n      });\r\n    }\r\n\r\n    return resultingFirstChild;\r\n  }\r\n\r\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {\r\n    // This is the same implementation as reconcileChildrenArray(),\r\n    // but using the iterator instead.\r\n\r\n    var iteratorFn = getIteratorFn(newChildrenIterable);\r\n    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n    {\r\n      // We don't support rendering Generators because it's a mutation.\r\n      // See https://github.com/facebook/react/issues/12995\r\n      if (typeof Symbol === 'function' &&\r\n      // $FlowFixMe Flow doesn't know about toStringTag\r\n      newChildrenIterable[Symbol.toStringTag] === 'Generator') {\r\n        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;\r\n        didWarnAboutGenerators = true;\r\n      }\r\n\r\n      // Warn about using Maps as children\r\n      if (newChildrenIterable.entries === iteratorFn) {\r\n        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\r\n        didWarnAboutMaps = true;\r\n      }\r\n\r\n      // First, validate keys.\r\n      // We'll get a different iterator later for the main pass.\r\n      var _newChildren = iteratorFn.call(newChildrenIterable);\r\n      if (_newChildren) {\r\n        var knownKeys = null;\r\n        var _step = _newChildren.next();\r\n        for (; !_step.done; _step = _newChildren.next()) {\r\n          var child = _step.value;\r\n          knownKeys = warnOnInvalidKey(child, knownKeys);\r\n        }\r\n      }\r\n    }\r\n\r\n    var newChildren = iteratorFn.call(newChildrenIterable);\r\n    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;\r\n\r\n    var resultingFirstChild = null;\r\n    var previousNewFiber = null;\r\n\r\n    var oldFiber = currentFirstChild;\r\n    var lastPlacedIndex = 0;\r\n    var newIdx = 0;\r\n    var nextOldFiber = null;\r\n\r\n    var step = newChildren.next();\r\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\r\n      if (oldFiber.index > newIdx) {\r\n        nextOldFiber = oldFiber;\r\n        oldFiber = null;\r\n      } else {\r\n        nextOldFiber = oldFiber.sibling;\r\n      }\r\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);\r\n      if (newFiber === null) {\r\n        // TODO: This breaks on empty slots like null children. That's\r\n        // unfortunate because it triggers the slow path all the time. We need\r\n        // a better way to communicate whether this was a miss or null,\r\n        // boolean, undefined, etc.\r\n        if (!oldFiber) {\r\n          oldFiber = nextOldFiber;\r\n        }\r\n        break;\r\n      }\r\n      if (shouldTrackSideEffects) {\r\n        if (oldFiber && newFiber.alternate === null) {\r\n          // We matched the slot, but we didn't reuse the existing fiber, so we\r\n          // need to delete the existing child.\r\n          deleteChild(returnFiber, oldFiber);\r\n        }\r\n      }\r\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\r\n      if (previousNewFiber === null) {\r\n        // TODO: Move out of the loop. This only happens for the first run.\r\n        resultingFirstChild = newFiber;\r\n      } else {\r\n        // TODO: Defer siblings if we're not at the right index for this slot.\r\n        // I.e. if we had null values before, then we want to defer this\r\n        // for each null value. However, we also don't want to call updateSlot\r\n        // with the previous one.\r\n        previousNewFiber.sibling = newFiber;\r\n      }\r\n      previousNewFiber = newFiber;\r\n      oldFiber = nextOldFiber;\r\n    }\r\n\r\n    if (step.done) {\r\n      // We've reached the end of the new children. We can delete the rest.\r\n      deleteRemainingChildren(returnFiber, oldFiber);\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    if (oldFiber === null) {\r\n      // If we don't have any more existing children we can choose a fast path\r\n      // since the rest will all be insertions.\r\n      for (; !step.done; newIdx++, step = newChildren.next()) {\r\n        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);\r\n        if (_newFiber3 === null) {\r\n          continue;\r\n        }\r\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\r\n        if (previousNewFiber === null) {\r\n          // TODO: Move out of the loop. This only happens for the first run.\r\n          resultingFirstChild = _newFiber3;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber3;\r\n        }\r\n        previousNewFiber = _newFiber3;\r\n      }\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    // Add all children to a key map for quick lookups.\r\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\r\n\r\n    // Keep scanning and use the map to restore deleted items as moves.\r\n    for (; !step.done; newIdx++, step = newChildren.next()) {\r\n      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);\r\n      if (_newFiber4 !== null) {\r\n        if (shouldTrackSideEffects) {\r\n          if (_newFiber4.alternate !== null) {\r\n            // The new fiber is a work in progress, but if there exists a\r\n            // current, that means that we reused the fiber. We need to delete\r\n            // it from the child list so that we don't add it to the deletion\r\n            // list.\r\n            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\r\n          }\r\n        }\r\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\r\n        if (previousNewFiber === null) {\r\n          resultingFirstChild = _newFiber4;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber4;\r\n        }\r\n        previousNewFiber = _newFiber4;\r\n      }\r\n    }\r\n\r\n    if (shouldTrackSideEffects) {\r\n      // Any existing children that weren't consumed above were deleted. We need\r\n      // to add them to the deletion list.\r\n      existingChildren.forEach(function (child) {\r\n        return deleteChild(returnFiber, child);\r\n      });\r\n    }\r\n\r\n    return resultingFirstChild;\r\n  }\r\n\r\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {\r\n    // There's no need to check for keys on text nodes since we don't have a\r\n    // way to define them.\r\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\r\n      // We already have an existing node so let's just update it and delete\r\n      // the rest.\r\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\r\n      var existing = useFiber(currentFirstChild, textContent, expirationTime);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n    // The existing first child is not a text node so we need to create one\r\n    // and delete the existing ones.\r\n    deleteRemainingChildren(returnFiber, currentFirstChild);\r\n    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);\r\n    created.return = returnFiber;\r\n    return created;\r\n  }\r\n\r\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {\r\n    var key = element.key;\r\n    var child = currentFirstChild;\r\n    while (child !== null) {\r\n      // TODO: If key === null and child.key === null, then this only applies to\r\n      // the first item in the list.\r\n      if (child.key === key) {\r\n        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {\r\n          deleteRemainingChildren(returnFiber, child.sibling);\r\n          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);\r\n          existing.ref = coerceRef(returnFiber, child, element);\r\n          existing.return = returnFiber;\r\n          {\r\n            existing._debugSource = element._source;\r\n            existing._debugOwner = element._owner;\r\n          }\r\n          return existing;\r\n        } else {\r\n          deleteRemainingChildren(returnFiber, child);\r\n          break;\r\n        }\r\n      } else {\r\n        deleteChild(returnFiber, child);\r\n      }\r\n      child = child.sibling;\r\n    }\r\n\r\n    if (element.type === REACT_FRAGMENT_TYPE) {\r\n      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);\r\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\r\n      _created4.return = returnFiber;\r\n      return _created4;\r\n    }\r\n  }\r\n\r\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {\r\n    var key = portal.key;\r\n    var child = currentFirstChild;\r\n    while (child !== null) {\r\n      // TODO: If key === null and child.key === null, then this only applies to\r\n      // the first item in the list.\r\n      if (child.key === key) {\r\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\r\n          deleteRemainingChildren(returnFiber, child.sibling);\r\n          var existing = useFiber(child, portal.children || [], expirationTime);\r\n          existing.return = returnFiber;\r\n          return existing;\r\n        } else {\r\n          deleteRemainingChildren(returnFiber, child);\r\n          break;\r\n        }\r\n      } else {\r\n        deleteChild(returnFiber, child);\r\n      }\r\n      child = child.sibling;\r\n    }\r\n\r\n    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);\r\n    created.return = returnFiber;\r\n    return created;\r\n  }\r\n\r\n  // This API will tag the children with the side-effect of the reconciliation\r\n  // itself. They will be added to the side-effect list as we pass through the\r\n  // children and the parent.\r\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {\r\n    // This function is not recursive.\r\n    // If the top level item is an array, we treat it as a set of children,\r\n    // not as a fragment. Nested arrays on the other hand will be treated as\r\n    // fragment nodes. Recursion happens at the normal flow.\r\n\r\n    // Handle top level unkeyed fragments as if they were arrays.\r\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\r\n    // We treat the ambiguous cases above the same.\r\n    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\r\n    if (isUnkeyedTopLevelFragment) {\r\n      newChild = newChild.props.children;\r\n    }\r\n\r\n    // Handle object types\r\n    var isObject = typeof newChild === 'object' && newChild !== null;\r\n\r\n    if (isObject) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));\r\n        case REACT_PORTAL_TYPE:\r\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));\r\n      }\r\n    }\r\n\r\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\r\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));\r\n    }\r\n\r\n    if (isArray(newChild)) {\r\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);\r\n    }\r\n\r\n    if (getIteratorFn(newChild)) {\r\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);\r\n    }\r\n\r\n    if (isObject) {\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === 'function') {\r\n        warnOnFunctionType();\r\n      }\r\n    }\r\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\r\n      // If the new child is undefined, and the return fiber is a composite\r\n      // component, throw an error. If Fiber return types are disabled,\r\n      // we already threw above.\r\n      switch (returnFiber.tag) {\r\n        case ClassComponent:\r\n          {\r\n            {\r\n              var instance = returnFiber.stateNode;\r\n              if (instance.render._isMockFunction) {\r\n                // We allow auto-mocks to proceed as if they're returning null.\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        // Intentionally fall through to the next case, which handles both\r\n        // functions and classes\r\n        // eslint-disable-next-lined no-fallthrough\r\n        case FunctionComponent:\r\n          {\r\n            var Component = returnFiber.type;\r\n            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\r\n          }\r\n      }\r\n    }\r\n\r\n    // Remaining cases are all treated as empty.\r\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\r\n  }\r\n\r\n  return reconcileChildFibers;\r\n}\r\n\r\nvar reconcileChildFibers = ChildReconciler(true);\r\nvar mountChildFibers = ChildReconciler(false);\r\n\r\nfunction cloneChildFibers(current$$1, workInProgress) {\r\n  !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;\r\n\r\n  if (workInProgress.child === null) {\r\n    return;\r\n  }\r\n\r\n  var currentChild = workInProgress.child;\r\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);\r\n  workInProgress.child = newChild;\r\n\r\n  newChild.return = workInProgress;\r\n  while (currentChild.sibling !== null) {\r\n    currentChild = currentChild.sibling;\r\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);\r\n    newChild.return = workInProgress;\r\n  }\r\n  newChild.sibling = null;\r\n}\r\n\r\nvar NO_CONTEXT = {};\r\n\r\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\r\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\r\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\r\n\r\nfunction requiredContext(c) {\r\n  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  return c;\r\n}\r\n\r\nfunction getRootHostContainer() {\r\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\r\n  return rootInstance;\r\n}\r\n\r\nfunction pushHostContainer(fiber, nextRootInstance) {\r\n  // Push current root instance onto the stack;\r\n  // This allows us to reset root when portals are popped.\r\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\r\n  // Track the context and the Fiber that provided it.\r\n  // This enables us to pop only Fibers that provide unique contexts.\r\n  push(contextFiberStackCursor, fiber, fiber);\r\n\r\n  // Finally, we need to push the host context to the stack.\r\n  // However, we can't just call getRootHostContext() and push it because\r\n  // we'd have a different number of entries on the stack depending on\r\n  // whether getRootHostContext() throws somewhere in renderer code or not.\r\n  // So we push an empty value first. This lets us safely unwind on errors.\r\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\r\n  var nextRootContext = getRootHostContext(nextRootInstance);\r\n  // Now that we know this function doesn't throw, replace it.\r\n  pop(contextStackCursor$1, fiber);\r\n  push(contextStackCursor$1, nextRootContext, fiber);\r\n}\r\n\r\nfunction popHostContainer(fiber) {\r\n  pop(contextStackCursor$1, fiber);\r\n  pop(contextFiberStackCursor, fiber);\r\n  pop(rootInstanceStackCursor, fiber);\r\n}\r\n\r\nfunction getHostContext() {\r\n  var context = requiredContext(contextStackCursor$1.current);\r\n  return context;\r\n}\r\n\r\nfunction pushHostContext(fiber) {\r\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\r\n  var context = requiredContext(contextStackCursor$1.current);\r\n  var nextContext = getChildHostContext(context, fiber.type, rootInstance);\r\n\r\n  // Don't push this Fiber's context unless it's unique.\r\n  if (context === nextContext) {\r\n    return;\r\n  }\r\n\r\n  // Track the context and the Fiber that provided it.\r\n  // This enables us to pop only Fibers that provide unique contexts.\r\n  push(contextFiberStackCursor, fiber, fiber);\r\n  push(contextStackCursor$1, nextContext, fiber);\r\n}\r\n\r\nfunction popHostContext(fiber) {\r\n  // Do not pop unless this Fiber provided the current context.\r\n  // pushHostContext() only pushes Fibers that provide unique contexts.\r\n  if (contextFiberStackCursor.current !== fiber) {\r\n    return;\r\n  }\r\n\r\n  pop(contextStackCursor$1, fiber);\r\n  pop(contextFiberStackCursor, fiber);\r\n}\r\n\r\nvar NoEffect$1 = /*             */0;\r\nvar UnmountSnapshot = /*      */2;\r\nvar UnmountMutation = /*      */4;\r\nvar MountMutation = /*        */8;\r\nvar UnmountLayout = /*        */16;\r\nvar MountLayout = /*          */32;\r\nvar MountPassive = /*         */64;\r\nvar UnmountPassive = /*       */128;\r\n\r\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\r\n\r\n\r\nvar didWarnAboutMismatchedHooksForComponent = void 0;\r\n{\r\n  didWarnAboutMismatchedHooksForComponent = new Set();\r\n}\r\n\r\n// These are set right before calling the component.\r\nvar renderExpirationTime = NoWork;\r\n// The work-in-progress fiber. I've named it differently to distinguish it from\r\n// the work-in-progress hook.\r\nvar currentlyRenderingFiber$1 = null;\r\n\r\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\r\n// current hook list is the list that belongs to the current fiber. The\r\n// work-in-progress hook list is a new list that will be added to the\r\n// work-in-progress fiber.\r\nvar currentHook = null;\r\nvar nextCurrentHook = null;\r\nvar firstWorkInProgressHook = null;\r\nvar workInProgressHook = null;\r\nvar nextWorkInProgressHook = null;\r\n\r\nvar remainingExpirationTime = NoWork;\r\nvar componentUpdateQueue = null;\r\nvar sideEffectTag = 0;\r\n\r\n// Updates scheduled during render will trigger an immediate re-render at the\r\n// end of the current pass. We can't store these updates on the normal queue,\r\n// because if the work is aborted, they should be discarded. Because this is\r\n// a relatively rare case, we also don't want to add an additional field to\r\n// either the hook or queue object types. So we store them in a lazily create\r\n// map of queue -> render-phase updates, which are discarded once the component\r\n// completes without re-rendering.\r\n\r\n// Whether an update was scheduled during the currently executing render pass.\r\nvar didScheduleRenderPhaseUpdate = false;\r\n// Lazily created map of render-phase updates\r\nvar renderPhaseUpdates = null;\r\n// Counter to prevent infinite loops.\r\nvar numberOfReRenders = 0;\r\nvar RE_RENDER_LIMIT = 25;\r\n\r\n// In DEV, this is the name of the currently executing primitive hook\r\nvar currentHookNameInDev = null;\r\n\r\n// In DEV, this list ensures that hooks are called in the same order between renders.\r\n// The list stores the order of hooks used during the initial render (mount).\r\n// Subsequent renders (updates) reference this list.\r\nvar hookTypesDev = null;\r\nvar hookTypesUpdateIndexDev = -1;\r\n\r\nfunction mountHookTypesDev() {\r\n  {\r\n    var hookName = currentHookNameInDev;\r\n\r\n    if (hookTypesDev === null) {\r\n      hookTypesDev = [hookName];\r\n    } else {\r\n      hookTypesDev.push(hookName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateHookTypesDev() {\r\n  {\r\n    var hookName = currentHookNameInDev;\r\n\r\n    if (hookTypesDev !== null) {\r\n      hookTypesUpdateIndexDev++;\r\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\r\n        warnOnHookMismatchInDev(hookName);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnOnHookMismatchInDev(currentHookName) {\r\n  {\r\n    var componentName = getComponentName(currentlyRenderingFiber$1.type);\r\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\r\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\r\n\r\n      if (hookTypesDev !== null) {\r\n        var table = '';\r\n\r\n        var secondColumnStart = 30;\r\n\r\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\r\n          var oldHookName = hookTypesDev[i];\r\n          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\r\n\r\n          var row = i + 1 + '. ' + oldHookName;\r\n\r\n          // Extra space so second column lines up\r\n          // lol @ IE not supporting String#repeat\r\n          while (row.length < secondColumnStart) {\r\n            row += ' ';\r\n          }\r\n\r\n          row += newHookName + '\\n';\r\n\r\n          table += row;\r\n        }\r\n\r\n        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\\n\\n' + '   Previous render            Next render\\n' + '   ------------------------------------------------------\\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n', componentName, table);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction throwInvalidHookError() {\r\n  invariant(false, 'Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)');\r\n}\r\n\r\nfunction areHookInputsEqual(nextDeps, prevDeps) {\r\n  if (prevDeps === null) {\r\n    {\r\n      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  {\r\n    // Don't bother comparing lengths in prod because these arrays should be\r\n    // passed inline.\r\n    if (nextDeps.length !== prevDeps.length) {\r\n      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, '[' + nextDeps.join(', ') + ']', '[' + prevDeps.join(', ') + ']');\r\n    }\r\n  }\r\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\r\n    if (is(nextDeps[i], prevDeps[i])) {\r\n      continue;\r\n    }\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {\r\n  renderExpirationTime = nextRenderExpirationTime;\r\n  currentlyRenderingFiber$1 = workInProgress;\r\n  nextCurrentHook = current !== null ? current.memoizedState : null;\r\n\r\n  {\r\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\r\n    hookTypesUpdateIndexDev = -1;\r\n  }\r\n\r\n  // The following should have already been reset\r\n  // currentHook = null;\r\n  // workInProgressHook = null;\r\n\r\n  // remainingExpirationTime = NoWork;\r\n  // componentUpdateQueue = null;\r\n\r\n  // didScheduleRenderPhaseUpdate = false;\r\n  // renderPhaseUpdates = null;\r\n  // numberOfReRenders = 0;\r\n  // sideEffectTag = 0;\r\n\r\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\r\n  // Currently we will identify the update render as a mount because nextCurrentHook === null.\r\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\r\n\r\n  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.\r\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\r\n  // so nextCurrentHook would be null during updates and mounts.\r\n  {\r\n    if (nextCurrentHook !== null) {\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\r\n    } else if (hookTypesDev !== null) {\r\n      // This dispatcher handles an edge case where a component is updating,\r\n      // but no stateful hooks have been used.\r\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\r\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\r\n      // This dispatcher does that.\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\r\n    } else {\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\r\n    }\r\n  }\r\n\r\n  var children = Component(props, refOrContext);\r\n\r\n  if (didScheduleRenderPhaseUpdate) {\r\n    do {\r\n      didScheduleRenderPhaseUpdate = false;\r\n      numberOfReRenders += 1;\r\n\r\n      // Start over from the beginning of the list\r\n      nextCurrentHook = current !== null ? current.memoizedState : null;\r\n      nextWorkInProgressHook = firstWorkInProgressHook;\r\n\r\n      currentHook = null;\r\n      workInProgressHook = null;\r\n      componentUpdateQueue = null;\r\n\r\n      {\r\n        // Also validate hook order for cascading updates.\r\n        hookTypesUpdateIndexDev = -1;\r\n      }\r\n\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\r\n\r\n      children = Component(props, refOrContext);\r\n    } while (didScheduleRenderPhaseUpdate);\r\n\r\n    renderPhaseUpdates = null;\r\n    numberOfReRenders = 0;\r\n  }\r\n\r\n  // We can assume the previous dispatcher is always this one, since we set it\r\n  // at the beginning of the render phase and there's no re-entrancy.\r\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\r\n\r\n  var renderedWork = currentlyRenderingFiber$1;\r\n\r\n  renderedWork.memoizedState = firstWorkInProgressHook;\r\n  renderedWork.expirationTime = remainingExpirationTime;\r\n  renderedWork.updateQueue = componentUpdateQueue;\r\n  renderedWork.effectTag |= sideEffectTag;\r\n\r\n  {\r\n    renderedWork._debugHookTypes = hookTypesDev;\r\n  }\r\n\r\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\r\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\r\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\r\n\r\n  renderExpirationTime = NoWork;\r\n  currentlyRenderingFiber$1 = null;\r\n\r\n  currentHook = null;\r\n  nextCurrentHook = null;\r\n  firstWorkInProgressHook = null;\r\n  workInProgressHook = null;\r\n  nextWorkInProgressHook = null;\r\n\r\n  {\r\n    currentHookNameInDev = null;\r\n    hookTypesDev = null;\r\n    hookTypesUpdateIndexDev = -1;\r\n  }\r\n\r\n  remainingExpirationTime = NoWork;\r\n  componentUpdateQueue = null;\r\n  sideEffectTag = 0;\r\n\r\n  // These were reset above\r\n  // didScheduleRenderPhaseUpdate = false;\r\n  // renderPhaseUpdates = null;\r\n  // numberOfReRenders = 0;\r\n\r\n  !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;\r\n\r\n  return children;\r\n}\r\n\r\nfunction bailoutHooks(current, workInProgress, expirationTime) {\r\n  workInProgress.updateQueue = current.updateQueue;\r\n  workInProgress.effectTag &= ~(Passive | Update);\r\n  if (current.expirationTime <= expirationTime) {\r\n    current.expirationTime = NoWork;\r\n  }\r\n}\r\n\r\nfunction resetHooks() {\r\n  // We can assume the previous dispatcher is always this one, since we set it\r\n  // at the beginning of the render phase and there's no re-entrancy.\r\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\r\n\r\n  // This is used to reset the state of this module when a component throws.\r\n  // It's also called inside mountIndeterminateComponent if we determine the\r\n  // component is a module-style component.\r\n  renderExpirationTime = NoWork;\r\n  currentlyRenderingFiber$1 = null;\r\n\r\n  currentHook = null;\r\n  nextCurrentHook = null;\r\n  firstWorkInProgressHook = null;\r\n  workInProgressHook = null;\r\n  nextWorkInProgressHook = null;\r\n\r\n  {\r\n    hookTypesDev = null;\r\n    hookTypesUpdateIndexDev = -1;\r\n\r\n    currentHookNameInDev = null;\r\n  }\r\n\r\n  remainingExpirationTime = NoWork;\r\n  componentUpdateQueue = null;\r\n  sideEffectTag = 0;\r\n\r\n  didScheduleRenderPhaseUpdate = false;\r\n  renderPhaseUpdates = null;\r\n  numberOfReRenders = 0;\r\n}\r\n\r\nfunction mountWorkInProgressHook() {\r\n  var hook = {\r\n    memoizedState: null,\r\n\r\n    baseState: null,\r\n    queue: null,\r\n    baseUpdate: null,\r\n\r\n    next: null\r\n  };\r\n\r\n  if (workInProgressHook === null) {\r\n    // This is the first hook in the list\r\n    firstWorkInProgressHook = workInProgressHook = hook;\r\n  } else {\r\n    // Append to the end of the list\r\n    workInProgressHook = workInProgressHook.next = hook;\r\n  }\r\n  return workInProgressHook;\r\n}\r\n\r\nfunction updateWorkInProgressHook() {\r\n  // This function is used both for updates and for re-renders triggered by a\r\n  // render phase update. It assumes there is either a current hook we can\r\n  // clone, or a work-in-progress hook from a previous render pass that we can\r\n  // use as a base. When we reach the end of the base list, we must switch to\r\n  // the dispatcher used for mounts.\r\n  if (nextWorkInProgressHook !== null) {\r\n    // There's already a work-in-progress. Reuse it.\r\n    workInProgressHook = nextWorkInProgressHook;\r\n    nextWorkInProgressHook = workInProgressHook.next;\r\n\r\n    currentHook = nextCurrentHook;\r\n    nextCurrentHook = currentHook !== null ? currentHook.next : null;\r\n  } else {\r\n    // Clone from the current hook.\r\n    !(nextCurrentHook !== null) ? invariant(false, 'Rendered more hooks than during the previous render.') : void 0;\r\n    currentHook = nextCurrentHook;\r\n\r\n    var newHook = {\r\n      memoizedState: currentHook.memoizedState,\r\n\r\n      baseState: currentHook.baseState,\r\n      queue: currentHook.queue,\r\n      baseUpdate: currentHook.baseUpdate,\r\n\r\n      next: null\r\n    };\r\n\r\n    if (workInProgressHook === null) {\r\n      // This is the first hook in the list.\r\n      workInProgressHook = firstWorkInProgressHook = newHook;\r\n    } else {\r\n      // Append to the end of the list.\r\n      workInProgressHook = workInProgressHook.next = newHook;\r\n    }\r\n    nextCurrentHook = currentHook.next;\r\n  }\r\n  return workInProgressHook;\r\n}\r\n\r\nfunction createFunctionComponentUpdateQueue() {\r\n  return {\r\n    lastEffect: null\r\n  };\r\n}\r\n\r\nfunction basicStateReducer(state, action) {\r\n  return typeof action === 'function' ? action(state) : action;\r\n}\r\n\r\nfunction mountReducer(reducer, initialArg, init) {\r\n  var hook = mountWorkInProgressHook();\r\n  var initialState = void 0;\r\n  if (init !== undefined) {\r\n    initialState = init(initialArg);\r\n  } else {\r\n    initialState = initialArg;\r\n  }\r\n  hook.memoizedState = hook.baseState = initialState;\r\n  var queue = hook.queue = {\r\n    last: null,\r\n    dispatch: null,\r\n    eagerReducer: reducer,\r\n    eagerState: initialState\r\n  };\r\n  var dispatch = queue.dispatch = dispatchAction.bind(null,\r\n  // Flow doesn't know this is non-null, but we do.\r\n  currentlyRenderingFiber$1, queue);\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction updateReducer(reducer, initialArg, init) {\r\n  var hook = updateWorkInProgressHook();\r\n  var queue = hook.queue;\r\n  !(queue !== null) ? invariant(false, 'Should have a queue. This is likely a bug in React. Please file an issue.') : void 0;\r\n\r\n  if (numberOfReRenders > 0) {\r\n    // This is a re-render. Apply the new render phase updates to the previous\r\n    var _dispatch = queue.dispatch;\r\n    if (renderPhaseUpdates !== null) {\r\n      // Render phase updates are stored in a map of queue -> linked list\r\n      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\r\n      if (firstRenderPhaseUpdate !== undefined) {\r\n        renderPhaseUpdates.delete(queue);\r\n        var newState = hook.memoizedState;\r\n        var update = firstRenderPhaseUpdate;\r\n        do {\r\n          // Process this render phase update. We don't have to check the\r\n          // priority because it will always be the same as the current\r\n          // render's.\r\n          var _action = update.action;\r\n          newState = reducer(newState, _action);\r\n          update = update.next;\r\n        } while (update !== null);\r\n\r\n        // Mark that the fiber performed work, but only if the new state is\r\n        // different from the current state.\r\n        if (!is(newState, hook.memoizedState)) {\r\n          markWorkInProgressReceivedUpdate();\r\n        }\r\n\r\n        hook.memoizedState = newState;\r\n        // Don't persist the state accumlated from the render phase updates to\r\n        // the base state unless the queue is empty.\r\n        // TODO: Not sure if this is the desired semantics, but it's what we\r\n        // do for gDSFP. I can't remember why.\r\n        if (hook.baseUpdate === queue.last) {\r\n          hook.baseState = newState;\r\n        }\r\n\r\n        queue.eagerReducer = reducer;\r\n        queue.eagerState = newState;\r\n\r\n        return [newState, _dispatch];\r\n      }\r\n    }\r\n    return [hook.memoizedState, _dispatch];\r\n  }\r\n\r\n  // The last update in the entire queue\r\n  var last = queue.last;\r\n  // The last update that is part of the base state.\r\n  var baseUpdate = hook.baseUpdate;\r\n  var baseState = hook.baseState;\r\n\r\n  // Find the first unprocessed update.\r\n  var first = void 0;\r\n  if (baseUpdate !== null) {\r\n    if (last !== null) {\r\n      // For the first update, the queue is a circular linked list where\r\n      // `queue.last.next = queue.first`. Once the first update commits, and\r\n      // the `baseUpdate` is no longer empty, we can unravel the list.\r\n      last.next = null;\r\n    }\r\n    first = baseUpdate.next;\r\n  } else {\r\n    first = last !== null ? last.next : null;\r\n  }\r\n  if (first !== null) {\r\n    var _newState = baseState;\r\n    var newBaseState = null;\r\n    var newBaseUpdate = null;\r\n    var prevUpdate = baseUpdate;\r\n    var _update = first;\r\n    var didSkip = false;\r\n    do {\r\n      var updateExpirationTime = _update.expirationTime;\r\n      if (updateExpirationTime < renderExpirationTime) {\r\n        // Priority is insufficient. Skip this update. If this is the first\r\n        // skipped update, the previous update/state is the new base\r\n        // update/state.\r\n        if (!didSkip) {\r\n          didSkip = true;\r\n          newBaseUpdate = prevUpdate;\r\n          newBaseState = _newState;\r\n        }\r\n        // Update the remaining priority in the queue.\r\n        if (updateExpirationTime > remainingExpirationTime) {\r\n          remainingExpirationTime = updateExpirationTime;\r\n        }\r\n      } else {\r\n        // Process this update.\r\n        if (_update.eagerReducer === reducer) {\r\n          // If this update was processed eagerly, and its reducer matches the\r\n          // current reducer, we can use the eagerly computed state.\r\n          _newState = _update.eagerState;\r\n        } else {\r\n          var _action2 = _update.action;\r\n          _newState = reducer(_newState, _action2);\r\n        }\r\n      }\r\n      prevUpdate = _update;\r\n      _update = _update.next;\r\n    } while (_update !== null && _update !== first);\r\n\r\n    if (!didSkip) {\r\n      newBaseUpdate = prevUpdate;\r\n      newBaseState = _newState;\r\n    }\r\n\r\n    // Mark that the fiber performed work, but only if the new state is\r\n    // different from the current state.\r\n    if (!is(_newState, hook.memoizedState)) {\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = _newState;\r\n    hook.baseUpdate = newBaseUpdate;\r\n    hook.baseState = newBaseState;\r\n\r\n    queue.eagerReducer = reducer;\r\n    queue.eagerState = _newState;\r\n  }\r\n\r\n  var dispatch = queue.dispatch;\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction mountState(initialState) {\r\n  var hook = mountWorkInProgressHook();\r\n  if (typeof initialState === 'function') {\r\n    initialState = initialState();\r\n  }\r\n  hook.memoizedState = hook.baseState = initialState;\r\n  var queue = hook.queue = {\r\n    last: null,\r\n    dispatch: null,\r\n    eagerReducer: basicStateReducer,\r\n    eagerState: initialState\r\n  };\r\n  var dispatch = queue.dispatch = dispatchAction.bind(null,\r\n  // Flow doesn't know this is non-null, but we do.\r\n  currentlyRenderingFiber$1, queue);\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction updateState(initialState) {\r\n  return updateReducer(basicStateReducer, initialState);\r\n}\r\n\r\nfunction pushEffect(tag, create, destroy, deps) {\r\n  var effect = {\r\n    tag: tag,\r\n    create: create,\r\n    destroy: destroy,\r\n    deps: deps,\r\n    // Circular\r\n    next: null\r\n  };\r\n  if (componentUpdateQueue === null) {\r\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\r\n    componentUpdateQueue.lastEffect = effect.next = effect;\r\n  } else {\r\n    var _lastEffect = componentUpdateQueue.lastEffect;\r\n    if (_lastEffect === null) {\r\n      componentUpdateQueue.lastEffect = effect.next = effect;\r\n    } else {\r\n      var firstEffect = _lastEffect.next;\r\n      _lastEffect.next = effect;\r\n      effect.next = firstEffect;\r\n      componentUpdateQueue.lastEffect = effect;\r\n    }\r\n  }\r\n  return effect;\r\n}\r\n\r\nfunction mountRef(initialValue) {\r\n  var hook = mountWorkInProgressHook();\r\n  var ref = { current: initialValue };\r\n  {\r\n    Object.seal(ref);\r\n  }\r\n  hook.memoizedState = ref;\r\n  return ref;\r\n}\r\n\r\nfunction updateRef(initialValue) {\r\n  var hook = updateWorkInProgressHook();\r\n  return hook.memoizedState;\r\n}\r\n\r\nfunction mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  sideEffectTag |= fiberEffectTag;\r\n  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);\r\n}\r\n\r\nfunction updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var destroy = undefined;\r\n\r\n  if (currentHook !== null) {\r\n    var prevEffect = currentHook.memoizedState;\r\n    destroy = prevEffect.destroy;\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevEffect.deps;\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        pushEffect(NoEffect$1, create, destroy, nextDeps);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  sideEffectTag |= fiberEffectTag;\r\n  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);\r\n}\r\n\r\nfunction mountEffect(create, deps) {\r\n  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);\r\n}\r\n\r\nfunction updateEffect(create, deps) {\r\n  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);\r\n}\r\n\r\nfunction mountLayoutEffect(create, deps) {\r\n  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);\r\n}\r\n\r\nfunction updateLayoutEffect(create, deps) {\r\n  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);\r\n}\r\n\r\nfunction imperativeHandleEffect(create, ref) {\r\n  if (typeof ref === 'function') {\r\n    var refCallback = ref;\r\n    var _inst = create();\r\n    refCallback(_inst);\r\n    return function () {\r\n      refCallback(null);\r\n    };\r\n  } else if (ref !== null && ref !== undefined) {\r\n    var refObject = ref;\r\n    {\r\n      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;\r\n    }\r\n    var _inst2 = create();\r\n    refObject.current = _inst2;\r\n    return function () {\r\n      refObject.current = null;\r\n    };\r\n  }\r\n}\r\n\r\nfunction mountImperativeHandle(ref, create, deps) {\r\n  {\r\n    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;\r\n  }\r\n\r\n  // TODO: If deps are provided, should we skip comparing the ref itself?\r\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\r\n\r\n  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\r\n}\r\n\r\nfunction updateImperativeHandle(ref, create, deps) {\r\n  {\r\n    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;\r\n  }\r\n\r\n  // TODO: If deps are provided, should we skip comparing the ref itself?\r\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\r\n\r\n  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\r\n}\r\n\r\nfunction mountDebugValue(value, formatterFn) {\r\n  // This hook is normally a no-op.\r\n  // The react-debug-hooks package injects its own implementation\r\n  // so that e.g. DevTools can display custom hook values.\r\n}\r\n\r\nvar updateDebugValue = mountDebugValue;\r\n\r\nfunction mountCallback(callback, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  hook.memoizedState = [callback, nextDeps];\r\n  return callback;\r\n}\r\n\r\nfunction updateCallback(callback, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var prevState = hook.memoizedState;\r\n  if (prevState !== null) {\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevState[1];\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        return prevState[0];\r\n      }\r\n    }\r\n  }\r\n  hook.memoizedState = [callback, nextDeps];\r\n  return callback;\r\n}\r\n\r\nfunction mountMemo(nextCreate, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var nextValue = nextCreate();\r\n  hook.memoizedState = [nextValue, nextDeps];\r\n  return nextValue;\r\n}\r\n\r\nfunction updateMemo(nextCreate, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var prevState = hook.memoizedState;\r\n  if (prevState !== null) {\r\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevState[1];\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        return prevState[0];\r\n      }\r\n    }\r\n  }\r\n  var nextValue = nextCreate();\r\n  hook.memoizedState = [nextValue, nextDeps];\r\n  return nextValue;\r\n}\r\n\r\n// in a test-like environment, we want to warn if dispatchAction()\r\n// is called outside of a batchedUpdates/TestUtils.act(...) call.\r\nvar shouldWarnForUnbatchedSetState = false;\r\n\r\n{\r\n  // jest isn't a 'global', it's just exposed to tests via a wrapped function\r\n  // further, this isn't a test file, so flow doesn't recognize the symbol. So...\r\n  // $FlowExpectedError - because requirements don't give a damn about your type sigs.\r\n  if ('undefined' !== typeof jest) {\r\n    shouldWarnForUnbatchedSetState = true;\r\n  }\r\n}\r\n\r\nfunction dispatchAction(fiber, queue, action) {\r\n  !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;\r\n\r\n  {\r\n    !(arguments.length <= 3) ? warning$1(false, \"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;\r\n  }\r\n\r\n  var alternate = fiber.alternate;\r\n  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {\r\n    // This is a render phase update. Stash it in a lazily-created map of\r\n    // queue -> linked list of updates. After this render pass, we'll restart\r\n    // and apply the stashed updates on top of the work-in-progress hook.\r\n    didScheduleRenderPhaseUpdate = true;\r\n    var update = {\r\n      expirationTime: renderExpirationTime,\r\n      action: action,\r\n      eagerReducer: null,\r\n      eagerState: null,\r\n      next: null\r\n    };\r\n    if (renderPhaseUpdates === null) {\r\n      renderPhaseUpdates = new Map();\r\n    }\r\n    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\r\n    if (firstRenderPhaseUpdate === undefined) {\r\n      renderPhaseUpdates.set(queue, update);\r\n    } else {\r\n      // Append the update to the end of the list.\r\n      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;\r\n      while (lastRenderPhaseUpdate.next !== null) {\r\n        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\r\n      }\r\n      lastRenderPhaseUpdate.next = update;\r\n    }\r\n  } else {\r\n    flushPassiveEffects();\r\n\r\n    var currentTime = requestCurrentTime();\r\n    var _expirationTime = computeExpirationForFiber(currentTime, fiber);\r\n\r\n    var _update2 = {\r\n      expirationTime: _expirationTime,\r\n      action: action,\r\n      eagerReducer: null,\r\n      eagerState: null,\r\n      next: null\r\n    };\r\n\r\n    // Append the update to the end of the list.\r\n    var _last = queue.last;\r\n    if (_last === null) {\r\n      // This is the first update. Create a circular list.\r\n      _update2.next = _update2;\r\n    } else {\r\n      var first = _last.next;\r\n      if (first !== null) {\r\n        // Still circular.\r\n        _update2.next = first;\r\n      }\r\n      _last.next = _update2;\r\n    }\r\n    queue.last = _update2;\r\n\r\n    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {\r\n      // The queue is currently empty, which means we can eagerly compute the\r\n      // next state before entering the render phase. If the new state is the\r\n      // same as the current state, we may be able to bail out entirely.\r\n      var _eagerReducer = queue.eagerReducer;\r\n      if (_eagerReducer !== null) {\r\n        var prevDispatcher = void 0;\r\n        {\r\n          prevDispatcher = ReactCurrentDispatcher$1.current;\r\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        }\r\n        try {\r\n          var currentState = queue.eagerState;\r\n          var _eagerState = _eagerReducer(currentState, action);\r\n          // Stash the eagerly computed state, and the reducer used to compute\r\n          // it, on the update object. If the reducer hasn't changed by the\r\n          // time we enter the render phase, then the eager state can be used\r\n          // without calling the reducer again.\r\n          _update2.eagerReducer = _eagerReducer;\r\n          _update2.eagerState = _eagerState;\r\n          if (is(_eagerState, currentState)) {\r\n            // Fast path. We can bail out without scheduling React to re-render.\r\n            // It's still possible that we'll need to rebase this update later,\r\n            // if the component re-renders for a different reason and by that\r\n            // time the reducer has changed.\r\n            return;\r\n          }\r\n        } catch (error) {\r\n          // Suppress the error. It will throw again in the render phase.\r\n        } finally {\r\n          {\r\n            ReactCurrentDispatcher$1.current = prevDispatcher;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    {\r\n      if (shouldWarnForUnbatchedSetState === true) {\r\n        warnIfNotCurrentlyBatchingInDev(fiber);\r\n      }\r\n    }\r\n    scheduleWork(fiber, _expirationTime);\r\n  }\r\n}\r\n\r\nvar ContextOnlyDispatcher = {\r\n  readContext: readContext,\r\n\r\n  useCallback: throwInvalidHookError,\r\n  useContext: throwInvalidHookError,\r\n  useEffect: throwInvalidHookError,\r\n  useImperativeHandle: throwInvalidHookError,\r\n  useLayoutEffect: throwInvalidHookError,\r\n  useMemo: throwInvalidHookError,\r\n  useReducer: throwInvalidHookError,\r\n  useRef: throwInvalidHookError,\r\n  useState: throwInvalidHookError,\r\n  useDebugValue: throwInvalidHookError\r\n};\r\n\r\nvar HooksDispatcherOnMountInDEV = null;\r\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\r\nvar HooksDispatcherOnUpdateInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\r\n\r\n{\r\n  var warnInvalidContextAccess = function () {\r\n    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\r\n  };\r\n\r\n  var warnInvalidHookAccess = function () {\r\n    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');\r\n  };\r\n\r\n  HooksDispatcherOnMountInDEV = {\r\n    readContext: function (context, observedBits) {\r\n      return readContext(context, observedBits);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      mountHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function (context, observedBits) {\r\n      currentHookNameInDev = 'useContext';\r\n      mountHookTypesDev();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      mountHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      mountHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      mountHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      mountHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      mountHookTypesDev();\r\n      return mountDebugValue(value, formatterFn);\r\n    }\r\n  };\r\n\r\n  HooksDispatcherOnMountWithHookTypesInDEV = {\r\n    readContext: function (context, observedBits) {\r\n      return readContext(context, observedBits);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      updateHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function (context, observedBits) {\r\n      currentHookNameInDev = 'useContext';\r\n      updateHookTypesDev();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      updateHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      updateHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      updateHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      updateHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      updateHookTypesDev();\r\n      return mountDebugValue(value, formatterFn);\r\n    }\r\n  };\r\n\r\n  HooksDispatcherOnUpdateInDEV = {\r\n    readContext: function (context, observedBits) {\r\n      return readContext(context, observedBits);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function (context, observedBits) {\r\n      currentHookNameInDev = 'useContext';\r\n      updateHookTypesDev();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n      try {\r\n        return updateReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      updateHookTypesDev();\r\n      return updateRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n      try {\r\n        return updateState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      updateHookTypesDev();\r\n      return updateDebugValue(value, formatterFn);\r\n    }\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnMountInDEV = {\r\n    readContext: function (context, observedBits) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function (context, observedBits) {\r\n      currentHookNameInDev = 'useContext';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountDebugValue(value, formatterFn);\r\n    }\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\r\n    readContext: function (context, observedBits) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useCallback: function (callback, deps) {\r\n      currentHookNameInDev = 'useCallback';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function (context, observedBits) {\r\n      currentHookNameInDev = 'useContext';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return readContext(context, observedBits);\r\n    },\r\n    useEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function (ref, create, deps) {\r\n      currentHookNameInDev = 'useImperativeHandle';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useLayoutEffect: function (create, deps) {\r\n      currentHookNameInDev = 'useLayoutEffect';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function (create, deps) {\r\n      currentHookNameInDev = 'useMemo';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function (reducer, initialArg, init) {\r\n      currentHookNameInDev = 'useReducer';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n      try {\r\n        return updateReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function (initialValue) {\r\n      currentHookNameInDev = 'useRef';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateRef(initialValue);\r\n    },\r\n    useState: function (initialState) {\r\n      currentHookNameInDev = 'useState';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n      try {\r\n        return updateState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function (value, formatterFn) {\r\n      currentHookNameInDev = 'useDebugValue';\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDebugValue(value, formatterFn);\r\n    }\r\n  };\r\n}\r\n\r\nvar commitTime = 0;\r\nvar profilerStartTime = -1;\r\n\r\nfunction getCommitTime() {\r\n  return commitTime;\r\n}\r\n\r\nfunction recordCommitTime() {\r\n  if (!enableProfilerTimer) {\r\n    return;\r\n  }\r\n  commitTime = scheduler.unstable_now();\r\n}\r\n\r\nfunction startProfilerTimer(fiber) {\r\n  if (!enableProfilerTimer) {\r\n    return;\r\n  }\r\n\r\n  profilerStartTime = scheduler.unstable_now();\r\n\r\n  if (fiber.actualStartTime < 0) {\r\n    fiber.actualStartTime = scheduler.unstable_now();\r\n  }\r\n}\r\n\r\nfunction stopProfilerTimerIfRunning(fiber) {\r\n  if (!enableProfilerTimer) {\r\n    return;\r\n  }\r\n  profilerStartTime = -1;\r\n}\r\n\r\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\r\n  if (!enableProfilerTimer) {\r\n    return;\r\n  }\r\n\r\n  if (profilerStartTime >= 0) {\r\n    var elapsedTime = scheduler.unstable_now() - profilerStartTime;\r\n    fiber.actualDuration += elapsedTime;\r\n    if (overrideBaseTime) {\r\n      fiber.selfBaseDuration = elapsedTime;\r\n    }\r\n    profilerStartTime = -1;\r\n  }\r\n}\r\n\r\n// The deepest Fiber on the stack involved in a hydration context.\r\n// This may have been an insertion or a hydration.\r\nvar hydrationParentFiber = null;\r\nvar nextHydratableInstance = null;\r\nvar isHydrating = false;\r\n\r\nfunction enterHydrationState(fiber) {\r\n  if (!supportsHydration) {\r\n    return false;\r\n  }\r\n\r\n  var parentInstance = fiber.stateNode.containerInfo;\r\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\r\n  hydrationParentFiber = fiber;\r\n  isHydrating = true;\r\n  return true;\r\n}\r\n\r\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(fiber) {\r\n  if (!supportsHydration) {\r\n    return false;\r\n  }\r\n\r\n  var suspenseInstance = fiber.stateNode;\r\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\r\n  popToNextHostParent(fiber);\r\n  isHydrating = true;\r\n  return true;\r\n}\r\n\r\nfunction deleteHydratableInstance(returnFiber, instance) {\r\n  {\r\n    switch (returnFiber.tag) {\r\n      case HostRoot:\r\n        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);\r\n        break;\r\n      case HostComponent:\r\n        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);\r\n        break;\r\n    }\r\n  }\r\n\r\n  var childToDelete = createFiberFromHostInstanceForDeletion();\r\n  childToDelete.stateNode = instance;\r\n  childToDelete.return = returnFiber;\r\n  childToDelete.effectTag = Deletion;\r\n\r\n  // This might seem like it belongs on progressedFirstDeletion. However,\r\n  // these children are not part of the reconciliation list of children.\r\n  // Even if we abort and rereconcile the children, that will try to hydrate\r\n  // again and the nodes are still in the host tree so these will be\r\n  // recreated.\r\n  if (returnFiber.lastEffect !== null) {\r\n    returnFiber.lastEffect.nextEffect = childToDelete;\r\n    returnFiber.lastEffect = childToDelete;\r\n  } else {\r\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\r\n  }\r\n}\r\n\r\nfunction insertNonHydratedInstance(returnFiber, fiber) {\r\n  fiber.effectTag |= Placement;\r\n  {\r\n    switch (returnFiber.tag) {\r\n      case HostRoot:\r\n        {\r\n          var parentContainer = returnFiber.stateNode.containerInfo;\r\n          switch (fiber.tag) {\r\n            case HostComponent:\r\n              var type = fiber.type;\r\n              var props = fiber.pendingProps;\r\n              didNotFindHydratableContainerInstance(parentContainer, type, props);\r\n              break;\r\n            case HostText:\r\n              var text = fiber.pendingProps;\r\n              didNotFindHydratableContainerTextInstance(parentContainer, text);\r\n              break;\r\n            case SuspenseComponent:\r\n              \r\n              break;\r\n          }\r\n          break;\r\n        }\r\n      case HostComponent:\r\n        {\r\n          var parentType = returnFiber.type;\r\n          var parentProps = returnFiber.memoizedProps;\r\n          var parentInstance = returnFiber.stateNode;\r\n          switch (fiber.tag) {\r\n            case HostComponent:\r\n              var _type = fiber.type;\r\n              var _props = fiber.pendingProps;\r\n              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);\r\n              break;\r\n            case HostText:\r\n              var _text = fiber.pendingProps;\r\n              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);\r\n              break;\r\n            case SuspenseComponent:\r\n              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);\r\n              break;\r\n          }\r\n          break;\r\n        }\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction tryHydrate(fiber, nextInstance) {\r\n  switch (fiber.tag) {\r\n    case HostComponent:\r\n      {\r\n        var type = fiber.type;\r\n        var props = fiber.pendingProps;\r\n        var instance = canHydrateInstance(nextInstance, type, props);\r\n        if (instance !== null) {\r\n          fiber.stateNode = instance;\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    case HostText:\r\n      {\r\n        var text = fiber.pendingProps;\r\n        var textInstance = canHydrateTextInstance(nextInstance, text);\r\n        if (textInstance !== null) {\r\n          fiber.stateNode = textInstance;\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    case SuspenseComponent:\r\n      {\r\n        if (enableSuspenseServerRenderer) {\r\n          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);\r\n          if (suspenseInstance !== null) {\r\n            // Downgrade the tag to a dehydrated component until we've hydrated it.\r\n            fiber.tag = DehydratedSuspenseComponent;\r\n            fiber.stateNode = suspenseInstance;\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction tryToClaimNextHydratableInstance(fiber) {\r\n  if (!isHydrating) {\r\n    return;\r\n  }\r\n  var nextInstance = nextHydratableInstance;\r\n  if (!nextInstance) {\r\n    // Nothing to hydrate. Make it an insertion.\r\n    insertNonHydratedInstance(hydrationParentFiber, fiber);\r\n    isHydrating = false;\r\n    hydrationParentFiber = fiber;\r\n    return;\r\n  }\r\n  var firstAttemptedInstance = nextInstance;\r\n  if (!tryHydrate(fiber, nextInstance)) {\r\n    // If we can't hydrate this instance let's try the next one.\r\n    // We use this as a heuristic. It's based on intuition and not data so it\r\n    // might be flawed or unnecessary.\r\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\r\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\r\n      // Nothing to hydrate. Make it an insertion.\r\n      insertNonHydratedInstance(hydrationParentFiber, fiber);\r\n      isHydrating = false;\r\n      hydrationParentFiber = fiber;\r\n      return;\r\n    }\r\n    // We matched the next one, we'll now assume that the first one was\r\n    // superfluous and we'll delete it. Since we can't eagerly delete it\r\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\r\n    // fiber associated with it.\r\n    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);\r\n  }\r\n  hydrationParentFiber = fiber;\r\n  nextHydratableInstance = getFirstHydratableChild(nextInstance);\r\n}\r\n\r\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\r\n  if (!supportsHydration) {\r\n    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  var instance = fiber.stateNode;\r\n  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);\r\n  // TODO: Type this specific to this type of component.\r\n  fiber.updateQueue = updatePayload;\r\n  // If the update payload indicates that there is a change or if there\r\n  // is a new ref we mark this as an update.\r\n  if (updatePayload !== null) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction prepareToHydrateHostTextInstance(fiber) {\r\n  if (!supportsHydration) {\r\n    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  var textInstance = fiber.stateNode;\r\n  var textContent = fiber.memoizedProps;\r\n  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\r\n  {\r\n    if (shouldUpdate) {\r\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\r\n      // hydration parent is the parent host component of this host text.\r\n      var returnFiber = hydrationParentFiber;\r\n      if (returnFiber !== null) {\r\n        switch (returnFiber.tag) {\r\n          case HostRoot:\r\n            {\r\n              var parentContainer = returnFiber.stateNode.containerInfo;\r\n              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);\r\n              break;\r\n            }\r\n          case HostComponent:\r\n            {\r\n              var parentType = returnFiber.type;\r\n              var parentProps = returnFiber.memoizedProps;\r\n              var parentInstance = returnFiber.stateNode;\r\n              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);\r\n              break;\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return shouldUpdate;\r\n}\r\n\r\nfunction skipPastDehydratedSuspenseInstance(fiber) {\r\n  if (!supportsHydration) {\r\n    invariant(false, 'Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n  var suspenseInstance = fiber.stateNode;\r\n  !suspenseInstance ? invariant(false, 'Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\r\n}\r\n\r\nfunction popToNextHostParent(fiber) {\r\n  var parent = fiber.return;\r\n  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== DehydratedSuspenseComponent) {\r\n    parent = parent.return;\r\n  }\r\n  hydrationParentFiber = parent;\r\n}\r\n\r\nfunction popHydrationState(fiber) {\r\n  if (!supportsHydration) {\r\n    return false;\r\n  }\r\n  if (fiber !== hydrationParentFiber) {\r\n    // We're deeper than the current hydration context, inside an inserted\r\n    // tree.\r\n    return false;\r\n  }\r\n  if (!isHydrating) {\r\n    // If we're not currently hydrating but we're in a hydration context, then\r\n    // we were an insertion and now need to pop up reenter hydration of our\r\n    // siblings.\r\n    popToNextHostParent(fiber);\r\n    isHydrating = true;\r\n    return false;\r\n  }\r\n\r\n  var type = fiber.type;\r\n\r\n  // If we have any remaining hydratable nodes, we need to delete them now.\r\n  // We only do this deeper than head and body since they tend to have random\r\n  // other nodes in them. We also ignore components with pure text content in\r\n  // side of them.\r\n  // TODO: Better heuristic.\r\n  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {\r\n    var nextInstance = nextHydratableInstance;\r\n    while (nextInstance) {\r\n      deleteHydratableInstance(fiber, nextInstance);\r\n      nextInstance = getNextHydratableSibling(nextInstance);\r\n    }\r\n  }\r\n\r\n  popToNextHostParent(fiber);\r\n  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;\r\n  return true;\r\n}\r\n\r\nfunction resetHydrationState() {\r\n  if (!supportsHydration) {\r\n    return;\r\n  }\r\n\r\n  hydrationParentFiber = null;\r\n  nextHydratableInstance = null;\r\n  isHydrating = false;\r\n}\r\n\r\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nvar didReceiveUpdate = false;\r\n\r\nvar didWarnAboutBadClass = void 0;\r\nvar didWarnAboutContextTypeOnFunctionComponent = void 0;\r\nvar didWarnAboutGetDerivedStateOnFunctionComponent = void 0;\r\nvar didWarnAboutFunctionRefs = void 0;\r\nvar didWarnAboutReassigningProps = void 0;\r\n\r\n{\r\n  didWarnAboutBadClass = {};\r\n  didWarnAboutContextTypeOnFunctionComponent = {};\r\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\r\n  didWarnAboutFunctionRefs = {};\r\n  didWarnAboutReassigningProps = false;\r\n}\r\n\r\nfunction reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {\r\n  if (current$$1 === null) {\r\n    // If this is a fresh new component that hasn't been rendered yet, we\r\n    // won't update its child set by applying minimal side-effects. Instead,\r\n    // we will add them all to the child before it gets rendered. That means\r\n    // we can optimize this reconciliation pass by not tracking side-effects.\r\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\r\n  } else {\r\n    // If the current child is the same as the work in progress, it means that\r\n    // we haven't yet started any work on these children. Therefore, we use\r\n    // the clone algorithm to create a copy of all the current children.\r\n\r\n    // If we had any progressed work already, that is invalid at this point so\r\n    // let's throw it out.\r\n    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);\r\n  }\r\n}\r\n\r\nfunction forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {\r\n  // This function is fork of reconcileChildren. It's used in cases where we\r\n  // want to reconcile without matching against the existing set. This has the\r\n  // effect of all current children being unmounted; even if the type and key\r\n  // are the same, the old child is unmounted and a new child is created.\r\n  //\r\n  // To do this, we're going to go through the reconcile algorithm twice. In\r\n  // the first pass, we schedule a deletion for all the current children by\r\n  // passing null.\r\n  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);\r\n  // In the second pass, we mount the new children. The trick here is that we\r\n  // pass null in place of where we usually pass the current child set. This has\r\n  // the effect of remounting all children regardless of whether their their\r\n  // identity matches.\r\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\r\n}\r\n\r\nfunction updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\r\n  // TODO: current can be non-null here even if the component\r\n  // hasn't yet mounted. This happens after the first render suspends.\r\n  // We'll need to figure out if this is fine or can cause issues.\r\n\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n      if (innerPropTypes) {\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentName(Component), getCurrentFiberStackInDev);\r\n      }\r\n    }\r\n  }\r\n\r\n  var render = Component.render;\r\n  var ref = workInProgress.ref;\r\n\r\n  // The rest is a fork of updateFunctionComponent\r\n  var nextChildren = void 0;\r\n  prepareToReadContext(workInProgress, renderExpirationTime);\r\n  {\r\n    ReactCurrentOwner$3.current = workInProgress;\r\n    setCurrentPhase('render');\r\n    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);\r\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n      // Only double-render components with Hooks\r\n      if (workInProgress.memoizedState !== null) {\r\n        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);\r\n      }\r\n    }\r\n    setCurrentPhase(null);\r\n  }\r\n\r\n  if (current$$1 !== null && !didReceiveUpdate) {\r\n    bailoutHooks(current$$1, workInProgress, renderExpirationTime);\r\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n  }\r\n\r\n  // React DevTools reads this flag.\r\n  workInProgress.effectTag |= PerformedWork;\r\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {\r\n  if (current$$1 === null) {\r\n    var type = Component.type;\r\n    if (isSimpleFunctionComponent(type) && Component.compare === null &&\r\n    // SimpleMemoComponent codepath doesn't resolve outer props either.\r\n    Component.defaultProps === undefined) {\r\n      // If this is a plain function component without default props,\r\n      // and with only the default shallow comparison, we upgrade it\r\n      // to a SimpleMemoComponent to allow fast path updates.\r\n      workInProgress.tag = SimpleMemoComponent;\r\n      workInProgress.type = type;\r\n      {\r\n        validateFunctionComponentInDev(workInProgress, type);\r\n      }\r\n      return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);\r\n    }\r\n    {\r\n      var innerPropTypes = type.propTypes;\r\n      if (innerPropTypes) {\r\n        // Inner memo component props aren't currently validated in createElement.\r\n        // We could move it there, but we'd still need this for lazy code path.\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentName(type), getCurrentFiberStackInDev);\r\n      }\r\n    }\r\n    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);\r\n    child.ref = workInProgress.ref;\r\n    child.return = workInProgress;\r\n    workInProgress.child = child;\r\n    return child;\r\n  }\r\n  {\r\n    var _type = Component.type;\r\n    var _innerPropTypes = _type.propTypes;\r\n    if (_innerPropTypes) {\r\n      // Inner memo component props aren't currently validated in createElement.\r\n      // We could move it there, but we'd still need this for lazy code path.\r\n      checkPropTypes(_innerPropTypes, nextProps, // Resolved props\r\n      'prop', getComponentName(_type), getCurrentFiberStackInDev);\r\n    }\r\n  }\r\n  var currentChild = current$$1.child; // This is always exactly one child\r\n  if (updateExpirationTime < renderExpirationTime) {\r\n    // This will be the props with resolved defaultProps,\r\n    // unlike current.memoizedProps which will be the unresolved ones.\r\n    var prevProps = currentChild.memoizedProps;\r\n    // Default to shallow comparison\r\n    var compare = Component.compare;\r\n    compare = compare !== null ? compare : shallowEqual;\r\n    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {\r\n      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n    }\r\n  }\r\n  // React DevTools reads this flag.\r\n  workInProgress.effectTag |= PerformedWork;\r\n  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);\r\n  newChild.ref = workInProgress.ref;\r\n  newChild.return = workInProgress;\r\n  workInProgress.child = newChild;\r\n  return newChild;\r\n}\r\n\r\nfunction updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {\r\n  // TODO: current can be non-null here even if the component\r\n  // hasn't yet mounted. This happens when the inner render suspends.\r\n  // We'll need to figure out if this is fine or can cause issues.\r\n\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var outerMemoType = workInProgress.elementType;\r\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\r\n        // We warn when you define propTypes on lazy()\r\n        // so let's just skip over it to find memo() outer wrapper.\r\n        // Inner props for memo are validated later.\r\n        outerMemoType = refineResolvedLazyComponent(outerMemoType);\r\n      }\r\n      var outerPropTypes = outerMemoType && outerMemoType.propTypes;\r\n      if (outerPropTypes) {\r\n        checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\r\n        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);\r\n      }\r\n      // Inner propTypes will be validated in the function component path.\r\n    }\r\n  }\r\n  if (current$$1 !== null) {\r\n    var prevProps = current$$1.memoizedProps;\r\n    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {\r\n      didReceiveUpdate = false;\r\n      if (updateExpirationTime < renderExpirationTime) {\r\n        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n      }\r\n    }\r\n  }\r\n  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);\r\n}\r\n\r\nfunction updateFragment(current$$1, workInProgress, renderExpirationTime) {\r\n  var nextChildren = workInProgress.pendingProps;\r\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateMode(current$$1, workInProgress, renderExpirationTime) {\r\n  var nextChildren = workInProgress.pendingProps.children;\r\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateProfiler(current$$1, workInProgress, renderExpirationTime) {\r\n  if (enableProfilerTimer) {\r\n    workInProgress.effectTag |= Update;\r\n  }\r\n  var nextProps = workInProgress.pendingProps;\r\n  var nextChildren = nextProps.children;\r\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction markRef(current$$1, workInProgress) {\r\n  var ref = workInProgress.ref;\r\n  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {\r\n    // Schedule a Ref effect\r\n    workInProgress.effectTag |= Ref;\r\n  }\r\n}\r\n\r\nfunction updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n      if (innerPropTypes) {\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentName(Component), getCurrentFiberStackInDev);\r\n      }\r\n    }\r\n  }\r\n\r\n  var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\r\n  var context = getMaskedContext(workInProgress, unmaskedContext);\r\n\r\n  var nextChildren = void 0;\r\n  prepareToReadContext(workInProgress, renderExpirationTime);\r\n  {\r\n    ReactCurrentOwner$3.current = workInProgress;\r\n    setCurrentPhase('render');\r\n    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);\r\n    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n      // Only double-render components with Hooks\r\n      if (workInProgress.memoizedState !== null) {\r\n        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);\r\n      }\r\n    }\r\n    setCurrentPhase(null);\r\n  }\r\n\r\n  if (current$$1 !== null && !didReceiveUpdate) {\r\n    bailoutHooks(current$$1, workInProgress, renderExpirationTime);\r\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n  }\r\n\r\n  // React DevTools reads this flag.\r\n  workInProgress.effectTag |= PerformedWork;\r\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n      if (innerPropTypes) {\r\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\r\n        'prop', getComponentName(Component), getCurrentFiberStackInDev);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Push context providers early to prevent context stack mismatches.\r\n  // During mounting we don't know the child context yet as the instance doesn't exist.\r\n  // We will invalidate the child context in finishClassComponent() right after rendering.\r\n  var hasContext = void 0;\r\n  if (isContextProvider(Component)) {\r\n    hasContext = true;\r\n    pushContextProvider(workInProgress);\r\n  } else {\r\n    hasContext = false;\r\n  }\r\n  prepareToReadContext(workInProgress, renderExpirationTime);\r\n\r\n  var instance = workInProgress.stateNode;\r\n  var shouldUpdate = void 0;\r\n  if (instance === null) {\r\n    if (current$$1 !== null) {\r\n      // An class component without an instance only mounts if it suspended\r\n      // inside a non- concurrent tree, in an inconsistent state. We want to\r\n      // tree it like a new mount, even though an empty version of it already\r\n      // committed. Disconnect the alternate pointers.\r\n      current$$1.alternate = null;\r\n      workInProgress.alternate = null;\r\n      // Since this is conceptually a new fiber, schedule a Placement effect\r\n      workInProgress.effectTag |= Placement;\r\n    }\r\n    // In the initial pass we might need to construct the instance.\r\n    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\r\n    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\r\n    shouldUpdate = true;\r\n  } else if (current$$1 === null) {\r\n    // In a resume, we'll already have an instance we can reuse.\r\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\r\n  } else {\r\n    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);\r\n  }\r\n  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);\r\n  {\r\n    var inst = workInProgress.stateNode;\r\n    if (inst.props !== nextProps) {\r\n      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;\r\n      didWarnAboutReassigningProps = true;\r\n    }\r\n  }\r\n  return nextUnitOfWork;\r\n}\r\n\r\nfunction finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {\r\n  // Refs should update even if shouldComponentUpdate returns false\r\n  markRef(current$$1, workInProgress);\r\n\r\n  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;\r\n\r\n  if (!shouldUpdate && !didCaptureError) {\r\n    // Context providers should defer to sCU for rendering\r\n    if (hasContext) {\r\n      invalidateContextProvider(workInProgress, Component, false);\r\n    }\r\n\r\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n  }\r\n\r\n  var instance = workInProgress.stateNode;\r\n\r\n  // Rerender\r\n  ReactCurrentOwner$3.current = workInProgress;\r\n  var nextChildren = void 0;\r\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\r\n    // If we captured an error, but getDerivedStateFrom catch is not defined,\r\n    // unmount all the children. componentDidCatch will schedule an update to\r\n    // re-render a fallback. This is temporary until we migrate everyone to\r\n    // the new API.\r\n    // TODO: Warn in a future release.\r\n    nextChildren = null;\r\n\r\n    if (enableProfilerTimer) {\r\n      stopProfilerTimerIfRunning(workInProgress);\r\n    }\r\n  } else {\r\n    {\r\n      setCurrentPhase('render');\r\n      nextChildren = instance.render();\r\n      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n        instance.render();\r\n      }\r\n      setCurrentPhase(null);\r\n    }\r\n  }\r\n\r\n  // React DevTools reads this flag.\r\n  workInProgress.effectTag |= PerformedWork;\r\n  if (current$$1 !== null && didCaptureError) {\r\n    // If we're recovering from an error, reconcile without reusing any of\r\n    // the existing children. Conceptually, the normal children and the children\r\n    // that are shown on error are two different sets, so we shouldn't reuse\r\n    // normal children even if their identities match.\r\n    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  } else {\r\n    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  }\r\n\r\n  // Memoize state using the values we just used to render.\r\n  // TODO: Restructure so we never read values from the instance.\r\n  workInProgress.memoizedState = instance.state;\r\n\r\n  // The context might have changed so we need to recalculate it.\r\n  if (hasContext) {\r\n    invalidateContextProvider(workInProgress, Component, true);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction pushHostRootContext(workInProgress) {\r\n  var root = workInProgress.stateNode;\r\n  if (root.pendingContext) {\r\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\r\n  } else if (root.context) {\r\n    // Should always be set\r\n    pushTopLevelContextObject(workInProgress, root.context, false);\r\n  }\r\n  pushHostContainer(workInProgress, root.containerInfo);\r\n}\r\n\r\nfunction updateHostRoot(current$$1, workInProgress, renderExpirationTime) {\r\n  pushHostRootContext(workInProgress);\r\n  var updateQueue = workInProgress.updateQueue;\r\n  !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  var nextProps = workInProgress.pendingProps;\r\n  var prevState = workInProgress.memoizedState;\r\n  var prevChildren = prevState !== null ? prevState.element : null;\r\n  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);\r\n  var nextState = workInProgress.memoizedState;\r\n  // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n  var nextChildren = nextState.element;\r\n  if (nextChildren === prevChildren) {\r\n    // If the state is the same as before, that's a bailout because we had\r\n    // no work that expires at this time.\r\n    resetHydrationState();\r\n    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n  }\r\n  var root = workInProgress.stateNode;\r\n  if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {\r\n    // If we don't have any current children this might be the first pass.\r\n    // We always try to hydrate. If this isn't a hydration pass there won't\r\n    // be any children to hydrate which is effectively the same thing as\r\n    // not hydrating.\r\n\r\n    // This is a bit of a hack. We track the host root as a placement to\r\n    // know that we're currently in a mounting state. That way isMounted\r\n    // works as expected. We must reset this before committing.\r\n    // TODO: Delete this when we delete isMounted and findDOMNode.\r\n    workInProgress.effectTag |= Placement;\r\n\r\n    // Ensure that children mount into this root without tracking\r\n    // side-effects. This ensures that we don't store Placement effects on\r\n    // nodes that will be hydrated.\r\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\r\n  } else {\r\n    // Otherwise reset hydration state in case we aborted and resumed another\r\n    // root.\r\n    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n    resetHydrationState();\r\n  }\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateHostComponent(current$$1, workInProgress, renderExpirationTime) {\r\n  pushHostContext(workInProgress);\r\n\r\n  if (current$$1 === null) {\r\n    tryToClaimNextHydratableInstance(workInProgress);\r\n  }\r\n\r\n  var type = workInProgress.type;\r\n  var nextProps = workInProgress.pendingProps;\r\n  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;\r\n\r\n  var nextChildren = nextProps.children;\r\n  var isDirectTextChild = shouldSetTextContent(type, nextProps);\r\n\r\n  if (isDirectTextChild) {\r\n    // We special case a direct text child of a host node. This is a common\r\n    // case. We won't handle it as a reified child. We will instead handle\r\n    // this in the host environment that also have access to this prop. That\r\n    // avoids allocating another HostText fiber and traversing it.\r\n    nextChildren = null;\r\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\r\n    // If we're switching from a direct text child to a normal child, or to\r\n    // empty, we need to schedule the text content to be reset.\r\n    workInProgress.effectTag |= ContentReset;\r\n  }\r\n\r\n  markRef(current$$1, workInProgress);\r\n\r\n  // Check the host config to see if the children are offscreen/hidden.\r\n  if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {\r\n    // Schedule this fiber to re-render at offscreen priority. Then bailout.\r\n    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;\r\n    return null;\r\n  }\r\n\r\n  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateHostText(current$$1, workInProgress) {\r\n  if (current$$1 === null) {\r\n    tryToClaimNextHydratableInstance(workInProgress);\r\n  }\r\n  // Nothing to do here. This is terminal. We'll do the completion step\r\n  // immediately after.\r\n  return null;\r\n}\r\n\r\nfunction mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {\r\n  if (_current !== null) {\r\n    // An lazy component only mounts if it suspended inside a non-\r\n    // concurrent tree, in an inconsistent state. We want to treat it like\r\n    // a new mount, even though an empty version of it already committed.\r\n    // Disconnect the alternate pointers.\r\n    _current.alternate = null;\r\n    workInProgress.alternate = null;\r\n    // Since this is conceptually a new fiber, schedule a Placement effect\r\n    workInProgress.effectTag |= Placement;\r\n  }\r\n\r\n  var props = workInProgress.pendingProps;\r\n  // We can't start a User Timing measurement with correct label yet.\r\n  // Cancel and resume right after we know the tag.\r\n  cancelWorkTimer(workInProgress);\r\n  var Component = readLazyComponentType(elementType);\r\n  // Store the unwrapped component in the type.\r\n  workInProgress.type = Component;\r\n  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\r\n  startWorkTimer(workInProgress);\r\n  var resolvedProps = resolveDefaultProps(Component, props);\r\n  var child = void 0;\r\n  switch (resolvedTag) {\r\n    case FunctionComponent:\r\n      {\r\n        {\r\n          validateFunctionComponentInDev(workInProgress, Component);\r\n        }\r\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);\r\n        break;\r\n      }\r\n    case ClassComponent:\r\n      {\r\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);\r\n        break;\r\n      }\r\n    case ForwardRef:\r\n      {\r\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);\r\n        break;\r\n      }\r\n    case MemoComponent:\r\n      {\r\n        {\r\n          if (workInProgress.type !== workInProgress.elementType) {\r\n            var outerPropTypes = Component.propTypes;\r\n            if (outerPropTypes) {\r\n              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\r\n              'prop', getComponentName(Component), getCurrentFiberStackInDev);\r\n            }\r\n          }\r\n        }\r\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\r\n        updateExpirationTime, renderExpirationTime);\r\n        break;\r\n      }\r\n    default:\r\n      {\r\n        var hint = '';\r\n        {\r\n          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\r\n            hint = ' Did you wrap a component in React.lazy() more than once?';\r\n          }\r\n        }\r\n        // This message intentionally doesn't mention ForwardRef or MemoComponent\r\n        // because the fact that it's a separate type of work is an\r\n        // implementation detail.\r\n        invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);\r\n      }\r\n  }\r\n  return child;\r\n}\r\n\r\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {\r\n  if (_current !== null) {\r\n    // An incomplete component only mounts if it suspended inside a non-\r\n    // concurrent tree, in an inconsistent state. We want to treat it like\r\n    // a new mount, even though an empty version of it already committed.\r\n    // Disconnect the alternate pointers.\r\n    _current.alternate = null;\r\n    workInProgress.alternate = null;\r\n    // Since this is conceptually a new fiber, schedule a Placement effect\r\n    workInProgress.effectTag |= Placement;\r\n  }\r\n\r\n  // Promote the fiber to a class and try rendering again.\r\n  workInProgress.tag = ClassComponent;\r\n\r\n  // The rest of this function is a fork of `updateClassComponent`\r\n\r\n  // Push context providers early to prevent context stack mismatches.\r\n  // During mounting we don't know the child context yet as the instance doesn't exist.\r\n  // We will invalidate the child context in finishClassComponent() right after rendering.\r\n  var hasContext = void 0;\r\n  if (isContextProvider(Component)) {\r\n    hasContext = true;\r\n    pushContextProvider(workInProgress);\r\n  } else {\r\n    hasContext = false;\r\n  }\r\n  prepareToReadContext(workInProgress, renderExpirationTime);\r\n\r\n  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\r\n  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\r\n\r\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);\r\n}\r\n\r\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {\r\n  if (_current !== null) {\r\n    // An indeterminate component only mounts if it suspended inside a non-\r\n    // concurrent tree, in an inconsistent state. We want to treat it like\r\n    // a new mount, even though an empty version of it already committed.\r\n    // Disconnect the alternate pointers.\r\n    _current.alternate = null;\r\n    workInProgress.alternate = null;\r\n    // Since this is conceptually a new fiber, schedule a Placement effect\r\n    workInProgress.effectTag |= Placement;\r\n  }\r\n\r\n  var props = workInProgress.pendingProps;\r\n  var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\r\n  var context = getMaskedContext(workInProgress, unmaskedContext);\r\n\r\n  prepareToReadContext(workInProgress, renderExpirationTime);\r\n\r\n  var value = void 0;\r\n\r\n  {\r\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\r\n      var componentName = getComponentName(Component) || 'Unknown';\r\n\r\n      if (!didWarnAboutBadClass[componentName]) {\r\n        warningWithoutStack$1(false, \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\r\n        didWarnAboutBadClass[componentName] = true;\r\n      }\r\n    }\r\n\r\n    if (workInProgress.mode & StrictMode) {\r\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\r\n    }\r\n\r\n    ReactCurrentOwner$3.current = workInProgress;\r\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);\r\n  }\r\n  // React DevTools reads this flag.\r\n  workInProgress.effectTag |= PerformedWork;\r\n\r\n  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\r\n    // Proceed under the assumption that this is a class instance\r\n    workInProgress.tag = ClassComponent;\r\n\r\n    // Throw out any hooks that were used.\r\n    resetHooks();\r\n\r\n    // Push context providers early to prevent context stack mismatches.\r\n    // During mounting we don't know the child context yet as the instance doesn't exist.\r\n    // We will invalidate the child context in finishClassComponent() right after rendering.\r\n    var hasContext = false;\r\n    if (isContextProvider(Component)) {\r\n      hasContext = true;\r\n      pushContextProvider(workInProgress);\r\n    } else {\r\n      hasContext = false;\r\n    }\r\n\r\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\r\n\r\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\r\n    if (typeof getDerivedStateFromProps === 'function') {\r\n      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);\r\n    }\r\n\r\n    adoptClassInstance(workInProgress, value);\r\n    mountClassInstance(workInProgress, Component, props, renderExpirationTime);\r\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);\r\n  } else {\r\n    // Proceed under the assumption that this is a function component\r\n    workInProgress.tag = FunctionComponent;\r\n    {\r\n      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n        // Only double-render components with Hooks\r\n        if (workInProgress.memoizedState !== null) {\r\n          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);\r\n        }\r\n      }\r\n    }\r\n    reconcileChildren(null, workInProgress, value, renderExpirationTime);\r\n    {\r\n      validateFunctionComponentInDev(workInProgress, Component);\r\n    }\r\n    return workInProgress.child;\r\n  }\r\n}\r\n\r\nfunction validateFunctionComponentInDev(workInProgress, Component) {\r\n  if (Component) {\r\n    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;\r\n  }\r\n  if (workInProgress.ref !== null) {\r\n    var info = '';\r\n    var ownerName = getCurrentFiberOwnerNameInDevOrNull();\r\n    if (ownerName) {\r\n      info += '\\n\\nCheck the render method of `' + ownerName + '`.';\r\n    }\r\n\r\n    var warningKey = ownerName || workInProgress._debugID || '';\r\n    var debugSource = workInProgress._debugSource;\r\n    if (debugSource) {\r\n      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\r\n    }\r\n    if (!didWarnAboutFunctionRefs[warningKey]) {\r\n      didWarnAboutFunctionRefs[warningKey] = true;\r\n      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);\r\n    }\r\n  }\r\n\r\n  if (typeof Component.getDerivedStateFromProps === 'function') {\r\n    var componentName = getComponentName(Component) || 'Unknown';\r\n\r\n    if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\r\n      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);\r\n      didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\r\n    }\r\n  }\r\n\r\n  if (typeof Component.contextType === 'object' && Component.contextType !== null) {\r\n    var _componentName = getComponentName(Component) || 'Unknown';\r\n\r\n    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {\r\n      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);\r\n      didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {\r\n  var mode = workInProgress.mode;\r\n  var nextProps = workInProgress.pendingProps;\r\n\r\n  // We should attempt to render the primary children unless this boundary\r\n  // already suspended during this render (`alreadyCaptured` is true).\r\n  var nextState = workInProgress.memoizedState;\r\n\r\n  var nextDidTimeout = void 0;\r\n  if ((workInProgress.effectTag & DidCapture) === NoEffect) {\r\n    // This is the first attempt.\r\n    nextState = null;\r\n    nextDidTimeout = false;\r\n  } else {\r\n    // Something in this boundary's subtree already suspended. Switch to\r\n    // rendering the fallback children.\r\n    nextState = {\r\n      timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork\r\n    };\r\n    nextDidTimeout = true;\r\n    workInProgress.effectTag &= ~DidCapture;\r\n  }\r\n\r\n  // This next part is a bit confusing. If the children timeout, we switch to\r\n  // showing the fallback children in place of the \"primary\" children.\r\n  // However, we don't want to delete the primary children because then their\r\n  // state will be lost (both the React state and the host state, e.g.\r\n  // uncontrolled form inputs). Instead we keep them mounted and hide them.\r\n  // Both the fallback children AND the primary children are rendered at the\r\n  // same time. Once the primary children are un-suspended, we can delete\r\n  // the fallback children — don't need to preserve their state.\r\n  //\r\n  // The two sets of children are siblings in the host environment, but\r\n  // semantically, for purposes of reconciliation, they are two separate sets.\r\n  // So we store them using two fragment fibers.\r\n  //\r\n  // However, we want to avoid allocating extra fibers for every placeholder.\r\n  // They're only necessary when the children time out, because that's the\r\n  // only time when both sets are mounted.\r\n  //\r\n  // So, the extra fragment fibers are only used if the children time out.\r\n  // Otherwise, we render the primary children directly. This requires some\r\n  // custom reconciliation logic to preserve the state of the primary\r\n  // children. It's essentially a very basic form of re-parenting.\r\n\r\n  // `child` points to the child fiber. In the normal case, this is the first\r\n  // fiber of the primary children set. In the timed-out case, it's a\r\n  // a fragment fiber containing the primary children.\r\n  var child = void 0;\r\n  // `next` points to the next fiber React should render. In the normal case,\r\n  // it's the same as `child`: the first fiber of the primary children set.\r\n  // In the timed-out case, it's a fragment fiber containing the *fallback*\r\n  // children -- we skip over the primary children entirely.\r\n  var next = void 0;\r\n  if (current$$1 === null) {\r\n    if (enableSuspenseServerRenderer) {\r\n      // If we're currently hydrating, try to hydrate this boundary.\r\n      // But only if this has a fallback.\r\n      if (nextProps.fallback !== undefined) {\r\n        tryToClaimNextHydratableInstance(workInProgress);\r\n        // This could've changed the tag if this was a dehydrated suspense component.\r\n        if (workInProgress.tag === DehydratedSuspenseComponent) {\r\n          return updateDehydratedSuspenseComponent(null, workInProgress, renderExpirationTime);\r\n        }\r\n      }\r\n    }\r\n\r\n    // This is the initial mount. This branch is pretty simple because there's\r\n    // no previous state that needs to be preserved.\r\n    if (nextDidTimeout) {\r\n      // Mount separate fragments for primary and fallback children.\r\n      var nextFallbackChildren = nextProps.fallback;\r\n      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);\r\n\r\n      if ((workInProgress.mode & ConcurrentMode) === NoContext) {\r\n        // Outside of concurrent mode, we commit the effects from the\r\n        var progressedState = workInProgress.memoizedState;\r\n        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;\r\n        primaryChildFragment.child = progressedPrimaryChild;\r\n      }\r\n\r\n      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);\r\n      primaryChildFragment.sibling = fallbackChildFragment;\r\n      child = primaryChildFragment;\r\n      // Skip the primary children, and continue working on the\r\n      // fallback children.\r\n      next = fallbackChildFragment;\r\n      child.return = next.return = workInProgress;\r\n    } else {\r\n      // Mount the primary children without an intermediate fragment fiber.\r\n      var nextPrimaryChildren = nextProps.children;\r\n      child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);\r\n    }\r\n  } else {\r\n    // This is an update. This branch is more complicated because we need to\r\n    // ensure the state of the primary children is preserved.\r\n    var prevState = current$$1.memoizedState;\r\n    var prevDidTimeout = prevState !== null;\r\n    if (prevDidTimeout) {\r\n      // The current tree already timed out. That means each child set is\r\n      var currentPrimaryChildFragment = current$$1.child;\r\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\r\n      if (nextDidTimeout) {\r\n        // Still timed out. Reuse the current primary children by cloning\r\n        // its fragment. We're going to skip over these entirely.\r\n        var _nextFallbackChildren = nextProps.fallback;\r\n        var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);\r\n\r\n        if ((workInProgress.mode & ConcurrentMode) === NoContext) {\r\n          // Outside of concurrent mode, we commit the effects from the\r\n          var _progressedState = workInProgress.memoizedState;\r\n          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;\r\n          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {\r\n            _primaryChildFragment.child = _progressedPrimaryChild;\r\n          }\r\n        }\r\n\r\n        // Because primaryChildFragment is a new fiber that we're inserting as the\r\n        // parent of a new tree, we need to set its treeBaseDuration.\r\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\r\n          // treeBaseDuration is the sum of all the child tree base durations.\r\n          var treeBaseDuration = 0;\r\n          var hiddenChild = _primaryChildFragment.child;\r\n          while (hiddenChild !== null) {\r\n            treeBaseDuration += hiddenChild.treeBaseDuration;\r\n            hiddenChild = hiddenChild.sibling;\r\n          }\r\n          _primaryChildFragment.treeBaseDuration = treeBaseDuration;\r\n        }\r\n\r\n        // Clone the fallback child fragment, too. These we'll continue\r\n        // working on.\r\n        var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);\r\n        child = _primaryChildFragment;\r\n        _primaryChildFragment.childExpirationTime = NoWork;\r\n        // Skip the primary children, and continue working on the\r\n        // fallback children.\r\n        next = _fallbackChildFragment;\r\n        child.return = next.return = workInProgress;\r\n      } else {\r\n        // No longer suspended. Switch back to showing the primary children,\r\n        // and remove the intermediate fragment fiber.\r\n        var _nextPrimaryChildren = nextProps.children;\r\n        var currentPrimaryChild = currentPrimaryChildFragment.child;\r\n        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime);\r\n\r\n        // If this render doesn't suspend, we need to delete the fallback\r\n        // children. Wait until the complete phase, after we've confirmed the\r\n        // fallback is no longer needed.\r\n        // TODO: Would it be better to store the fallback fragment on\r\n        // the stateNode?\r\n\r\n        // Continue rendering the children, like we normally do.\r\n        child = next = primaryChild;\r\n      }\r\n    } else {\r\n      // The current tree has not already timed out. That means the primary\r\n      // children are not wrapped in a fragment fiber.\r\n      var _currentPrimaryChild = current$$1.child;\r\n      if (nextDidTimeout) {\r\n        // Timed out. Wrap the children in a fragment fiber to keep them\r\n        // separate from the fallback children.\r\n        var _nextFallbackChildren2 = nextProps.fallback;\r\n        var _primaryChildFragment2 = createFiberFromFragment(\r\n        // It shouldn't matter what the pending props are because we aren't\r\n        // going to render this fragment.\r\n        null, mode, NoWork, null);\r\n        _primaryChildFragment2.child = _currentPrimaryChild;\r\n\r\n        // Even though we're creating a new fiber, there are no new children,\r\n        // because we're reusing an already mounted tree. So we don't need to\r\n        // schedule a placement.\r\n        // primaryChildFragment.effectTag |= Placement;\r\n\r\n        if ((workInProgress.mode & ConcurrentMode) === NoContext) {\r\n          // Outside of concurrent mode, we commit the effects from the\r\n          var _progressedState2 = workInProgress.memoizedState;\r\n          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;\r\n          _primaryChildFragment2.child = _progressedPrimaryChild2;\r\n        }\r\n\r\n        // Because primaryChildFragment is a new fiber that we're inserting as the\r\n        // parent of a new tree, we need to set its treeBaseDuration.\r\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\r\n          // treeBaseDuration is the sum of all the child tree base durations.\r\n          var _treeBaseDuration = 0;\r\n          var _hiddenChild = _primaryChildFragment2.child;\r\n          while (_hiddenChild !== null) {\r\n            _treeBaseDuration += _hiddenChild.treeBaseDuration;\r\n            _hiddenChild = _hiddenChild.sibling;\r\n          }\r\n          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;\r\n        }\r\n\r\n        // Create a fragment from the fallback children, too.\r\n        var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);\r\n        _fallbackChildFragment2.effectTag |= Placement;\r\n        child = _primaryChildFragment2;\r\n        _primaryChildFragment2.childExpirationTime = NoWork;\r\n        // Skip the primary children, and continue working on the\r\n        // fallback children.\r\n        next = _fallbackChildFragment2;\r\n        child.return = next.return = workInProgress;\r\n      } else {\r\n        // Still haven't timed out.  Continue rendering the children, like we\r\n        // normally do.\r\n        var _nextPrimaryChildren2 = nextProps.children;\r\n        next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);\r\n      }\r\n    }\r\n    workInProgress.stateNode = current$$1.stateNode;\r\n  }\r\n\r\n  workInProgress.memoizedState = nextState;\r\n  workInProgress.child = child;\r\n  return next;\r\n}\r\n\r\nfunction updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {\r\n  if (current$$1 === null) {\r\n    // During the first pass, we'll bail out and not drill into the children.\r\n    // Instead, we'll leave the content in place and try to hydrate it later.\r\n    workInProgress.expirationTime = Never;\r\n    return null;\r\n  }\r\n  // We use childExpirationTime to indicate that a child might depend on context, so if\r\n  // any context has changed, we need to treat is as if the input might have changed.\r\n  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;\r\n  if (didReceiveUpdate || hasContextChanged$$1) {\r\n    // This boundary has changed since the first render. This means that we are now unable to\r\n    // hydrate it. We might still be able to hydrate it using an earlier expiration time but\r\n    // during this render we can't. Instead, we're going to delete the whole subtree and\r\n    // instead inject a new real Suspense boundary to take its place, which may render content\r\n    // or fallback. The real Suspense boundary will suspend for a while so we have some time\r\n    // to ensure it can produce real content, but all state and pending events will be lost.\r\n\r\n    // Detach from the current dehydrated boundary.\r\n    current$$1.alternate = null;\r\n    workInProgress.alternate = null;\r\n\r\n    // Insert a deletion in the effect list.\r\n    var returnFiber = workInProgress.return;\r\n    !(returnFiber !== null) ? invariant(false, 'Suspense boundaries are never on the root. This is probably a bug in React.') : void 0;\r\n    var last = returnFiber.lastEffect;\r\n    if (last !== null) {\r\n      last.nextEffect = current$$1;\r\n      returnFiber.lastEffect = current$$1;\r\n    } else {\r\n      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;\r\n    }\r\n    current$$1.nextEffect = null;\r\n    current$$1.effectTag = Deletion;\r\n\r\n    // Upgrade this work in progress to a real Suspense component.\r\n    workInProgress.tag = SuspenseComponent;\r\n    workInProgress.stateNode = null;\r\n    workInProgress.memoizedState = null;\r\n    // This is now an insertion.\r\n    workInProgress.effectTag |= Placement;\r\n    // Retry as a real Suspense component.\r\n    return updateSuspenseComponent(null, workInProgress, renderExpirationTime);\r\n  }\r\n  if ((workInProgress.effectTag & DidCapture) === NoEffect) {\r\n    // This is the first attempt.\r\n    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);\r\n    var nextProps = workInProgress.pendingProps;\r\n    var nextChildren = nextProps.children;\r\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\r\n    return workInProgress.child;\r\n  } else {\r\n    // Something suspended. Leave the existing children in place.\r\n    // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?\r\n    workInProgress.child = null;\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {\r\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\r\n  var nextChildren = workInProgress.pendingProps;\r\n  if (current$$1 === null) {\r\n    // Portals are special because we don't append the children during mount\r\n    // but at commit. Therefore we need to track insertions which the normal\r\n    // flow doesn't do during mount. This doesn't happen at the root because\r\n    // the root always starts with a \"current\" with a null child.\r\n    // TODO: Consider unifying this with how the root works.\r\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\r\n  } else {\r\n    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\r\n  }\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateContextProvider(current$$1, workInProgress, renderExpirationTime) {\r\n  var providerType = workInProgress.type;\r\n  var context = providerType._context;\r\n\r\n  var newProps = workInProgress.pendingProps;\r\n  var oldProps = workInProgress.memoizedProps;\r\n\r\n  var newValue = newProps.value;\r\n\r\n  {\r\n    var providerPropTypes = workInProgress.type.propTypes;\r\n\r\n    if (providerPropTypes) {\r\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);\r\n    }\r\n  }\r\n\r\n  pushProvider(workInProgress, newValue);\r\n\r\n  if (oldProps !== null) {\r\n    var oldValue = oldProps.value;\r\n    var changedBits = calculateChangedBits(context, newValue, oldValue);\r\n    if (changedBits === 0) {\r\n      // No change. Bailout early if children are the same.\r\n      if (oldProps.children === newProps.children && !hasContextChanged()) {\r\n        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n      }\r\n    } else {\r\n      // The context value changed. Search for matching consumers and schedule\r\n      // them to update.\r\n      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);\r\n    }\r\n  }\r\n\r\n  var newChildren = newProps.children;\r\n  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nvar hasWarnedAboutUsingContextAsConsumer = false;\r\n\r\nfunction updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {\r\n  var context = workInProgress.type;\r\n  // The logic below for Context differs depending on PROD or DEV mode. In\r\n  // DEV mode, we create a separate object for Context.Consumer that acts\r\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\r\n  // so we use the old behaviour (Context.Consumer references Context) to\r\n  // reduce size and overhead. The separate object references context via\r\n  // a property called \"_context\", which also gives us the ability to check\r\n  // in DEV mode if this property exists or not and warn if it does not.\r\n  {\r\n    if (context._context === undefined) {\r\n      // This may be because it's a Context (rather than a Consumer).\r\n      // Or it may be because it's older React where they're the same thing.\r\n      // We only want to warn if we're sure it's a new React.\r\n      if (context !== context.Consumer) {\r\n        if (!hasWarnedAboutUsingContextAsConsumer) {\r\n          hasWarnedAboutUsingContextAsConsumer = true;\r\n          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\r\n        }\r\n      }\r\n    } else {\r\n      context = context._context;\r\n    }\r\n  }\r\n  var newProps = workInProgress.pendingProps;\r\n  var render = newProps.children;\r\n\r\n  {\r\n    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderExpirationTime);\r\n  var newValue = readContext(context, newProps.unstable_observedBits);\r\n  var newChildren = void 0;\r\n  {\r\n    ReactCurrentOwner$3.current = workInProgress;\r\n    setCurrentPhase('render');\r\n    newChildren = render(newValue);\r\n    setCurrentPhase(null);\r\n  }\r\n\r\n  // React DevTools reads this flag.\r\n  workInProgress.effectTag |= PerformedWork;\r\n  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction markWorkInProgressReceivedUpdate() {\r\n  didReceiveUpdate = true;\r\n}\r\n\r\nfunction bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {\r\n  cancelWorkTimer(workInProgress);\r\n\r\n  if (current$$1 !== null) {\r\n    // Reuse previous context list\r\n    workInProgress.contextDependencies = current$$1.contextDependencies;\r\n  }\r\n\r\n  if (enableProfilerTimer) {\r\n    // Don't update \"base\" render times for bailouts.\r\n    stopProfilerTimerIfRunning(workInProgress);\r\n  }\r\n\r\n  // Check if the children have any pending work.\r\n  var childExpirationTime = workInProgress.childExpirationTime;\r\n  if (childExpirationTime < renderExpirationTime) {\r\n    // The children don't have any work either. We can skip them.\r\n    // TODO: Once we add back resuming, we should check if the children are\r\n    // a work-in-progress set. If so, we need to transfer their effects.\r\n    return null;\r\n  } else {\r\n    // This fiber doesn't have work, but its subtree does. Clone the child\r\n    // fibers and continue.\r\n    cloneChildFibers(current$$1, workInProgress);\r\n    return workInProgress.child;\r\n  }\r\n}\r\n\r\nfunction beginWork(current$$1, workInProgress, renderExpirationTime) {\r\n  var updateExpirationTime = workInProgress.expirationTime;\r\n\r\n  if (current$$1 !== null) {\r\n    var oldProps = current$$1.memoizedProps;\r\n    var newProps = workInProgress.pendingProps;\r\n\r\n    if (oldProps !== newProps || hasContextChanged()) {\r\n      // If props or context changed, mark the fiber as having performed work.\r\n      // This may be unset if the props are determined to be equal later (memo).\r\n      didReceiveUpdate = true;\r\n    } else if (updateExpirationTime < renderExpirationTime) {\r\n      didReceiveUpdate = false;\r\n      // This fiber does not have any pending work. Bailout without entering\r\n      // the begin phase. There's still some bookkeeping we that needs to be done\r\n      // in this optimized path, mostly pushing stuff onto the stack.\r\n      switch (workInProgress.tag) {\r\n        case HostRoot:\r\n          pushHostRootContext(workInProgress);\r\n          resetHydrationState();\r\n          break;\r\n        case HostComponent:\r\n          pushHostContext(workInProgress);\r\n          break;\r\n        case ClassComponent:\r\n          {\r\n            var Component = workInProgress.type;\r\n            if (isContextProvider(Component)) {\r\n              pushContextProvider(workInProgress);\r\n            }\r\n            break;\r\n          }\r\n        case HostPortal:\r\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\r\n          break;\r\n        case ContextProvider:\r\n          {\r\n            var newValue = workInProgress.memoizedProps.value;\r\n            pushProvider(workInProgress, newValue);\r\n            break;\r\n          }\r\n        case Profiler:\r\n          if (enableProfilerTimer) {\r\n            workInProgress.effectTag |= Update;\r\n          }\r\n          break;\r\n        case SuspenseComponent:\r\n          {\r\n            var state = workInProgress.memoizedState;\r\n            var didTimeout = state !== null;\r\n            if (didTimeout) {\r\n              // If this boundary is currently timed out, we need to decide\r\n              // whether to retry the primary children, or to skip over it and\r\n              // go straight to the fallback. Check the priority of the primary\r\n              var primaryChildFragment = workInProgress.child;\r\n              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;\r\n              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {\r\n                // The primary children have pending work. Use the normal path\r\n                // to attempt to render the primary children again.\r\n                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\r\n              } else {\r\n                // The primary children do not have pending work with sufficient\r\n                // priority. Bailout.\r\n                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n                if (child !== null) {\r\n                  // The fallback children have pending work. Skip over the\r\n                  // primary children and work on the fallback.\r\n                  return child.sibling;\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          }\r\n        case DehydratedSuspenseComponent:\r\n          {\r\n            if (enableSuspenseServerRenderer) {\r\n              // We know that this component will suspend again because if it has\r\n              // been unsuspended it has committed as a regular Suspense component.\r\n              // If it needs to be retried, it should have work scheduled on it.\r\n              workInProgress.effectTag |= DidCapture;\r\n              break;\r\n            }\r\n          }\r\n      }\r\n      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\r\n    }\r\n  } else {\r\n    didReceiveUpdate = false;\r\n  }\r\n\r\n  // Before entering the begin phase, clear the expiration time.\r\n  workInProgress.expirationTime = NoWork;\r\n\r\n  switch (workInProgress.tag) {\r\n    case IndeterminateComponent:\r\n      {\r\n        var elementType = workInProgress.elementType;\r\n        return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);\r\n      }\r\n    case LazyComponent:\r\n      {\r\n        var _elementType = workInProgress.elementType;\r\n        return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);\r\n      }\r\n    case FunctionComponent:\r\n      {\r\n        var _Component = workInProgress.type;\r\n        var unresolvedProps = workInProgress.pendingProps;\r\n        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);\r\n        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);\r\n      }\r\n    case ClassComponent:\r\n      {\r\n        var _Component2 = workInProgress.type;\r\n        var _unresolvedProps = workInProgress.pendingProps;\r\n        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);\r\n        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);\r\n      }\r\n    case HostRoot:\r\n      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);\r\n    case HostComponent:\r\n      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);\r\n    case HostText:\r\n      return updateHostText(current$$1, workInProgress);\r\n    case SuspenseComponent:\r\n      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\r\n    case HostPortal:\r\n      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);\r\n    case ForwardRef:\r\n      {\r\n        var type = workInProgress.type;\r\n        var _unresolvedProps2 = workInProgress.pendingProps;\r\n        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\r\n        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);\r\n      }\r\n    case Fragment:\r\n      return updateFragment(current$$1, workInProgress, renderExpirationTime);\r\n    case Mode:\r\n      return updateMode(current$$1, workInProgress, renderExpirationTime);\r\n    case Profiler:\r\n      return updateProfiler(current$$1, workInProgress, renderExpirationTime);\r\n    case ContextProvider:\r\n      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);\r\n    case ContextConsumer:\r\n      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);\r\n    case MemoComponent:\r\n      {\r\n        var _type2 = workInProgress.type;\r\n        var _unresolvedProps3 = workInProgress.pendingProps;\r\n        // Resolve outer props first, then resolve inner props.\r\n        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\r\n        {\r\n          if (workInProgress.type !== workInProgress.elementType) {\r\n            var outerPropTypes = _type2.propTypes;\r\n            if (outerPropTypes) {\r\n              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\r\n              'prop', getComponentName(_type2), getCurrentFiberStackInDev);\r\n            }\r\n          }\r\n        }\r\n        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\r\n        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);\r\n      }\r\n    case SimpleMemoComponent:\r\n      {\r\n        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);\r\n      }\r\n    case IncompleteClassComponent:\r\n      {\r\n        var _Component3 = workInProgress.type;\r\n        var _unresolvedProps4 = workInProgress.pendingProps;\r\n        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);\r\n        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);\r\n      }\r\n    case DehydratedSuspenseComponent:\r\n      {\r\n        if (enableSuspenseServerRenderer) {\r\n          return updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\r\n        }\r\n        break;\r\n      }\r\n  }\r\n  invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');\r\n}\r\n\r\nvar valueCursor = createCursor(null);\r\n\r\nvar rendererSigil = void 0;\r\n{\r\n  // Use this to detect multiple renderers using the same context\r\n  rendererSigil = {};\r\n}\r\n\r\nvar currentlyRenderingFiber = null;\r\nvar lastContextDependency = null;\r\nvar lastContextWithAllBitsObserved = null;\r\n\r\nvar isDisallowedContextReadInDEV = false;\r\n\r\nfunction resetContextDependences() {\r\n  // This is called right before React yields execution, to ensure `readContext`\r\n  // cannot be called outside the render phase.\r\n  currentlyRenderingFiber = null;\r\n  lastContextDependency = null;\r\n  lastContextWithAllBitsObserved = null;\r\n  {\r\n    isDisallowedContextReadInDEV = false;\r\n  }\r\n}\r\n\r\nfunction enterDisallowedContextReadInDEV() {\r\n  {\r\n    isDisallowedContextReadInDEV = true;\r\n  }\r\n}\r\n\r\nfunction exitDisallowedContextReadInDEV() {\r\n  {\r\n    isDisallowedContextReadInDEV = false;\r\n  }\r\n}\r\n\r\nfunction pushProvider(providerFiber, nextValue) {\r\n  var context = providerFiber.type._context;\r\n\r\n  if (isPrimaryRenderer) {\r\n    push(valueCursor, context._currentValue, providerFiber);\r\n\r\n    context._currentValue = nextValue;\r\n    {\r\n      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;\r\n      context._currentRenderer = rendererSigil;\r\n    }\r\n  } else {\r\n    push(valueCursor, context._currentValue2, providerFiber);\r\n\r\n    context._currentValue2 = nextValue;\r\n    {\r\n      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;\r\n      context._currentRenderer2 = rendererSigil;\r\n    }\r\n  }\r\n}\r\n\r\nfunction popProvider(providerFiber) {\r\n  var currentValue = valueCursor.current;\r\n\r\n  pop(valueCursor, providerFiber);\r\n\r\n  var context = providerFiber.type._context;\r\n  if (isPrimaryRenderer) {\r\n    context._currentValue = currentValue;\r\n  } else {\r\n    context._currentValue2 = currentValue;\r\n  }\r\n}\r\n\r\nfunction calculateChangedBits(context, newValue, oldValue) {\r\n  if (is(oldValue, newValue)) {\r\n    // No change\r\n    return 0;\r\n  } else {\r\n    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;\r\n\r\n    {\r\n      !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;\r\n    }\r\n    return changedBits | 0;\r\n  }\r\n}\r\n\r\nfunction scheduleWorkOnParentPath(parent, renderExpirationTime) {\r\n  // Update the child expiration time of all the ancestors, including\r\n  // the alternates.\r\n  var node = parent;\r\n  while (node !== null) {\r\n    var alternate = node.alternate;\r\n    if (node.childExpirationTime < renderExpirationTime) {\r\n      node.childExpirationTime = renderExpirationTime;\r\n      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {\r\n        alternate.childExpirationTime = renderExpirationTime;\r\n      }\r\n    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {\r\n      alternate.childExpirationTime = renderExpirationTime;\r\n    } else {\r\n      // Neither alternate was updated, which means the rest of the\r\n      // ancestor path already has sufficient priority.\r\n      break;\r\n    }\r\n    node = node.return;\r\n  }\r\n}\r\n\r\nfunction propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {\r\n  var fiber = workInProgress.child;\r\n  if (fiber !== null) {\r\n    // Set the return pointer of the child to the work-in-progress fiber.\r\n    fiber.return = workInProgress;\r\n  }\r\n  while (fiber !== null) {\r\n    var nextFiber = void 0;\r\n\r\n    // Visit this fiber.\r\n    var list = fiber.contextDependencies;\r\n    if (list !== null) {\r\n      nextFiber = fiber.child;\r\n\r\n      var dependency = list.first;\r\n      while (dependency !== null) {\r\n        // Check if the context matches.\r\n        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {\r\n          // Match! Schedule an update on this fiber.\r\n\r\n          if (fiber.tag === ClassComponent) {\r\n            // Schedule a force update on the work-in-progress.\r\n            var update = createUpdate(renderExpirationTime);\r\n            update.tag = ForceUpdate;\r\n            // TODO: Because we don't have a work-in-progress, this will add the\r\n            // update to the current fiber, too, which means it will persist even if\r\n            // this render is thrown away. Since it's a race condition, not sure it's\r\n            // worth fixing.\r\n            enqueueUpdate(fiber, update);\r\n          }\r\n\r\n          if (fiber.expirationTime < renderExpirationTime) {\r\n            fiber.expirationTime = renderExpirationTime;\r\n          }\r\n          var alternate = fiber.alternate;\r\n          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {\r\n            alternate.expirationTime = renderExpirationTime;\r\n          }\r\n\r\n          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);\r\n\r\n          // Mark the expiration time on the list, too.\r\n          if (list.expirationTime < renderExpirationTime) {\r\n            list.expirationTime = renderExpirationTime;\r\n          }\r\n\r\n          // Since we already found a match, we can stop traversing the\r\n          // dependency list.\r\n          break;\r\n        }\r\n        dependency = dependency.next;\r\n      }\r\n    } else if (fiber.tag === ContextProvider) {\r\n      // Don't scan deeper if this is a matching provider\r\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\r\n    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedSuspenseComponent) {\r\n      // If a dehydrated suspense component is in this subtree, we don't know\r\n      // if it will have any context consumers in it. The best we can do is\r\n      // mark it as having updates on its children.\r\n      if (fiber.expirationTime < renderExpirationTime) {\r\n        fiber.expirationTime = renderExpirationTime;\r\n      }\r\n      var _alternate = fiber.alternate;\r\n      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {\r\n        _alternate.expirationTime = renderExpirationTime;\r\n      }\r\n      // This is intentionally passing this fiber as the parent\r\n      // because we want to schedule this fiber as having work\r\n      // on its children. We'll use the childExpirationTime on\r\n      // this fiber to indicate that a context has changed.\r\n      scheduleWorkOnParentPath(fiber, renderExpirationTime);\r\n      nextFiber = fiber.sibling;\r\n    } else {\r\n      // Traverse down.\r\n      nextFiber = fiber.child;\r\n    }\r\n\r\n    if (nextFiber !== null) {\r\n      // Set the return pointer of the child to the work-in-progress fiber.\r\n      nextFiber.return = fiber;\r\n    } else {\r\n      // No child. Traverse to next sibling.\r\n      nextFiber = fiber;\r\n      while (nextFiber !== null) {\r\n        if (nextFiber === workInProgress) {\r\n          // We're back to the root of this subtree. Exit.\r\n          nextFiber = null;\r\n          break;\r\n        }\r\n        var sibling = nextFiber.sibling;\r\n        if (sibling !== null) {\r\n          // Set the return pointer of the sibling to the work-in-progress fiber.\r\n          sibling.return = nextFiber.return;\r\n          nextFiber = sibling;\r\n          break;\r\n        }\r\n        // No more siblings. Traverse up.\r\n        nextFiber = nextFiber.return;\r\n      }\r\n    }\r\n    fiber = nextFiber;\r\n  }\r\n}\r\n\r\nfunction prepareToReadContext(workInProgress, renderExpirationTime) {\r\n  currentlyRenderingFiber = workInProgress;\r\n  lastContextDependency = null;\r\n  lastContextWithAllBitsObserved = null;\r\n\r\n  var currentDependencies = workInProgress.contextDependencies;\r\n  if (currentDependencies !== null && currentDependencies.expirationTime >= renderExpirationTime) {\r\n    // Context list has a pending update. Mark that this fiber performed work.\r\n    markWorkInProgressReceivedUpdate();\r\n  }\r\n\r\n  // Reset the work-in-progress list\r\n  workInProgress.contextDependencies = null;\r\n}\r\n\r\nfunction readContext(context, observedBits) {\r\n  {\r\n    // This warning would fire if you read context inside a Hook like useMemo.\r\n    // Unlike the class check below, it's not enforced in production for perf.\r\n    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;\r\n  }\r\n\r\n  if (lastContextWithAllBitsObserved === context) {\r\n    // Nothing to do. We already observe everything in this context.\r\n  } else if (observedBits === false || observedBits === 0) {\r\n    // Do not observe any updates.\r\n  } else {\r\n    var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.\r\n    if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {\r\n      // Observe all updates.\r\n      lastContextWithAllBitsObserved = context;\r\n      resolvedObservedBits = maxSigned31BitInt;\r\n    } else {\r\n      resolvedObservedBits = observedBits;\r\n    }\r\n\r\n    var contextItem = {\r\n      context: context,\r\n      observedBits: resolvedObservedBits,\r\n      next: null\r\n    };\r\n\r\n    if (lastContextDependency === null) {\r\n      !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().') : void 0;\r\n\r\n      // This is the first dependency for this component. Create a new list.\r\n      lastContextDependency = contextItem;\r\n      currentlyRenderingFiber.contextDependencies = {\r\n        first: contextItem,\r\n        expirationTime: NoWork\r\n      };\r\n    } else {\r\n      // Append a new context item.\r\n      lastContextDependency = lastContextDependency.next = contextItem;\r\n    }\r\n  }\r\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\r\n}\r\n\r\n// UpdateQueue is a linked list of prioritized updates.\r\n//\r\n// Like fibers, update queues come in pairs: a current queue, which represents\r\n// the visible state of the screen, and a work-in-progress queue, which can be\r\n// mutated and processed asynchronously before it is committed — a form of\r\n// double buffering. If a work-in-progress render is discarded before finishing,\r\n// we create a new work-in-progress by cloning the current queue.\r\n//\r\n// Both queues share a persistent, singly-linked list structure. To schedule an\r\n// update, we append it to the end of both queues. Each queue maintains a\r\n// pointer to first update in the persistent list that hasn't been processed.\r\n// The work-in-progress pointer always has a position equal to or greater than\r\n// the current queue, since we always work on that one. The current queue's\r\n// pointer is only updated during the commit phase, when we swap in the\r\n// work-in-progress.\r\n//\r\n// For example:\r\n//\r\n//   Current pointer:           A - B - C - D - E - F\r\n//   Work-in-progress pointer:              D - E - F\r\n//                                          ^\r\n//                                          The work-in-progress queue has\r\n//                                          processed more updates than current.\r\n//\r\n// The reason we append to both queues is because otherwise we might drop\r\n// updates without ever processing them. For example, if we only add updates to\r\n// the work-in-progress queue, some updates could be lost whenever a work-in\r\n// -progress render restarts by cloning from current. Similarly, if we only add\r\n// updates to the current queue, the updates will be lost whenever an already\r\n// in-progress queue commits and swaps with the current queue. However, by\r\n// adding to both queues, we guarantee that the update will be part of the next\r\n// work-in-progress. (And because the work-in-progress queue becomes the\r\n// current queue once it commits, there's no danger of applying the same\r\n// update twice.)\r\n//\r\n// Prioritization\r\n// --------------\r\n//\r\n// Updates are not sorted by priority, but by insertion; new updates are always\r\n// appended to the end of the list.\r\n//\r\n// The priority is still important, though. When processing the update queue\r\n// during the render phase, only the updates with sufficient priority are\r\n// included in the result. If we skip an update because it has insufficient\r\n// priority, it remains in the queue to be processed later, during a lower\r\n// priority render. Crucially, all updates subsequent to a skipped update also\r\n// remain in the queue *regardless of their priority*. That means high priority\r\n// updates are sometimes processed twice, at two separate priorities. We also\r\n// keep track of a base state, that represents the state before the first\r\n// update in the queue is applied.\r\n//\r\n// For example:\r\n//\r\n//   Given a base state of '', and the following queue of updates\r\n//\r\n//     A1 - B2 - C1 - D2\r\n//\r\n//   where the number indicates the priority, and the update is applied to the\r\n//   previous state by appending a letter, React will process these updates as\r\n//   two separate renders, one per distinct priority level:\r\n//\r\n//   First render, at priority 1:\r\n//     Base state: ''\r\n//     Updates: [A1, C1]\r\n//     Result state: 'AC'\r\n//\r\n//   Second render, at priority 2:\r\n//     Base state: 'A'            <-  The base state does not include C1,\r\n//                                    because B2 was skipped.\r\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\r\n//     Result state: 'ABCD'\r\n//\r\n// Because we process updates in insertion order, and rebase high priority\r\n// updates when preceding updates are skipped, the final result is deterministic\r\n// regardless of priority. Intermediate state may vary according to system\r\n// resources, but the final state is always the same.\r\n\r\nvar UpdateState = 0;\r\nvar ReplaceState = 1;\r\nvar ForceUpdate = 2;\r\nvar CaptureUpdate = 3;\r\n\r\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\r\n// It should only be read right after calling `processUpdateQueue`, via\r\n// `checkHasForceUpdateAfterProcessing`.\r\nvar hasForceUpdate = false;\r\n\r\nvar didWarnUpdateInsideUpdate = void 0;\r\nvar currentlyProcessingQueue = void 0;\r\nvar resetCurrentlyProcessingQueue = void 0;\r\n{\r\n  didWarnUpdateInsideUpdate = false;\r\n  currentlyProcessingQueue = null;\r\n  resetCurrentlyProcessingQueue = function () {\r\n    currentlyProcessingQueue = null;\r\n  };\r\n}\r\n\r\nfunction createUpdateQueue(baseState) {\r\n  var queue = {\r\n    baseState: baseState,\r\n    firstUpdate: null,\r\n    lastUpdate: null,\r\n    firstCapturedUpdate: null,\r\n    lastCapturedUpdate: null,\r\n    firstEffect: null,\r\n    lastEffect: null,\r\n    firstCapturedEffect: null,\r\n    lastCapturedEffect: null\r\n  };\r\n  return queue;\r\n}\r\n\r\nfunction cloneUpdateQueue(currentQueue) {\r\n  var queue = {\r\n    baseState: currentQueue.baseState,\r\n    firstUpdate: currentQueue.firstUpdate,\r\n    lastUpdate: currentQueue.lastUpdate,\r\n\r\n    // TODO: With resuming, if we bail out and resuse the child tree, we should\r\n    // keep these effects.\r\n    firstCapturedUpdate: null,\r\n    lastCapturedUpdate: null,\r\n\r\n    firstEffect: null,\r\n    lastEffect: null,\r\n\r\n    firstCapturedEffect: null,\r\n    lastCapturedEffect: null\r\n  };\r\n  return queue;\r\n}\r\n\r\nfunction createUpdate(expirationTime) {\r\n  return {\r\n    expirationTime: expirationTime,\r\n\r\n    tag: UpdateState,\r\n    payload: null,\r\n    callback: null,\r\n\r\n    next: null,\r\n    nextEffect: null\r\n  };\r\n}\r\n\r\nfunction appendUpdateToQueue(queue, update) {\r\n  // Append the update to the end of the list.\r\n  if (queue.lastUpdate === null) {\r\n    // Queue is empty\r\n    queue.firstUpdate = queue.lastUpdate = update;\r\n  } else {\r\n    queue.lastUpdate.next = update;\r\n    queue.lastUpdate = update;\r\n  }\r\n}\r\n\r\nfunction enqueueUpdate(fiber, update) {\r\n  // Update queues are created lazily.\r\n  var alternate = fiber.alternate;\r\n  var queue1 = void 0;\r\n  var queue2 = void 0;\r\n  if (alternate === null) {\r\n    // There's only one fiber.\r\n    queue1 = fiber.updateQueue;\r\n    queue2 = null;\r\n    if (queue1 === null) {\r\n      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\r\n    }\r\n  } else {\r\n    // There are two owners.\r\n    queue1 = fiber.updateQueue;\r\n    queue2 = alternate.updateQueue;\r\n    if (queue1 === null) {\r\n      if (queue2 === null) {\r\n        // Neither fiber has an update queue. Create new ones.\r\n        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\r\n        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);\r\n      } else {\r\n        // Only one fiber has an update queue. Clone to create a new one.\r\n        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);\r\n      }\r\n    } else {\r\n      if (queue2 === null) {\r\n        // Only one fiber has an update queue. Clone to create a new one.\r\n        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);\r\n      } else {\r\n        // Both owners have an update queue.\r\n      }\r\n    }\r\n  }\r\n  if (queue2 === null || queue1 === queue2) {\r\n    // There's only a single queue.\r\n    appendUpdateToQueue(queue1, update);\r\n  } else {\r\n    // There are two queues. We need to append the update to both queues,\r\n    // while accounting for the persistent structure of the list — we don't\r\n    // want the same update to be added multiple times.\r\n    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {\r\n      // One of the queues is not empty. We must add the update to both queues.\r\n      appendUpdateToQueue(queue1, update);\r\n      appendUpdateToQueue(queue2, update);\r\n    } else {\r\n      // Both queues are non-empty. The last update is the same in both lists,\r\n      // because of structural sharing. So, only append to one of the lists.\r\n      appendUpdateToQueue(queue1, update);\r\n      // But we still need to update the `lastUpdate` pointer of queue2.\r\n      queue2.lastUpdate = update;\r\n    }\r\n  }\r\n\r\n  {\r\n    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {\r\n      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\r\n      didWarnUpdateInsideUpdate = true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction enqueueCapturedUpdate(workInProgress, update) {\r\n  // Captured updates go into a separate list, and only on the work-in-\r\n  // progress queue.\r\n  var workInProgressQueue = workInProgress.updateQueue;\r\n  if (workInProgressQueue === null) {\r\n    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);\r\n  } else {\r\n    // TODO: I put this here rather than createWorkInProgress so that we don't\r\n    // clone the queue unnecessarily. There's probably a better way to\r\n    // structure this.\r\n    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);\r\n  }\r\n\r\n  // Append the update to the end of the list.\r\n  if (workInProgressQueue.lastCapturedUpdate === null) {\r\n    // This is the first render phase update\r\n    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;\r\n  } else {\r\n    workInProgressQueue.lastCapturedUpdate.next = update;\r\n    workInProgressQueue.lastCapturedUpdate = update;\r\n  }\r\n}\r\n\r\nfunction ensureWorkInProgressQueueIsAClone(workInProgress, queue) {\r\n  var current = workInProgress.alternate;\r\n  if (current !== null) {\r\n    // If the work-in-progress queue is equal to the current queue,\r\n    // we need to clone it first.\r\n    if (queue === current.updateQueue) {\r\n      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);\r\n    }\r\n  }\r\n  return queue;\r\n}\r\n\r\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\r\n  switch (update.tag) {\r\n    case ReplaceState:\r\n      {\r\n        var _payload = update.payload;\r\n        if (typeof _payload === 'function') {\r\n          // Updater function\r\n          {\r\n            enterDisallowedContextReadInDEV();\r\n            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n              _payload.call(instance, prevState, nextProps);\r\n            }\r\n          }\r\n          var nextState = _payload.call(instance, prevState, nextProps);\r\n          {\r\n            exitDisallowedContextReadInDEV();\r\n          }\r\n          return nextState;\r\n        }\r\n        // State object\r\n        return _payload;\r\n      }\r\n    case CaptureUpdate:\r\n      {\r\n        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;\r\n      }\r\n    // Intentional fallthrough\r\n    case UpdateState:\r\n      {\r\n        var _payload2 = update.payload;\r\n        var partialState = void 0;\r\n        if (typeof _payload2 === 'function') {\r\n          // Updater function\r\n          {\r\n            enterDisallowedContextReadInDEV();\r\n            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\r\n              _payload2.call(instance, prevState, nextProps);\r\n            }\r\n          }\r\n          partialState = _payload2.call(instance, prevState, nextProps);\r\n          {\r\n            exitDisallowedContextReadInDEV();\r\n          }\r\n        } else {\r\n          // Partial state object\r\n          partialState = _payload2;\r\n        }\r\n        if (partialState === null || partialState === undefined) {\r\n          // Null and undefined are treated as no-ops.\r\n          return prevState;\r\n        }\r\n        // Merge the partial state and the previous state.\r\n        return _assign({}, prevState, partialState);\r\n      }\r\n    case ForceUpdate:\r\n      {\r\n        hasForceUpdate = true;\r\n        return prevState;\r\n      }\r\n  }\r\n  return prevState;\r\n}\r\n\r\nfunction processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {\r\n  hasForceUpdate = false;\r\n\r\n  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);\r\n\r\n  {\r\n    currentlyProcessingQueue = queue;\r\n  }\r\n\r\n  // These values may change as we process the queue.\r\n  var newBaseState = queue.baseState;\r\n  var newFirstUpdate = null;\r\n  var newExpirationTime = NoWork;\r\n\r\n  // Iterate through the list of updates to compute the result.\r\n  var update = queue.firstUpdate;\r\n  var resultState = newBaseState;\r\n  while (update !== null) {\r\n    var updateExpirationTime = update.expirationTime;\r\n    if (updateExpirationTime < renderExpirationTime) {\r\n      // This update does not have sufficient priority. Skip it.\r\n      if (newFirstUpdate === null) {\r\n        // This is the first skipped update. It will be the first update in\r\n        // the new list.\r\n        newFirstUpdate = update;\r\n        // Since this is the first update that was skipped, the current result\r\n        // is the new base state.\r\n        newBaseState = resultState;\r\n      }\r\n      // Since this update will remain in the list, update the remaining\r\n      // expiration time.\r\n      if (newExpirationTime < updateExpirationTime) {\r\n        newExpirationTime = updateExpirationTime;\r\n      }\r\n    } else {\r\n      // This update does have sufficient priority. Process it and compute\r\n      // a new result.\r\n      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);\r\n      var _callback = update.callback;\r\n      if (_callback !== null) {\r\n        workInProgress.effectTag |= Callback;\r\n        // Set this to null, in case it was mutated during an aborted render.\r\n        update.nextEffect = null;\r\n        if (queue.lastEffect === null) {\r\n          queue.firstEffect = queue.lastEffect = update;\r\n        } else {\r\n          queue.lastEffect.nextEffect = update;\r\n          queue.lastEffect = update;\r\n        }\r\n      }\r\n    }\r\n    // Continue to the next update.\r\n    update = update.next;\r\n  }\r\n\r\n  // Separately, iterate though the list of captured updates.\r\n  var newFirstCapturedUpdate = null;\r\n  update = queue.firstCapturedUpdate;\r\n  while (update !== null) {\r\n    var _updateExpirationTime = update.expirationTime;\r\n    if (_updateExpirationTime < renderExpirationTime) {\r\n      // This update does not have sufficient priority. Skip it.\r\n      if (newFirstCapturedUpdate === null) {\r\n        // This is the first skipped captured update. It will be the first\r\n        // update in the new list.\r\n        newFirstCapturedUpdate = update;\r\n        // If this is the first update that was skipped, the current result is\r\n        // the new base state.\r\n        if (newFirstUpdate === null) {\r\n          newBaseState = resultState;\r\n        }\r\n      }\r\n      // Since this update will remain in the list, update the remaining\r\n      // expiration time.\r\n      if (newExpirationTime < _updateExpirationTime) {\r\n        newExpirationTime = _updateExpirationTime;\r\n      }\r\n    } else {\r\n      // This update does have sufficient priority. Process it and compute\r\n      // a new result.\r\n      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);\r\n      var _callback2 = update.callback;\r\n      if (_callback2 !== null) {\r\n        workInProgress.effectTag |= Callback;\r\n        // Set this to null, in case it was mutated during an aborted render.\r\n        update.nextEffect = null;\r\n        if (queue.lastCapturedEffect === null) {\r\n          queue.firstCapturedEffect = queue.lastCapturedEffect = update;\r\n        } else {\r\n          queue.lastCapturedEffect.nextEffect = update;\r\n          queue.lastCapturedEffect = update;\r\n        }\r\n      }\r\n    }\r\n    update = update.next;\r\n  }\r\n\r\n  if (newFirstUpdate === null) {\r\n    queue.lastUpdate = null;\r\n  }\r\n  if (newFirstCapturedUpdate === null) {\r\n    queue.lastCapturedUpdate = null;\r\n  } else {\r\n    workInProgress.effectTag |= Callback;\r\n  }\r\n  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {\r\n    // We processed every update, without skipping. That means the new base\r\n    // state is the same as the result state.\r\n    newBaseState = resultState;\r\n  }\r\n\r\n  queue.baseState = newBaseState;\r\n  queue.firstUpdate = newFirstUpdate;\r\n  queue.firstCapturedUpdate = newFirstCapturedUpdate;\r\n\r\n  // Set the remaining expiration time to be whatever is remaining in the queue.\r\n  // This should be fine because the only two other things that contribute to\r\n  // expiration time are props and context. We're already in the middle of the\r\n  // begin phase by the time we start processing the queue, so we've already\r\n  // dealt with the props. Context in components that specify\r\n  // shouldComponentUpdate is tricky; but we'll have to account for\r\n  // that regardless.\r\n  workInProgress.expirationTime = newExpirationTime;\r\n  workInProgress.memoizedState = resultState;\r\n\r\n  {\r\n    currentlyProcessingQueue = null;\r\n  }\r\n}\r\n\r\nfunction callCallback(callback, context) {\r\n  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;\r\n  callback.call(context);\r\n}\r\n\r\nfunction resetHasForceUpdateBeforeProcessing() {\r\n  hasForceUpdate = false;\r\n}\r\n\r\nfunction checkHasForceUpdateAfterProcessing() {\r\n  return hasForceUpdate;\r\n}\r\n\r\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {\r\n  // If the finished render included captured updates, and there are still\r\n  // lower priority updates left over, we need to keep the captured updates\r\n  // in the queue so that they are rebased and not dropped once we process the\r\n  // queue again at the lower priority.\r\n  if (finishedQueue.firstCapturedUpdate !== null) {\r\n    // Join the captured update list to the end of the normal list.\r\n    if (finishedQueue.lastUpdate !== null) {\r\n      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;\r\n      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;\r\n    }\r\n    // Clear the list of captured updates.\r\n    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;\r\n  }\r\n\r\n  // Commit the effects\r\n  commitUpdateEffects(finishedQueue.firstEffect, instance);\r\n  finishedQueue.firstEffect = finishedQueue.lastEffect = null;\r\n\r\n  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);\r\n  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;\r\n}\r\n\r\nfunction commitUpdateEffects(effect, instance) {\r\n  while (effect !== null) {\r\n    var _callback3 = effect.callback;\r\n    if (_callback3 !== null) {\r\n      effect.callback = null;\r\n      callCallback(_callback3, instance);\r\n    }\r\n    effect = effect.nextEffect;\r\n  }\r\n}\r\n\r\nfunction createCapturedValue(value, source) {\r\n  // If the value is an error, call this function immediately after it is thrown\r\n  // so the stack is accurate.\r\n  return {\r\n    value: value,\r\n    source: source,\r\n    stack: getStackByFiberInDevAndProd(source)\r\n  };\r\n}\r\n\r\nfunction markUpdate(workInProgress) {\r\n  // Tag the fiber with an update effect. This turns a Placement into\r\n  // a PlacementAndUpdate.\r\n  workInProgress.effectTag |= Update;\r\n}\r\n\r\nfunction markRef$1(workInProgress) {\r\n  workInProgress.effectTag |= Ref;\r\n}\r\n\r\nvar appendAllChildren = void 0;\r\nvar updateHostContainer = void 0;\r\nvar updateHostComponent$1 = void 0;\r\nvar updateHostText$1 = void 0;\r\nif (supportsMutation) {\r\n  // Mutation mode\r\n\r\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n    while (node !== null) {\r\n      if (node.tag === HostComponent || node.tag === HostText) {\r\n        appendInitialChild(parent, node.stateNode);\r\n      } else if (node.tag === HostPortal) {\r\n        // If we have a portal child, then we don't want to traverse\r\n        // down its children. Instead, we'll get insertions from each child in\r\n        // the portal directly.\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n        node = node.return;\r\n      }\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  };\r\n\r\n  updateHostContainer = function (workInProgress) {\r\n    // Noop\r\n  };\r\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\r\n    // If we have an alternate, that means this is an update and we need to\r\n    // schedule a side-effect to do the updates.\r\n    var oldProps = current.memoizedProps;\r\n    if (oldProps === newProps) {\r\n      // In mutation mode, this is sufficient for a bailout because\r\n      // we won't touch this node even if children changed.\r\n      return;\r\n    }\r\n\r\n    // If we get updated because one of our children updated, we don't\r\n    // have newProps so we'll have to reuse them.\r\n    // TODO: Split the update API as separate for the props vs. children.\r\n    // Even better would be if children weren't special cased at all tho.\r\n    var instance = workInProgress.stateNode;\r\n    var currentHostContext = getHostContext();\r\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\r\n    // component is hitting the resume path. Figure out why. Possibly\r\n    // related to `hidden`.\r\n    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);\r\n    // TODO: Type this specific to this type of component.\r\n    workInProgress.updateQueue = updatePayload;\r\n    // If the update payload indicates that there is a change or if there\r\n    // is a new ref we mark this as an update. All the work is done in commitWork.\r\n    if (updatePayload) {\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\r\n    // If the text differs, mark it as an update. All the work in done in commitWork.\r\n    if (oldText !== newText) {\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n} else if (supportsPersistence) {\r\n  // Persistent host tree mode\r\n\r\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n    while (node !== null) {\r\n      // eslint-disable-next-line no-labels\r\n      branches: if (node.tag === HostComponent) {\r\n        var instance = node.stateNode;\r\n        if (needsVisibilityToggle) {\r\n          var props = node.memoizedProps;\r\n          var type = node.type;\r\n          if (isHidden) {\r\n            // This child is inside a timed out tree. Hide it.\r\n            instance = cloneHiddenInstance(instance, type, props, node);\r\n          } else {\r\n            // This child was previously inside a timed out tree. If it was not\r\n            // updated during this render, it may need to be unhidden. Clone\r\n            // again to be sure.\r\n            instance = cloneUnhiddenInstance(instance, type, props, node);\r\n          }\r\n          node.stateNode = instance;\r\n        }\r\n        appendInitialChild(parent, instance);\r\n      } else if (node.tag === HostText) {\r\n        var _instance = node.stateNode;\r\n        if (needsVisibilityToggle) {\r\n          var text = node.memoizedProps;\r\n          var rootContainerInstance = getRootHostContainer();\r\n          var currentHostContext = getHostContext();\r\n          if (isHidden) {\r\n            _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\r\n          } else {\r\n            _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\r\n          }\r\n          node.stateNode = _instance;\r\n        }\r\n        appendInitialChild(parent, _instance);\r\n      } else if (node.tag === HostPortal) {\r\n        // If we have a portal child, then we don't want to traverse\r\n        // down its children. Instead, we'll get insertions from each child in\r\n        // the portal directly.\r\n      } else if (node.tag === SuspenseComponent) {\r\n        var current = node.alternate;\r\n        if (current !== null) {\r\n          var oldState = current.memoizedState;\r\n          var newState = node.memoizedState;\r\n          var oldIsHidden = oldState !== null;\r\n          var newIsHidden = newState !== null;\r\n          if (oldIsHidden !== newIsHidden) {\r\n            // The placeholder either just timed out or switched back to the normal\r\n            // children after having previously timed out. Toggle the visibility of\r\n            // the direct host children.\r\n            var primaryChildParent = newIsHidden ? node.child : node;\r\n            if (primaryChildParent !== null) {\r\n              appendAllChildren(parent, primaryChildParent, true, newIsHidden);\r\n            }\r\n            // eslint-disable-next-line no-labels\r\n            break branches;\r\n          }\r\n        }\r\n        if (node.child !== null) {\r\n          // Continue traversing like normal\r\n          node.child.return = node;\r\n          node = node.child;\r\n          continue;\r\n        }\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\r\n      node = node;\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n        node = node.return;\r\n      }\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  };\r\n\r\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\r\n  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n    while (node !== null) {\r\n      // eslint-disable-next-line no-labels\r\n      branches: if (node.tag === HostComponent) {\r\n        var instance = node.stateNode;\r\n        if (needsVisibilityToggle) {\r\n          var props = node.memoizedProps;\r\n          var type = node.type;\r\n          if (isHidden) {\r\n            // This child is inside a timed out tree. Hide it.\r\n            instance = cloneHiddenInstance(instance, type, props, node);\r\n          } else {\r\n            // This child was previously inside a timed out tree. If it was not\r\n            // updated during this render, it may need to be unhidden. Clone\r\n            // again to be sure.\r\n            instance = cloneUnhiddenInstance(instance, type, props, node);\r\n          }\r\n          node.stateNode = instance;\r\n        }\r\n        appendChildToContainerChildSet(containerChildSet, instance);\r\n      } else if (node.tag === HostText) {\r\n        var _instance2 = node.stateNode;\r\n        if (needsVisibilityToggle) {\r\n          var text = node.memoizedProps;\r\n          var rootContainerInstance = getRootHostContainer();\r\n          var currentHostContext = getHostContext();\r\n          if (isHidden) {\r\n            _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\r\n          } else {\r\n            _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\r\n          }\r\n          node.stateNode = _instance2;\r\n        }\r\n        appendChildToContainerChildSet(containerChildSet, _instance2);\r\n      } else if (node.tag === HostPortal) {\r\n        // If we have a portal child, then we don't want to traverse\r\n        // down its children. Instead, we'll get insertions from each child in\r\n        // the portal directly.\r\n      } else if (node.tag === SuspenseComponent) {\r\n        var current = node.alternate;\r\n        if (current !== null) {\r\n          var oldState = current.memoizedState;\r\n          var newState = node.memoizedState;\r\n          var oldIsHidden = oldState !== null;\r\n          var newIsHidden = newState !== null;\r\n          if (oldIsHidden !== newIsHidden) {\r\n            // The placeholder either just timed out or switched back to the normal\r\n            // children after having previously timed out. Toggle the visibility of\r\n            // the direct host children.\r\n            var primaryChildParent = newIsHidden ? node.child : node;\r\n            if (primaryChildParent !== null) {\r\n              appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);\r\n            }\r\n            // eslint-disable-next-line no-labels\r\n            break branches;\r\n          }\r\n        }\r\n        if (node.child !== null) {\r\n          // Continue traversing like normal\r\n          node.child.return = node;\r\n          node = node.child;\r\n          continue;\r\n        }\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\r\n      node = node;\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n        node = node.return;\r\n      }\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  };\r\n  updateHostContainer = function (workInProgress) {\r\n    var portalOrRoot = workInProgress.stateNode;\r\n    var childrenUnchanged = workInProgress.firstEffect === null;\r\n    if (childrenUnchanged) {\r\n      // No changes, just reuse the existing instance.\r\n    } else {\r\n      var container = portalOrRoot.containerInfo;\r\n      var newChildSet = createContainerChildSet(container);\r\n      // If children might have changed, we have to add them all to the set.\r\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\r\n      portalOrRoot.pendingChildren = newChildSet;\r\n      // Schedule an update on the container to swap out the container.\r\n      markUpdate(workInProgress);\r\n      finalizeContainerChildren(container, newChildSet);\r\n    }\r\n  };\r\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\r\n    var currentInstance = current.stateNode;\r\n    var oldProps = current.memoizedProps;\r\n    // If there are no effects associated with this node, then none of our children had any updates.\r\n    // This guarantees that we can reuse all of them.\r\n    var childrenUnchanged = workInProgress.firstEffect === null;\r\n    if (childrenUnchanged && oldProps === newProps) {\r\n      // No changes, just reuse the existing instance.\r\n      // Note that this might release a previous clone.\r\n      workInProgress.stateNode = currentInstance;\r\n      return;\r\n    }\r\n    var recyclableInstance = workInProgress.stateNode;\r\n    var currentHostContext = getHostContext();\r\n    var updatePayload = null;\r\n    if (oldProps !== newProps) {\r\n      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);\r\n    }\r\n    if (childrenUnchanged && updatePayload === null) {\r\n      // No changes, just reuse the existing instance.\r\n      // Note that this might release a previous clone.\r\n      workInProgress.stateNode = currentInstance;\r\n      return;\r\n    }\r\n    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);\r\n    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {\r\n      markUpdate(workInProgress);\r\n    }\r\n    workInProgress.stateNode = newInstance;\r\n    if (childrenUnchanged) {\r\n      // If there are no other effects in this tree, we need to flag this node as having one.\r\n      // Even though we're not going to use it for anything.\r\n      // Otherwise parents won't know that there are new children to propagate upwards.\r\n      markUpdate(workInProgress);\r\n    } else {\r\n      // If children might have changed, we have to add them all to the set.\r\n      appendAllChildren(newInstance, workInProgress, false, false);\r\n    }\r\n  };\r\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\r\n    if (oldText !== newText) {\r\n      // If the text content differs, we'll create a new text instance for it.\r\n      var rootContainerInstance = getRootHostContainer();\r\n      var currentHostContext = getHostContext();\r\n      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);\r\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\r\n      // This lets the parents know that at least one of their children has changed.\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n} else {\r\n  // No host operations\r\n  updateHostContainer = function (workInProgress) {\r\n    // Noop\r\n  };\r\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\r\n    // Noop\r\n  };\r\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\r\n    // Noop\r\n  };\r\n}\r\n\r\nfunction completeWork(current, workInProgress, renderExpirationTime) {\r\n  var newProps = workInProgress.pendingProps;\r\n\r\n  switch (workInProgress.tag) {\r\n    case IndeterminateComponent:\r\n      break;\r\n    case LazyComponent:\r\n      break;\r\n    case SimpleMemoComponent:\r\n    case FunctionComponent:\r\n      break;\r\n    case ClassComponent:\r\n      {\r\n        var Component = workInProgress.type;\r\n        if (isContextProvider(Component)) {\r\n          popContext(workInProgress);\r\n        }\r\n        break;\r\n      }\r\n    case HostRoot:\r\n      {\r\n        popHostContainer(workInProgress);\r\n        popTopLevelContextObject(workInProgress);\r\n        var fiberRoot = workInProgress.stateNode;\r\n        if (fiberRoot.pendingContext) {\r\n          fiberRoot.context = fiberRoot.pendingContext;\r\n          fiberRoot.pendingContext = null;\r\n        }\r\n        if (current === null || current.child === null) {\r\n          // If we hydrated, pop so that we can delete any remaining children\r\n          // that weren't hydrated.\r\n          popHydrationState(workInProgress);\r\n          // This resets the hacky state to fix isMounted before committing.\r\n          // TODO: Delete this when we delete isMounted and findDOMNode.\r\n          workInProgress.effectTag &= ~Placement;\r\n        }\r\n        updateHostContainer(workInProgress);\r\n        break;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        popHostContext(workInProgress);\r\n        var rootContainerInstance = getRootHostContainer();\r\n        var type = workInProgress.type;\r\n        if (current !== null && workInProgress.stateNode != null) {\r\n          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\r\n\r\n          if (current.ref !== workInProgress.ref) {\r\n            markRef$1(workInProgress);\r\n          }\r\n        } else {\r\n          if (!newProps) {\r\n            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n            // This can happen when we abort work.\r\n            break;\r\n          }\r\n\r\n          var currentHostContext = getHostContext();\r\n          // TODO: Move createInstance to beginWork and keep it on a context\r\n          // \"stack\" as the parent. Then append children as we go in beginWork\r\n          // or completeWork depending on we want to add then top->down or\r\n          // bottom->up. Top->down is faster in IE11.\r\n          var wasHydrated = popHydrationState(workInProgress);\r\n          if (wasHydrated) {\r\n            // TODO: Move this and createInstance step into the beginPhase\r\n            // to consolidate.\r\n            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\r\n              // If changes to the hydrated node needs to be applied at the\r\n              // commit-phase we mark this as such.\r\n              markUpdate(workInProgress);\r\n            }\r\n          } else {\r\n            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\r\n\r\n            appendAllChildren(instance, workInProgress, false, false);\r\n\r\n            // Certain renderers require commit-time effects for initial mount.\r\n            // (eg DOM renderer supports auto-focus for certain elements).\r\n            // Make sure such renderers get scheduled for later work.\r\n            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {\r\n              markUpdate(workInProgress);\r\n            }\r\n            workInProgress.stateNode = instance;\r\n          }\r\n\r\n          if (workInProgress.ref !== null) {\r\n            // If there is a ref on a host node we need to schedule a callback\r\n            markRef$1(workInProgress);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    case HostText:\r\n      {\r\n        var newText = newProps;\r\n        if (current && workInProgress.stateNode != null) {\r\n          var oldText = current.memoizedProps;\r\n          // If we have an alternate, that means this is an update and we need\r\n          // to schedule a side-effect to do the updates.\r\n          updateHostText$1(current, workInProgress, oldText, newText);\r\n        } else {\r\n          if (typeof newText !== 'string') {\r\n            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n            // This can happen when we abort work.\r\n          }\r\n          var _rootContainerInstance = getRootHostContainer();\r\n          var _currentHostContext = getHostContext();\r\n          var _wasHydrated = popHydrationState(workInProgress);\r\n          if (_wasHydrated) {\r\n            if (prepareToHydrateHostTextInstance(workInProgress)) {\r\n              markUpdate(workInProgress);\r\n            }\r\n          } else {\r\n            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    case ForwardRef:\r\n      break;\r\n    case SuspenseComponent:\r\n      {\r\n        var nextState = workInProgress.memoizedState;\r\n        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {\r\n          // Something suspended. Re-render with the fallback children.\r\n          workInProgress.expirationTime = renderExpirationTime;\r\n          // Do not reset the effect list.\r\n          return workInProgress;\r\n        }\r\n\r\n        var nextDidTimeout = nextState !== null;\r\n        var prevDidTimeout = current !== null && current.memoizedState !== null;\r\n\r\n        if (current !== null && !nextDidTimeout && prevDidTimeout) {\r\n          // We just switched from the fallback to the normal children. Delete\r\n          // the fallback.\r\n          // TODO: Would it be better to store the fallback fragment on\r\n          var currentFallbackChild = current.child.sibling;\r\n          if (currentFallbackChild !== null) {\r\n            // Deletions go at the beginning of the return fiber's effect list\r\n            var first = workInProgress.firstEffect;\r\n            if (first !== null) {\r\n              workInProgress.firstEffect = currentFallbackChild;\r\n              currentFallbackChild.nextEffect = first;\r\n            } else {\r\n              workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;\r\n              currentFallbackChild.nextEffect = null;\r\n            }\r\n            currentFallbackChild.effectTag = Deletion;\r\n          }\r\n        }\r\n\r\n        if (nextDidTimeout || prevDidTimeout) {\r\n          // If the children are hidden, or if they were previous hidden, schedule\r\n          // an effect to toggle their visibility. This is also used to attach a\r\n          // retry listener to the promise.\r\n          workInProgress.effectTag |= Update;\r\n        }\r\n        break;\r\n      }\r\n    case Fragment:\r\n      break;\r\n    case Mode:\r\n      break;\r\n    case Profiler:\r\n      break;\r\n    case HostPortal:\r\n      popHostContainer(workInProgress);\r\n      updateHostContainer(workInProgress);\r\n      break;\r\n    case ContextProvider:\r\n      // Pop provider fiber\r\n      popProvider(workInProgress);\r\n      break;\r\n    case ContextConsumer:\r\n      break;\r\n    case MemoComponent:\r\n      break;\r\n    case IncompleteClassComponent:\r\n      {\r\n        // Same as class component case. I put it down here so that the tags are\r\n        // sequential to ensure this switch is compiled to a jump table.\r\n        var _Component = workInProgress.type;\r\n        if (isContextProvider(_Component)) {\r\n          popContext(workInProgress);\r\n        }\r\n        break;\r\n      }\r\n    case DehydratedSuspenseComponent:\r\n      {\r\n        if (enableSuspenseServerRenderer) {\r\n          if (current === null) {\r\n            var _wasHydrated2 = popHydrationState(workInProgress);\r\n            !_wasHydrated2 ? invariant(false, 'A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.') : void 0;\r\n            skipPastDehydratedSuspenseInstance(workInProgress);\r\n          } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {\r\n            // This boundary did not suspend so it's now hydrated.\r\n            // To handle any future suspense cases, we're going to now upgrade it\r\n            // to a Suspense component. We detach it from the existing current fiber.\r\n            current.alternate = null;\r\n            workInProgress.alternate = null;\r\n            workInProgress.tag = SuspenseComponent;\r\n            workInProgress.memoizedState = null;\r\n            workInProgress.stateNode = null;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    default:\r\n      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction shouldCaptureSuspense(workInProgress) {\r\n  // In order to capture, the Suspense component must have a fallback prop.\r\n  if (workInProgress.memoizedProps.fallback === undefined) {\r\n    return false;\r\n  }\r\n  // If it was the primary children that just suspended, capture and render the\r\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\r\n  var nextState = workInProgress.memoizedState;\r\n  return nextState === null;\r\n}\r\n\r\n// This module is forked in different environments.\r\n// By default, return `true` to log errors to the console.\r\n// Forks can return `false` if this isn't desirable.\r\nfunction showErrorDialog(capturedError) {\r\n  return true;\r\n}\r\n\r\nfunction logCapturedError(capturedError) {\r\n  var logError = showErrorDialog(capturedError);\r\n\r\n  // Allow injected showErrorDialog() to prevent default console.error logging.\r\n  // This enables renderers like ReactNative to better manage redbox behavior.\r\n  if (logError === false) {\r\n    return;\r\n  }\r\n\r\n  var error = capturedError.error;\r\n  {\r\n    var componentName = capturedError.componentName,\r\n        componentStack = capturedError.componentStack,\r\n        errorBoundaryName = capturedError.errorBoundaryName,\r\n        errorBoundaryFound = capturedError.errorBoundaryFound,\r\n        willRetry = capturedError.willRetry;\r\n\r\n    // Browsers support silencing uncaught errors by calling\r\n    // `preventDefault()` in window `error` handler.\r\n    // We record this information as an expando on the error.\r\n\r\n    if (error != null && error._suppressLogging) {\r\n      if (errorBoundaryFound && willRetry) {\r\n        // The error is recoverable and was silenced.\r\n        // Ignore it and don't print the stack addendum.\r\n        // This is handy for testing error boundaries without noise.\r\n        return;\r\n      }\r\n      // The error is fatal. Since the silencing might have\r\n      // been accidental, we'll surface it anyway.\r\n      // However, the browser would have silenced the original error\r\n      // so we'll print it first, and then print the stack addendum.\r\n      console.error(error);\r\n      // For a more detailed description of this block, see:\r\n      // https://github.com/facebook/react/pull/13384\r\n    }\r\n\r\n    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';\r\n\r\n    var errorBoundaryMessage = void 0;\r\n    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.\r\n    if (errorBoundaryFound && errorBoundaryName) {\r\n      if (willRetry) {\r\n        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');\r\n      } else {\r\n        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';\r\n      }\r\n    } else {\r\n      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';\r\n    }\r\n    var combinedMessage = '' + componentNameMessage + componentStack + '\\n\\n' + ('' + errorBoundaryMessage);\r\n\r\n    // In development, we provide our own message with just the component stack.\r\n    // We don't include the original error message and JS stack because the browser\r\n    // has already printed it. Even if the application swallows the error, it is still\r\n    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\r\n    console.error(combinedMessage);\r\n  }\r\n}\r\n\r\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\r\n{\r\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\r\n}\r\n\r\nvar PossiblyWeakSet$1 = typeof WeakSet === 'function' ? WeakSet : Set;\r\n\r\nfunction logError(boundary, errorInfo) {\r\n  var source = errorInfo.source;\r\n  var stack = errorInfo.stack;\r\n  if (stack === null && source !== null) {\r\n    stack = getStackByFiberInDevAndProd(source);\r\n  }\r\n\r\n  var capturedError = {\r\n    componentName: source !== null ? getComponentName(source.type) : null,\r\n    componentStack: stack !== null ? stack : '',\r\n    error: errorInfo.value,\r\n    errorBoundary: null,\r\n    errorBoundaryName: null,\r\n    errorBoundaryFound: false,\r\n    willRetry: false\r\n  };\r\n\r\n  if (boundary !== null && boundary.tag === ClassComponent) {\r\n    capturedError.errorBoundary = boundary.stateNode;\r\n    capturedError.errorBoundaryName = getComponentName(boundary.type);\r\n    capturedError.errorBoundaryFound = true;\r\n    capturedError.willRetry = true;\r\n  }\r\n\r\n  try {\r\n    logCapturedError(capturedError);\r\n  } catch (e) {\r\n    // This method must not throw, or React internal state will get messed up.\r\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\r\n    // we want to report this error outside of the normal stack as a last resort.\r\n    // https://github.com/facebook/react/issues/13188\r\n    setTimeout(function () {\r\n      throw e;\r\n    });\r\n  }\r\n}\r\n\r\nvar callComponentWillUnmountWithTimer = function (current$$1, instance) {\r\n  startPhaseTimer(current$$1, 'componentWillUnmount');\r\n  instance.props = current$$1.memoizedProps;\r\n  instance.state = current$$1.memoizedState;\r\n  instance.componentWillUnmount();\r\n  stopPhaseTimer();\r\n};\r\n\r\n// Capture errors so they don't interrupt unmounting.\r\nfunction safelyCallComponentWillUnmount(current$$1, instance) {\r\n  {\r\n    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);\r\n    if (hasCaughtError()) {\r\n      var unmountError = clearCaughtError();\r\n      captureCommitPhaseError(current$$1, unmountError);\r\n    }\r\n  }\r\n}\r\n\r\nfunction safelyDetachRef(current$$1) {\r\n  var ref = current$$1.ref;\r\n  if (ref !== null) {\r\n    if (typeof ref === 'function') {\r\n      {\r\n        invokeGuardedCallback(null, ref, null, null);\r\n        if (hasCaughtError()) {\r\n          var refError = clearCaughtError();\r\n          captureCommitPhaseError(current$$1, refError);\r\n        }\r\n      }\r\n    } else {\r\n      ref.current = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction safelyCallDestroy(current$$1, destroy) {\r\n  {\r\n    invokeGuardedCallback(null, destroy, null);\r\n    if (hasCaughtError()) {\r\n      var error = clearCaughtError();\r\n      captureCommitPhaseError(current$$1, error);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitBeforeMutationLifeCycles(current$$1, finishedWork) {\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent:\r\n      {\r\n        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);\r\n        return;\r\n      }\r\n    case ClassComponent:\r\n      {\r\n        if (finishedWork.effectTag & Snapshot) {\r\n          if (current$$1 !== null) {\r\n            var prevProps = current$$1.memoizedProps;\r\n            var prevState = current$$1.memoizedState;\r\n            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');\r\n            var instance = finishedWork.stateNode;\r\n            // We could update instance props and state here,\r\n            // but instead we rely on them being set during last render.\r\n            // TODO: revisit this when we implement resuming.\r\n            {\r\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n              }\r\n            }\r\n            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\r\n            {\r\n              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\r\n              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\r\n                didWarnSet.add(finishedWork.type);\r\n                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));\r\n              }\r\n            }\r\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\r\n            stopPhaseTimer();\r\n          }\r\n        }\r\n        return;\r\n      }\r\n    case HostRoot:\r\n    case HostComponent:\r\n    case HostText:\r\n    case HostPortal:\r\n    case IncompleteClassComponent:\r\n      // Nothing to do for these component types\r\n      return;\r\n    default:\r\n      {\r\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitHookEffectList(unmountTag, mountTag, finishedWork) {\r\n  var updateQueue = finishedWork.updateQueue;\r\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\r\n  if (lastEffect !== null) {\r\n    var firstEffect = lastEffect.next;\r\n    var effect = firstEffect;\r\n    do {\r\n      if ((effect.tag & unmountTag) !== NoEffect$1) {\r\n        // Unmount\r\n        var destroy = effect.destroy;\r\n        effect.destroy = undefined;\r\n        if (destroy !== undefined) {\r\n          destroy();\r\n        }\r\n      }\r\n      if ((effect.tag & mountTag) !== NoEffect$1) {\r\n        // Mount\r\n        var create = effect.create;\r\n        effect.destroy = create();\r\n\r\n        {\r\n          var _destroy = effect.destroy;\r\n          if (_destroy !== undefined && typeof _destroy !== 'function') {\r\n            var addendum = void 0;\r\n            if (_destroy === null) {\r\n              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';\r\n            } else if (typeof _destroy.then === 'function') {\r\n              addendum = '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, you may write an async function separately ' + 'and then call it from inside the effect:\\n\\n' + 'async function fetchComment(commentId) {\\n' + '  // You can await here\\n' + '}\\n\\n' + 'useEffect(() => {\\n' + '  fetchComment(commentId);\\n' + '}, [commentId]);\\n\\n' + 'In the future, React will provide a more idiomatic solution for data fetching ' + \"that doesn't involve writing effects manually.\";\r\n            } else {\r\n              addendum = ' You returned: ' + _destroy;\r\n            }\r\n            warningWithoutStack$1(false, 'An Effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));\r\n          }\r\n        }\r\n      }\r\n      effect = effect.next;\r\n    } while (effect !== firstEffect);\r\n  }\r\n}\r\n\r\nfunction commitPassiveHookEffects(finishedWork) {\r\n  commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);\r\n  commitHookEffectList(NoEffect$1, MountPassive, finishedWork);\r\n}\r\n\r\nfunction commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent:\r\n      {\r\n        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);\r\n        break;\r\n      }\r\n    case ClassComponent:\r\n      {\r\n        var instance = finishedWork.stateNode;\r\n        if (finishedWork.effectTag & Update) {\r\n          if (current$$1 === null) {\r\n            startPhaseTimer(finishedWork, 'componentDidMount');\r\n            // We could update instance props and state here,\r\n            // but instead we rely on them being set during last render.\r\n            // TODO: revisit this when we implement resuming.\r\n            {\r\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n              }\r\n            }\r\n            instance.componentDidMount();\r\n            stopPhaseTimer();\r\n          } else {\r\n            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);\r\n            var prevState = current$$1.memoizedState;\r\n            startPhaseTimer(finishedWork, 'componentDidUpdate');\r\n            // We could update instance props and state here,\r\n            // but instead we rely on them being set during last render.\r\n            // TODO: revisit this when we implement resuming.\r\n            {\r\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n              }\r\n            }\r\n            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\r\n            stopPhaseTimer();\r\n          }\r\n        }\r\n        var updateQueue = finishedWork.updateQueue;\r\n        if (updateQueue !== null) {\r\n          {\r\n            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\r\n              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\r\n            }\r\n          }\r\n          // We could update instance props and state here,\r\n          // but instead we rely on them being set during last render.\r\n          // TODO: revisit this when we implement resuming.\r\n          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);\r\n        }\r\n        return;\r\n      }\r\n    case HostRoot:\r\n      {\r\n        var _updateQueue = finishedWork.updateQueue;\r\n        if (_updateQueue !== null) {\r\n          var _instance = null;\r\n          if (finishedWork.child !== null) {\r\n            switch (finishedWork.child.tag) {\r\n              case HostComponent:\r\n                _instance = getPublicInstance(finishedWork.child.stateNode);\r\n                break;\r\n              case ClassComponent:\r\n                _instance = finishedWork.child.stateNode;\r\n                break;\r\n            }\r\n          }\r\n          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);\r\n        }\r\n        return;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        var _instance2 = finishedWork.stateNode;\r\n\r\n        // Renderers may schedule work to be done after host components are mounted\r\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\r\n        // These effects should only be committed when components are first mounted,\r\n        // aka when there is no current/alternate.\r\n        if (current$$1 === null && finishedWork.effectTag & Update) {\r\n          var type = finishedWork.type;\r\n          var props = finishedWork.memoizedProps;\r\n          commitMount(_instance2, type, props, finishedWork);\r\n        }\r\n\r\n        return;\r\n      }\r\n    case HostText:\r\n      {\r\n        // We have no life-cycles associated with text.\r\n        return;\r\n      }\r\n    case HostPortal:\r\n      {\r\n        // We have no life-cycles associated with portals.\r\n        return;\r\n      }\r\n    case Profiler:\r\n      {\r\n        if (enableProfilerTimer) {\r\n          var onRender = finishedWork.memoizedProps.onRender;\r\n\r\n          if (enableSchedulerTracing) {\r\n            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);\r\n          } else {\r\n            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());\r\n          }\r\n        }\r\n        return;\r\n      }\r\n    case SuspenseComponent:\r\n      break;\r\n    case IncompleteClassComponent:\r\n      break;\r\n    default:\r\n      {\r\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\r\n      }\r\n  }\r\n}\r\n\r\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\r\n  if (supportsMutation) {\r\n    // We only have the top Fiber that was inserted but we need to recurse down its\r\n    var node = finishedWork;\r\n    while (true) {\r\n      if (node.tag === HostComponent) {\r\n        var instance = node.stateNode;\r\n        if (isHidden) {\r\n          hideInstance(instance);\r\n        } else {\r\n          unhideInstance(node.stateNode, node.memoizedProps);\r\n        }\r\n      } else if (node.tag === HostText) {\r\n        var _instance3 = node.stateNode;\r\n        if (isHidden) {\r\n          hideTextInstance(_instance3);\r\n        } else {\r\n          unhideTextInstance(_instance3, node.memoizedProps);\r\n        }\r\n      } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {\r\n        // Found a nested Suspense component that timed out. Skip over the\r\n        var fallbackChildFragment = node.child.sibling;\r\n        fallbackChildFragment.return = node;\r\n        node = fallbackChildFragment;\r\n        continue;\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n      if (node === finishedWork) {\r\n        return;\r\n      }\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === finishedWork) {\r\n          return;\r\n        }\r\n        node = node.return;\r\n      }\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitAttachRef(finishedWork) {\r\n  var ref = finishedWork.ref;\r\n  if (ref !== null) {\r\n    var instance = finishedWork.stateNode;\r\n    var instanceToUse = void 0;\r\n    switch (finishedWork.tag) {\r\n      case HostComponent:\r\n        instanceToUse = getPublicInstance(instance);\r\n        break;\r\n      default:\r\n        instanceToUse = instance;\r\n    }\r\n    if (typeof ref === 'function') {\r\n      ref(instanceToUse);\r\n    } else {\r\n      {\r\n        if (!ref.hasOwnProperty('current')) {\r\n          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));\r\n        }\r\n      }\r\n\r\n      ref.current = instanceToUse;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitDetachRef(current$$1) {\r\n  var currentRef = current$$1.ref;\r\n  if (currentRef !== null) {\r\n    if (typeof currentRef === 'function') {\r\n      currentRef(null);\r\n    } else {\r\n      currentRef.current = null;\r\n    }\r\n  }\r\n}\r\n\r\n// User-originating errors (lifecycles and refs) should not interrupt\r\n// deletion, so don't let them throw. Host-originating errors should\r\n// interrupt deletion, so it's okay\r\nfunction commitUnmount(current$$1) {\r\n  onCommitUnmount(current$$1);\r\n\r\n  switch (current$$1.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      {\r\n        var updateQueue = current$$1.updateQueue;\r\n        if (updateQueue !== null) {\r\n          var lastEffect = updateQueue.lastEffect;\r\n          if (lastEffect !== null) {\r\n            var firstEffect = lastEffect.next;\r\n            var effect = firstEffect;\r\n            do {\r\n              var destroy = effect.destroy;\r\n              if (destroy !== undefined) {\r\n                safelyCallDestroy(current$$1, destroy);\r\n              }\r\n              effect = effect.next;\r\n            } while (effect !== firstEffect);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    case ClassComponent:\r\n      {\r\n        safelyDetachRef(current$$1);\r\n        var instance = current$$1.stateNode;\r\n        if (typeof instance.componentWillUnmount === 'function') {\r\n          safelyCallComponentWillUnmount(current$$1, instance);\r\n        }\r\n        return;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        safelyDetachRef(current$$1);\r\n        return;\r\n      }\r\n    case HostPortal:\r\n      {\r\n        // TODO: this is recursive.\r\n        // We are also not using this parent because\r\n        // the portal will get pushed immediately.\r\n        if (supportsMutation) {\r\n          unmountHostComponents(current$$1);\r\n        } else if (supportsPersistence) {\r\n          emptyPortalContainer(current$$1);\r\n        }\r\n        return;\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitNestedUnmounts(root) {\r\n  // While we're inside a removed host node we don't want to call\r\n  // removeChild on the inner nodes because they're removed by the top\r\n  // call anyway. We also want to call componentWillUnmount on all\r\n  // composites before this host node is removed from the tree. Therefore\r\n  var node = root;\r\n  while (true) {\r\n    commitUnmount(node);\r\n    // Visit children because they may contain more composite or host nodes.\r\n    // Skip portals because commitUnmount() currently visits them recursively.\r\n    if (node.child !== null && (\r\n    // If we use mutation we drill down into portals using commitUnmount above.\r\n    // If we don't use mutation we drill down into portals here instead.\r\n    !supportsMutation || node.tag !== HostPortal)) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n    if (node === root) {\r\n      return;\r\n    }\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === root) {\r\n        return;\r\n      }\r\n      node = node.return;\r\n    }\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n}\r\n\r\nfunction detachFiber(current$$1) {\r\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\r\n  // should clear the child pointer of the parent alternate to let this\r\n  // get GC:ed but we don't know which for sure which parent is the current\r\n  // one so we'll settle for GC:ing the subtree of this child. This child\r\n  // itself will be GC:ed when the parent updates the next time.\r\n  current$$1.return = null;\r\n  current$$1.child = null;\r\n  current$$1.memoizedState = null;\r\n  current$$1.updateQueue = null;\r\n  var alternate = current$$1.alternate;\r\n  if (alternate !== null) {\r\n    alternate.return = null;\r\n    alternate.child = null;\r\n    alternate.memoizedState = null;\r\n    alternate.updateQueue = null;\r\n  }\r\n}\r\n\r\nfunction emptyPortalContainer(current$$1) {\r\n  if (!supportsPersistence) {\r\n    return;\r\n  }\r\n\r\n  var portal = current$$1.stateNode;\r\n  var containerInfo = portal.containerInfo;\r\n\r\n  var emptyChildSet = createContainerChildSet(containerInfo);\r\n  replaceContainerChildren(containerInfo, emptyChildSet);\r\n}\r\n\r\nfunction commitContainer(finishedWork) {\r\n  if (!supportsPersistence) {\r\n    return;\r\n  }\r\n\r\n  switch (finishedWork.tag) {\r\n    case ClassComponent:\r\n      {\r\n        return;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        return;\r\n      }\r\n    case HostText:\r\n      {\r\n        return;\r\n      }\r\n    case HostRoot:\r\n    case HostPortal:\r\n      {\r\n        var portalOrRoot = finishedWork.stateNode;\r\n        var containerInfo = portalOrRoot.containerInfo,\r\n            _pendingChildren = portalOrRoot.pendingChildren;\r\n\r\n        replaceContainerChildren(containerInfo, _pendingChildren);\r\n        return;\r\n      }\r\n    default:\r\n      {\r\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\r\n      }\r\n  }\r\n}\r\n\r\nfunction getHostParentFiber(fiber) {\r\n  var parent = fiber.return;\r\n  while (parent !== null) {\r\n    if (isHostParent(parent)) {\r\n      return parent;\r\n    }\r\n    parent = parent.return;\r\n  }\r\n  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');\r\n}\r\n\r\nfunction isHostParent(fiber) {\r\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\r\n}\r\n\r\nfunction getHostSibling(fiber) {\r\n  // We're going to search forward into the tree until we find a sibling host\r\n  // node. Unfortunately, if multiple insertions are done in a row we have to\r\n  // search past them. This leads to exponential search for the next sibling.\r\n  var node = fiber;\r\n  siblings: while (true) {\r\n    // If we didn't find anything, let's try the next sibling.\r\n    while (node.sibling === null) {\r\n      if (node.return === null || isHostParent(node.return)) {\r\n        // If we pop out of the root or hit the parent the fiber we are the\r\n        // last sibling.\r\n        return null;\r\n      }\r\n      node = node.return;\r\n    }\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedSuspenseComponent) {\r\n      // If it is not host node and, we might have a host node inside it.\r\n      // Try to search down until we find one.\r\n      if (node.effectTag & Placement) {\r\n        // If we don't have a child, try the siblings instead.\r\n        continue siblings;\r\n      }\r\n      // If we don't have a child, try the siblings instead.\r\n      // We also skip portals because they are not part of this host tree.\r\n      if (node.child === null || node.tag === HostPortal) {\r\n        continue siblings;\r\n      } else {\r\n        node.child.return = node;\r\n        node = node.child;\r\n      }\r\n    }\r\n    // Check if this host node is stable or about to be placed.\r\n    if (!(node.effectTag & Placement)) {\r\n      // Found it!\r\n      return node.stateNode;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPlacement(finishedWork) {\r\n  if (!supportsMutation) {\r\n    return;\r\n  }\r\n\r\n  // Recursively insert all host nodes into the parent.\r\n  var parentFiber = getHostParentFiber(finishedWork);\r\n\r\n  // Note: these two variables *must* always be updated together.\r\n  var parent = void 0;\r\n  var isContainer = void 0;\r\n\r\n  switch (parentFiber.tag) {\r\n    case HostComponent:\r\n      parent = parentFiber.stateNode;\r\n      isContainer = false;\r\n      break;\r\n    case HostRoot:\r\n      parent = parentFiber.stateNode.containerInfo;\r\n      isContainer = true;\r\n      break;\r\n    case HostPortal:\r\n      parent = parentFiber.stateNode.containerInfo;\r\n      isContainer = true;\r\n      break;\r\n    default:\r\n      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');\r\n  }\r\n  if (parentFiber.effectTag & ContentReset) {\r\n    // Reset the text content of the parent before doing any insertions\r\n    resetTextContent(parent);\r\n    // Clear ContentReset from the effect tag\r\n    parentFiber.effectTag &= ~ContentReset;\r\n  }\r\n\r\n  var before = getHostSibling(finishedWork);\r\n  // We only have the top Fiber that was inserted but we need to recurse down its\r\n  // children to find all the terminal nodes.\r\n  var node = finishedWork;\r\n  while (true) {\r\n    if (node.tag === HostComponent || node.tag === HostText) {\r\n      if (before) {\r\n        if (isContainer) {\r\n          insertInContainerBefore(parent, node.stateNode, before);\r\n        } else {\r\n          insertBefore(parent, node.stateNode, before);\r\n        }\r\n      } else {\r\n        if (isContainer) {\r\n          appendChildToContainer(parent, node.stateNode);\r\n        } else {\r\n          appendChild(parent, node.stateNode);\r\n        }\r\n      }\r\n    } else if (node.tag === HostPortal) {\r\n      // If the insertion itself is a portal, then we don't want to traverse\r\n      // down its children. Instead, we'll get insertions from each child in\r\n      // the portal directly.\r\n    } else if (node.child !== null) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n    if (node === finishedWork) {\r\n      return;\r\n    }\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === finishedWork) {\r\n        return;\r\n      }\r\n      node = node.return;\r\n    }\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n}\r\n\r\nfunction unmountHostComponents(current$$1) {\r\n  // We only have the top Fiber that was deleted but we need to recurse down its\r\n  var node = current$$1;\r\n\r\n  // Each iteration, currentParent is populated with node's host parent if not\r\n  // currentParentIsValid.\r\n  var currentParentIsValid = false;\r\n\r\n  // Note: these two variables *must* always be updated together.\r\n  var currentParent = void 0;\r\n  var currentParentIsContainer = void 0;\r\n\r\n  while (true) {\r\n    if (!currentParentIsValid) {\r\n      var parent = node.return;\r\n      findParent: while (true) {\r\n        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n        switch (parent.tag) {\r\n          case HostComponent:\r\n            currentParent = parent.stateNode;\r\n            currentParentIsContainer = false;\r\n            break findParent;\r\n          case HostRoot:\r\n            currentParent = parent.stateNode.containerInfo;\r\n            currentParentIsContainer = true;\r\n            break findParent;\r\n          case HostPortal:\r\n            currentParent = parent.stateNode.containerInfo;\r\n            currentParentIsContainer = true;\r\n            break findParent;\r\n        }\r\n        parent = parent.return;\r\n      }\r\n      currentParentIsValid = true;\r\n    }\r\n\r\n    if (node.tag === HostComponent || node.tag === HostText) {\r\n      commitNestedUnmounts(node);\r\n      // After all the children have unmounted, it is now safe to remove the\r\n      // node from the tree.\r\n      if (currentParentIsContainer) {\r\n        removeChildFromContainer(currentParent, node.stateNode);\r\n      } else {\r\n        removeChild(currentParent, node.stateNode);\r\n      }\r\n      // Don't visit children because we already visited them.\r\n    } else if (enableSuspenseServerRenderer && node.tag === DehydratedSuspenseComponent) {\r\n      // Delete the dehydrated suspense boundary and all of its content.\r\n      if (currentParentIsContainer) {\r\n        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);\r\n      } else {\r\n        clearSuspenseBoundary(currentParent, node.stateNode);\r\n      }\r\n    } else if (node.tag === HostPortal) {\r\n      if (node.child !== null) {\r\n        // When we go into a portal, it becomes the parent to remove from.\r\n        // We will reassign it back when we pop the portal on the way up.\r\n        currentParent = node.stateNode.containerInfo;\r\n        currentParentIsContainer = true;\r\n        // Visit children because portals might contain host components.\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n    } else {\r\n      commitUnmount(node);\r\n      // Visit children because we may find more host components below.\r\n      if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n    }\r\n    if (node === current$$1) {\r\n      return;\r\n    }\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === current$$1) {\r\n        return;\r\n      }\r\n      node = node.return;\r\n      if (node.tag === HostPortal) {\r\n        // When we go out of the portal, we need to restore the parent.\r\n        // Since we don't keep a stack of them, we will search for it.\r\n        currentParentIsValid = false;\r\n      }\r\n    }\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n}\r\n\r\nfunction commitDeletion(current$$1) {\r\n  if (supportsMutation) {\r\n    // Recursively delete all host nodes from the parent.\r\n    // Detach refs and call componentWillUnmount() on the whole subtree.\r\n    unmountHostComponents(current$$1);\r\n  } else {\r\n    // Detach refs and call componentWillUnmount() on the whole subtree.\r\n    commitNestedUnmounts(current$$1);\r\n  }\r\n  detachFiber(current$$1);\r\n}\r\n\r\nfunction commitWork(current$$1, finishedWork) {\r\n  if (!supportsMutation) {\r\n    switch (finishedWork.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case MemoComponent:\r\n      case SimpleMemoComponent:\r\n        {\r\n          // Note: We currently never use MountMutation, but useLayout uses\r\n          // UnmountMutation.\r\n          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\r\n          return;\r\n        }\r\n    }\r\n\r\n    commitContainer(finishedWork);\r\n    return;\r\n  }\r\n\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      {\r\n        // Note: We currently never use MountMutation, but useLayout uses\r\n        // UnmountMutation.\r\n        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\r\n        return;\r\n      }\r\n    case ClassComponent:\r\n      {\r\n        return;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        var instance = finishedWork.stateNode;\r\n        if (instance != null) {\r\n          // Commit the work prepared earlier.\r\n          var newProps = finishedWork.memoizedProps;\r\n          // For hydration we reuse the update path but we treat the oldProps\r\n          // as the newProps. The updatePayload will contain the real change in\r\n          // this case.\r\n          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;\r\n          var type = finishedWork.type;\r\n          // TODO: Type the updateQueue to be specific to host components.\r\n          var updatePayload = finishedWork.updateQueue;\r\n          finishedWork.updateQueue = null;\r\n          if (updatePayload !== null) {\r\n            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);\r\n          }\r\n        }\r\n        return;\r\n      }\r\n    case HostText:\r\n      {\r\n        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n        var textInstance = finishedWork.stateNode;\r\n        var newText = finishedWork.memoizedProps;\r\n        // For hydration we reuse the update path but we treat the oldProps\r\n        // as the newProps. The updatePayload will contain the real change in\r\n        // this case.\r\n        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;\r\n        commitTextUpdate(textInstance, oldText, newText);\r\n        return;\r\n      }\r\n    case HostRoot:\r\n      {\r\n        return;\r\n      }\r\n    case Profiler:\r\n      {\r\n        return;\r\n      }\r\n    case SuspenseComponent:\r\n      {\r\n        var newState = finishedWork.memoizedState;\r\n\r\n        var newDidTimeout = void 0;\r\n        var primaryChildParent = finishedWork;\r\n        if (newState === null) {\r\n          newDidTimeout = false;\r\n        } else {\r\n          newDidTimeout = true;\r\n          primaryChildParent = finishedWork.child;\r\n          if (newState.timedOutAt === NoWork) {\r\n            // If the children had not already timed out, record the time.\r\n            // This is used to compute the elapsed time during subsequent\r\n            // attempts to render the children.\r\n            newState.timedOutAt = requestCurrentTime();\r\n          }\r\n        }\r\n\r\n        if (primaryChildParent !== null) {\r\n          hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);\r\n        }\r\n\r\n        // If this boundary just timed out, then it will have a set of thenables.\r\n        // For each thenable, attach a listener so that when it resolves, React\r\n        // attempts to re-render the boundary in the primary (pre-timeout) state.\r\n        var thenables = finishedWork.updateQueue;\r\n        if (thenables !== null) {\r\n          finishedWork.updateQueue = null;\r\n          var retryCache = finishedWork.stateNode;\r\n          if (retryCache === null) {\r\n            retryCache = finishedWork.stateNode = new PossiblyWeakSet$1();\r\n          }\r\n          thenables.forEach(function (thenable) {\r\n            // Memoize using the boundary fiber to prevent redundant listeners.\r\n            var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);\r\n            if (enableSchedulerTracing) {\r\n              retry = tracing.unstable_wrap(retry);\r\n            }\r\n            if (!retryCache.has(thenable)) {\r\n              retryCache.add(thenable);\r\n              thenable.then(retry, retry);\r\n            }\r\n          });\r\n        }\r\n\r\n        return;\r\n      }\r\n    case IncompleteClassComponent:\r\n      {\r\n        return;\r\n      }\r\n    default:\r\n      {\r\n        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\r\n      }\r\n  }\r\n}\r\n\r\nfunction commitResetTextContent(current$$1) {\r\n  if (!supportsMutation) {\r\n    return;\r\n  }\r\n  resetTextContent(current$$1.stateNode);\r\n}\r\n\r\nvar PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\r\nvar PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\r\n\r\nfunction createRootErrorUpdate(fiber, errorInfo, expirationTime) {\r\n  var update = createUpdate(expirationTime);\r\n  // Unmount the root by rendering null.\r\n  update.tag = CaptureUpdate;\r\n  // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n  update.payload = { element: null };\r\n  var error = errorInfo.value;\r\n  update.callback = function () {\r\n    onUncaughtError(error);\r\n    logError(fiber, errorInfo);\r\n  };\r\n  return update;\r\n}\r\n\r\nfunction createClassErrorUpdate(fiber, errorInfo, expirationTime) {\r\n  var update = createUpdate(expirationTime);\r\n  update.tag = CaptureUpdate;\r\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\r\n  if (typeof getDerivedStateFromError === 'function') {\r\n    var error = errorInfo.value;\r\n    update.payload = function () {\r\n      return getDerivedStateFromError(error);\r\n    };\r\n  }\r\n\r\n  var inst = fiber.stateNode;\r\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\r\n    update.callback = function callback() {\r\n      if (typeof getDerivedStateFromError !== 'function') {\r\n        // To preserve the preexisting retry behavior of error boundaries,\r\n        // we keep track of which ones already failed during this batch.\r\n        // This gets reset before we yield back to the browser.\r\n        // TODO: Warn in strict mode if getDerivedStateFromError is\r\n        // not defined.\r\n        markLegacyErrorBoundaryAsFailed(this);\r\n      }\r\n      var error = errorInfo.value;\r\n      var stack = errorInfo.stack;\r\n      logError(fiber, errorInfo);\r\n      this.componentDidCatch(error, {\r\n        componentStack: stack !== null ? stack : ''\r\n      });\r\n      {\r\n        if (typeof getDerivedStateFromError !== 'function') {\r\n          // If componentDidCatch is the only error boundary method defined,\r\n          // then it needs to call setState to recover from errors.\r\n          // If no state update is scheduled then the boundary will swallow the error.\r\n          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;\r\n        }\r\n      }\r\n    };\r\n  }\r\n  return update;\r\n}\r\n\r\nfunction attachPingListener(root, renderExpirationTime, thenable) {\r\n  // Attach a listener to the promise to \"ping\" the root and retry. But\r\n  // only if one does not already exist for the current render expiration\r\n  // time (which acts like a \"thread ID\" here).\r\n  var pingCache = root.pingCache;\r\n  var threadIDs = void 0;\r\n  if (pingCache === null) {\r\n    pingCache = root.pingCache = new PossiblyWeakMap();\r\n    threadIDs = new Set();\r\n    pingCache.set(thenable, threadIDs);\r\n  } else {\r\n    threadIDs = pingCache.get(thenable);\r\n    if (threadIDs === undefined) {\r\n      threadIDs = new Set();\r\n      pingCache.set(thenable, threadIDs);\r\n    }\r\n  }\r\n  if (!threadIDs.has(renderExpirationTime)) {\r\n    // Memoize using the thread ID to prevent redundant listeners.\r\n    threadIDs.add(renderExpirationTime);\r\n    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);\r\n    if (enableSchedulerTracing) {\r\n      ping = tracing.unstable_wrap(ping);\r\n    }\r\n    thenable.then(ping, ping);\r\n  }\r\n}\r\n\r\nfunction throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {\r\n  // The source fiber did not complete.\r\n  sourceFiber.effectTag |= Incomplete;\r\n  // Its effect list is no longer valid.\r\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\r\n\r\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\r\n    // This is a thenable.\r\n    var thenable = value;\r\n\r\n    // Find the earliest timeout threshold of all the placeholders in the\r\n    // ancestor path. We could avoid this traversal by storing the thresholds on\r\n    // the stack, but we choose not to because we only hit this path if we're\r\n    // IO-bound (i.e. if something suspends). Whereas the stack is used even in\r\n    // the non-IO- bound case.\r\n    var _workInProgress = returnFiber;\r\n    var earliestTimeoutMs = -1;\r\n    var startTimeMs = -1;\r\n    do {\r\n      if (_workInProgress.tag === SuspenseComponent) {\r\n        var current$$1 = _workInProgress.alternate;\r\n        if (current$$1 !== null) {\r\n          var currentState = current$$1.memoizedState;\r\n          if (currentState !== null) {\r\n            // Reached a boundary that already timed out. Do not search\r\n            // any further.\r\n            var timedOutAt = currentState.timedOutAt;\r\n            startTimeMs = expirationTimeToMs(timedOutAt);\r\n            // Do not search any further.\r\n            break;\r\n          }\r\n        }\r\n        var timeoutPropMs = _workInProgress.pendingProps.maxDuration;\r\n        if (typeof timeoutPropMs === 'number') {\r\n          if (timeoutPropMs <= 0) {\r\n            earliestTimeoutMs = 0;\r\n          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {\r\n            earliestTimeoutMs = timeoutPropMs;\r\n          }\r\n        }\r\n      }\r\n      // If there is a DehydratedSuspenseComponent we don't have to do anything because\r\n      // if something suspends inside it, we will simply leave that as dehydrated. It\r\n      // will never timeout.\r\n      _workInProgress = _workInProgress.return;\r\n    } while (_workInProgress !== null);\r\n\r\n    // Schedule the nearest Suspense to re-render the timed out view.\r\n    _workInProgress = returnFiber;\r\n    do {\r\n      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {\r\n        // Found the nearest boundary.\r\n\r\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\r\n        var thenables = _workInProgress.updateQueue;\r\n        if (thenables === null) {\r\n          var updateQueue = new Set();\r\n          updateQueue.add(thenable);\r\n          _workInProgress.updateQueue = updateQueue;\r\n        } else {\r\n          thenables.add(thenable);\r\n        }\r\n\r\n        // If the boundary is outside of concurrent mode, we should *not*\r\n        // suspend the commit. Pretend as if the suspended component rendered\r\n        // null and keep rendering. In the commit phase, we'll schedule a\r\n        // subsequent synchronous update to re-render the Suspense.\r\n        //\r\n        // Note: It doesn't matter whether the component that suspended was\r\n        // inside a concurrent mode tree. If the Suspense is outside of it, we\r\n        // should *not* suspend the commit.\r\n        if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {\r\n          _workInProgress.effectTag |= DidCapture;\r\n\r\n          // We're going to commit this fiber even though it didn't complete.\r\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\r\n          // all lifecycle effect tags.\r\n          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);\r\n\r\n          if (sourceFiber.tag === ClassComponent) {\r\n            var currentSourceFiber = sourceFiber.alternate;\r\n            if (currentSourceFiber === null) {\r\n              // This is a new mount. Change the tag so it's not mistaken for a\r\n              // completed class component. For example, we should not call\r\n              // componentWillUnmount if it is deleted.\r\n              sourceFiber.tag = IncompleteClassComponent;\r\n            } else {\r\n              // When we try rendering again, we should not reuse the current fiber,\r\n              // since it's known to be in an inconsistent state. Use a force updte to\r\n              // prevent a bail out.\r\n              var update = createUpdate(Sync);\r\n              update.tag = ForceUpdate;\r\n              enqueueUpdate(sourceFiber, update);\r\n            }\r\n          }\r\n\r\n          // The source fiber did not complete. Mark it with Sync priority to\r\n          // indicate that it still has pending work.\r\n          sourceFiber.expirationTime = Sync;\r\n\r\n          // Exit without suspending.\r\n          return;\r\n        }\r\n\r\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\r\n        // with the normal suspend path.\r\n\r\n        attachPingListener(root, renderExpirationTime, thenable);\r\n\r\n        var absoluteTimeoutMs = void 0;\r\n        if (earliestTimeoutMs === -1) {\r\n          // If no explicit threshold is given, default to an arbitrarily large\r\n          // value. The actual size doesn't matter because the threshold for the\r\n          // whole tree will be clamped to the expiration time.\r\n          absoluteTimeoutMs = maxSigned31BitInt;\r\n        } else {\r\n          if (startTimeMs === -1) {\r\n            // This suspend happened outside of any already timed-out\r\n            // placeholders. We don't know exactly when the update was\r\n            // scheduled, but we can infer an approximate start time from the\r\n            // expiration time. First, find the earliest uncommitted expiration\r\n            // time in the tree, including work that is suspended. Then subtract\r\n            // the offset used to compute an async update's expiration time.\r\n            // This will cause high priority (interactive) work to expire\r\n            // earlier than necessary, but we can account for this by adjusting\r\n            // for the Just Noticeable Difference.\r\n            var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);\r\n            var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\r\n            startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;\r\n          }\r\n          absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;\r\n        }\r\n\r\n        // Mark the earliest timeout in the suspended fiber's ancestor path.\r\n        // After completing the root, we'll take the largest of all the\r\n        // suspended fiber's timeouts and use it to compute a timeout for the\r\n        // whole tree.\r\n        renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);\r\n\r\n        _workInProgress.effectTag |= ShouldCapture;\r\n        _workInProgress.expirationTime = renderExpirationTime;\r\n        return;\r\n      } else if (enableSuspenseServerRenderer && _workInProgress.tag === DehydratedSuspenseComponent) {\r\n        attachPingListener(root, renderExpirationTime, thenable);\r\n\r\n        // Since we already have a current fiber, we can eagerly add a retry listener.\r\n        var retryCache = _workInProgress.memoizedState;\r\n        if (retryCache === null) {\r\n          retryCache = _workInProgress.memoizedState = new PossiblyWeakSet();\r\n          var _current = _workInProgress.alternate;\r\n          !_current ? invariant(false, 'A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.') : void 0;\r\n          _current.memoizedState = retryCache;\r\n        }\r\n        // Memoize using the boundary fiber to prevent redundant listeners.\r\n        if (!retryCache.has(thenable)) {\r\n          retryCache.add(thenable);\r\n          var retry = retryTimedOutBoundary.bind(null, _workInProgress, thenable);\r\n          if (enableSchedulerTracing) {\r\n            retry = tracing.unstable_wrap(retry);\r\n          }\r\n          thenable.then(retry, retry);\r\n        }\r\n        _workInProgress.effectTag |= ShouldCapture;\r\n        _workInProgress.expirationTime = renderExpirationTime;\r\n        return;\r\n      }\r\n      // This boundary already captured during this render. Continue to the next\r\n      // boundary.\r\n      _workInProgress = _workInProgress.return;\r\n    } while (_workInProgress !== null);\r\n    // No boundary was found. Fallthrough to error mode.\r\n    // TODO: Use invariant so the message is stripped in prod?\r\n    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\\n' + '\\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));\r\n  }\r\n\r\n  // We didn't find a boundary that could handle this type of exception. Start\r\n  // over and traverse parent path again, this time treating the exception\r\n  // as an error.\r\n  renderDidError();\r\n  value = createCapturedValue(value, sourceFiber);\r\n  var workInProgress = returnFiber;\r\n  do {\r\n    switch (workInProgress.tag) {\r\n      case HostRoot:\r\n        {\r\n          var _errorInfo = value;\r\n          workInProgress.effectTag |= ShouldCapture;\r\n          workInProgress.expirationTime = renderExpirationTime;\r\n          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);\r\n          enqueueCapturedUpdate(workInProgress, _update);\r\n          return;\r\n        }\r\n      case ClassComponent:\r\n        // Capture and retry\r\n        var errorInfo = value;\r\n        var ctor = workInProgress.type;\r\n        var instance = workInProgress.stateNode;\r\n        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\r\n          workInProgress.effectTag |= ShouldCapture;\r\n          workInProgress.expirationTime = renderExpirationTime;\r\n          // Schedule the error boundary to re-render using updated state\r\n          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);\r\n          enqueueCapturedUpdate(workInProgress, _update2);\r\n          return;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    workInProgress = workInProgress.return;\r\n  } while (workInProgress !== null);\r\n}\r\n\r\nfunction unwindWork(workInProgress, renderExpirationTime) {\r\n  switch (workInProgress.tag) {\r\n    case ClassComponent:\r\n      {\r\n        var Component = workInProgress.type;\r\n        if (isContextProvider(Component)) {\r\n          popContext(workInProgress);\r\n        }\r\n        var effectTag = workInProgress.effectTag;\r\n        if (effectTag & ShouldCapture) {\r\n          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;\r\n          return workInProgress;\r\n        }\r\n        return null;\r\n      }\r\n    case HostRoot:\r\n      {\r\n        popHostContainer(workInProgress);\r\n        popTopLevelContextObject(workInProgress);\r\n        var _effectTag = workInProgress.effectTag;\r\n        !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;\r\n        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;\r\n        return workInProgress;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        // TODO: popHydrationState\r\n        popHostContext(workInProgress);\r\n        return null;\r\n      }\r\n    case SuspenseComponent:\r\n      {\r\n        var _effectTag2 = workInProgress.effectTag;\r\n        if (_effectTag2 & ShouldCapture) {\r\n          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;\r\n          // Captured a suspense effect. Re-render the boundary.\r\n          return workInProgress;\r\n        }\r\n        return null;\r\n      }\r\n    case DehydratedSuspenseComponent:\r\n      {\r\n        if (enableSuspenseServerRenderer) {\r\n          // TODO: popHydrationState\r\n          var _effectTag3 = workInProgress.effectTag;\r\n          if (_effectTag3 & ShouldCapture) {\r\n            workInProgress.effectTag = _effectTag3 & ~ShouldCapture | DidCapture;\r\n            // Captured a suspense effect. Re-render the boundary.\r\n            return workInProgress;\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n    case HostPortal:\r\n      popHostContainer(workInProgress);\r\n      return null;\r\n    case ContextProvider:\r\n      popProvider(workInProgress);\r\n      return null;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction unwindInterruptedWork(interruptedWork) {\r\n  switch (interruptedWork.tag) {\r\n    case ClassComponent:\r\n      {\r\n        var childContextTypes = interruptedWork.type.childContextTypes;\r\n        if (childContextTypes !== null && childContextTypes !== undefined) {\r\n          popContext(interruptedWork);\r\n        }\r\n        break;\r\n      }\r\n    case HostRoot:\r\n      {\r\n        popHostContainer(interruptedWork);\r\n        popTopLevelContextObject(interruptedWork);\r\n        break;\r\n      }\r\n    case HostComponent:\r\n      {\r\n        popHostContext(interruptedWork);\r\n        break;\r\n      }\r\n    case HostPortal:\r\n      popHostContainer(interruptedWork);\r\n      break;\r\n    case ContextProvider:\r\n      popProvider(interruptedWork);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\nvar ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;\r\n\r\n\r\nvar didWarnAboutStateTransition = void 0;\r\nvar didWarnSetStateChildContext = void 0;\r\nvar warnAboutUpdateOnUnmounted = void 0;\r\nvar warnAboutInvalidUpdates = void 0;\r\n\r\nif (enableSchedulerTracing) {\r\n  // Provide explicit error message when production+profiling bundle of e.g. react-dom\r\n  // is used with production (non-profiling) bundle of scheduler/tracing\r\n  !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;\r\n}\r\n\r\n{\r\n  didWarnAboutStateTransition = false;\r\n  didWarnSetStateChildContext = false;\r\n  var didWarnStateUpdateForUnmountedComponent = {};\r\n\r\n  warnAboutUpdateOnUnmounted = function (fiber, isClass) {\r\n    // We show the whole stack but dedupe on the top component's name because\r\n    // the problematic code almost always lies inside that component.\r\n    var componentName = getComponentName(fiber.type) || 'ReactComponent';\r\n    if (didWarnStateUpdateForUnmountedComponent[componentName]) {\r\n      return;\r\n    }\r\n    warningWithoutStack$1(false, \"Can't perform a React state update on an unmounted component. This \" + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));\r\n    didWarnStateUpdateForUnmountedComponent[componentName] = true;\r\n  };\r\n\r\n  warnAboutInvalidUpdates = function (instance) {\r\n    switch (phase) {\r\n      case 'getChildContext':\r\n        if (didWarnSetStateChildContext) {\r\n          return;\r\n        }\r\n        warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');\r\n        didWarnSetStateChildContext = true;\r\n        break;\r\n      case 'render':\r\n        if (didWarnAboutStateTransition) {\r\n          return;\r\n        }\r\n        warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');\r\n        didWarnAboutStateTransition = true;\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\n// Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.\r\nvar lastUniqueAsyncExpiration = Sync - 1;\r\n\r\nvar isWorking = false;\r\n\r\n// The next work in progress fiber that we're currently working on.\r\nvar nextUnitOfWork = null;\r\nvar nextRoot = null;\r\n// The time at which we're currently rendering work.\r\nvar nextRenderExpirationTime = NoWork;\r\nvar nextLatestAbsoluteTimeoutMs = -1;\r\nvar nextRenderDidError = false;\r\n\r\n// The next fiber with an effect that we're currently committing.\r\nvar nextEffect = null;\r\n\r\nvar isCommitting$1 = false;\r\nvar rootWithPendingPassiveEffects = null;\r\nvar passiveEffectCallbackHandle = null;\r\nvar passiveEffectCallback = null;\r\n\r\nvar legacyErrorBoundariesThatAlreadyFailed = null;\r\n\r\n// Used for performance tracking.\r\nvar interruptedBy = null;\r\n\r\nvar stashedWorkInProgressProperties = void 0;\r\nvar replayUnitOfWork = void 0;\r\nvar mayReplayFailedUnitOfWork = void 0;\r\nvar isReplayingFailedUnitOfWork = void 0;\r\nvar originalReplayError = void 0;\r\nvar rethrowOriginalError = void 0;\r\nif (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\r\n  stashedWorkInProgressProperties = null;\r\n  mayReplayFailedUnitOfWork = true;\r\n  isReplayingFailedUnitOfWork = false;\r\n  originalReplayError = null;\r\n  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isYieldy) {\r\n    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\r\n      // Don't replay promises. Treat everything else like an error.\r\n      // TODO: Need to figure out a different strategy if/when we add\r\n      // support for catching other types.\r\n      return;\r\n    }\r\n\r\n    // Restore the original state of the work-in-progress\r\n    if (stashedWorkInProgressProperties === null) {\r\n      // This should never happen. Don't throw because this code is DEV-only.\r\n      warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');\r\n      return;\r\n    }\r\n    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);\r\n\r\n    switch (failedUnitOfWork.tag) {\r\n      case HostRoot:\r\n        popHostContainer(failedUnitOfWork);\r\n        popTopLevelContextObject(failedUnitOfWork);\r\n        break;\r\n      case HostComponent:\r\n        popHostContext(failedUnitOfWork);\r\n        break;\r\n      case ClassComponent:\r\n        {\r\n          var Component = failedUnitOfWork.type;\r\n          if (isContextProvider(Component)) {\r\n            popContext(failedUnitOfWork);\r\n          }\r\n          break;\r\n        }\r\n      case HostPortal:\r\n        popHostContainer(failedUnitOfWork);\r\n        break;\r\n      case ContextProvider:\r\n        popProvider(failedUnitOfWork);\r\n        break;\r\n    }\r\n    // Replay the begin phase.\r\n    isReplayingFailedUnitOfWork = true;\r\n    originalReplayError = thrownValue;\r\n    invokeGuardedCallback(null, workLoop, null, isYieldy);\r\n    isReplayingFailedUnitOfWork = false;\r\n    originalReplayError = null;\r\n    if (hasCaughtError()) {\r\n      var replayError = clearCaughtError();\r\n      if (replayError != null && thrownValue != null) {\r\n        try {\r\n          // Reading the expando property is intentionally\r\n          // inside `try` because it might be a getter or Proxy.\r\n          if (replayError._suppressLogging) {\r\n            // Also suppress logging for the original error.\r\n            thrownValue._suppressLogging = true;\r\n          }\r\n        } catch (inner) {\r\n          // Ignore.\r\n        }\r\n      }\r\n    } else {\r\n      // If the begin phase did not fail the second time, set this pointer\r\n      // back to the original value.\r\n      nextUnitOfWork = failedUnitOfWork;\r\n    }\r\n  };\r\n  rethrowOriginalError = function () {\r\n    throw originalReplayError;\r\n  };\r\n}\r\n\r\nfunction resetStack() {\r\n  if (nextUnitOfWork !== null) {\r\n    var interruptedWork = nextUnitOfWork.return;\r\n    while (interruptedWork !== null) {\r\n      unwindInterruptedWork(interruptedWork);\r\n      interruptedWork = interruptedWork.return;\r\n    }\r\n  }\r\n\r\n  {\r\n    ReactStrictModeWarnings.discardPendingWarnings();\r\n    checkThatStackIsEmpty();\r\n  }\r\n\r\n  nextRoot = null;\r\n  nextRenderExpirationTime = NoWork;\r\n  nextLatestAbsoluteTimeoutMs = -1;\r\n  nextRenderDidError = false;\r\n  nextUnitOfWork = null;\r\n}\r\n\r\nfunction commitAllHostEffects() {\r\n  while (nextEffect !== null) {\r\n    {\r\n      setCurrentFiber(nextEffect);\r\n    }\r\n    recordEffect();\r\n\r\n    var effectTag = nextEffect.effectTag;\r\n\r\n    if (effectTag & ContentReset) {\r\n      commitResetTextContent(nextEffect);\r\n    }\r\n\r\n    if (effectTag & Ref) {\r\n      var current$$1 = nextEffect.alternate;\r\n      if (current$$1 !== null) {\r\n        commitDetachRef(current$$1);\r\n      }\r\n    }\r\n\r\n    // The following switch statement is only concerned about placement,\r\n    // updates, and deletions. To avoid needing to add a case for every\r\n    // possible bitmap value, we remove the secondary effects from the\r\n    // effect tag and switch on that value.\r\n    var primaryEffectTag = effectTag & (Placement | Update | Deletion);\r\n    switch (primaryEffectTag) {\r\n      case Placement:\r\n        {\r\n          commitPlacement(nextEffect);\r\n          // Clear the \"placement\" from effect tag so that we know that this is inserted, before\r\n          // any life-cycles like componentDidMount gets called.\r\n          // TODO: findDOMNode doesn't rely on this any more but isMounted\r\n          // does and isMounted is deprecated anyway so we should be able\r\n          // to kill this.\r\n          nextEffect.effectTag &= ~Placement;\r\n          break;\r\n        }\r\n      case PlacementAndUpdate:\r\n        {\r\n          // Placement\r\n          commitPlacement(nextEffect);\r\n          // Clear the \"placement\" from effect tag so that we know that this is inserted, before\r\n          // any life-cycles like componentDidMount gets called.\r\n          nextEffect.effectTag &= ~Placement;\r\n\r\n          // Update\r\n          var _current = nextEffect.alternate;\r\n          commitWork(_current, nextEffect);\r\n          break;\r\n        }\r\n      case Update:\r\n        {\r\n          var _current2 = nextEffect.alternate;\r\n          commitWork(_current2, nextEffect);\r\n          break;\r\n        }\r\n      case Deletion:\r\n        {\r\n          commitDeletion(nextEffect);\r\n          break;\r\n        }\r\n    }\r\n    nextEffect = nextEffect.nextEffect;\r\n  }\r\n\r\n  {\r\n    resetCurrentFiber();\r\n  }\r\n}\r\n\r\nfunction commitBeforeMutationLifecycles() {\r\n  while (nextEffect !== null) {\r\n    {\r\n      setCurrentFiber(nextEffect);\r\n    }\r\n\r\n    var effectTag = nextEffect.effectTag;\r\n    if (effectTag & Snapshot) {\r\n      recordEffect();\r\n      var current$$1 = nextEffect.alternate;\r\n      commitBeforeMutationLifeCycles(current$$1, nextEffect);\r\n    }\r\n\r\n    nextEffect = nextEffect.nextEffect;\r\n  }\r\n\r\n  {\r\n    resetCurrentFiber();\r\n  }\r\n}\r\n\r\nfunction commitAllLifeCycles(finishedRoot, committedExpirationTime) {\r\n  {\r\n    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\r\n    ReactStrictModeWarnings.flushLegacyContextWarning();\r\n\r\n    if (warnAboutDeprecatedLifecycles) {\r\n      ReactStrictModeWarnings.flushPendingDeprecationWarnings();\r\n    }\r\n  }\r\n  while (nextEffect !== null) {\r\n    {\r\n      setCurrentFiber(nextEffect);\r\n    }\r\n    var effectTag = nextEffect.effectTag;\r\n\r\n    if (effectTag & (Update | Callback)) {\r\n      recordEffect();\r\n      var current$$1 = nextEffect.alternate;\r\n      commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);\r\n    }\r\n\r\n    if (effectTag & Ref) {\r\n      recordEffect();\r\n      commitAttachRef(nextEffect);\r\n    }\r\n\r\n    if (effectTag & Passive) {\r\n      rootWithPendingPassiveEffects = finishedRoot;\r\n    }\r\n\r\n    nextEffect = nextEffect.nextEffect;\r\n  }\r\n  {\r\n    resetCurrentFiber();\r\n  }\r\n}\r\n\r\nfunction commitPassiveEffects(root, firstEffect) {\r\n  rootWithPendingPassiveEffects = null;\r\n  passiveEffectCallbackHandle = null;\r\n  passiveEffectCallback = null;\r\n\r\n  // Set this to true to prevent re-entrancy\r\n  var previousIsRendering = isRendering;\r\n  isRendering = true;\r\n\r\n  var effect = firstEffect;\r\n  do {\r\n    {\r\n      setCurrentFiber(effect);\r\n    }\r\n\r\n    if (effect.effectTag & Passive) {\r\n      var didError = false;\r\n      var error = void 0;\r\n      {\r\n        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);\r\n        if (hasCaughtError()) {\r\n          didError = true;\r\n          error = clearCaughtError();\r\n        }\r\n      }\r\n      if (didError) {\r\n        captureCommitPhaseError(effect, error);\r\n      }\r\n    }\r\n    effect = effect.nextEffect;\r\n  } while (effect !== null);\r\n  {\r\n    resetCurrentFiber();\r\n  }\r\n\r\n  isRendering = previousIsRendering;\r\n\r\n  // Check if work was scheduled by one of the effects\r\n  var rootExpirationTime = root.expirationTime;\r\n  if (rootExpirationTime !== NoWork) {\r\n    requestWork(root, rootExpirationTime);\r\n  }\r\n  // Flush any sync work that was scheduled by effects\r\n  if (!isBatchingUpdates && !isRendering) {\r\n    performSyncWork();\r\n  }\r\n}\r\n\r\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\r\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\r\n}\r\n\r\nfunction markLegacyErrorBoundaryAsFailed(instance) {\r\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\r\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\r\n  } else {\r\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\r\n  }\r\n}\r\n\r\nfunction flushPassiveEffects() {\r\n  if (passiveEffectCallbackHandle !== null) {\r\n    cancelPassiveEffects(passiveEffectCallbackHandle);\r\n  }\r\n  if (passiveEffectCallback !== null) {\r\n    // We call the scheduled callback instead of commitPassiveEffects directly\r\n    // to ensure tracing works correctly.\r\n    passiveEffectCallback();\r\n  }\r\n}\r\n\r\nfunction commitRoot(root, finishedWork) {\r\n  isWorking = true;\r\n  isCommitting$1 = true;\r\n  startCommitTimer();\r\n\r\n  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  var committedExpirationTime = root.pendingCommitExpirationTime;\r\n  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  root.pendingCommitExpirationTime = NoWork;\r\n\r\n  // Update the pending priority levels to account for the work that we are\r\n  // about to commit. This needs to happen before calling the lifecycles, since\r\n  // they may schedule additional updates.\r\n  var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;\r\n  var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;\r\n  var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;\r\n  markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);\r\n\r\n  var prevInteractions = null;\r\n  if (enableSchedulerTracing) {\r\n    // Restore any pending interactions at this point,\r\n    // So that cascading work triggered during the render phase will be accounted for.\r\n    prevInteractions = tracing.__interactionsRef.current;\r\n    tracing.__interactionsRef.current = root.memoizedInteractions;\r\n  }\r\n\r\n  // Reset this to null before calling lifecycles\r\n  ReactCurrentOwner$2.current = null;\r\n\r\n  var firstEffect = void 0;\r\n  if (finishedWork.effectTag > PerformedWork) {\r\n    // A fiber's effect list consists only of its children, not itself. So if\r\n    // the root has an effect, we need to add it to the end of the list. The\r\n    // resulting list is the set that would belong to the root's parent, if\r\n    // it had one; that is, all the effects in the tree including the root.\r\n    if (finishedWork.lastEffect !== null) {\r\n      finishedWork.lastEffect.nextEffect = finishedWork;\r\n      firstEffect = finishedWork.firstEffect;\r\n    } else {\r\n      firstEffect = finishedWork;\r\n    }\r\n  } else {\r\n    // There is no effect on the root.\r\n    firstEffect = finishedWork.firstEffect;\r\n  }\r\n\r\n  prepareForCommit(root.containerInfo);\r\n\r\n  // Invoke instances of getSnapshotBeforeUpdate before mutation.\r\n  nextEffect = firstEffect;\r\n  startCommitSnapshotEffectsTimer();\r\n  while (nextEffect !== null) {\r\n    var didError = false;\r\n    var error = void 0;\r\n    {\r\n      invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);\r\n      if (hasCaughtError()) {\r\n        didError = true;\r\n        error = clearCaughtError();\r\n      }\r\n    }\r\n    if (didError) {\r\n      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n      captureCommitPhaseError(nextEffect, error);\r\n      // Clean-up\r\n      if (nextEffect !== null) {\r\n        nextEffect = nextEffect.nextEffect;\r\n      }\r\n    }\r\n  }\r\n  stopCommitSnapshotEffectsTimer();\r\n\r\n  if (enableProfilerTimer) {\r\n    // Mark the current commit time to be shared by all Profilers in this batch.\r\n    // This enables them to be grouped later.\r\n    recordCommitTime();\r\n  }\r\n\r\n  // Commit all the side-effects within a tree. We'll do this in two passes.\r\n  // The first pass performs all the host insertions, updates, deletions and\r\n  // ref unmounts.\r\n  nextEffect = firstEffect;\r\n  startCommitHostEffectsTimer();\r\n  while (nextEffect !== null) {\r\n    var _didError = false;\r\n    var _error = void 0;\r\n    {\r\n      invokeGuardedCallback(null, commitAllHostEffects, null);\r\n      if (hasCaughtError()) {\r\n        _didError = true;\r\n        _error = clearCaughtError();\r\n      }\r\n    }\r\n    if (_didError) {\r\n      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n      captureCommitPhaseError(nextEffect, _error);\r\n      // Clean-up\r\n      if (nextEffect !== null) {\r\n        nextEffect = nextEffect.nextEffect;\r\n      }\r\n    }\r\n  }\r\n  stopCommitHostEffectsTimer();\r\n\r\n  resetAfterCommit(root.containerInfo);\r\n\r\n  // The work-in-progress tree is now the current tree. This must come after\r\n  // the first pass of the commit phase, so that the previous tree is still\r\n  // current during componentWillUnmount, but before the second pass, so that\r\n  // the finished work is current during componentDidMount/Update.\r\n  root.current = finishedWork;\r\n\r\n  // In the second pass we'll perform all life-cycles and ref callbacks.\r\n  // Life-cycles happen as a separate pass so that all placements, updates,\r\n  // and deletions in the entire tree have already been invoked.\r\n  // This pass also triggers any renderer-specific initial effects.\r\n  nextEffect = firstEffect;\r\n  startCommitLifeCyclesTimer();\r\n  while (nextEffect !== null) {\r\n    var _didError2 = false;\r\n    var _error2 = void 0;\r\n    {\r\n      invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);\r\n      if (hasCaughtError()) {\r\n        _didError2 = true;\r\n        _error2 = clearCaughtError();\r\n      }\r\n    }\r\n    if (_didError2) {\r\n      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n      captureCommitPhaseError(nextEffect, _error2);\r\n      if (nextEffect !== null) {\r\n        nextEffect = nextEffect.nextEffect;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (firstEffect !== null && rootWithPendingPassiveEffects !== null) {\r\n    // This commit included a passive effect. These do not need to fire until\r\n    // after the next paint. Schedule an callback to fire them in an async\r\n    // event. To ensure serial execution, the callback will be flushed early if\r\n    // we enter rootWithPendingPassiveEffects commit phase before then.\r\n    var callback = commitPassiveEffects.bind(null, root, firstEffect);\r\n    if (enableSchedulerTracing) {\r\n      // TODO: Avoid this extra callback by mutating the tracing ref directly,\r\n      // like we do at the beginning of commitRoot. I've opted not to do that\r\n      // here because that code is still in flux.\r\n      callback = tracing.unstable_wrap(callback);\r\n    }\r\n    passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {\r\n      return schedulePassiveEffects(callback);\r\n    });\r\n    passiveEffectCallback = callback;\r\n  }\r\n\r\n  isCommitting$1 = false;\r\n  isWorking = false;\r\n  stopCommitLifeCyclesTimer();\r\n  stopCommitTimer();\r\n  onCommitRoot(finishedWork.stateNode);\r\n  if (true && ReactFiberInstrumentation_1.debugTool) {\r\n    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);\r\n  }\r\n\r\n  var updateExpirationTimeAfterCommit = finishedWork.expirationTime;\r\n  var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;\r\n  var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;\r\n  if (earliestRemainingTimeAfterCommit === NoWork) {\r\n    // If there's no remaining work, we can clear the set of already failed\r\n    // error boundaries.\r\n    legacyErrorBoundariesThatAlreadyFailed = null;\r\n  }\r\n  onCommit(root, earliestRemainingTimeAfterCommit);\r\n\r\n  if (enableSchedulerTracing) {\r\n    tracing.__interactionsRef.current = prevInteractions;\r\n\r\n    var subscriber = void 0;\r\n\r\n    try {\r\n      subscriber = tracing.__subscriberRef.current;\r\n      if (subscriber !== null && root.memoizedInteractions.size > 0) {\r\n        var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);\r\n        subscriber.onWorkStopped(root.memoizedInteractions, threadID);\r\n      }\r\n    } catch (error) {\r\n      // It's not safe for commitRoot() to throw.\r\n      // Store the error for now and we'll re-throw in finishRendering().\r\n      if (!hasUnhandledError) {\r\n        hasUnhandledError = true;\r\n        unhandledError = error;\r\n      }\r\n    } finally {\r\n      // Clear completed interactions from the pending Map.\r\n      // Unless the render was suspended or cascading work was scheduled,\r\n      // In which case– leave pending interactions until the subsequent render.\r\n      var pendingInteractionMap = root.pendingInteractionMap;\r\n      pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {\r\n        // Only decrement the pending interaction count if we're done.\r\n        // If there's still work at the current priority,\r\n        // That indicates that we are waiting for suspense data.\r\n        if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {\r\n          pendingInteractionMap.delete(scheduledExpirationTime);\r\n\r\n          scheduledInteractions.forEach(function (interaction) {\r\n            interaction.__count--;\r\n\r\n            if (subscriber !== null && interaction.__count === 0) {\r\n              try {\r\n                subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n              } catch (error) {\r\n                // It's not safe for commitRoot() to throw.\r\n                // Store the error for now and we'll re-throw in finishRendering().\r\n                if (!hasUnhandledError) {\r\n                  hasUnhandledError = true;\r\n                  unhandledError = error;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction resetChildExpirationTime(workInProgress, renderTime) {\r\n  if (renderTime !== Never && workInProgress.childExpirationTime === Never) {\r\n    // The children of this component are hidden. Don't bubble their\r\n    // expiration times.\r\n    return;\r\n  }\r\n\r\n  var newChildExpirationTime = NoWork;\r\n\r\n  // Bubble up the earliest expiration time.\r\n  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\r\n    // We're in profiling mode.\r\n    // Let's use this same traversal to update the render durations.\r\n    var actualDuration = workInProgress.actualDuration;\r\n    var treeBaseDuration = workInProgress.selfBaseDuration;\r\n\r\n    // When a fiber is cloned, its actualDuration is reset to 0.\r\n    // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).\r\n    // When work is done, it should bubble to the parent's actualDuration.\r\n    // If the fiber has not been cloned though, (meaning no work was done),\r\n    // Then this value will reflect the amount of time spent working on a previous render.\r\n    // In that case it should not bubble.\r\n    // We determine whether it was cloned by comparing the child pointer.\r\n    var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;\r\n\r\n    var child = workInProgress.child;\r\n    while (child !== null) {\r\n      var childUpdateExpirationTime = child.expirationTime;\r\n      var childChildExpirationTime = child.childExpirationTime;\r\n      if (childUpdateExpirationTime > newChildExpirationTime) {\r\n        newChildExpirationTime = childUpdateExpirationTime;\r\n      }\r\n      if (childChildExpirationTime > newChildExpirationTime) {\r\n        newChildExpirationTime = childChildExpirationTime;\r\n      }\r\n      if (shouldBubbleActualDurations) {\r\n        actualDuration += child.actualDuration;\r\n      }\r\n      treeBaseDuration += child.treeBaseDuration;\r\n      child = child.sibling;\r\n    }\r\n    workInProgress.actualDuration = actualDuration;\r\n    workInProgress.treeBaseDuration = treeBaseDuration;\r\n  } else {\r\n    var _child = workInProgress.child;\r\n    while (_child !== null) {\r\n      var _childUpdateExpirationTime = _child.expirationTime;\r\n      var _childChildExpirationTime = _child.childExpirationTime;\r\n      if (_childUpdateExpirationTime > newChildExpirationTime) {\r\n        newChildExpirationTime = _childUpdateExpirationTime;\r\n      }\r\n      if (_childChildExpirationTime > newChildExpirationTime) {\r\n        newChildExpirationTime = _childChildExpirationTime;\r\n      }\r\n      _child = _child.sibling;\r\n    }\r\n  }\r\n\r\n  workInProgress.childExpirationTime = newChildExpirationTime;\r\n}\r\n\r\nfunction completeUnitOfWork(workInProgress) {\r\n  // Attempt to complete the current unit of work, then move to the\r\n  // next sibling. If there are no more siblings, return to the\r\n  // parent fiber.\r\n  while (true) {\r\n    // The current, flushed, state of this fiber is the alternate.\r\n    // Ideally nothing should rely on this, but relying on it here\r\n    // means that we don't need an additional field on the work in\r\n    // progress.\r\n    var current$$1 = workInProgress.alternate;\r\n    {\r\n      setCurrentFiber(workInProgress);\r\n    }\r\n\r\n    var returnFiber = workInProgress.return;\r\n    var siblingFiber = workInProgress.sibling;\r\n\r\n    if ((workInProgress.effectTag & Incomplete) === NoEffect) {\r\n      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\r\n        // Don't replay if it fails during completion phase.\r\n        mayReplayFailedUnitOfWork = false;\r\n      }\r\n      // This fiber completed.\r\n      // Remember we're completing this unit so we can find a boundary if it fails.\r\n      nextUnitOfWork = workInProgress;\r\n      if (enableProfilerTimer) {\r\n        if (workInProgress.mode & ProfileMode) {\r\n          startProfilerTimer(workInProgress);\r\n        }\r\n        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\r\n        if (workInProgress.mode & ProfileMode) {\r\n          // Update render duration assuming we didn't error.\r\n          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\r\n        }\r\n      } else {\r\n        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\r\n      }\r\n      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\r\n        // We're out of completion phase so replaying is fine now.\r\n        mayReplayFailedUnitOfWork = true;\r\n      }\r\n      stopWorkTimer(workInProgress);\r\n      resetChildExpirationTime(workInProgress, nextRenderExpirationTime);\r\n      {\r\n        resetCurrentFiber();\r\n      }\r\n\r\n      if (nextUnitOfWork !== null) {\r\n        // Completing this fiber spawned new work. Work on that next.\r\n        return nextUnitOfWork;\r\n      }\r\n\r\n      if (returnFiber !== null &&\r\n      // Do not append effects to parents if a sibling failed to complete\r\n      (returnFiber.effectTag & Incomplete) === NoEffect) {\r\n        // Append all the effects of the subtree and this fiber onto the effect\r\n        // list of the parent. The completion order of the children affects the\r\n        // side-effect order.\r\n        if (returnFiber.firstEffect === null) {\r\n          returnFiber.firstEffect = workInProgress.firstEffect;\r\n        }\r\n        if (workInProgress.lastEffect !== null) {\r\n          if (returnFiber.lastEffect !== null) {\r\n            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;\r\n          }\r\n          returnFiber.lastEffect = workInProgress.lastEffect;\r\n        }\r\n\r\n        // If this fiber had side-effects, we append it AFTER the children's\r\n        // side-effects. We can perform certain side-effects earlier if\r\n        // needed, by doing multiple passes over the effect list. We don't want\r\n        // to schedule our own side-effect on our own list because if end up\r\n        // reusing children we'll schedule this effect onto itself since we're\r\n        // at the end.\r\n        var effectTag = workInProgress.effectTag;\r\n        // Skip both NoWork and PerformedWork tags when creating the effect list.\r\n        // PerformedWork effect is read by React DevTools but shouldn't be committed.\r\n        if (effectTag > PerformedWork) {\r\n          if (returnFiber.lastEffect !== null) {\r\n            returnFiber.lastEffect.nextEffect = workInProgress;\r\n          } else {\r\n            returnFiber.firstEffect = workInProgress;\r\n          }\r\n          returnFiber.lastEffect = workInProgress;\r\n        }\r\n      }\r\n\r\n      if (true && ReactFiberInstrumentation_1.debugTool) {\r\n        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\r\n      }\r\n\r\n      if (siblingFiber !== null) {\r\n        // If there is more work to do in this returnFiber, do that next.\r\n        return siblingFiber;\r\n      } else if (returnFiber !== null) {\r\n        // If there's no more work in this returnFiber. Complete the returnFiber.\r\n        workInProgress = returnFiber;\r\n        continue;\r\n      } else {\r\n        // We've reached the root.\r\n        return null;\r\n      }\r\n    } else {\r\n      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\r\n        // Record the render duration for the fiber that errored.\r\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\r\n\r\n        // Include the time spent working on failed children before continuing.\r\n        var actualDuration = workInProgress.actualDuration;\r\n        var child = workInProgress.child;\r\n        while (child !== null) {\r\n          actualDuration += child.actualDuration;\r\n          child = child.sibling;\r\n        }\r\n        workInProgress.actualDuration = actualDuration;\r\n      }\r\n\r\n      // This fiber did not complete because something threw. Pop values off\r\n      // the stack without entering the complete phase. If this is a boundary,\r\n      // capture values if possible.\r\n      var next = unwindWork(workInProgress, nextRenderExpirationTime);\r\n      // Because this fiber did not complete, don't reset its expiration time.\r\n      if (workInProgress.effectTag & DidCapture) {\r\n        // Restarting an error boundary\r\n        stopFailedWorkTimer(workInProgress);\r\n      } else {\r\n        stopWorkTimer(workInProgress);\r\n      }\r\n\r\n      {\r\n        resetCurrentFiber();\r\n      }\r\n\r\n      if (next !== null) {\r\n        stopWorkTimer(workInProgress);\r\n        if (true && ReactFiberInstrumentation_1.debugTool) {\r\n          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\r\n        }\r\n\r\n        // If completing this work spawned new work, do that next. We'll come\r\n        // back here again.\r\n        // Since we're restarting, remove anything that is not a host effect\r\n        // from the effect tag.\r\n        next.effectTag &= HostEffectMask;\r\n        return next;\r\n      }\r\n\r\n      if (returnFiber !== null) {\r\n        // Mark the parent fiber as incomplete and clear its effect list.\r\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\r\n        returnFiber.effectTag |= Incomplete;\r\n      }\r\n\r\n      if (true && ReactFiberInstrumentation_1.debugTool) {\r\n        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\r\n      }\r\n\r\n      if (siblingFiber !== null) {\r\n        // If there is more work to do in this returnFiber, do that next.\r\n        return siblingFiber;\r\n      } else if (returnFiber !== null) {\r\n        // If there's no more work in this returnFiber. Complete the returnFiber.\r\n        workInProgress = returnFiber;\r\n        continue;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Without this explicit null return Flow complains of invalid return type\r\n  // TODO Remove the above while(true) loop\r\n  // eslint-disable-next-line no-unreachable\r\n  return null;\r\n}\r\n\r\nfunction performUnitOfWork(workInProgress) {\r\n  // The current, flushed, state of this fiber is the alternate.\r\n  // Ideally nothing should rely on this, but relying on it here\r\n  // means that we don't need an additional field on the work in\r\n  // progress.\r\n  var current$$1 = workInProgress.alternate;\r\n\r\n  // See if beginning this work spawns more work.\r\n  startWorkTimer(workInProgress);\r\n  {\r\n    setCurrentFiber(workInProgress);\r\n  }\r\n\r\n  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\r\n    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);\r\n  }\r\n\r\n  var next = void 0;\r\n  if (enableProfilerTimer) {\r\n    if (workInProgress.mode & ProfileMode) {\r\n      startProfilerTimer(workInProgress);\r\n    }\r\n\r\n    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\r\n    workInProgress.memoizedProps = workInProgress.pendingProps;\r\n\r\n    if (workInProgress.mode & ProfileMode) {\r\n      // Record the render duration assuming we didn't bailout (or error).\r\n      stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);\r\n    }\r\n  } else {\r\n    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\r\n    workInProgress.memoizedProps = workInProgress.pendingProps;\r\n  }\r\n\r\n  {\r\n    resetCurrentFiber();\r\n    if (isReplayingFailedUnitOfWork) {\r\n      // Currently replaying a failed unit of work. This should be unreachable,\r\n      // because the render phase is meant to be idempotent, and it should\r\n      // have thrown again. Since it didn't, rethrow the original error, so\r\n      // React's internal stack is not misaligned.\r\n      rethrowOriginalError();\r\n    }\r\n  }\r\n  if (true && ReactFiberInstrumentation_1.debugTool) {\r\n    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);\r\n  }\r\n\r\n  if (next === null) {\r\n    // If this doesn't spawn new work, complete the current work.\r\n    next = completeUnitOfWork(workInProgress);\r\n  }\r\n\r\n  ReactCurrentOwner$2.current = null;\r\n\r\n  return next;\r\n}\r\n\r\nfunction workLoop(isYieldy) {\r\n  if (!isYieldy) {\r\n    // Flush work without yielding\r\n    while (nextUnitOfWork !== null) {\r\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    }\r\n  } else {\r\n    // Flush asynchronous work until there's a higher priority event\r\n    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {\r\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    }\r\n  }\r\n}\r\n\r\nfunction renderRoot(root, isYieldy) {\r\n  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n  flushPassiveEffects();\r\n\r\n  isWorking = true;\r\n  var previousDispatcher = ReactCurrentDispatcher.current;\r\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\r\n\r\n  var expirationTime = root.nextExpirationTimeToWorkOn;\r\n\r\n  // Check if we're starting from a fresh stack, or if we're resuming from\r\n  // previously yielded work.\r\n  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {\r\n    // Reset the stack and start working from the root.\r\n    resetStack();\r\n    nextRoot = root;\r\n    nextRenderExpirationTime = expirationTime;\r\n    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);\r\n    root.pendingCommitExpirationTime = NoWork;\r\n\r\n    if (enableSchedulerTracing) {\r\n      // Determine which interactions this batch of work currently includes,\r\n      // So that we can accurately attribute time spent working on it,\r\n      var interactions = new Set();\r\n      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {\r\n        if (scheduledExpirationTime >= expirationTime) {\r\n          scheduledInteractions.forEach(function (interaction) {\r\n            return interactions.add(interaction);\r\n          });\r\n        }\r\n      });\r\n\r\n      // Store the current set of interactions on the FiberRoot for a few reasons:\r\n      // We can re-use it in hot functions like renderRoot() without having to recalculate it.\r\n      // We will also use it in commitWork() to pass to any Profiler onRender() hooks.\r\n      // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.\r\n      root.memoizedInteractions = interactions;\r\n\r\n      if (interactions.size > 0) {\r\n        var subscriber = tracing.__subscriberRef.current;\r\n        if (subscriber !== null) {\r\n          var threadID = computeThreadID(expirationTime, root.interactionThreadID);\r\n          try {\r\n            subscriber.onWorkStarted(interactions, threadID);\r\n          } catch (error) {\r\n            // Work thrown by an interaction tracing subscriber should be rethrown,\r\n            // But only once it's safe (to avoid leaving the scheduler in an invalid state).\r\n            // Store the error for now and we'll re-throw in finishRendering().\r\n            if (!hasUnhandledError) {\r\n              hasUnhandledError = true;\r\n              unhandledError = error;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var prevInteractions = null;\r\n  if (enableSchedulerTracing) {\r\n    // We're about to start new traced work.\r\n    // Restore pending interactions so cascading work triggered during the render phase will be accounted for.\r\n    prevInteractions = tracing.__interactionsRef.current;\r\n    tracing.__interactionsRef.current = root.memoizedInteractions;\r\n  }\r\n\r\n  var didFatal = false;\r\n\r\n  startWorkLoopTimer(nextUnitOfWork);\r\n\r\n  do {\r\n    try {\r\n      workLoop(isYieldy);\r\n    } catch (thrownValue) {\r\n      resetContextDependences();\r\n      resetHooks();\r\n\r\n      // Reset in case completion throws.\r\n      // This is only used in DEV and when replaying is on.\r\n      var mayReplay = void 0;\r\n      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\r\n        mayReplay = mayReplayFailedUnitOfWork;\r\n        mayReplayFailedUnitOfWork = true;\r\n      }\r\n\r\n      if (nextUnitOfWork === null) {\r\n        // This is a fatal error.\r\n        didFatal = true;\r\n        onUncaughtError(thrownValue);\r\n      } else {\r\n        if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {\r\n          // Record the time spent rendering before an error was thrown.\r\n          // This avoids inaccurate Profiler durations in the case of a suspended render.\r\n          stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);\r\n        }\r\n\r\n        {\r\n          // Reset global debug state\r\n          // We assume this is defined in DEV\r\n          resetCurrentlyProcessingQueue();\r\n        }\r\n\r\n        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\r\n          if (mayReplay) {\r\n            var failedUnitOfWork = nextUnitOfWork;\r\n            replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);\r\n          }\r\n        }\r\n\r\n        // TODO: we already know this isn't true in some cases.\r\n        // At least this shows a nicer error message until we figure out the cause.\r\n        // https://github.com/facebook/react/issues/12449#issuecomment-386727431\r\n        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;\r\n\r\n        var sourceFiber = nextUnitOfWork;\r\n        var returnFiber = sourceFiber.return;\r\n        if (returnFiber === null) {\r\n          // This is the root. The root could capture its own errors. However,\r\n          // we don't know if it errors before or after we pushed the host\r\n          // context. This information is needed to avoid a stack mismatch.\r\n          // Because we're not sure, treat this as a fatal error. We could track\r\n          // which phase it fails in, but doesn't seem worth it. At least\r\n          // for now.\r\n          didFatal = true;\r\n          onUncaughtError(thrownValue);\r\n        } else {\r\n          throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);\r\n          nextUnitOfWork = completeUnitOfWork(sourceFiber);\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    break;\r\n  } while (true);\r\n\r\n  if (enableSchedulerTracing) {\r\n    // Traced work is done for now; restore the previous interactions.\r\n    tracing.__interactionsRef.current = prevInteractions;\r\n  }\r\n\r\n  // We're done performing work. Time to clean up.\r\n  isWorking = false;\r\n  ReactCurrentDispatcher.current = previousDispatcher;\r\n  resetContextDependences();\r\n  resetHooks();\r\n\r\n  // Yield back to main thread.\r\n  if (didFatal) {\r\n    var _didCompleteRoot = false;\r\n    stopWorkLoopTimer(interruptedBy, _didCompleteRoot);\r\n    interruptedBy = null;\r\n    // There was a fatal error.\r\n    {\r\n      resetStackAfterFatalErrorInDev();\r\n    }\r\n    // `nextRoot` points to the in-progress root. A non-null value indicates\r\n    // that we're in the middle of an async render. Set it to null to indicate\r\n    // there's no more work to be done in the current batch.\r\n    nextRoot = null;\r\n    onFatal(root);\r\n    return;\r\n  }\r\n\r\n  if (nextUnitOfWork !== null) {\r\n    // There's still remaining async work in this tree, but we ran out of time\r\n    // in the current frame. Yield back to the renderer. Unless we're\r\n    // interrupted by a higher priority update, we'll continue later from where\r\n    // we left off.\r\n    var _didCompleteRoot2 = false;\r\n    stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);\r\n    interruptedBy = null;\r\n    onYield(root);\r\n    return;\r\n  }\r\n\r\n  // We completed the whole tree.\r\n  var didCompleteRoot = true;\r\n  stopWorkLoopTimer(interruptedBy, didCompleteRoot);\r\n  var rootWorkInProgress = root.current.alternate;\r\n  !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n  // `nextRoot` points to the in-progress root. A non-null value indicates\r\n  // that we're in the middle of an async render. Set it to null to indicate\r\n  // there's no more work to be done in the current batch.\r\n  nextRoot = null;\r\n  interruptedBy = null;\r\n\r\n  if (nextRenderDidError) {\r\n    // There was an error\r\n    if (hasLowerPriorityWork(root, expirationTime)) {\r\n      // There's lower priority work. If so, it may have the effect of fixing\r\n      // the exception that was just thrown. Exit without committing. This is\r\n      // similar to a suspend, but without a timeout because we're not waiting\r\n      // for a promise to resolve. React will restart at the lower\r\n      // priority level.\r\n      markSuspendedPriorityLevel(root, expirationTime);\r\n      var suspendedExpirationTime = expirationTime;\r\n      var rootExpirationTime = root.expirationTime;\r\n      onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1 // Indicates no timeout\r\n      );\r\n      return;\r\n    } else if (\r\n    // There's no lower priority work, but we're rendering asynchronously.\r\n    // Synchronously attempt to render the same level one more time. This is\r\n    // similar to a suspend, but without a timeout because we're not waiting\r\n    // for a promise to resolve.\r\n    !root.didError && isYieldy) {\r\n      root.didError = true;\r\n      var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;\r\n      var _rootExpirationTime = root.expirationTime = Sync;\r\n      onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1 // Indicates no timeout\r\n      );\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {\r\n    // The tree was suspended.\r\n    var _suspendedExpirationTime2 = expirationTime;\r\n    markSuspendedPriorityLevel(root, _suspendedExpirationTime2);\r\n\r\n    // Find the earliest uncommitted expiration time in the tree, including\r\n    // work that is suspended. The timeout threshold cannot be longer than\r\n    // the overall expiration.\r\n    var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);\r\n    var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\r\n    if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {\r\n      nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;\r\n    }\r\n\r\n    // Subtract the current time from the absolute timeout to get the number\r\n    // of milliseconds until the timeout. In other words, convert an absolute\r\n    // timestamp to a relative time. This is the value that is passed\r\n    // to `setTimeout`.\r\n    var currentTimeMs = expirationTimeToMs(requestCurrentTime());\r\n    var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;\r\n    msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;\r\n\r\n    // TODO: Account for the Just Noticeable Difference\r\n\r\n    var _rootExpirationTime2 = root.expirationTime;\r\n    onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);\r\n    return;\r\n  }\r\n\r\n  // Ready to commit.\r\n  onComplete(root, rootWorkInProgress, expirationTime);\r\n}\r\n\r\nfunction captureCommitPhaseError(sourceFiber, value) {\r\n  var expirationTime = Sync;\r\n  var fiber = sourceFiber.return;\r\n  while (fiber !== null) {\r\n    switch (fiber.tag) {\r\n      case ClassComponent:\r\n        var ctor = fiber.type;\r\n        var instance = fiber.stateNode;\r\n        if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\r\n          var errorInfo = createCapturedValue(value, sourceFiber);\r\n          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);\r\n          enqueueUpdate(fiber, update);\r\n          scheduleWork(fiber, expirationTime);\r\n          return;\r\n        }\r\n        break;\r\n      case HostRoot:\r\n        {\r\n          var _errorInfo = createCapturedValue(value, sourceFiber);\r\n          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);\r\n          enqueueUpdate(fiber, _update);\r\n          scheduleWork(fiber, expirationTime);\r\n          return;\r\n        }\r\n    }\r\n    fiber = fiber.return;\r\n  }\r\n\r\n  if (sourceFiber.tag === HostRoot) {\r\n    // Error was thrown at the root. There is no parent, so the root\r\n    // itself should capture it.\r\n    var rootFiber = sourceFiber;\r\n    var _errorInfo2 = createCapturedValue(value, rootFiber);\r\n    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);\r\n    enqueueUpdate(rootFiber, _update2);\r\n    scheduleWork(rootFiber, expirationTime);\r\n  }\r\n}\r\n\r\nfunction computeThreadID(expirationTime, interactionThreadID) {\r\n  // Interaction threads are unique per root and expiration time.\r\n  return expirationTime * 1000 + interactionThreadID;\r\n}\r\n\r\n// Creates a unique async expiration time.\r\nfunction computeUniqueAsyncExpiration() {\r\n  var currentTime = requestCurrentTime();\r\n  var result = computeAsyncExpiration(currentTime);\r\n  if (result >= lastUniqueAsyncExpiration) {\r\n    // Since we assume the current time monotonically increases, we only hit\r\n    // this branch when computeUniqueAsyncExpiration is fired multiple times\r\n    // within a 200ms window (or whatever the async bucket size is).\r\n    result = lastUniqueAsyncExpiration - 1;\r\n  }\r\n  lastUniqueAsyncExpiration = result;\r\n  return lastUniqueAsyncExpiration;\r\n}\r\n\r\nfunction computeExpirationForFiber(currentTime, fiber) {\r\n  var priorityLevel = scheduler.unstable_getCurrentPriorityLevel();\r\n\r\n  var expirationTime = void 0;\r\n  if ((fiber.mode & ConcurrentMode) === NoContext) {\r\n    // Outside of concurrent mode, updates are always synchronous.\r\n    expirationTime = Sync;\r\n  } else if (isWorking && !isCommitting$1) {\r\n    // During render phase, updates expire during as the current render.\r\n    expirationTime = nextRenderExpirationTime;\r\n  } else {\r\n    switch (priorityLevel) {\r\n      case scheduler.unstable_ImmediatePriority:\r\n        expirationTime = Sync;\r\n        break;\r\n      case scheduler.unstable_UserBlockingPriority:\r\n        expirationTime = computeInteractiveExpiration(currentTime);\r\n        break;\r\n      case scheduler.unstable_NormalPriority:\r\n        // This is a normal, concurrent update\r\n        expirationTime = computeAsyncExpiration(currentTime);\r\n        break;\r\n      case scheduler.unstable_LowPriority:\r\n      case scheduler.unstable_IdlePriority:\r\n        expirationTime = Never;\r\n        break;\r\n      default:\r\n        invariant(false, 'Unknown priority level. This error is likely caused by a bug in React. Please file an issue.');\r\n    }\r\n\r\n    // If we're in the middle of rendering a tree, do not update at the same\r\n    // expiration time that is already rendering.\r\n    if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {\r\n      expirationTime -= 1;\r\n    }\r\n  }\r\n\r\n  // Keep track of the lowest pending interactive expiration time. This\r\n  // allows us to synchronously flush all interactive updates\r\n  // when needed.\r\n  // TODO: Move this to renderer?\r\n  if (priorityLevel === scheduler.unstable_UserBlockingPriority && (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime)) {\r\n    lowestPriorityPendingInteractiveExpirationTime = expirationTime;\r\n  }\r\n\r\n  return expirationTime;\r\n}\r\n\r\nfunction renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {\r\n  // Schedule the timeout.\r\n  if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {\r\n    nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;\r\n  }\r\n}\r\n\r\nfunction renderDidError() {\r\n  nextRenderDidError = true;\r\n}\r\n\r\nfunction pingSuspendedRoot(root, thenable, pingTime) {\r\n  // A promise that previously suspended React from committing has resolved.\r\n  // If React is still suspended, try again at the previous level (pingTime).\r\n\r\n  var pingCache = root.pingCache;\r\n  if (pingCache !== null) {\r\n    // The thenable resolved, so we no longer need to memoize, because it will\r\n    // never be thrown again.\r\n    pingCache.delete(thenable);\r\n  }\r\n\r\n  if (nextRoot !== null && nextRenderExpirationTime === pingTime) {\r\n    // Received a ping at the same priority level at which we're currently\r\n    // rendering. Restart from the root.\r\n    nextRoot = null;\r\n  } else {\r\n    // Confirm that the root is still suspended at this level. Otherwise exit.\r\n    if (isPriorityLevelSuspended(root, pingTime)) {\r\n      // Ping at the original level\r\n      markPingedPriorityLevel(root, pingTime);\r\n      var rootExpirationTime = root.expirationTime;\r\n      if (rootExpirationTime !== NoWork) {\r\n        requestWork(root, rootExpirationTime);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction retryTimedOutBoundary(boundaryFiber, thenable) {\r\n  // The boundary fiber (a Suspense component) previously timed out and was\r\n  // rendered in its fallback state. One of the promises that suspended it has\r\n  // resolved, which means at least part of the tree was likely unblocked. Try\r\n  var retryCache = void 0;\r\n  if (enableSuspenseServerRenderer) {\r\n    switch (boundaryFiber.tag) {\r\n      case SuspenseComponent:\r\n        retryCache = boundaryFiber.stateNode;\r\n        break;\r\n      case DehydratedSuspenseComponent:\r\n        retryCache = boundaryFiber.memoizedState;\r\n        break;\r\n      default:\r\n        invariant(false, 'Pinged unknown suspense boundary type. This is probably a bug in React.');\r\n    }\r\n  } else {\r\n    retryCache = boundaryFiber.stateNode;\r\n  }\r\n  if (retryCache !== null) {\r\n    // The thenable resolved, so we no longer need to memoize, because it will\r\n    // never be thrown again.\r\n    retryCache.delete(thenable);\r\n  }\r\n\r\n  var currentTime = requestCurrentTime();\r\n  var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);\r\n  var root = scheduleWorkToRoot(boundaryFiber, retryTime);\r\n  if (root !== null) {\r\n    markPendingPriorityLevel(root, retryTime);\r\n    var rootExpirationTime = root.expirationTime;\r\n    if (rootExpirationTime !== NoWork) {\r\n      requestWork(root, rootExpirationTime);\r\n    }\r\n  }\r\n}\r\n\r\nfunction scheduleWorkToRoot(fiber, expirationTime) {\r\n  recordScheduleUpdate();\r\n\r\n  {\r\n    if (fiber.tag === ClassComponent) {\r\n      var instance = fiber.stateNode;\r\n      warnAboutInvalidUpdates(instance);\r\n    }\r\n  }\r\n\r\n  // Update the source fiber's expiration time\r\n  if (fiber.expirationTime < expirationTime) {\r\n    fiber.expirationTime = expirationTime;\r\n  }\r\n  var alternate = fiber.alternate;\r\n  if (alternate !== null && alternate.expirationTime < expirationTime) {\r\n    alternate.expirationTime = expirationTime;\r\n  }\r\n  // Walk the parent path to the root and update the child expiration time.\r\n  var node = fiber.return;\r\n  var root = null;\r\n  if (node === null && fiber.tag === HostRoot) {\r\n    root = fiber.stateNode;\r\n  } else {\r\n    while (node !== null) {\r\n      alternate = node.alternate;\r\n      if (node.childExpirationTime < expirationTime) {\r\n        node.childExpirationTime = expirationTime;\r\n        if (alternate !== null && alternate.childExpirationTime < expirationTime) {\r\n          alternate.childExpirationTime = expirationTime;\r\n        }\r\n      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {\r\n        alternate.childExpirationTime = expirationTime;\r\n      }\r\n      if (node.return === null && node.tag === HostRoot) {\r\n        root = node.stateNode;\r\n        break;\r\n      }\r\n      node = node.return;\r\n    }\r\n  }\r\n\r\n  if (enableSchedulerTracing) {\r\n    if (root !== null) {\r\n      var interactions = tracing.__interactionsRef.current;\r\n      if (interactions.size > 0) {\r\n        var pendingInteractionMap = root.pendingInteractionMap;\r\n        var pendingInteractions = pendingInteractionMap.get(expirationTime);\r\n        if (pendingInteractions != null) {\r\n          interactions.forEach(function (interaction) {\r\n            if (!pendingInteractions.has(interaction)) {\r\n              // Update the pending async work count for previously unscheduled interaction.\r\n              interaction.__count++;\r\n            }\r\n\r\n            pendingInteractions.add(interaction);\r\n          });\r\n        } else {\r\n          pendingInteractionMap.set(expirationTime, new Set(interactions));\r\n\r\n          // Update the pending async work count for the current interactions.\r\n          interactions.forEach(function (interaction) {\r\n            interaction.__count++;\r\n          });\r\n        }\r\n\r\n        var subscriber = tracing.__subscriberRef.current;\r\n        if (subscriber !== null) {\r\n          var threadID = computeThreadID(expirationTime, root.interactionThreadID);\r\n          subscriber.onWorkScheduled(interactions, threadID);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return root;\r\n}\r\n\r\nfunction warnIfNotCurrentlyBatchingInDev(fiber) {\r\n  {\r\n    if (isRendering === false && isBatchingUpdates === false) {\r\n      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\\n\\n' + 'When testing, code that causes React state updates should be wrapped into act(...):\\n\\n' + 'act(() => {\\n' + '  /* fire events that update state */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see in the browser.\" + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));\r\n    }\r\n  }\r\n}\r\n\r\nfunction scheduleWork(fiber, expirationTime) {\r\n  var root = scheduleWorkToRoot(fiber, expirationTime);\r\n  if (root === null) {\r\n    {\r\n      switch (fiber.tag) {\r\n        case ClassComponent:\r\n          warnAboutUpdateOnUnmounted(fiber, true);\r\n          break;\r\n        case FunctionComponent:\r\n        case ForwardRef:\r\n        case MemoComponent:\r\n        case SimpleMemoComponent:\r\n          warnAboutUpdateOnUnmounted(fiber, false);\r\n          break;\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {\r\n    // This is an interruption. (Used for performance tracking.)\r\n    interruptedBy = fiber;\r\n    resetStack();\r\n  }\r\n  markPendingPriorityLevel(root, expirationTime);\r\n  if (\r\n  // If we're in the render phase, we don't need to schedule this root\r\n  // for an update, because we'll do it before we exit...\r\n  !isWorking || isCommitting$1 ||\r\n  // ...unless this is a different root than the one we're rendering.\r\n  nextRoot !== root) {\r\n    var rootExpirationTime = root.expirationTime;\r\n    requestWork(root, rootExpirationTime);\r\n  }\r\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\r\n    // Reset this back to zero so subsequent updates don't throw.\r\n    nestedUpdateCount = 0;\r\n    invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');\r\n  }\r\n}\r\n\r\nfunction syncUpdates(fn, a, b, c, d) {\r\n  return scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {\r\n    return fn(a, b, c, d);\r\n  });\r\n}\r\n\r\n// TODO: Everything below this is written as if it has been lifted to the\r\n// renderers. I'll do this in a follow-up.\r\n\r\n// Linked-list of roots\r\nvar firstScheduledRoot = null;\r\nvar lastScheduledRoot = null;\r\n\r\nvar callbackExpirationTime = NoWork;\r\nvar callbackID = void 0;\r\nvar isRendering = false;\r\nvar nextFlushedRoot = null;\r\nvar nextFlushedExpirationTime = NoWork;\r\nvar lowestPriorityPendingInteractiveExpirationTime = NoWork;\r\nvar hasUnhandledError = false;\r\nvar unhandledError = null;\r\n\r\nvar isBatchingUpdates = false;\r\nvar isUnbatchingUpdates = false;\r\n\r\nvar completedBatches = null;\r\n\r\nvar originalStartTimeMs = scheduler.unstable_now();\r\nvar currentRendererTime = msToExpirationTime(originalStartTimeMs);\r\nvar currentSchedulerTime = currentRendererTime;\r\n\r\n// Use these to prevent an infinite loop of nested updates\r\nvar NESTED_UPDATE_LIMIT = 50;\r\nvar nestedUpdateCount = 0;\r\nvar lastCommittedRootDuringThisBatch = null;\r\n\r\nfunction recomputeCurrentRendererTime() {\r\n  var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;\r\n  currentRendererTime = msToExpirationTime(currentTimeMs);\r\n}\r\n\r\nfunction scheduleCallbackWithExpirationTime(root, expirationTime) {\r\n  if (callbackExpirationTime !== NoWork) {\r\n    // A callback is already scheduled. Check its expiration time (timeout).\r\n    if (expirationTime < callbackExpirationTime) {\r\n      // Existing callback has sufficient timeout. Exit.\r\n      return;\r\n    } else {\r\n      if (callbackID !== null) {\r\n        // Existing callback has insufficient timeout. Cancel and schedule a\r\n        // new one.\r\n        scheduler.unstable_cancelCallback(callbackID);\r\n      }\r\n    }\r\n    // The request callback timer is already running. Don't start a new one.\r\n  } else {\r\n    startRequestCallbackTimer();\r\n  }\r\n\r\n  callbackExpirationTime = expirationTime;\r\n  var currentMs = scheduler.unstable_now() - originalStartTimeMs;\r\n  var expirationTimeMs = expirationTimeToMs(expirationTime);\r\n  var timeout = expirationTimeMs - currentMs;\r\n  callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, { timeout: timeout });\r\n}\r\n\r\n// For every call to renderRoot, one of onFatal, onComplete, onSuspend, and\r\n// onYield is called upon exiting. We use these in lieu of returning a tuple.\r\n// I've also chosen not to inline them into renderRoot because these will\r\n// eventually be lifted into the renderer.\r\nfunction onFatal(root) {\r\n  root.finishedWork = null;\r\n}\r\n\r\nfunction onComplete(root, finishedWork, expirationTime) {\r\n  root.pendingCommitExpirationTime = expirationTime;\r\n  root.finishedWork = finishedWork;\r\n}\r\n\r\nfunction onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {\r\n  root.expirationTime = rootExpirationTime;\r\n  if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {\r\n    // Don't wait an additional tick. Commit the tree immediately.\r\n    root.pendingCommitExpirationTime = suspendedExpirationTime;\r\n    root.finishedWork = finishedWork;\r\n  } else if (msUntilTimeout > 0) {\r\n    // Wait `msUntilTimeout` milliseconds before committing.\r\n    root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);\r\n  }\r\n}\r\n\r\nfunction onYield(root) {\r\n  root.finishedWork = null;\r\n}\r\n\r\nfunction onTimeout(root, finishedWork, suspendedExpirationTime) {\r\n  // The root timed out. Commit it.\r\n  root.pendingCommitExpirationTime = suspendedExpirationTime;\r\n  root.finishedWork = finishedWork;\r\n  // Read the current time before entering the commit phase. We can be\r\n  // certain this won't cause tearing related to batching of event updates\r\n  // because we're at the top of a timer event.\r\n  recomputeCurrentRendererTime();\r\n  currentSchedulerTime = currentRendererTime;\r\n  flushRoot(root, suspendedExpirationTime);\r\n}\r\n\r\nfunction onCommit(root, expirationTime) {\r\n  root.expirationTime = expirationTime;\r\n  root.finishedWork = null;\r\n}\r\n\r\nfunction requestCurrentTime() {\r\n  // requestCurrentTime is called by the scheduler to compute an expiration\r\n  // time.\r\n  //\r\n  // Expiration times are computed by adding to the current time (the start\r\n  // time). However, if two updates are scheduled within the same event, we\r\n  // should treat their start times as simultaneous, even if the actual clock\r\n  // time has advanced between the first and second call.\r\n\r\n  // In other words, because expiration times determine how updates are batched,\r\n  // we want all updates of like priority that occur within the same event to\r\n  // receive the same expiration time. Otherwise we get tearing.\r\n  //\r\n  // We keep track of two separate times: the current \"renderer\" time and the\r\n  // current \"scheduler\" time. The renderer time can be updated whenever; it\r\n  // only exists to minimize the calls performance.now.\r\n  //\r\n  // But the scheduler time can only be updated if there's no pending work, or\r\n  // if we know for certain that we're not in the middle of an event.\r\n\r\n  if (isRendering) {\r\n    // We're already rendering. Return the most recently read time.\r\n    return currentSchedulerTime;\r\n  }\r\n  // Check if there's pending work.\r\n  findHighestPriorityRoot();\r\n  if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {\r\n    // If there's no pending work, or if the pending work is offscreen, we can\r\n    // read the current time without risk of tearing.\r\n    recomputeCurrentRendererTime();\r\n    currentSchedulerTime = currentRendererTime;\r\n    return currentSchedulerTime;\r\n  }\r\n  // There's already pending work. We might be in the middle of a browser\r\n  // event. If we were to read the current time, it could cause multiple updates\r\n  // within the same event to receive different expiration times, leading to\r\n  // tearing. Return the last read time. During the next idle callback, the\r\n  // time will be updated.\r\n  return currentSchedulerTime;\r\n}\r\n\r\n// requestWork is called by the scheduler whenever a root receives an update.\r\n// It's up to the renderer to call renderRoot at some point in the future.\r\nfunction requestWork(root, expirationTime) {\r\n  addRootToSchedule(root, expirationTime);\r\n  if (isRendering) {\r\n    // Prevent reentrancy. Remaining work will be scheduled at the end of\r\n    // the currently rendering batch.\r\n    return;\r\n  }\r\n\r\n  if (isBatchingUpdates) {\r\n    // Flush work at the end of the batch.\r\n    if (isUnbatchingUpdates) {\r\n      // ...unless we're inside unbatchedUpdates, in which case we should\r\n      // flush it now.\r\n      nextFlushedRoot = root;\r\n      nextFlushedExpirationTime = Sync;\r\n      performWorkOnRoot(root, Sync, false);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // TODO: Get rid of Sync and use current time?\r\n  if (expirationTime === Sync) {\r\n    performSyncWork();\r\n  } else {\r\n    scheduleCallbackWithExpirationTime(root, expirationTime);\r\n  }\r\n}\r\n\r\nfunction addRootToSchedule(root, expirationTime) {\r\n  // Add the root to the schedule.\r\n  // Check if this root is already part of the schedule.\r\n  if (root.nextScheduledRoot === null) {\r\n    // This root is not already scheduled. Add it.\r\n    root.expirationTime = expirationTime;\r\n    if (lastScheduledRoot === null) {\r\n      firstScheduledRoot = lastScheduledRoot = root;\r\n      root.nextScheduledRoot = root;\r\n    } else {\r\n      lastScheduledRoot.nextScheduledRoot = root;\r\n      lastScheduledRoot = root;\r\n      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\r\n    }\r\n  } else {\r\n    // This root is already scheduled, but its priority may have increased.\r\n    var remainingExpirationTime = root.expirationTime;\r\n    if (expirationTime > remainingExpirationTime) {\r\n      // Update the priority.\r\n      root.expirationTime = expirationTime;\r\n    }\r\n  }\r\n}\r\n\r\nfunction findHighestPriorityRoot() {\r\n  var highestPriorityWork = NoWork;\r\n  var highestPriorityRoot = null;\r\n  if (lastScheduledRoot !== null) {\r\n    var previousScheduledRoot = lastScheduledRoot;\r\n    var root = firstScheduledRoot;\r\n    while (root !== null) {\r\n      var remainingExpirationTime = root.expirationTime;\r\n      if (remainingExpirationTime === NoWork) {\r\n        // This root no longer has work. Remove it from the scheduler.\r\n\r\n        // TODO: This check is redudant, but Flow is confused by the branch\r\n        // below where we set lastScheduledRoot to null, even though we break\r\n        // from the loop right after.\r\n        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n        if (root === root.nextScheduledRoot) {\r\n          // This is the only root in the list.\r\n          root.nextScheduledRoot = null;\r\n          firstScheduledRoot = lastScheduledRoot = null;\r\n          break;\r\n        } else if (root === firstScheduledRoot) {\r\n          // This is the first root in the list.\r\n          var next = root.nextScheduledRoot;\r\n          firstScheduledRoot = next;\r\n          lastScheduledRoot.nextScheduledRoot = next;\r\n          root.nextScheduledRoot = null;\r\n        } else if (root === lastScheduledRoot) {\r\n          // This is the last root in the list.\r\n          lastScheduledRoot = previousScheduledRoot;\r\n          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\r\n          root.nextScheduledRoot = null;\r\n          break;\r\n        } else {\r\n          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;\r\n          root.nextScheduledRoot = null;\r\n        }\r\n        root = previousScheduledRoot.nextScheduledRoot;\r\n      } else {\r\n        if (remainingExpirationTime > highestPriorityWork) {\r\n          // Update the priority, if it's higher\r\n          highestPriorityWork = remainingExpirationTime;\r\n          highestPriorityRoot = root;\r\n        }\r\n        if (root === lastScheduledRoot) {\r\n          break;\r\n        }\r\n        if (highestPriorityWork === Sync) {\r\n          // Sync is highest priority by definition so\r\n          // we can stop searching.\r\n          break;\r\n        }\r\n        previousScheduledRoot = root;\r\n        root = root.nextScheduledRoot;\r\n      }\r\n    }\r\n  }\r\n\r\n  nextFlushedRoot = highestPriorityRoot;\r\n  nextFlushedExpirationTime = highestPriorityWork;\r\n}\r\n\r\n// TODO: This wrapper exists because many of the older tests (the ones that use\r\n// flushDeferredPri) rely on the number of times `shouldYield` is called. We\r\n// should get rid of it.\r\nvar didYield = false;\r\nfunction shouldYieldToRenderer() {\r\n  if (didYield) {\r\n    return true;\r\n  }\r\n  if (scheduler.unstable_shouldYield()) {\r\n    didYield = true;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction performAsyncWork() {\r\n  try {\r\n    if (!shouldYieldToRenderer()) {\r\n      // The callback timed out. That means at least one update has expired.\r\n      // Iterate through the root schedule. If they contain expired work, set\r\n      // the next render expiration time to the current time. This has the effect\r\n      // of flushing all expired work in a single batch, instead of flushing each\r\n      // level one at a time.\r\n      if (firstScheduledRoot !== null) {\r\n        recomputeCurrentRendererTime();\r\n        var root = firstScheduledRoot;\r\n        do {\r\n          didExpireAtExpirationTime(root, currentRendererTime);\r\n          // The root schedule is circular, so this is never null.\r\n          root = root.nextScheduledRoot;\r\n        } while (root !== firstScheduledRoot);\r\n      }\r\n    }\r\n    performWork(NoWork, true);\r\n  } finally {\r\n    didYield = false;\r\n  }\r\n}\r\n\r\nfunction performSyncWork() {\r\n  performWork(Sync, false);\r\n}\r\n\r\nfunction performWork(minExpirationTime, isYieldy) {\r\n  // Keep working on roots until there's no more work, or until there's a higher\r\n  // priority event.\r\n  findHighestPriorityRoot();\r\n\r\n  if (isYieldy) {\r\n    recomputeCurrentRendererTime();\r\n    currentSchedulerTime = currentRendererTime;\r\n\r\n    if (enableUserTimingAPI) {\r\n      var didExpire = nextFlushedExpirationTime > currentRendererTime;\r\n      var timeout = expirationTimeToMs(nextFlushedExpirationTime);\r\n      stopRequestCallbackTimer(didExpire, timeout);\r\n    }\r\n\r\n    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {\r\n      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);\r\n      findHighestPriorityRoot();\r\n      recomputeCurrentRendererTime();\r\n      currentSchedulerTime = currentRendererTime;\r\n    }\r\n  } else {\r\n    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {\r\n      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);\r\n      findHighestPriorityRoot();\r\n    }\r\n  }\r\n\r\n  // We're done flushing work. Either we ran out of time in this callback,\r\n  // or there's no more work left with sufficient priority.\r\n\r\n  // If we're inside a callback, set this to false since we just completed it.\r\n  if (isYieldy) {\r\n    callbackExpirationTime = NoWork;\r\n    callbackID = null;\r\n  }\r\n  // If there's work left over, schedule a new callback.\r\n  if (nextFlushedExpirationTime !== NoWork) {\r\n    scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);\r\n  }\r\n\r\n  // Clean-up.\r\n  finishRendering();\r\n}\r\n\r\nfunction flushRoot(root, expirationTime) {\r\n  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;\r\n  // Perform work on root as if the given expiration time is the current time.\r\n  // This has the effect of synchronously flushing all work up to and\r\n  // including the given time.\r\n  nextFlushedRoot = root;\r\n  nextFlushedExpirationTime = expirationTime;\r\n  performWorkOnRoot(root, expirationTime, false);\r\n  // Flush any sync work that was scheduled by lifecycles\r\n  performSyncWork();\r\n}\r\n\r\nfunction finishRendering() {\r\n  nestedUpdateCount = 0;\r\n  lastCommittedRootDuringThisBatch = null;\r\n\r\n  if (completedBatches !== null) {\r\n    var batches = completedBatches;\r\n    completedBatches = null;\r\n    for (var i = 0; i < batches.length; i++) {\r\n      var batch = batches[i];\r\n      try {\r\n        batch._onComplete();\r\n      } catch (error) {\r\n        if (!hasUnhandledError) {\r\n          hasUnhandledError = true;\r\n          unhandledError = error;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hasUnhandledError) {\r\n    var error = unhandledError;\r\n    unhandledError = null;\r\n    hasUnhandledError = false;\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction performWorkOnRoot(root, expirationTime, isYieldy) {\r\n  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n\r\n  isRendering = true;\r\n\r\n  // Check if this is async work or sync/expired work.\r\n  if (!isYieldy) {\r\n    // Flush work without yielding.\r\n    // TODO: Non-yieldy work does not necessarily imply expired work. A renderer\r\n    // may want to perform some work without yielding, but also without\r\n    // requiring the root to complete (by triggering placeholders).\r\n\r\n    var finishedWork = root.finishedWork;\r\n    if (finishedWork !== null) {\r\n      // This root is already complete. We can commit it.\r\n      completeRoot(root, finishedWork, expirationTime);\r\n    } else {\r\n      root.finishedWork = null;\r\n      // If this root previously suspended, clear its existing timeout, since\r\n      // we're about to try rendering again.\r\n      var timeoutHandle = root.timeoutHandle;\r\n      if (timeoutHandle !== noTimeout) {\r\n        root.timeoutHandle = noTimeout;\r\n        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\r\n        cancelTimeout(timeoutHandle);\r\n      }\r\n      renderRoot(root, isYieldy);\r\n      finishedWork = root.finishedWork;\r\n      if (finishedWork !== null) {\r\n        // We've completed the root. Commit it.\r\n        completeRoot(root, finishedWork, expirationTime);\r\n      }\r\n    }\r\n  } else {\r\n    // Flush async work.\r\n    var _finishedWork = root.finishedWork;\r\n    if (_finishedWork !== null) {\r\n      // This root is already complete. We can commit it.\r\n      completeRoot(root, _finishedWork, expirationTime);\r\n    } else {\r\n      root.finishedWork = null;\r\n      // If this root previously suspended, clear its existing timeout, since\r\n      // we're about to try rendering again.\r\n      var _timeoutHandle = root.timeoutHandle;\r\n      if (_timeoutHandle !== noTimeout) {\r\n        root.timeoutHandle = noTimeout;\r\n        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\r\n        cancelTimeout(_timeoutHandle);\r\n      }\r\n      renderRoot(root, isYieldy);\r\n      _finishedWork = root.finishedWork;\r\n      if (_finishedWork !== null) {\r\n        // We've completed the root. Check the if we should yield one more time\r\n        // before committing.\r\n        if (!shouldYieldToRenderer()) {\r\n          // Still time left. Commit the root.\r\n          completeRoot(root, _finishedWork, expirationTime);\r\n        } else {\r\n          // There's no time left. Mark this root as complete. We'll come\r\n          // back and commit it later.\r\n          root.finishedWork = _finishedWork;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isRendering = false;\r\n}\r\n\r\nfunction completeRoot(root, finishedWork, expirationTime) {\r\n  // Check if there's a batch that matches this expiration time.\r\n  var firstBatch = root.firstBatch;\r\n  if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {\r\n    if (completedBatches === null) {\r\n      completedBatches = [firstBatch];\r\n    } else {\r\n      completedBatches.push(firstBatch);\r\n    }\r\n    if (firstBatch._defer) {\r\n      // This root is blocked from committing by a batch. Unschedule it until\r\n      // we receive another update.\r\n      root.finishedWork = finishedWork;\r\n      root.expirationTime = NoWork;\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Commit the root.\r\n  root.finishedWork = null;\r\n\r\n  // Check if this is a nested update (a sync update scheduled during the\r\n  // commit phase).\r\n  if (root === lastCommittedRootDuringThisBatch) {\r\n    // If the next root is the same as the previous root, this is a nested\r\n    // update. To prevent an infinite loop, increment the nested update count.\r\n    nestedUpdateCount++;\r\n  } else {\r\n    // Reset whenever we switch roots.\r\n    lastCommittedRootDuringThisBatch = root;\r\n    nestedUpdateCount = 0;\r\n  }\r\n  scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {\r\n    commitRoot(root, finishedWork);\r\n  });\r\n}\r\n\r\nfunction onUncaughtError(error) {\r\n  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\r\n  // Unschedule this root so we don't work on it again until there's\r\n  // another update.\r\n  nextFlushedRoot.expirationTime = NoWork;\r\n  if (!hasUnhandledError) {\r\n    hasUnhandledError = true;\r\n    unhandledError = error;\r\n  }\r\n}\r\n\r\n// TODO: Batching should be implemented at the renderer level, not inside\r\n// the reconciler.\r\nfunction batchedUpdates$1(fn, a) {\r\n  var previousIsBatchingUpdates = isBatchingUpdates;\r\n  isBatchingUpdates = true;\r\n  try {\r\n    return fn(a);\r\n  } finally {\r\n    isBatchingUpdates = previousIsBatchingUpdates;\r\n    if (!isBatchingUpdates && !isRendering) {\r\n      performSyncWork();\r\n    }\r\n  }\r\n}\r\n\r\n// TODO: Batching should be implemented at the renderer level, not inside\r\n// the reconciler.\r\nfunction unbatchedUpdates(fn, a) {\r\n  if (isBatchingUpdates && !isUnbatchingUpdates) {\r\n    isUnbatchingUpdates = true;\r\n    try {\r\n      return fn(a);\r\n    } finally {\r\n      isUnbatchingUpdates = false;\r\n    }\r\n  }\r\n  return fn(a);\r\n}\r\n\r\n// TODO: Batching should be implemented at the renderer level, not within\r\n// the reconciler.\r\nfunction flushSync(fn, a) {\r\n  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;\r\n  var previousIsBatchingUpdates = isBatchingUpdates;\r\n  isBatchingUpdates = true;\r\n  try {\r\n    return syncUpdates(fn, a);\r\n  } finally {\r\n    isBatchingUpdates = previousIsBatchingUpdates;\r\n    performSyncWork();\r\n  }\r\n}\r\n\r\nfunction interactiveUpdates$1(fn, a, b) {\r\n  // If there are any pending interactive updates, synchronously flush them.\r\n  // This needs to happen before we read any handlers, because the effect of\r\n  // the previous event may influence which handlers are called during\r\n  // this event.\r\n  if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {\r\n    // Synchronously flush pending interactive updates.\r\n    performWork(lowestPriorityPendingInteractiveExpirationTime, false);\r\n    lowestPriorityPendingInteractiveExpirationTime = NoWork;\r\n  }\r\n  var previousIsBatchingUpdates = isBatchingUpdates;\r\n  isBatchingUpdates = true;\r\n  try {\r\n    return scheduler.unstable_runWithPriority(scheduler.unstable_UserBlockingPriority, function () {\r\n      return fn(a, b);\r\n    });\r\n  } finally {\r\n    isBatchingUpdates = previousIsBatchingUpdates;\r\n    if (!isBatchingUpdates && !isRendering) {\r\n      performSyncWork();\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushInteractiveUpdates$1() {\r\n  if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {\r\n    // Synchronously flush pending interactive updates.\r\n    performWork(lowestPriorityPendingInteractiveExpirationTime, false);\r\n    lowestPriorityPendingInteractiveExpirationTime = NoWork;\r\n  }\r\n}\r\n\r\nfunction flushControlled(fn) {\r\n  var previousIsBatchingUpdates = isBatchingUpdates;\r\n  isBatchingUpdates = true;\r\n  try {\r\n    syncUpdates(fn);\r\n  } finally {\r\n    isBatchingUpdates = previousIsBatchingUpdates;\r\n    if (!isBatchingUpdates && !isRendering) {\r\n      performSyncWork();\r\n    }\r\n  }\r\n}\r\n\r\n// 0 is PROD, 1 is DEV.\r\n// Might add PROFILE later.\r\n\r\n\r\nvar didWarnAboutNestedUpdates = void 0;\r\nvar didWarnAboutFindNodeInStrictMode = void 0;\r\n\r\n{\r\n  didWarnAboutNestedUpdates = false;\r\n  didWarnAboutFindNodeInStrictMode = {};\r\n}\r\n\r\nfunction getContextForSubtree(parentComponent) {\r\n  if (!parentComponent) {\r\n    return emptyContextObject;\r\n  }\r\n\r\n  var fiber = get(parentComponent);\r\n  var parentContext = findCurrentUnmaskedContext(fiber);\r\n\r\n  if (fiber.tag === ClassComponent) {\r\n    var Component = fiber.type;\r\n    if (isContextProvider(Component)) {\r\n      return processChildContext(fiber, Component, parentContext);\r\n    }\r\n  }\r\n\r\n  return parentContext;\r\n}\r\n\r\nfunction scheduleRootUpdate(current$$1, element, expirationTime, callback) {\r\n  {\r\n    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {\r\n      didWarnAboutNestedUpdates = true;\r\n      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');\r\n    }\r\n  }\r\n\r\n  var update = createUpdate(expirationTime);\r\n  // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n  update.payload = { element: element };\r\n\r\n  callback = callback === undefined ? null : callback;\r\n  if (callback !== null) {\r\n    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;\r\n    update.callback = callback;\r\n  }\r\n\r\n  flushPassiveEffects();\r\n  enqueueUpdate(current$$1, update);\r\n  scheduleWork(current$$1, expirationTime);\r\n\r\n  return expirationTime;\r\n}\r\n\r\nfunction updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {\r\n  // TODO: If this is a nested container, this won't be the root.\r\n  var current$$1 = container.current;\r\n\r\n  {\r\n    if (ReactFiberInstrumentation_1.debugTool) {\r\n      if (current$$1.alternate === null) {\r\n        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);\r\n      } else if (element === null) {\r\n        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);\r\n      } else {\r\n        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);\r\n      }\r\n    }\r\n  }\r\n\r\n  var context = getContextForSubtree(parentComponent);\r\n  if (container.context === null) {\r\n    container.context = context;\r\n  } else {\r\n    container.pendingContext = context;\r\n  }\r\n\r\n  return scheduleRootUpdate(current$$1, element, expirationTime, callback);\r\n}\r\n\r\nfunction findHostInstance(component) {\r\n  var fiber = get(component);\r\n  if (fiber === undefined) {\r\n    if (typeof component.render === 'function') {\r\n      invariant(false, 'Unable to find node on an unmounted component.');\r\n    } else {\r\n      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));\r\n    }\r\n  }\r\n  var hostFiber = findCurrentHostFiber(fiber);\r\n  if (hostFiber === null) {\r\n    return null;\r\n  }\r\n  return hostFiber.stateNode;\r\n}\r\n\r\nfunction findHostInstanceWithWarning(component, methodName) {\r\n  {\r\n    var fiber = get(component);\r\n    if (fiber === undefined) {\r\n      if (typeof component.render === 'function') {\r\n        invariant(false, 'Unable to find node on an unmounted component.');\r\n      } else {\r\n        invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));\r\n      }\r\n    }\r\n    var hostFiber = findCurrentHostFiber(fiber);\r\n    if (hostFiber === null) {\r\n      return null;\r\n    }\r\n    if (hostFiber.mode & StrictMode) {\r\n      var componentName = getComponentName(fiber.type) || 'Component';\r\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\r\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\r\n        if (fiber.mode & StrictMode) {\r\n          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));\r\n        } else {\r\n          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));\r\n        }\r\n      }\r\n    }\r\n    return hostFiber.stateNode;\r\n  }\r\n  return findHostInstance(component);\r\n}\r\n\r\nfunction createContainer(containerInfo, isConcurrent, hydrate) {\r\n  return createFiberRoot(containerInfo, isConcurrent, hydrate);\r\n}\r\n\r\nfunction updateContainer(element, container, parentComponent, callback) {\r\n  var current$$1 = container.current;\r\n  var currentTime = requestCurrentTime();\r\n  var expirationTime = computeExpirationForFiber(currentTime, current$$1);\r\n  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);\r\n}\r\n\r\nfunction getPublicRootInstance(container) {\r\n  var containerFiber = container.current;\r\n  if (!containerFiber.child) {\r\n    return null;\r\n  }\r\n  switch (containerFiber.child.tag) {\r\n    case HostComponent:\r\n      return getPublicInstance(containerFiber.child.stateNode);\r\n    default:\r\n      return containerFiber.child.stateNode;\r\n  }\r\n}\r\n\r\nfunction findHostInstanceWithNoPortals(fiber) {\r\n  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);\r\n  if (hostFiber === null) {\r\n    return null;\r\n  }\r\n  return hostFiber.stateNode;\r\n}\r\n\r\nvar overrideProps = null;\r\n\r\n{\r\n  var copyWithSetImpl = function (obj, path, idx, value) {\r\n    if (idx >= path.length) {\r\n      return value;\r\n    }\r\n    var key = path[idx];\r\n    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);\r\n    // $FlowFixMe number or string is fine here\r\n    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\r\n    return updated;\r\n  };\r\n\r\n  var copyWithSet = function (obj, path, value) {\r\n    return copyWithSetImpl(obj, path, 0, value);\r\n  };\r\n\r\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\r\n  overrideProps = function (fiber, path, value) {\r\n    flushPassiveEffects();\r\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n    scheduleWork(fiber, Sync);\r\n  };\r\n}\r\n\r\nfunction injectIntoDevTools(devToolsConfig) {\r\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\r\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\n\r\n\r\n  return injectInternals(_assign({}, devToolsConfig, {\r\n    overrideProps: overrideProps,\r\n    currentDispatcherRef: ReactCurrentDispatcher,\r\n    findHostInstanceByFiber: function (fiber) {\r\n      var hostFiber = findCurrentHostFiber(fiber);\r\n      if (hostFiber === null) {\r\n        return null;\r\n      }\r\n      return hostFiber.stateNode;\r\n    },\r\n    findFiberByHostInstance: function (instance) {\r\n      if (!findFiberByHostInstance) {\r\n        // Might not be implemented by the renderer.\r\n        return null;\r\n      }\r\n      return findFiberByHostInstance(instance);\r\n    }\r\n  }));\r\n}\r\n\r\n// This file intentionally does *not* have the Flow annotation.\r\n// Don't add it. See `./inline-typed.js` for an explanation.\r\n\r\nfunction createPortal$1(children, containerInfo,\r\n// TODO: figure out the API for cross-renderer implementation.\r\nimplementation) {\r\n  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n\r\n  return {\r\n    // This tag allow us to uniquely identify this as a React Portal\r\n    $$typeof: REACT_PORTAL_TYPE,\r\n    key: key == null ? null : '' + key,\r\n    children: children,\r\n    containerInfo: containerInfo,\r\n    implementation: implementation\r\n  };\r\n}\r\n\r\n// TODO: this is special because it gets imported during build.\r\n\r\nvar ReactVersion = '16.8.4';\r\n\r\n// TODO: This type is shared between the reconciler and ReactDOM, but will\r\n// eventually be lifted out to the renderer.\r\n\r\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nvar topLevelUpdateWarnings = void 0;\r\nvar warnOnInvalidCallback = void 0;\r\nvar didWarnAboutUnstableCreatePortal = false;\r\n\r\n{\r\n  if (typeof Map !== 'function' ||\r\n  // $FlowIssue Flow incorrectly thinks Map has no prototype\r\n  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||\r\n  // $FlowIssue Flow incorrectly thinks Set has no prototype\r\n  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {\r\n    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\r\n  }\r\n\r\n  topLevelUpdateWarnings = function (container) {\r\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\r\n      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);\r\n      if (hostInstance) {\r\n        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;\r\n      }\r\n    }\r\n\r\n    var isRootRenderedBySomeReact = !!container._reactRootContainer;\r\n    var rootEl = getReactRootElementInContainer(container);\r\n    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));\r\n\r\n    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\r\n\r\n    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\r\n  };\r\n\r\n  warnOnInvalidCallback = function (callback, callerName) {\r\n    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;\r\n  };\r\n}\r\n\r\nsetRestoreImplementation(restoreControlledState$1);\r\n\r\nfunction ReactBatch(root) {\r\n  var expirationTime = computeUniqueAsyncExpiration();\r\n  this._expirationTime = expirationTime;\r\n  this._root = root;\r\n  this._next = null;\r\n  this._callbacks = null;\r\n  this._didComplete = false;\r\n  this._hasChildren = false;\r\n  this._children = null;\r\n  this._defer = true;\r\n}\r\nReactBatch.prototype.render = function (children) {\r\n  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;\r\n  this._hasChildren = true;\r\n  this._children = children;\r\n  var internalRoot = this._root._internalRoot;\r\n  var expirationTime = this._expirationTime;\r\n  var work = new ReactWork();\r\n  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);\r\n  return work;\r\n};\r\nReactBatch.prototype.then = function (onComplete) {\r\n  if (this._didComplete) {\r\n    onComplete();\r\n    return;\r\n  }\r\n  var callbacks = this._callbacks;\r\n  if (callbacks === null) {\r\n    callbacks = this._callbacks = [];\r\n  }\r\n  callbacks.push(onComplete);\r\n};\r\nReactBatch.prototype.commit = function () {\r\n  var internalRoot = this._root._internalRoot;\r\n  var firstBatch = internalRoot.firstBatch;\r\n  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;\r\n\r\n  if (!this._hasChildren) {\r\n    // This batch is empty. Return.\r\n    this._next = null;\r\n    this._defer = false;\r\n    return;\r\n  }\r\n\r\n  var expirationTime = this._expirationTime;\r\n\r\n  // Ensure this is the first batch in the list.\r\n  if (firstBatch !== this) {\r\n    // This batch is not the earliest batch. We need to move it to the front.\r\n    // Update its expiration time to be the expiration time of the earliest\r\n    // batch, so that we can flush it without flushing the other batches.\r\n    if (this._hasChildren) {\r\n      expirationTime = this._expirationTime = firstBatch._expirationTime;\r\n      // Rendering this batch again ensures its children will be the final state\r\n      // when we flush (updates are processed in insertion order: last\r\n      // update wins).\r\n      // TODO: This forces a restart. Should we print a warning?\r\n      this.render(this._children);\r\n    }\r\n\r\n    // Remove the batch from the list.\r\n    var previous = null;\r\n    var batch = firstBatch;\r\n    while (batch !== this) {\r\n      previous = batch;\r\n      batch = batch._next;\r\n    }\r\n    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;\r\n    previous._next = batch._next;\r\n\r\n    // Add it to the front.\r\n    this._next = firstBatch;\r\n    firstBatch = internalRoot.firstBatch = this;\r\n  }\r\n\r\n  // Synchronously flush all the work up to this batch's expiration time.\r\n  this._defer = false;\r\n  flushRoot(internalRoot, expirationTime);\r\n\r\n  // Pop the batch from the list.\r\n  var next = this._next;\r\n  this._next = null;\r\n  firstBatch = internalRoot.firstBatch = next;\r\n\r\n  // Append the next earliest batch's children to the update queue.\r\n  if (firstBatch !== null && firstBatch._hasChildren) {\r\n    firstBatch.render(firstBatch._children);\r\n  }\r\n};\r\nReactBatch.prototype._onComplete = function () {\r\n  if (this._didComplete) {\r\n    return;\r\n  }\r\n  this._didComplete = true;\r\n  var callbacks = this._callbacks;\r\n  if (callbacks === null) {\r\n    return;\r\n  }\r\n  // TODO: Error handling.\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    var _callback = callbacks[i];\r\n    _callback();\r\n  }\r\n};\r\n\r\nfunction ReactWork() {\r\n  this._callbacks = null;\r\n  this._didCommit = false;\r\n  // TODO: Avoid need to bind by replacing callbacks in the update queue with\r\n  // list of Work objects.\r\n  this._onCommit = this._onCommit.bind(this);\r\n}\r\nReactWork.prototype.then = function (onCommit) {\r\n  if (this._didCommit) {\r\n    onCommit();\r\n    return;\r\n  }\r\n  var callbacks = this._callbacks;\r\n  if (callbacks === null) {\r\n    callbacks = this._callbacks = [];\r\n  }\r\n  callbacks.push(onCommit);\r\n};\r\nReactWork.prototype._onCommit = function () {\r\n  if (this._didCommit) {\r\n    return;\r\n  }\r\n  this._didCommit = true;\r\n  var callbacks = this._callbacks;\r\n  if (callbacks === null) {\r\n    return;\r\n  }\r\n  // TODO: Error handling.\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    var _callback2 = callbacks[i];\r\n    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;\r\n    _callback2();\r\n  }\r\n};\r\n\r\nfunction ReactRoot(container, isConcurrent, hydrate) {\r\n  var root = createContainer(container, isConcurrent, hydrate);\r\n  this._internalRoot = root;\r\n}\r\nReactRoot.prototype.render = function (children, callback) {\r\n  var root = this._internalRoot;\r\n  var work = new ReactWork();\r\n  callback = callback === undefined ? null : callback;\r\n  {\r\n    warnOnInvalidCallback(callback, 'render');\r\n  }\r\n  if (callback !== null) {\r\n    work.then(callback);\r\n  }\r\n  updateContainer(children, root, null, work._onCommit);\r\n  return work;\r\n};\r\nReactRoot.prototype.unmount = function (callback) {\r\n  var root = this._internalRoot;\r\n  var work = new ReactWork();\r\n  callback = callback === undefined ? null : callback;\r\n  {\r\n    warnOnInvalidCallback(callback, 'render');\r\n  }\r\n  if (callback !== null) {\r\n    work.then(callback);\r\n  }\r\n  updateContainer(null, root, null, work._onCommit);\r\n  return work;\r\n};\r\nReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {\r\n  var root = this._internalRoot;\r\n  var work = new ReactWork();\r\n  callback = callback === undefined ? null : callback;\r\n  {\r\n    warnOnInvalidCallback(callback, 'render');\r\n  }\r\n  if (callback !== null) {\r\n    work.then(callback);\r\n  }\r\n  updateContainer(children, root, parentComponent, work._onCommit);\r\n  return work;\r\n};\r\nReactRoot.prototype.createBatch = function () {\r\n  var batch = new ReactBatch(this);\r\n  var expirationTime = batch._expirationTime;\r\n\r\n  var internalRoot = this._internalRoot;\r\n  var firstBatch = internalRoot.firstBatch;\r\n  if (firstBatch === null) {\r\n    internalRoot.firstBatch = batch;\r\n    batch._next = null;\r\n  } else {\r\n    // Insert sorted by expiration time then insertion order\r\n    var insertAfter = null;\r\n    var insertBefore = firstBatch;\r\n    while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {\r\n      insertAfter = insertBefore;\r\n      insertBefore = insertBefore._next;\r\n    }\r\n    batch._next = insertBefore;\r\n    if (insertAfter !== null) {\r\n      insertAfter._next = batch;\r\n    }\r\n  }\r\n\r\n  return batch;\r\n};\r\n\r\n/**\r\n * True if the supplied DOM node is a valid node element.\r\n *\r\n * @param {?DOMElement} node The candidate DOM node.\r\n * @return {boolean} True if the DOM is a valid DOM node.\r\n * @internal\r\n */\r\nfunction isValidContainer(node) {\r\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\r\n}\r\n\r\nfunction getReactRootElementInContainer(container) {\r\n  if (!container) {\r\n    return null;\r\n  }\r\n\r\n  if (container.nodeType === DOCUMENT_NODE) {\r\n    return container.documentElement;\r\n  } else {\r\n    return container.firstChild;\r\n  }\r\n}\r\n\r\nfunction shouldHydrateDueToLegacyHeuristic(container) {\r\n  var rootElement = getReactRootElementInContainer(container);\r\n  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));\r\n}\r\n\r\nsetBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);\r\n\r\nvar warnedAboutHydrateAPI = false;\r\n\r\nfunction legacyCreateRootFromDOMContainer(container, forceHydrate) {\r\n  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);\r\n  // First clear any existing content.\r\n  if (!shouldHydrate) {\r\n    var warned = false;\r\n    var rootSibling = void 0;\r\n    while (rootSibling = container.lastChild) {\r\n      {\r\n        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {\r\n          warned = true;\r\n          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');\r\n        }\r\n      }\r\n      container.removeChild(rootSibling);\r\n    }\r\n  }\r\n  {\r\n    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\r\n      warnedAboutHydrateAPI = true;\r\n      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');\r\n    }\r\n  }\r\n  // Legacy roots are not async by default.\r\n  var isConcurrent = false;\r\n  return new ReactRoot(container, isConcurrent, shouldHydrate);\r\n}\r\n\r\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\r\n  {\r\n    topLevelUpdateWarnings(container);\r\n  }\r\n\r\n  // TODO: Without `any` type, Flow says \"Property cannot be accessed on any\r\n  // member of intersection type.\" Whyyyyyy.\r\n  var root = container._reactRootContainer;\r\n  if (!root) {\r\n    // Initial mount\r\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);\r\n    if (typeof callback === 'function') {\r\n      var originalCallback = callback;\r\n      callback = function () {\r\n        var instance = getPublicRootInstance(root._internalRoot);\r\n        originalCallback.call(instance);\r\n      };\r\n    }\r\n    // Initial mount should not be batched.\r\n    unbatchedUpdates(function () {\r\n      if (parentComponent != null) {\r\n        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);\r\n      } else {\r\n        root.render(children, callback);\r\n      }\r\n    });\r\n  } else {\r\n    if (typeof callback === 'function') {\r\n      var _originalCallback = callback;\r\n      callback = function () {\r\n        var instance = getPublicRootInstance(root._internalRoot);\r\n        _originalCallback.call(instance);\r\n      };\r\n    }\r\n    // Update\r\n    if (parentComponent != null) {\r\n      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);\r\n    } else {\r\n      root.render(children, callback);\r\n    }\r\n  }\r\n  return getPublicRootInstance(root._internalRoot);\r\n}\r\n\r\nfunction createPortal$$1(children, container) {\r\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\r\n\r\n  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\r\n  // TODO: pass ReactDOM portal implementation as third argument\r\n  return createPortal$1(children, container, null, key);\r\n}\r\n\r\nvar ReactDOM = {\r\n  createPortal: createPortal$$1,\r\n\r\n  findDOMNode: function (componentOrElement) {\r\n    {\r\n      var owner = ReactCurrentOwner.current;\r\n      if (owner !== null && owner.stateNode !== null) {\r\n        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\r\n        !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;\r\n        owner.stateNode._warnedAboutRefsInRender = true;\r\n      }\r\n    }\r\n    if (componentOrElement == null) {\r\n      return null;\r\n    }\r\n    if (componentOrElement.nodeType === ELEMENT_NODE) {\r\n      return componentOrElement;\r\n    }\r\n    {\r\n      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\r\n    }\r\n    return findHostInstance(componentOrElement);\r\n  },\r\n  hydrate: function (element, container, callback) {\r\n    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\r\n    {\r\n      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\r\n    }\r\n    // TODO: throw or warn if we couldn't hydrate?\r\n    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\r\n  },\r\n  render: function (element, container, callback) {\r\n    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\r\n    {\r\n      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\r\n    }\r\n    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\r\n  },\r\n  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {\r\n    !isValidContainer(containerNode) ? invariant(false, 'Target container is not a DOM element.') : void 0;\r\n    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;\r\n    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\r\n  },\r\n  unmountComponentAtNode: function (container) {\r\n    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;\r\n\r\n    {\r\n      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\r\n    }\r\n\r\n    if (container._reactRootContainer) {\r\n      {\r\n        var rootEl = getReactRootElementInContainer(container);\r\n        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);\r\n        !!renderedByDifferentReact ? warningWithoutStack$1(false, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\r\n      }\r\n\r\n      // Unmount should not be batched.\r\n      unbatchedUpdates(function () {\r\n        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {\r\n          container._reactRootContainer = null;\r\n        });\r\n      });\r\n      // If you call unmountComponentAtNode twice in quick succession, you'll\r\n      // get `true` twice. That's probably fine?\r\n      return true;\r\n    } else {\r\n      {\r\n        var _rootEl = getReactRootElementInContainer(container);\r\n        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));\r\n\r\n        // Check if the container itself is a React root node.\r\n        var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;\r\n\r\n        !!hasNonRootReactChild ? warningWithoutStack$1(false, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\r\n      }\r\n\r\n      return false;\r\n    }\r\n  },\r\n\r\n\r\n  // Temporary alias since we already shipped React 16 RC with it.\r\n  // TODO: remove in React 17.\r\n  unstable_createPortal: function () {\r\n    if (!didWarnAboutUnstableCreatePortal) {\r\n      didWarnAboutUnstableCreatePortal = true;\r\n      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the \"unstable_\" prefix.');\r\n    }\r\n    return createPortal$$1.apply(undefined, arguments);\r\n  },\r\n\r\n\r\n  unstable_batchedUpdates: batchedUpdates$1,\r\n\r\n  unstable_interactiveUpdates: interactiveUpdates$1,\r\n\r\n  flushSync: flushSync,\r\n\r\n  unstable_createRoot: createRoot,\r\n  unstable_flushControlled: flushControlled,\r\n\r\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\r\n    // Keep in sync with ReactDOMUnstableNativeDependencies.js\r\n    // and ReactTestUtils.js. This is an array for better minification.\r\n    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch]\r\n  }\r\n};\r\n\r\nfunction createRoot(container, options) {\r\n  var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\r\n  !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;\r\n  {\r\n    !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;\r\n    container._reactHasBeenPassedToCreateRootDEV = true;\r\n  }\r\n  var hydrate = options != null && options.hydrate === true;\r\n  return new ReactRoot(container, true, hydrate);\r\n}\r\n\r\nif (enableStableConcurrentModeAPIs) {\r\n  ReactDOM.createRoot = createRoot;\r\n  ReactDOM.unstable_createRoot = undefined;\r\n}\r\n\r\nvar foundDevTools = injectIntoDevTools({\r\n  findFiberByHostInstance: getClosestInstanceFromNode,\r\n  bundleType: 1,\r\n  version: ReactVersion,\r\n  rendererPackageName: 'react-dom'\r\n});\r\n\r\n{\r\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\r\n    // If we're in Chrome or Firefox, provide a download link if not installed.\r\n    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\r\n      var protocol = window.location.protocol;\r\n      // Don't warn in exotic cases like chrome-extension://.\r\n      if (/^(https?|file):$/.test(protocol)) {\r\n        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nvar ReactDOM$2 = Object.freeze({\r\n\tdefault: ReactDOM\r\n});\r\n\r\nvar ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;\r\n\r\n// TODO: decide on the top-level export form.\r\n// This is hacky but makes it work with both Rollup and Jest.\r\nvar reactDom = ReactDOM$3.default || ReactDOM$3;\r\n\r\nmodule.exports = reactDom;\r\n  })();\r\n}\r\n","'use strict';\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // This branch is unreachable because this function is only called\r\n    // in production, but the condition is true only in development.\r\n    // Therefore if the branch is still here, dead code elimination wasn't\r\n    // properly applied.\r\n    // Don't change the message. React DevTools relies on it. Also make sure\r\n    // this message doesn't occur elsewhere in this function, or it will cause\r\n    // a false positive.\r\n    throw new Error('^_^');\r\n  }\r\n  try {\r\n    // Verify that the code above has been dead code eliminated (DCE'd).\r\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\r\n  } catch (err) {\r\n    // DevTools shouldn't crash React, no matter what.\r\n    // We should still report in case we break this code.\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  // DCE check should happen before ReactDOM bundle executes so that\r\n  // DevTools can report bad minification during injection.\r\n  checkDCE();\r\n  module.exports = require('./cjs/react-dom.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-dom.development.js');\r\n}\r\n","/** @license React v16.8.4\r\n * react.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n'use strict';\r\n\r\nvar _assign = require('object-assign');\r\nvar checkPropTypes = require('prop-types/checkPropTypes');\r\n\r\n// TODO: this is special because it gets imported during build.\r\n\r\nvar ReactVersion = '16.8.4';\r\n\r\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\r\n// nor polyfill, then a plain number is used for performance.\r\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\r\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\r\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\r\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\r\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\r\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\r\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\r\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\r\n\r\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\r\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\r\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\r\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\r\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\r\n\r\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Use invariant() to assert state which your program assumes to be true.\r\n *\r\n * Provide sprintf-style format (only %s is supported) and arguments\r\n * to provide information about what broke and what you were\r\n * expecting.\r\n *\r\n * The invariant message will be stripped in production, but the invariant\r\n * will remain to ensure logic does not differ in production.\r\n */\r\n\r\nvar validateFormat = function () {};\r\n\r\n{\r\n  validateFormat = function (format) {\r\n    if (format === undefined) {\r\n      throw new Error('invariant requires an error message argument');\r\n    }\r\n  };\r\n}\r\n\r\nfunction invariant(condition, format, a, b, c, d, e, f) {\r\n  validateFormat(format);\r\n\r\n  if (!condition) {\r\n    var error = void 0;\r\n    if (format === undefined) {\r\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\r\n    } else {\r\n      var args = [a, b, c, d, e, f];\r\n      var argIndex = 0;\r\n      error = new Error(format.replace(/%s/g, function () {\r\n        return args[argIndex++];\r\n      }));\r\n      error.name = 'Invariant Violation';\r\n    }\r\n\r\n    error.framesToPop = 1; // we don't care about invariant's own frame\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Relying on the `invariant()` implementation lets us\r\n// preserve the format and params in the www builds.\r\n\r\n/**\r\n * Forked from fbjs/warning:\r\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\r\n *\r\n * Only change is we use console.warn instead of console.error,\r\n * and do nothing when 'console' is not supported.\r\n * This really simplifies the code.\r\n * ---\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar lowPriorityWarning = function () {};\r\n\r\n{\r\n  var printWarning = function (format) {\r\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    var argIndex = 0;\r\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\r\n      return args[argIndex++];\r\n    });\r\n    if (typeof console !== 'undefined') {\r\n      console.warn(message);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n\r\n  lowPriorityWarning = function (condition, format) {\r\n    if (format === undefined) {\r\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\r\n    }\r\n    if (!condition) {\r\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\r\n        args[_key2 - 2] = arguments[_key2];\r\n      }\r\n\r\n      printWarning.apply(undefined, [format].concat(args));\r\n    }\r\n  };\r\n}\r\n\r\nvar lowPriorityWarning$1 = lowPriorityWarning;\r\n\r\n/**\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar warningWithoutStack = function () {};\r\n\r\n{\r\n  warningWithoutStack = function (condition, format) {\r\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n      args[_key - 2] = arguments[_key];\r\n    }\r\n\r\n    if (format === undefined) {\r\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\r\n    }\r\n    if (args.length > 8) {\r\n      // Check before the condition to catch violations early.\r\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\r\n    }\r\n    if (condition) {\r\n      return;\r\n    }\r\n    if (typeof console !== 'undefined') {\r\n      var argsWithFormat = args.map(function (item) {\r\n        return '' + item;\r\n      });\r\n      argsWithFormat.unshift('Warning: ' + format);\r\n\r\n      // We intentionally don't use spread (or .apply) directly because it\r\n      // breaks IE9: https://github.com/facebook/react/issues/13610\r\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\r\n    }\r\n    try {\r\n      // --- Welcome to debugging React ---\r\n      // This error was thrown as a convenience so that you can use this stack\r\n      // to find the callsite that caused this warning to fire.\r\n      var argIndex = 0;\r\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\r\n        return args[argIndex++];\r\n      });\r\n      throw new Error(message);\r\n    } catch (x) {}\r\n  };\r\n}\r\n\r\nvar warningWithoutStack$1 = warningWithoutStack;\r\n\r\nvar didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  {\r\n    var _constructor = publicInstance.constructor;\r\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\r\n    var warningKey = componentName + '.' + callerName;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nvar ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function (publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\r\n    warnNoop(publicInstance, 'setState');\r\n  }\r\n};\r\n\r\nvar emptyObject = {};\r\n{\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function (partialState, callback) {\r\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function (callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\n{\r\n  var deprecatedAPIs = {\r\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\r\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\r\n  };\r\n  var defineDeprecationWarning = function (methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function () {\r\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\r\n        return undefined;\r\n      }\r\n    });\r\n  };\r\n  for (var fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\n_assign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\n// an immutable object with a single mutable value\r\nfunction createRef() {\r\n  var refObject = {\r\n    current: null\r\n  };\r\n  {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nvar ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: null\r\n};\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nvar ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: null\r\n};\r\n\r\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nvar describeComponentFrame = function (name, source, ownerName) {\r\n  var sourceInfo = '';\r\n  if (source) {\r\n    var path = source.fileName;\r\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\r\n    {\r\n      // In DEV, include code for a common special case:\r\n      // prefer \"folder/index.js\" instead of just \"index.js\".\r\n      if (/^index\\./.test(fileName)) {\r\n        var match = path.match(BEFORE_SLASH_RE);\r\n        if (match) {\r\n          var pathBeforeSlash = match[1];\r\n          if (pathBeforeSlash) {\r\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n            fileName = folderName + '/' + fileName;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n  } else if (ownerName) {\r\n    sourceInfo = ' (created by ' + ownerName + ')';\r\n  }\r\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n};\r\n\r\nvar Resolved = 1;\r\n\r\n\r\nfunction refineResolvedLazyComponent(lazyComponent) {\r\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\r\n}\r\n\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  var functionName = innerType.displayName || innerType.name || '';\r\n  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);\r\n}\r\n\r\nfunction getComponentName(type) {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n  {\r\n    if (typeof type.tag === 'number') {\r\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\r\n    }\r\n  }\r\n  if (typeof type === 'function') {\r\n    return type.displayName || type.name || null;\r\n  }\r\n  if (typeof type === 'string') {\r\n    return type;\r\n  }\r\n  switch (type) {\r\n    case REACT_CONCURRENT_MODE_TYPE:\r\n      return 'ConcurrentMode';\r\n    case REACT_FRAGMENT_TYPE:\r\n      return 'Fragment';\r\n    case REACT_PORTAL_TYPE:\r\n      return 'Portal';\r\n    case REACT_PROFILER_TYPE:\r\n      return 'Profiler';\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return 'StrictMode';\r\n    case REACT_SUSPENSE_TYPE:\r\n      return 'Suspense';\r\n  }\r\n  if (typeof type === 'object') {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        return 'Context.Consumer';\r\n      case REACT_PROVIDER_TYPE:\r\n        return 'Context.Provider';\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, 'ForwardRef');\r\n      case REACT_MEMO_TYPE:\r\n        return getComponentName(type.type);\r\n      case REACT_LAZY_TYPE:\r\n        {\r\n          var thenable = type;\r\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\r\n          if (resolvedThenable) {\r\n            return getComponentName(resolvedThenable);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nvar ReactDebugCurrentFrame = {};\r\n\r\nvar currentlyValidatingElement = null;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  {\r\n    currentlyValidatingElement = element;\r\n  }\r\n}\r\n\r\n{\r\n  // Stack implementation injected by the current renderer.\r\n  ReactDebugCurrentFrame.getCurrentStack = null;\r\n\r\n  ReactDebugCurrentFrame.getStackAddendum = function () {\r\n    var stack = '';\r\n\r\n    // Add an extra top frame while an element is being validated\r\n    if (currentlyValidatingElement) {\r\n      var name = getComponentName(currentlyValidatingElement.type);\r\n      var owner = currentlyValidatingElement._owner;\r\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\r\n    }\r\n\r\n    // Delegate to the injected renderer-specific implementation\r\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\r\n    if (impl) {\r\n      stack += impl() || '';\r\n    }\r\n\r\n    return stack;\r\n  };\r\n}\r\n\r\nvar ReactSharedInternals = {\r\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\r\n  ReactCurrentOwner: ReactCurrentOwner,\r\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\r\n  assign: _assign\r\n};\r\n\r\n{\r\n  _assign(ReactSharedInternals, {\r\n    // These should not be included in production.\r\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\r\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\r\n    // TODO: remove in React 17.0.\r\n    ReactComponentTreeHook: {}\r\n  });\r\n}\r\n\r\n/**\r\n * Similar to invariant but only logs a warning if the condition is not met.\r\n * This can be used to log issues in development environments in critical\r\n * paths. Removing the logging code for production environments will keep the\r\n * same logic and follow the same code paths.\r\n */\r\n\r\nvar warning = warningWithoutStack$1;\r\n\r\n{\r\n  warning = function (condition, format) {\r\n    if (condition) {\r\n      return;\r\n    }\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\r\n\r\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n      args[_key - 2] = arguments[_key];\r\n    }\r\n\r\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\r\n  };\r\n}\r\n\r\nvar warning$1 = warning;\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true\r\n};\r\n\r\nvar specialPropKeyWarningShown = void 0;\r\nvar specialPropRefWarningShown = void 0;\r\n\r\nfunction hasValidRef(config) {\r\n  {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  var warnAboutAccessingKey = function () {\r\n    if (!specialPropKeyWarningShown) {\r\n      specialPropKeyWarningShown = true;\r\n      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  var warnAboutAccessingRef = function () {\r\n    if (!specialPropRefWarningShown) {\r\n      specialPropRefWarningShown = true;\r\n      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true\r\n  });\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, no instanceof check\r\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @param {*} owner\r\n * @param {*} props\r\n * @internal\r\n */\r\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\r\n  var element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner\r\n  };\r\n\r\n  {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nfunction createElement(type, config, children) {\r\n  var propName = void 0;\r\n\r\n  // Reserved names are extracted\r\n  var props = {};\r\n\r\n  var key = null;\r\n  var ref = null;\r\n  var self = null;\r\n  var source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  var childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    var childArray = Array(childrenLength);\r\n    for (var i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    var defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  {\r\n    if (key || ref) {\r\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\n\r\n\r\nfunction cloneAndReplaceKey(oldElement, newKey) {\r\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nfunction cloneElement(element, config, children) {\r\n  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\r\n\r\n  var propName = void 0;\r\n\r\n  // Original props are copied\r\n  var props = _assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  var key = element.key;\r\n  var ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  var self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  var source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  var owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    var defaultProps = void 0;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  var childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    var childArray = Array(childrenLength);\r\n    for (var i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nfunction isValidElement(object) {\r\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n}\r\n\r\nvar SEPARATOR = '.';\r\nvar SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key) {\r\n  var escapeRegex = /[=:]/g;\r\n  var escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2'\r\n  };\r\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nvar didWarnAboutMaps = false;\r\n\r\nvar userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text) {\r\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\nvar POOL_SIZE = 10;\r\nvar traverseContextPool = [];\r\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\r\n  if (traverseContextPool.length) {\r\n    var traverseContext = traverseContextPool.pop();\r\n    traverseContext.result = mapResult;\r\n    traverseContext.keyPrefix = keyPrefix;\r\n    traverseContext.func = mapFunction;\r\n    traverseContext.context = mapContext;\r\n    traverseContext.count = 0;\r\n    return traverseContext;\r\n  } else {\r\n    return {\r\n      result: mapResult,\r\n      keyPrefix: keyPrefix,\r\n      func: mapFunction,\r\n      context: mapContext,\r\n      count: 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction releaseTraverseContext(traverseContext) {\r\n  traverseContext.result = null;\r\n  traverseContext.keyPrefix = null;\r\n  traverseContext.func = null;\r\n  traverseContext.context = null;\r\n  traverseContext.count = 0;\r\n  if (traverseContextPool.length < POOL_SIZE) {\r\n    traverseContextPool.push(traverseContext);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {?*} children Children tree container.\r\n * @param {!string} nameSoFar Name of the key path so far.\r\n * @param {!function} callback Callback to invoke with each child found.\r\n * @param {?*} traverseContext Used to pass information throughout the traversal\r\n * process.\r\n * @return {!number} The number of children in this subtree.\r\n */\r\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\r\n  var type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  var invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch (children.$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    callback(traverseContext, children,\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows.\r\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\r\n    return 1;\r\n  }\r\n\r\n  var child = void 0;\r\n  var nextName = void 0;\r\n  var subtreeCount = 0; // Count of children found in the current subtree.\r\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (Array.isArray(children)) {\r\n    for (var i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getComponentKey(child, i);\r\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\r\n    }\r\n  } else {\r\n    var iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === children.entries) {\r\n          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      var iterator = iteratorFn.call(children);\r\n      var step = void 0;\r\n      var ii = 0;\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\r\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\r\n      }\r\n    } else if (type === 'object') {\r\n      var addendum = '';\r\n      {\r\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\r\n      }\r\n      var childrenString = '' + children;\r\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\n/**\r\n * Traverses children that are typically specified as `props.children`, but\r\n * might also be specified through attributes:\r\n *\r\n * - `traverseAllChildren(this.props.children, ...)`\r\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\r\n *\r\n * The `traverseContext` is an optional argument that is passed through the\r\n * entire traversal. It can be used to store accumulations or anything else that\r\n * the callback might find relevant.\r\n *\r\n * @param {?*} children Children tree object.\r\n * @param {!function} callback To invoke upon traversing each child.\r\n * @param {?*} traverseContext Context for traversal.\r\n * @return {!number} The number of children in this subtree.\r\n */\r\nfunction traverseAllChildren(children, callback, traverseContext) {\r\n  if (children == null) {\r\n    return 0;\r\n  }\r\n\r\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a component within a set.\r\n *\r\n * @param {*} component A component that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getComponentKey(component, index) {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof component === 'object' && component !== null && component.key != null) {\r\n    // Explicit key\r\n    return escape(component.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction forEachSingleChild(bookKeeping, child, name) {\r\n  var func = bookKeeping.func,\r\n      context = bookKeeping.context;\r\n\r\n  func.call(context, child, bookKeeping.count++);\r\n}\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(children, forEachFunc, forEachContext) {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\r\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\r\n  releaseTraverseContext(traverseContext);\r\n}\r\n\r\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\r\n  var result = bookKeeping.result,\r\n      keyPrefix = bookKeeping.keyPrefix,\r\n      func = bookKeeping.func,\r\n      context = bookKeeping.context;\r\n\r\n\r\n  var mappedChild = func.call(context, child, bookKeeping.count++);\r\n  if (Array.isArray(mappedChild)) {\r\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\r\n      return c;\r\n    });\r\n  } else if (mappedChild != null) {\r\n    if (isValidElement(mappedChild)) {\r\n      mappedChild = cloneAndReplaceKey(mappedChild,\r\n      // Keep both the (mapped) and old keys if they differ, just as\r\n      // traverseAllChildren used to do for objects as children\r\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\r\n    }\r\n    result.push(mappedChild);\r\n  }\r\n}\r\n\r\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\r\n  var escapedPrefix = '';\r\n  if (prefix != null) {\r\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\r\n  }\r\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\r\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\r\n  releaseTraverseContext(traverseContext);\r\n}\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, key, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(children, func, context) {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  var result = [];\r\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children) {\r\n  return traverseAllChildren(children, function () {\r\n    return null;\r\n  }, null);\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children) {\r\n  var result = [];\r\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\r\n    return child;\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild(children) {\r\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\r\n  return children;\r\n}\r\n\r\nfunction createContext(defaultValue, calculateChangedBits) {\r\n  if (calculateChangedBits === undefined) {\r\n    calculateChangedBits = null;\r\n  } else {\r\n    {\r\n      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\r\n    }\r\n  }\r\n\r\n  var context = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    _calculateChangedBits: calculateChangedBits,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: null,\r\n    Consumer: null\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context\r\n  };\r\n\r\n  var hasWarnedAboutUsingNestedContextConsumers = false;\r\n  var hasWarnedAboutUsingConsumerProvider = false;\r\n\r\n  {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    var Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n      _calculateChangedBits: context._calculateChangedBits\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get: function () {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set: function (_Provider) {\r\n          context.Provider = _Provider;\r\n        }\r\n      },\r\n      _currentValue: {\r\n        get: function () {\r\n          return context._currentValue;\r\n        },\r\n        set: function (_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        }\r\n      },\r\n      _currentValue2: {\r\n        get: function () {\r\n          return context._currentValue2;\r\n        },\r\n        set: function (_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        }\r\n      },\r\n      _threadCount: {\r\n        get: function () {\r\n          return context._threadCount;\r\n        },\r\n        set: function (_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        }\r\n      },\r\n      Consumer: {\r\n        get: function () {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\r\n          }\r\n          return context.Consumer;\r\n        }\r\n      }\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  }\r\n\r\n  {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nfunction lazy(ctor) {\r\n  var lazyType = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _ctor: ctor,\r\n    // React uses these fields to store the result.\r\n    _status: -1,\r\n    _result: null\r\n  };\r\n\r\n  {\r\n    // In production, this would just set it on the object.\r\n    var defaultProps = void 0;\r\n    var propTypes = void 0;\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get: function () {\r\n          return defaultProps;\r\n        },\r\n        set: function (newDefaultProps) {\r\n          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true\r\n          });\r\n        }\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get: function () {\r\n          return propTypes;\r\n        },\r\n        set: function (newPropTypes) {\r\n          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n\r\nfunction forwardRef(render) {\r\n  {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\r\n    } else if (typeof render !== 'function') {\r\n      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\r\n    } else {\r\n      !(\r\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\r\n      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\r\n    }\r\n\r\n    if (render != null) {\r\n      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\r\n    }\r\n  }\r\n\r\n  return {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render: render\r\n  };\r\n}\r\n\r\nfunction isValidElementType(type) {\r\n  return typeof type === 'string' || typeof type === 'function' ||\r\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\r\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\r\n}\r\n\r\nfunction memo(type, compare) {\r\n  {\r\n    if (!isValidElementType(type)) {\r\n      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\r\n    }\r\n  }\r\n  return {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type: type,\r\n    compare: compare === undefined ? null : compare\r\n  };\r\n}\r\n\r\nfunction resolveDispatcher() {\r\n  var dispatcher = ReactCurrentDispatcher.current;\r\n  !(dispatcher !== null) ? invariant(false, 'Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)') : void 0;\r\n  return dispatcher;\r\n}\r\n\r\nfunction useContext(Context, unstable_observedBits) {\r\n  var dispatcher = resolveDispatcher();\r\n  {\r\n    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0;\r\n\r\n    // TODO: add a more generic warning for invalid values.\r\n    if (Context._context !== undefined) {\r\n      var realContext = Context._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\r\n      } else if (realContext.Provider === Context) {\r\n        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context, unstable_observedBits);\r\n}\r\n\r\nfunction useState(initialState) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nfunction useReducer(reducer, initialArg, init) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nfunction useRef(initialValue) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nfunction useEffect(create, inputs) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, inputs);\r\n}\r\n\r\nfunction useLayoutEffect(create, inputs) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, inputs);\r\n}\r\n\r\nfunction useCallback(callback, inputs) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, inputs);\r\n}\r\n\r\nfunction useMemo(create, inputs) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, inputs);\r\n}\r\n\r\nfunction useImperativeHandle(ref, create, inputs) {\r\n  var dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, inputs);\r\n}\r\n\r\nfunction useDebugValue(value, formatterFn) {\r\n  {\r\n    var dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\n/**\r\n * ReactElementValidator provides a wrapper around a element factory\r\n * which validates the props passed to the element. This is intended to be\r\n * used only in DEV and could be replaced by a static type checker for languages\r\n * that support it.\r\n */\r\n\r\nvar propTypesMisspellWarningShown = void 0;\r\n\r\n{\r\n  propTypesMisspellWarningShown = false;\r\n}\r\n\r\nfunction getDeclarationErrorAddendum() {\r\n  if (ReactCurrentOwner.current) {\r\n    var name = getComponentName(ReactCurrentOwner.current.type);\r\n    if (name) {\r\n      return '\\n\\nCheck the render method of `' + name + '`.';\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction getSourceInfoErrorAddendum(elementProps) {\r\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\r\n    var source = elementProps.__source;\r\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n    var lineNumber = source.lineNumber;\r\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Warn if there's no key explicitly set on dynamic arrays of children or\r\n * object keys are not valid. This allows us to keep track of children between\r\n * updates.\r\n */\r\nvar ownerHasKeyUseWarning = {};\r\n\r\nfunction getCurrentComponentErrorInfo(parentType) {\r\n  var info = getDeclarationErrorAddendum();\r\n\r\n  if (!info) {\r\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\r\n    if (parentName) {\r\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\r\n    }\r\n  }\r\n  return info;\r\n}\r\n\r\n/**\r\n * Warn if the element doesn't have an explicit key assigned to it.\r\n * This element is in an array. The array could grow and shrink or be\r\n * reordered. All children that haven't already been validated are required to\r\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n * will only be shown once.\r\n *\r\n * @internal\r\n * @param {ReactElement} element Element that requires a key.\r\n * @param {*} parentType element's parent's type.\r\n */\r\nfunction validateExplicitKey(element, parentType) {\r\n  if (!element._store || element._store.validated || element.key != null) {\r\n    return;\r\n  }\r\n  element._store.validated = true;\r\n\r\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n    return;\r\n  }\r\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n  // Usually the current owner is the offender, but if it accepts children as a\r\n  // property, it may be the creator of the child that's responsible for\r\n  // assigning it a key.\r\n  var childOwner = '';\r\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\r\n    // Give the component that originally created this child.\r\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\r\n  }\r\n\r\n  setCurrentlyValidatingElement(element);\r\n  {\r\n    warning$1(false, 'Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\r\n  }\r\n  setCurrentlyValidatingElement(null);\r\n}\r\n\r\n/**\r\n * Ensure that every element either is passed in a static location, in an\r\n * array with an explicit keys property defined, or in an object literal\r\n * with valid key property.\r\n *\r\n * @internal\r\n * @param {ReactNode} node Statically passed child of any type.\r\n * @param {*} parentType node's parent's type.\r\n */\r\nfunction validateChildKeys(node, parentType) {\r\n  if (typeof node !== 'object') {\r\n    return;\r\n  }\r\n  if (Array.isArray(node)) {\r\n    for (var i = 0; i < node.length; i++) {\r\n      var child = node[i];\r\n      if (isValidElement(child)) {\r\n        validateExplicitKey(child, parentType);\r\n      }\r\n    }\r\n  } else if (isValidElement(node)) {\r\n    // This element was passed in a valid location.\r\n    if (node._store) {\r\n      node._store.validated = true;\r\n    }\r\n  } else if (node) {\r\n    var iteratorFn = getIteratorFn(node);\r\n    if (typeof iteratorFn === 'function') {\r\n      // Entry iterators used to provide implicit keys,\r\n      // but now we print a separate warning for them later.\r\n      if (iteratorFn !== node.entries) {\r\n        var iterator = iteratorFn.call(node);\r\n        var step = void 0;\r\n        while (!(step = iterator.next()).done) {\r\n          if (isValidElement(step.value)) {\r\n            validateExplicitKey(step.value, parentType);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given an element, validate that its props follow the propTypes definition,\r\n * provided by the type.\r\n *\r\n * @param {ReactElement} element\r\n */\r\nfunction validatePropTypes(element) {\r\n  var type = element.type;\r\n  if (type === null || type === undefined || typeof type === 'string') {\r\n    return;\r\n  }\r\n  var name = getComponentName(type);\r\n  var propTypes = void 0;\r\n  if (typeof type === 'function') {\r\n    propTypes = type.propTypes;\r\n  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n  // Note: Memo only checks outer props here.\r\n  // Inner props are checked in the reconciler.\r\n  type.$$typeof === REACT_MEMO_TYPE)) {\r\n    propTypes = type.propTypes;\r\n  } else {\r\n    return;\r\n  }\r\n  if (propTypes) {\r\n    setCurrentlyValidatingElement(element);\r\n    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\r\n    setCurrentlyValidatingElement(null);\r\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n    propTypesMisspellWarningShown = true;\r\n    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\r\n  }\r\n  if (typeof type.getDefaultProps === 'function') {\r\n    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\r\n  }\r\n}\r\n\r\n/**\r\n * Given a fragment, validate that it can only be provided with fragment props\r\n * @param {ReactElement} fragment\r\n */\r\nfunction validateFragmentProps(fragment) {\r\n  setCurrentlyValidatingElement(fragment);\r\n\r\n  var keys = Object.keys(fragment.props);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i];\r\n    if (key !== 'children' && key !== 'key') {\r\n      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (fragment.ref !== null) {\r\n    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\r\n  }\r\n\r\n  setCurrentlyValidatingElement(null);\r\n}\r\n\r\nfunction createElementWithValidation(type, props, children) {\r\n  var validType = isValidElementType(type);\r\n\r\n  // We warn in this case but don't throw. We expect the element creation to\r\n  // succeed and there will likely be errors in render.\r\n  if (!validType) {\r\n    var info = '';\r\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\r\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\r\n    }\r\n\r\n    var sourceInfo = getSourceInfoErrorAddendum(props);\r\n    if (sourceInfo) {\r\n      info += sourceInfo;\r\n    } else {\r\n      info += getDeclarationErrorAddendum();\r\n    }\r\n\r\n    var typeString = void 0;\r\n    if (type === null) {\r\n      typeString = 'null';\r\n    } else if (Array.isArray(type)) {\r\n      typeString = 'array';\r\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\r\n      info = ' Did you accidentally export a JSX literal instead of a component?';\r\n    } else {\r\n      typeString = typeof type;\r\n    }\r\n\r\n    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\r\n  }\r\n\r\n  var element = createElement.apply(this, arguments);\r\n\r\n  // The result can be nullish if a mock or a custom function is used.\r\n  // TODO: Drop this when these are no longer allowed as the type argument.\r\n  if (element == null) {\r\n    return element;\r\n  }\r\n\r\n  // Skip key warning if the type isn't valid since our key validation logic\r\n  // doesn't expect a non-string/function type and can throw confusing errors.\r\n  // We don't want exception behavior to differ between dev and prod.\r\n  // (Rendering will throw with a helpful message and as soon as the type is\r\n  // fixed, the key warnings will appear.)\r\n  if (validType) {\r\n    for (var i = 2; i < arguments.length; i++) {\r\n      validateChildKeys(arguments[i], type);\r\n    }\r\n  }\r\n\r\n  if (type === REACT_FRAGMENT_TYPE) {\r\n    validateFragmentProps(element);\r\n  } else {\r\n    validatePropTypes(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nfunction createFactoryWithValidation(type) {\r\n  var validatedFactory = createElementWithValidation.bind(null, type);\r\n  validatedFactory.type = type;\r\n  // Legacy hook: remove it\r\n  {\r\n    Object.defineProperty(validatedFactory, 'type', {\r\n      enumerable: false,\r\n      get: function () {\r\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\r\n        Object.defineProperty(this, 'type', {\r\n          value: type\r\n        });\r\n        return type;\r\n      }\r\n    });\r\n  }\r\n\r\n  return validatedFactory;\r\n}\r\n\r\nfunction cloneElementWithValidation(element, props, children) {\r\n  var newElement = cloneElement.apply(this, arguments);\r\n  for (var i = 2; i < arguments.length; i++) {\r\n    validateChildKeys(arguments[i], newElement.type);\r\n  }\r\n  validatePropTypes(newElement);\r\n  return newElement;\r\n}\r\n\r\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\r\n\r\n\r\n// In some cases, StrictMode should also double-render lifecycles.\r\n// This can be confusing for tests though,\r\n// And it can be bad for performance in production.\r\n// This feature flag can be used to control the behavior:\r\n\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\n\r\n\r\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\r\n\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\n\r\n\r\n// Trace which interactions trigger each commit.\r\n\r\n\r\n// Only used in www builds.\r\n // TODO: true? Here it might just be false.\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// React Fire: prevent the value and checked attributes from syncing\r\n// with their related DOM properties\r\n\r\n\r\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\r\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\r\nvar enableStableConcurrentModeAPIs = false;\r\n\r\nvar React = {\r\n  Children: {\r\n    map: mapChildren,\r\n    forEach: forEachChildren,\r\n    count: countChildren,\r\n    toArray: toArray,\r\n    only: onlyChild\r\n  },\r\n\r\n  createRef: createRef,\r\n  Component: Component,\r\n  PureComponent: PureComponent,\r\n\r\n  createContext: createContext,\r\n  forwardRef: forwardRef,\r\n  lazy: lazy,\r\n  memo: memo,\r\n\r\n  useCallback: useCallback,\r\n  useContext: useContext,\r\n  useEffect: useEffect,\r\n  useImperativeHandle: useImperativeHandle,\r\n  useDebugValue: useDebugValue,\r\n  useLayoutEffect: useLayoutEffect,\r\n  useMemo: useMemo,\r\n  useReducer: useReducer,\r\n  useRef: useRef,\r\n  useState: useState,\r\n\r\n  Fragment: REACT_FRAGMENT_TYPE,\r\n  StrictMode: REACT_STRICT_MODE_TYPE,\r\n  Suspense: REACT_SUSPENSE_TYPE,\r\n\r\n  createElement: createElementWithValidation,\r\n  cloneElement: cloneElementWithValidation,\r\n  createFactory: createFactoryWithValidation,\r\n  isValidElement: isValidElement,\r\n\r\n  version: ReactVersion,\r\n\r\n  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,\r\n  unstable_Profiler: REACT_PROFILER_TYPE,\r\n\r\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\r\n};\r\n\r\n// Note: some APIs are added with feature flags.\r\n// Make sure that stable builds for open source\r\n// don't modify the React object to avoid deopts.\r\n// Also let's not expose their names in stable builds.\r\n\r\nif (enableStableConcurrentModeAPIs) {\r\n  React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\r\n  React.Profiler = REACT_PROFILER_TYPE;\r\n  React.unstable_ConcurrentMode = undefined;\r\n  React.unstable_Profiler = undefined;\r\n}\r\n\r\n\r\n\r\nvar React$2 = Object.freeze({\r\n\tdefault: React\r\n});\r\n\r\nvar React$3 = ( React$2 && React ) || React$2;\r\n\r\n// TODO: decide on the top-level export form.\r\n// This is hacky but makes it work with both Rollup and Jest.\r\nvar react = React$3.default || React$3;\r\n\r\nmodule.exports = react;\r\n  })();\r\n}\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react.development.js');\r\n}\r\n","var fromCharCode = String.fromCharCode;\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar ENTITY_PATTERN = /&#(\\d+);|&#x([0-9a-f]+);|&(\\w+);/ig;\r\n\r\nvar ENTITY_MAPPING = {\r\n  'amp': '&',\r\n  'apos': '\\'',\r\n  'gt': '>',\r\n  'lt': '<',\r\n  'quot': '\"'\r\n};\r\n\r\n// map UPPERCASE variants of supported special chars\r\nObject.keys(ENTITY_MAPPING).forEach(function(k) {\r\n  ENTITY_MAPPING[k.toUpperCase()] = ENTITY_MAPPING[k];\r\n});\r\n\r\n\r\nfunction replaceEntities(_, d, x, z) {\r\n\r\n  // reserved names, i.e. &nbsp;\r\n  if (z) {\r\n    if (hasOwnProperty.call(ENTITY_MAPPING, z)) {\r\n      return ENTITY_MAPPING[z];\r\n    } else {\r\n      // fall back to original value\r\n      return '&' + z + ';';\r\n    }\r\n  }\r\n\r\n  // decimal encoded char\r\n  if (d) {\r\n    return fromCharCode(d);\r\n  }\r\n\r\n  // hex encoded char\r\n  return fromCharCode(parseInt(x, 16));\r\n}\r\n\r\n\r\n/**\r\n * A basic entity decoder that can decode a minimal\r\n * sub-set of reserved names (&amp;) as well as\r\n * hex (&#xaaf;) and decimal (&#1231;) encoded characters.\r\n *\r\n * @param {string} str\r\n *\r\n * @return {string} decoded string\r\n */\r\nfunction decodeEntities(s) {\r\n  if (s.length > 3 && s.indexOf('&') !== -1) {\r\n    return s.replace(ENTITY_PATTERN, replaceEntities);\r\n  }\r\n\r\n  return s;\r\n}\r\n\r\nvar XSI_URI = 'http://www.w3.org/2001/XMLSchema-instance';\r\nvar XSI_PREFIX = 'xsi';\r\nvar XSI_TYPE = 'xsi:type';\r\n\r\nvar NON_WHITESPACE_OUTSIDE_ROOT_NODE = 'non-whitespace outside of root node';\r\n\r\nfunction error(msg) {\r\n  return new Error(msg);\r\n}\r\n\r\nfunction missingNamespaceForPrefix(prefix) {\r\n  return 'missing namespace for prefix <' + prefix + '>';\r\n}\r\n\r\nfunction getter(getFn) {\r\n  return {\r\n    'get': getFn,\r\n    'enumerable': true\r\n  };\r\n}\r\n\r\nfunction cloneNsMatrix(nsMatrix) {\r\n  var clone = {}, key;\r\n  for (key in nsMatrix) {\r\n    clone[key] = nsMatrix[key];\r\n  }\r\n  return clone;\r\n}\r\n\r\nfunction uriPrefix(prefix) {\r\n  return prefix + '$uri';\r\n}\r\n\r\nfunction buildNsMatrix(nsUriToPrefix) {\r\n  var nsMatrix = {},\r\n      uri,\r\n      prefix;\r\n\r\n  for (uri in nsUriToPrefix) {\r\n    prefix = nsUriToPrefix[uri];\r\n    nsMatrix[prefix] = prefix;\r\n    nsMatrix[uriPrefix(prefix)] = uri;\r\n  }\r\n\r\n  return nsMatrix;\r\n}\r\n\r\nfunction noopGetContext() {\r\n  return { 'line': 0, 'column': 0 };\r\n}\r\n\r\nfunction throwFunc(err) {\r\n  throw err;\r\n}\r\n\r\n/**\r\n * Creates a new parser with the given options.\r\n *\r\n * @constructor\r\n *\r\n * @param  {!Object<string, ?>=} options\r\n */\r\nfunction Parser(options) {\r\n\r\n  if (!this) {\r\n    return new Parser(options);\r\n  }\r\n\r\n  var proxy = options && options['proxy'];\r\n\r\n  var onText,\r\n      onOpenTag,\r\n      onCloseTag,\r\n      onCDATA,\r\n      onError = throwFunc,\r\n      onWarning,\r\n      onComment,\r\n      onQuestion,\r\n      onAttention;\r\n\r\n  var getContext = noopGetContext;\r\n\r\n  /**\r\n   * Do we need to parse the current elements attributes for namespaces?\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  var maybeNS = false;\r\n\r\n  /**\r\n   * Do we process namespaces at all?\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  var isNamespace = false;\r\n\r\n  /**\r\n   * The caught error returned on parse end\r\n   *\r\n   * @type {Error}\r\n   */\r\n  var returnError = null;\r\n\r\n  /**\r\n   * Should we stop parsing?\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  var parseStop = false;\r\n\r\n  /**\r\n   * A map of { uri: prefix } used by the parser.\r\n   *\r\n   * This map will ensure we can normalize prefixes during processing;\r\n   * for each uri, only one prefix will be exposed to the handlers.\r\n   *\r\n   * @type {!Object<string, string>}}\r\n   */\r\n  var nsUriToPrefix;\r\n\r\n  /**\r\n   * Handle parse error.\r\n   *\r\n   * @param  {string|Error} err\r\n   */\r\n  function handleError(err) {\r\n    if (!(err instanceof Error)) {\r\n      err = error(err);\r\n    }\r\n\r\n    returnError = err;\r\n\r\n    onError(err, getContext);\r\n  }\r\n\r\n  /**\r\n   * Handle parse error.\r\n   *\r\n   * @param  {string|Error} err\r\n   */\r\n  function handleWarning(err) {\r\n\r\n    if (!onWarning) {\r\n      return;\r\n    }\r\n\r\n    if (!(err instanceof Error)) {\r\n      err = error(err);\r\n    }\r\n\r\n    onWarning(err, getContext);\r\n  }\r\n\r\n  /**\r\n   * Register parse listener.\r\n   *\r\n   * @param  {string}   name\r\n   * @param  {Function} cb\r\n   *\r\n   * @return {Parser}\r\n   */\r\n  this['on'] = function(name, cb) {\r\n\r\n    if (typeof cb !== 'function') {\r\n      throw error('required args <name, cb>');\r\n    }\r\n\r\n    switch (name) {\r\n    case 'openTag': onOpenTag = cb; break;\r\n    case 'text': onText = cb; break;\r\n    case 'closeTag': onCloseTag = cb; break;\r\n    case 'error': onError = cb; break;\r\n    case 'warn': onWarning = cb; break;\r\n    case 'cdata': onCDATA = cb; break;\r\n    case 'attention': onAttention = cb; break; // <!XXXXX zzzz=\"eeee\">\r\n    case 'question': onQuestion = cb; break; // <? ....  ?>\r\n    case 'comment': onComment = cb; break;\r\n    default:\r\n      throw error('unsupported event: ' + name);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Set the namespace to prefix mapping.\r\n   *\r\n   * @example\r\n   *\r\n   * parser.ns({\r\n   *   'http://foo': 'foo',\r\n   *   'http://bar': 'bar'\r\n   * });\r\n   *\r\n   * @param  {!Object<string, string>} nsMap\r\n   *\r\n   * @return {Parser}\r\n   */\r\n  this['ns'] = function(nsMap) {\r\n\r\n    if (typeof nsMap === 'undefined') {\r\n      nsMap = {};\r\n    }\r\n\r\n    if (typeof nsMap !== 'object') {\r\n      throw error('required args <nsMap={}>');\r\n    }\r\n\r\n    var _nsUriToPrefix = {}, k;\r\n\r\n    for (k in nsMap) {\r\n      _nsUriToPrefix[k] = nsMap[k];\r\n    }\r\n\r\n    // FORCE default mapping for schema instance\r\n    _nsUriToPrefix[XSI_URI] = XSI_PREFIX;\r\n\r\n    isNamespace = true;\r\n    nsUriToPrefix = _nsUriToPrefix;\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Parse xml string.\r\n   *\r\n   * @param  {string} xml\r\n   *\r\n   * @return {Error} returnError, if not thrown\r\n   */\r\n  this['parse'] = function(xml) {\r\n    if (typeof xml !== 'string') {\r\n      throw error('required args <xml=string>');\r\n    }\r\n\r\n    returnError = null;\r\n\r\n    parse(xml);\r\n\r\n    getContext = noopGetContext;\r\n    parseStop = false;\r\n\r\n    return returnError;\r\n  };\r\n\r\n  /**\r\n   * Stop parsing.\r\n   */\r\n  this['stop'] = function() {\r\n    parseStop = true;\r\n  };\r\n\r\n  /**\r\n   * Parse string, invoking configured listeners on element.\r\n   *\r\n   * @param  {string} xml\r\n   */\r\n  function parse(xml) {\r\n    var nsMatrixStack = isNamespace ? [] : null,\r\n        nsMatrix = isNamespace ? buildNsMatrix(nsUriToPrefix) : null,\r\n        _nsMatrix,\r\n        nodeStack = [],\r\n        anonymousNsCount = 0,\r\n        tagStart = false,\r\n        tagEnd = false,\r\n        i = 0, j = 0,\r\n        x, y, q, w,\r\n        xmlns,\r\n        elementName,\r\n        _elementName,\r\n        elementProxy\r\n        ;\r\n\r\n    var attrsString = '',\r\n        attrsStart = 0,\r\n        cachedAttrs // false = parsed with errors, null = needs parsing\r\n        ;\r\n\r\n    /**\r\n     * Parse attributes on demand and returns the parsed attributes.\r\n     *\r\n     * Return semantics: (1) `false` on attribute parse error,\r\n     * (2) object hash on extracted attrs.\r\n     *\r\n     * @return {boolean|Object}\r\n     */\r\n    function getAttrs() {\r\n      if (cachedAttrs !== null) {\r\n        return cachedAttrs;\r\n      }\r\n\r\n      var nsUri,\r\n          nsUriPrefix,\r\n          nsName,\r\n          defaultAlias = isNamespace && nsMatrix['xmlns'],\r\n          attrList = isNamespace && maybeNS ? [] : null,\r\n          i = attrsStart,\r\n          s = attrsString,\r\n          l = s.length,\r\n          hasNewMatrix,\r\n          newalias,\r\n          value,\r\n          alias,\r\n          name,\r\n          attrs = {},\r\n          seenAttrs = {},\r\n          skipAttr,\r\n          w,\r\n          j;\r\n\r\n      parseAttr:\r\n      for (; i < l; i++) {\r\n        skipAttr = false;\r\n        w = s.charCodeAt(i);\r\n\r\n        if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE={ \\f\\n\\r\\t\\v}\r\n          continue;\r\n        }\r\n\r\n        // wait for non whitespace character\r\n        if (w < 65 || w > 122 || (w > 90 && w < 97)) {\r\n          if (w !== 95 && w !== 58) { // char 95\"_\" 58\":\"\r\n            handleWarning('illegal first char attribute name');\r\n            skipAttr = true;\r\n          }\r\n        }\r\n\r\n        // parse attribute name\r\n        for (j = i + 1; j < l; j++) {\r\n          w = s.charCodeAt(j);\r\n\r\n          if (\r\n            w > 96 && w < 123 ||\r\n            w > 64 && w < 91 ||\r\n            w > 47 && w < 59 ||\r\n            w === 46 || // '.'\r\n            w === 45 || // '-'\r\n            w === 95 // '_'\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          // unexpected whitespace\r\n          if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE\r\n            handleWarning('missing attribute value');\r\n            i = j;\r\n\r\n            continue parseAttr;\r\n          }\r\n\r\n          // expected \"=\"\r\n          if (w === 61) { // \"=\" == 61\r\n            break;\r\n          }\r\n\r\n          handleWarning('illegal attribute name char');\r\n          skipAttr = true;\r\n        }\r\n\r\n        name = s.substring(i, j);\r\n\r\n        if (name === 'xmlns:xmlns') {\r\n          handleWarning('illegal declaration of xmlns');\r\n          skipAttr = true;\r\n        }\r\n\r\n        w = s.charCodeAt(j + 1);\r\n\r\n        if (w === 34) { // '\"'\r\n          j = s.indexOf('\"', i = j + 2);\r\n\r\n          if (j === -1) {\r\n            j = s.indexOf('\\'', i);\r\n\r\n            if (j !== -1) {\r\n              handleWarning('attribute value quote missmatch');\r\n              skipAttr = true;\r\n            }\r\n          }\r\n\r\n        } else if (w === 39) { // \"'\"\r\n          j = s.indexOf('\\'', i = j + 2);\r\n\r\n          if (j === -1) {\r\n            j = s.indexOf('\"', i);\r\n\r\n            if (j !== -1) {\r\n              handleWarning('attribute value quote missmatch');\r\n              skipAttr = true;\r\n            }\r\n          }\r\n\r\n        } else {\r\n          handleWarning('missing attribute value quotes');\r\n          skipAttr = true;\r\n\r\n          // skip to next space\r\n          for (j = j + 1; j < l; j++) {\r\n            w = s.charCodeAt(j + 1);\r\n\r\n            if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE\r\n              break;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        if (j === -1) {\r\n          handleWarning('missing closing quotes');\r\n\r\n          j = l;\r\n          skipAttr = true;\r\n        }\r\n\r\n        if (!skipAttr) {\r\n          value = s.substring(i, j);\r\n        }\r\n\r\n        i = j;\r\n\r\n        // ensure SPACE follows attribute\r\n        // skip illegal content otherwise\r\n        // example a=\"b\"c\r\n        for (; j + 1 < l; j++) {\r\n          w = s.charCodeAt(j + 1);\r\n\r\n          if (w === 32 || (w < 14 && w > 8)) { // WHITESPACE\r\n            break;\r\n          }\r\n\r\n          // FIRST ILLEGAL CHAR\r\n          if (i === j) {\r\n            handleWarning('illegal character after attribute end');\r\n            skipAttr = true;\r\n          }\r\n        }\r\n\r\n        // advance cursor to next attribute\r\n        i = j + 1;\r\n\r\n        if (skipAttr) {\r\n          continue parseAttr;\r\n        }\r\n\r\n        // check attribute re-declaration\r\n        if (name in seenAttrs) {\r\n          handleWarning('attribute <' + name + '> already defined');\r\n          continue;\r\n        }\r\n\r\n        seenAttrs[name] = true;\r\n\r\n        if (!isNamespace) {\r\n          attrs[name] = value;\r\n          continue;\r\n        }\r\n\r\n        // try to extract namespace information\r\n        if (maybeNS) {\r\n          newalias = (\r\n            name === 'xmlns'\r\n              ? 'xmlns'\r\n              : (name.charCodeAt(0) === 120 && name.substr(0, 6) === 'xmlns:')\r\n                ? name.substr(6)\r\n                : null\r\n          );\r\n\r\n          // handle xmlns(:alias) assignment\r\n          if (newalias !== null) {\r\n            nsUri = decodeEntities(value);\r\n            nsUriPrefix = uriPrefix(newalias);\r\n\r\n            alias = nsUriToPrefix[nsUri];\r\n\r\n            if (!alias) {\r\n              // no prefix defined or prefix collision\r\n              if (\r\n                (newalias === 'xmlns') ||\r\n                (nsUriPrefix in nsMatrix && nsMatrix[nsUriPrefix] !== nsUri)\r\n              ) {\r\n                // alocate free ns prefix\r\n                do {\r\n                  alias = 'ns' + (anonymousNsCount++);\r\n                } while (typeof nsMatrix[alias] !== 'undefined');\r\n              } else {\r\n                alias = newalias;\r\n              }\r\n\r\n              nsUriToPrefix[nsUri] = alias;\r\n            }\r\n\r\n            if (nsMatrix[newalias] !== alias) {\r\n              if (!hasNewMatrix) {\r\n                nsMatrix = cloneNsMatrix(nsMatrix);\r\n                hasNewMatrix = true;\r\n              }\r\n\r\n              nsMatrix[newalias] = alias;\r\n              if (newalias === 'xmlns') {\r\n                nsMatrix[uriPrefix(alias)] = nsUri;\r\n                defaultAlias = alias;\r\n              }\r\n\r\n              nsMatrix[nsUriPrefix] = nsUri;\r\n            }\r\n\r\n            // expose xmlns(:asd)=\"...\" in attributes\r\n            attrs[name] = value;\r\n            continue;\r\n          }\r\n\r\n          // collect attributes until all namespace\r\n          // declarations are processed\r\n          attrList.push(name, value);\r\n          continue;\r\n\r\n        } /** end if (maybeNs) */\r\n\r\n        // handle attributes on element without\r\n        // namespace declarations\r\n        w = name.indexOf(':');\r\n        if (w === -1) {\r\n          attrs[name] = value;\r\n          continue;\r\n        }\r\n\r\n        // normalize ns attribute name\r\n        if (!(nsName = nsMatrix[name.substring(0, w)])) {\r\n          handleWarning(missingNamespaceForPrefix(name.substring(0, w)));\r\n          continue;\r\n        }\r\n\r\n        name = defaultAlias === nsName\r\n          ? name.substr(w + 1)\r\n          : nsName + name.substr(w);\r\n        // end: normalize ns attribute name\r\n\r\n        // normalize xsi:type ns attribute value\r\n        if (name === XSI_TYPE) {\r\n          w = value.indexOf(':');\r\n\r\n          if (w !== -1) {\r\n            nsName = value.substring(0, w);\r\n            // handle default prefixes, i.e. xs:String gracefully\r\n            nsName = nsMatrix[nsName] || nsName;\r\n            value = nsName + value.substring(w);\r\n          } else {\r\n            value = defaultAlias + ':' + value;\r\n          }\r\n        }\r\n        // end: normalize xsi:type ns attribute value\r\n\r\n        attrs[name] = value;\r\n      }\r\n\r\n\r\n      // handle deferred, possibly namespaced attributes\r\n      if (maybeNS) {\r\n\r\n        // normalize captured attributes\r\n        for (i = 0, l = attrList.length; i < l; i++) {\r\n\r\n          name = attrList[i++];\r\n          value = attrList[i];\r\n\r\n          w = name.indexOf(':');\r\n\r\n          if (w !== -1) {\r\n            // normalize ns attribute name\r\n            if (!(nsName = nsMatrix[name.substring(0, w)])) {\r\n              handleWarning(missingNamespaceForPrefix(name.substring(0, w)));\r\n              continue;\r\n            }\r\n\r\n            name = defaultAlias === nsName\r\n              ? name.substr(w + 1)\r\n              : nsName + name.substr(w);\r\n            // end: normalize ns attribute name\r\n\r\n            // normalize xsi:type ns attribute value\r\n            if (name === XSI_TYPE) {\r\n              w = value.indexOf(':');\r\n\r\n              if (w !== -1) {\r\n                nsName = value.substring(0, w);\r\n                // handle default prefixes, i.e. xs:String gracefully\r\n                nsName = nsMatrix[nsName] || nsName;\r\n                value = nsName + value.substring(w);\r\n              } else {\r\n                value = defaultAlias + ':' + value;\r\n              }\r\n            }\r\n            // end: normalize xsi:type ns attribute value\r\n          }\r\n\r\n          attrs[name] = value;\r\n        }\r\n        // end: normalize captured attributes\r\n      }\r\n\r\n      return cachedAttrs = attrs;\r\n    }\r\n\r\n    /**\r\n     * Extract the parse context { line, column, part }\r\n     * from the current parser position.\r\n     *\r\n     * @return {Object} parse context\r\n     */\r\n    function getParseContext() {\r\n      var splitsRe = /(\\r\\n|\\r|\\n)/g;\r\n\r\n      var line = 0;\r\n      var column = 0;\r\n      var startOfLine = 0;\r\n      var endOfLine = j;\r\n      var match;\r\n      var data;\r\n\r\n      while (i >= startOfLine) {\r\n\r\n        match = splitsRe.exec(xml);\r\n\r\n        if (!match) {\r\n          break;\r\n        }\r\n\r\n        // end of line = (break idx + break chars)\r\n        endOfLine = match[0].length + match.index;\r\n\r\n        if (endOfLine > i) {\r\n          break;\r\n        }\r\n\r\n        // advance to next line\r\n        line += 1;\r\n\r\n        startOfLine = endOfLine;\r\n      }\r\n\r\n      // EOF errors\r\n      if (i == -1) {\r\n        column = endOfLine;\r\n        data = xml.substring(j);\r\n      } else\r\n      // start errors\r\n      if (j === 0) {\r\n        console.log(i - startOfLine);\r\n        data = xml.substring(j, i);\r\n      }\r\n      // other errors\r\n      else {\r\n        column = i - startOfLine;\r\n        data = (j == -1 ? xml.substring(i) : xml.substring(i, j + 1));\r\n      }\r\n\r\n      return {\r\n        'data': data,\r\n        'line': line,\r\n        'column': column\r\n      };\r\n    }\r\n\r\n    getContext = getParseContext;\r\n\r\n\r\n    if (proxy) {\r\n      elementProxy = Object.create({}, {\r\n        'name': getter(function() {\r\n          return elementName;\r\n        }),\r\n        'originalName': getter(function() {\r\n          return _elementName;\r\n        }),\r\n        'attrs': getter(getAttrs),\r\n        'ns': getter(function() {\r\n          return nsMatrix;\r\n        })\r\n      });\r\n    }\r\n\r\n    // actual parse logic\r\n    while (j !== -1) {\r\n\r\n      if (xml.charCodeAt(j) === 60) { // \"<\"\r\n        i = j;\r\n      } else {\r\n        i = xml.indexOf('<', j);\r\n      }\r\n\r\n      // parse end\r\n      if (i === -1) {\r\n        if (nodeStack.length) {\r\n          return handleError('unexpected end of file');\r\n        }\r\n\r\n        if (j === 0) {\r\n          return handleError('missing start tag');\r\n        }\r\n\r\n        if (j < xml.length) {\r\n          if (xml.substring(j).trim()) {\r\n            handleWarning(NON_WHITESPACE_OUTSIDE_ROOT_NODE);\r\n          }\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // parse text\r\n      if (j !== i) {\r\n\r\n        if (nodeStack.length) {\r\n          if (onText) {\r\n            onText(xml.substring(j, i), decodeEntities, getContext);\r\n\r\n            if (parseStop) {\r\n              return;\r\n            }\r\n          }\r\n        } else {\r\n          if (xml.substring(j, i).trim()) {\r\n            handleWarning(NON_WHITESPACE_OUTSIDE_ROOT_NODE);\r\n\r\n            if (parseStop) {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      w = xml.charCodeAt(i+1);\r\n\r\n      // parse comments + CDATA\r\n      if (w === 33) { // \"!\"\r\n        w = xml.charCodeAt(i+2);\r\n        if (w === 91 && xml.substr(i + 3, 6) === 'CDATA[') { // 91 == \"[\"\r\n          j = xml.indexOf(']]>', i);\r\n          if (j === -1) {\r\n            return handleError('unclosed cdata');\r\n          }\r\n\r\n          if (onCDATA) {\r\n            onCDATA(xml.substring(i + 9, j), getContext);\r\n            if (parseStop) {\r\n              return;\r\n            }\r\n          }\r\n\r\n          j += 3;\r\n          continue;\r\n        }\r\n\r\n\r\n        if (w === 45 && xml.charCodeAt(i + 3) === 45) { // 45 == \"-\"\r\n          j = xml.indexOf('-->', i);\r\n          if (j === -1) {\r\n            return handleError('unclosed comment');\r\n          }\r\n\r\n\r\n          if (onComment) {\r\n            onComment(xml.substring(i + 4, j), decodeEntities, getContext);\r\n            if (parseStop) {\r\n              return;\r\n            }\r\n          }\r\n\r\n          j += 3;\r\n          continue;\r\n        }\r\n\r\n        j = xml.indexOf('>', i + 1);\r\n        if (j === -1) {\r\n          return handleError('unclosed tag');\r\n        }\r\n\r\n        if (onAttention) {\r\n          onAttention(xml.substring(i, j + 1), decodeEntities, getContext);\r\n          if (parseStop) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        j += 1;\r\n        continue;\r\n      }\r\n\r\n      if (w === 63) { // \"?\"\r\n        j = xml.indexOf('?>', i);\r\n        if (j === -1) {\r\n          return handleError('unclosed question');\r\n        }\r\n\r\n        if (onQuestion) {\r\n          onQuestion(xml.substring(i, j + 2), getContext);\r\n          if (parseStop) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        j += 2;\r\n        continue;\r\n      }\r\n\r\n      j = xml.indexOf('>', i + 1);\r\n\r\n      if (j == -1) {\r\n        return handleError('unclosed tag');\r\n      }\r\n\r\n      // don't process attributes;\r\n      // there are none\r\n      cachedAttrs = {};\r\n\r\n      // if (xml.charCodeAt(i+1) === 47) { // </...\r\n      if (w === 47) { // </...\r\n        tagStart = false;\r\n        tagEnd = true;\r\n\r\n        if (!nodeStack.length) {\r\n          return handleError('missing open tag');\r\n        }\r\n\r\n        // verify open <-> close tag match\r\n        x = elementName = nodeStack.pop();\r\n        q = i + 2 + x.length;\r\n\r\n        if (xml.substring(i + 2, q) !== x) {\r\n          return handleError('closing tag mismatch');\r\n        }\r\n\r\n        // verify chars in close tag\r\n        for (; q < j; q++) {\r\n          w = xml.charCodeAt(q);\r\n\r\n          if (w === 32 || (w > 8 && w < 14)) { // \\f\\n\\r\\t\\v space\r\n            continue;\r\n          }\r\n\r\n          return handleError('close tag');\r\n        }\r\n\r\n      } else {\r\n        if (xml.charCodeAt(j - 1) === 47) { // .../>\r\n          x = elementName = xml.substring(i + 1, j - 1);\r\n\r\n          tagStart = true;\r\n          tagEnd = true;\r\n\r\n        } else {\r\n          x = elementName = xml.substring(i + 1, j);\r\n\r\n          tagStart = true;\r\n          tagEnd = false;\r\n        }\r\n\r\n        if (!(w > 96 && w < 123 || w > 64 && w < 91 || w === 95 || w === 58)) { // char 95\"_\" 58\":\"\r\n          return handleError('illegal first char nodeName');\r\n        }\r\n\r\n        for (q = 1, y = x.length; q < y; q++) {\r\n          w = x.charCodeAt(q);\r\n\r\n          if (w > 96 && w < 123 || w > 64 && w < 91 || w > 47 && w < 59 || w === 45 || w === 95 || w == 46) {\r\n            continue;\r\n          }\r\n\r\n          if (w === 32 || (w < 14 && w > 8)) { // \\f\\n\\r\\t\\v space\r\n            elementName = x.substring(0, q);\r\n            // maybe there are attributes\r\n            cachedAttrs = null;\r\n            break;\r\n          }\r\n\r\n          return handleError('invalid nodeName');\r\n        }\r\n\r\n        if (!tagEnd) {\r\n          nodeStack.push(elementName);\r\n        }\r\n      }\r\n\r\n      if (isNamespace) {\r\n\r\n        _nsMatrix = nsMatrix;\r\n\r\n        if (tagStart) {\r\n          // remember old namespace\r\n          // unless we're self-closing\r\n          if (!tagEnd) {\r\n            nsMatrixStack.push(_nsMatrix);\r\n          }\r\n\r\n          if (cachedAttrs === null) {\r\n            // quick check, whether there may be namespace\r\n            // declarations on the node; if that is the case\r\n            // we need to eagerly parse the node attributes\r\n            if ((maybeNS = x.indexOf('xmlns', q) !== -1)) {\r\n              attrsStart = q;\r\n              attrsString = x;\r\n\r\n              getAttrs();\r\n\r\n              maybeNS = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        _elementName = elementName;\r\n\r\n        w = elementName.indexOf(':');\r\n        if (w !== -1) {\r\n          xmlns = nsMatrix[elementName.substring(0, w)];\r\n\r\n          // prefix given; namespace must exist\r\n          if (!xmlns) {\r\n            return handleError('missing namespace on <' + _elementName + '>');\r\n          }\r\n\r\n          elementName = elementName.substr(w + 1);\r\n        } else {\r\n          xmlns = nsMatrix['xmlns'];\r\n\r\n          // if no default namespace is defined,\r\n          // we'll import the element as anonymous.\r\n          //\r\n          // it is up to users to correct that to the document defined\r\n          // targetNamespace, or whatever their undersanding of the\r\n          // XML spec mandates.\r\n        }\r\n\r\n        // adjust namespace prefixs as configured\r\n        if (xmlns) {\r\n          elementName = xmlns + ':' + elementName;\r\n        }\r\n\r\n      }\r\n\r\n      if (tagStart) {\r\n        attrsStart = q;\r\n        attrsString = x;\r\n\r\n        if (onOpenTag) {\r\n          if (proxy) {\r\n            onOpenTag(elementProxy, decodeEntities, tagEnd, getContext);\r\n          } else {\r\n            onOpenTag(elementName, getAttrs, decodeEntities, tagEnd, getContext);\r\n          }\r\n\r\n          if (parseStop) {\r\n            return;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (tagEnd) {\r\n\r\n        if (onCloseTag) {\r\n          onCloseTag(proxy ? elementProxy : elementName, decodeEntities, tagStart, getContext);\r\n\r\n          if (parseStop) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        // restore old namespace\r\n        if (isNamespace) {\r\n          if (!tagStart) {\r\n            nsMatrix = nsMatrixStack.pop();\r\n          } else {\r\n            nsMatrix = _nsMatrix;\r\n          }\r\n        }\r\n      }\r\n\r\n      j += 1;\r\n    }\r\n  } /** end parse */\r\n\r\n}\r\n\r\nexport { Parser, decodeEntities as decode };\r\n","/** @license React v0.13.4\r\n * scheduler-tracing.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\r\n\r\n\r\n// In some cases, StrictMode should also double-render lifecycles.\r\n// This can be confusing for tests though,\r\n// And it can be bad for performance in production.\r\n// This feature flag can be used to control the behavior:\r\n\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\n\r\n\r\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\r\n\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\n\r\n\r\n// Trace which interactions trigger each commit.\r\nvar enableSchedulerTracing = true;\r\n\r\n// Only used in www builds.\r\n // TODO: true? Here it might just be false.\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// React Fire: prevent the value and checked attributes from syncing\r\n// with their related DOM properties\r\n\r\n\r\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\r\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\r\n\r\nvar DEFAULT_THREAD_ID = 0;\r\n\r\n// Counters used to generate unique IDs.\r\nvar interactionIDCounter = 0;\r\nvar threadIDCounter = 0;\r\n\r\n// Set of currently traced interactions.\r\n// Interactions \"stack\"–\r\n// Meaning that newly traced interactions are appended to the previously active set.\r\n// When an interaction goes out of scope, the previous set (if any) is restored.\r\nexports.__interactionsRef = null;\r\n\r\n// Listener(s) to notify when interactions begin and end.\r\nexports.__subscriberRef = null;\r\n\r\nif (enableSchedulerTracing) {\r\n  exports.__interactionsRef = {\r\n    current: new Set()\r\n  };\r\n  exports.__subscriberRef = {\r\n    current: null\r\n  };\r\n}\r\n\r\nfunction unstable_clear(callback) {\r\n  if (!enableSchedulerTracing) {\r\n    return callback();\r\n  }\r\n\r\n  var prevInteractions = exports.__interactionsRef.current;\r\n  exports.__interactionsRef.current = new Set();\r\n\r\n  try {\r\n    return callback();\r\n  } finally {\r\n    exports.__interactionsRef.current = prevInteractions;\r\n  }\r\n}\r\n\r\nfunction unstable_getCurrent() {\r\n  if (!enableSchedulerTracing) {\r\n    return null;\r\n  } else {\r\n    return exports.__interactionsRef.current;\r\n  }\r\n}\r\n\r\nfunction unstable_getThreadID() {\r\n  return ++threadIDCounter;\r\n}\r\n\r\nfunction unstable_trace(name, timestamp, callback) {\r\n  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;\r\n\r\n  if (!enableSchedulerTracing) {\r\n    return callback();\r\n  }\r\n\r\n  var interaction = {\r\n    __count: 1,\r\n    id: interactionIDCounter++,\r\n    name: name,\r\n    timestamp: timestamp\r\n  };\r\n\r\n  var prevInteractions = exports.__interactionsRef.current;\r\n\r\n  // Traced interactions should stack/accumulate.\r\n  // To do that, clone the current interactions.\r\n  // The previous set will be restored upon completion.\r\n  var interactions = new Set(prevInteractions);\r\n  interactions.add(interaction);\r\n  exports.__interactionsRef.current = interactions;\r\n\r\n  var subscriber = exports.__subscriberRef.current;\r\n  var returnValue = void 0;\r\n\r\n  try {\r\n    if (subscriber !== null) {\r\n      subscriber.onInteractionTraced(interaction);\r\n    }\r\n  } finally {\r\n    try {\r\n      if (subscriber !== null) {\r\n        subscriber.onWorkStarted(interactions, threadID);\r\n      }\r\n    } finally {\r\n      try {\r\n        returnValue = callback();\r\n      } finally {\r\n        exports.__interactionsRef.current = prevInteractions;\r\n\r\n        try {\r\n          if (subscriber !== null) {\r\n            subscriber.onWorkStopped(interactions, threadID);\r\n          }\r\n        } finally {\r\n          interaction.__count--;\r\n\r\n          // If no async work was scheduled for this interaction,\r\n          // Notify subscribers that it's completed.\r\n          if (subscriber !== null && interaction.__count === 0) {\r\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return returnValue;\r\n}\r\n\r\nfunction unstable_wrap(callback) {\r\n  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;\r\n\r\n  if (!enableSchedulerTracing) {\r\n    return callback;\r\n  }\r\n\r\n  var wrappedInteractions = exports.__interactionsRef.current;\r\n\r\n  var subscriber = exports.__subscriberRef.current;\r\n  if (subscriber !== null) {\r\n    subscriber.onWorkScheduled(wrappedInteractions, threadID);\r\n  }\r\n\r\n  // Update the pending async work count for the current interactions.\r\n  // Update after calling subscribers in case of error.\r\n  wrappedInteractions.forEach(function (interaction) {\r\n    interaction.__count++;\r\n  });\r\n\r\n  var hasRun = false;\r\n\r\n  function wrapped() {\r\n    var prevInteractions = exports.__interactionsRef.current;\r\n    exports.__interactionsRef.current = wrappedInteractions;\r\n\r\n    subscriber = exports.__subscriberRef.current;\r\n\r\n    try {\r\n      var returnValue = void 0;\r\n\r\n      try {\r\n        if (subscriber !== null) {\r\n          subscriber.onWorkStarted(wrappedInteractions, threadID);\r\n        }\r\n      } finally {\r\n        try {\r\n          returnValue = callback.apply(undefined, arguments);\r\n        } finally {\r\n          exports.__interactionsRef.current = prevInteractions;\r\n\r\n          if (subscriber !== null) {\r\n            subscriber.onWorkStopped(wrappedInteractions, threadID);\r\n          }\r\n        }\r\n      }\r\n\r\n      return returnValue;\r\n    } finally {\r\n      if (!hasRun) {\r\n        // We only expect a wrapped function to be executed once,\r\n        // But in the event that it's executed more than once–\r\n        // Only decrement the outstanding interaction counts once.\r\n        hasRun = true;\r\n\r\n        // Update pending async counts for all wrapped interactions.\r\n        // If this was the last scheduled async work for any of them,\r\n        // Mark them as completed.\r\n        wrappedInteractions.forEach(function (interaction) {\r\n          interaction.__count--;\r\n\r\n          if (subscriber !== null && interaction.__count === 0) {\r\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  wrapped.cancel = function cancel() {\r\n    subscriber = exports.__subscriberRef.current;\r\n\r\n    try {\r\n      if (subscriber !== null) {\r\n        subscriber.onWorkCanceled(wrappedInteractions, threadID);\r\n      }\r\n    } finally {\r\n      // Update pending async counts for all wrapped interactions.\r\n      // If this was the last scheduled async work for any of them,\r\n      // Mark them as completed.\r\n      wrappedInteractions.forEach(function (interaction) {\r\n        interaction.__count--;\r\n\r\n        if (subscriber && interaction.__count === 0) {\r\n          subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return wrapped;\r\n}\r\n\r\nvar subscribers = null;\r\nif (enableSchedulerTracing) {\r\n  subscribers = new Set();\r\n}\r\n\r\nfunction unstable_subscribe(subscriber) {\r\n  if (enableSchedulerTracing) {\r\n    subscribers.add(subscriber);\r\n\r\n    if (subscribers.size === 1) {\r\n      exports.__subscriberRef.current = {\r\n        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,\r\n        onInteractionTraced: onInteractionTraced,\r\n        onWorkCanceled: onWorkCanceled,\r\n        onWorkScheduled: onWorkScheduled,\r\n        onWorkStarted: onWorkStarted,\r\n        onWorkStopped: onWorkStopped\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction unstable_unsubscribe(subscriber) {\r\n  if (enableSchedulerTracing) {\r\n    subscribers.delete(subscriber);\r\n\r\n    if (subscribers.size === 0) {\r\n      exports.__subscriberRef.current = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction onInteractionTraced(interaction) {\r\n  var didCatchError = false;\r\n  var caughtError = null;\r\n\r\n  subscribers.forEach(function (subscriber) {\r\n    try {\r\n      subscriber.onInteractionTraced(interaction);\r\n    } catch (error) {\r\n      if (!didCatchError) {\r\n        didCatchError = true;\r\n        caughtError = error;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (didCatchError) {\r\n    throw caughtError;\r\n  }\r\n}\r\n\r\nfunction onInteractionScheduledWorkCompleted(interaction) {\r\n  var didCatchError = false;\r\n  var caughtError = null;\r\n\r\n  subscribers.forEach(function (subscriber) {\r\n    try {\r\n      subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n    } catch (error) {\r\n      if (!didCatchError) {\r\n        didCatchError = true;\r\n        caughtError = error;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (didCatchError) {\r\n    throw caughtError;\r\n  }\r\n}\r\n\r\nfunction onWorkScheduled(interactions, threadID) {\r\n  var didCatchError = false;\r\n  var caughtError = null;\r\n\r\n  subscribers.forEach(function (subscriber) {\r\n    try {\r\n      subscriber.onWorkScheduled(interactions, threadID);\r\n    } catch (error) {\r\n      if (!didCatchError) {\r\n        didCatchError = true;\r\n        caughtError = error;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (didCatchError) {\r\n    throw caughtError;\r\n  }\r\n}\r\n\r\nfunction onWorkStarted(interactions, threadID) {\r\n  var didCatchError = false;\r\n  var caughtError = null;\r\n\r\n  subscribers.forEach(function (subscriber) {\r\n    try {\r\n      subscriber.onWorkStarted(interactions, threadID);\r\n    } catch (error) {\r\n      if (!didCatchError) {\r\n        didCatchError = true;\r\n        caughtError = error;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (didCatchError) {\r\n    throw caughtError;\r\n  }\r\n}\r\n\r\nfunction onWorkStopped(interactions, threadID) {\r\n  var didCatchError = false;\r\n  var caughtError = null;\r\n\r\n  subscribers.forEach(function (subscriber) {\r\n    try {\r\n      subscriber.onWorkStopped(interactions, threadID);\r\n    } catch (error) {\r\n      if (!didCatchError) {\r\n        didCatchError = true;\r\n        caughtError = error;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (didCatchError) {\r\n    throw caughtError;\r\n  }\r\n}\r\n\r\nfunction onWorkCanceled(interactions, threadID) {\r\n  var didCatchError = false;\r\n  var caughtError = null;\r\n\r\n  subscribers.forEach(function (subscriber) {\r\n    try {\r\n      subscriber.onWorkCanceled(interactions, threadID);\r\n    } catch (error) {\r\n      if (!didCatchError) {\r\n        didCatchError = true;\r\n        caughtError = error;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (didCatchError) {\r\n    throw caughtError;\r\n  }\r\n}\r\n\r\nexports.unstable_clear = unstable_clear;\r\nexports.unstable_getCurrent = unstable_getCurrent;\r\nexports.unstable_getThreadID = unstable_getThreadID;\r\nexports.unstable_trace = unstable_trace;\r\nexports.unstable_wrap = unstable_wrap;\r\nexports.unstable_subscribe = unstable_subscribe;\r\nexports.unstable_unsubscribe = unstable_unsubscribe;\r\n  })();\r\n}\r\n","/** @license React v0.13.4\r\n * scheduler.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\n\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  (function() {\r\n'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar enableSchedulerDebugging = false;\r\n\r\n/* eslint-disable no-var */\r\n\r\n// TODO: Use symbols?\r\nvar ImmediatePriority = 1;\r\nvar UserBlockingPriority = 2;\r\nvar NormalPriority = 3;\r\nvar LowPriority = 4;\r\nvar IdlePriority = 5;\r\n\r\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\r\n// Math.pow(2, 30) - 1\r\n// 0b111111111111111111111111111111\r\nvar maxSigned31BitInt = 1073741823;\r\n\r\n// Times out immediately\r\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\r\n// Eventually times out\r\nvar USER_BLOCKING_PRIORITY = 250;\r\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\r\nvar LOW_PRIORITY_TIMEOUT = 10000;\r\n// Never times out\r\nvar IDLE_PRIORITY = maxSigned31BitInt;\r\n\r\n// Callbacks are stored as a circular, doubly linked list.\r\nvar firstCallbackNode = null;\r\n\r\nvar currentDidTimeout = false;\r\n// Pausing the scheduler is useful for debugging.\r\nvar isSchedulerPaused = false;\r\n\r\nvar currentPriorityLevel = NormalPriority;\r\nvar currentEventStartTime = -1;\r\nvar currentExpirationTime = -1;\r\n\r\n// This is set when a callback is being executed, to prevent re-entrancy.\r\nvar isExecutingCallback = false;\r\n\r\nvar isHostCallbackScheduled = false;\r\n\r\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nfunction ensureHostCallbackIsScheduled() {\r\n  if (isExecutingCallback) {\r\n    // Don't schedule work yet; wait until the next time we yield.\r\n    return;\r\n  }\r\n  // Schedule the host callback using the earliest expiration in the list.\r\n  var expirationTime = firstCallbackNode.expirationTime;\r\n  if (!isHostCallbackScheduled) {\r\n    isHostCallbackScheduled = true;\r\n  } else {\r\n    // Cancel the existing host callback.\r\n    cancelHostCallback();\r\n  }\r\n  requestHostCallback(flushWork, expirationTime);\r\n}\r\n\r\nfunction flushFirstCallback() {\r\n  var flushedNode = firstCallbackNode;\r\n\r\n  // Remove the node from the list before calling the callback. That way the\r\n  // list is in a consistent state even if the callback throws.\r\n  var next = firstCallbackNode.next;\r\n  if (firstCallbackNode === next) {\r\n    // This is the last callback in the list.\r\n    firstCallbackNode = null;\r\n    next = null;\r\n  } else {\r\n    var lastCallbackNode = firstCallbackNode.previous;\r\n    firstCallbackNode = lastCallbackNode.next = next;\r\n    next.previous = lastCallbackNode;\r\n  }\r\n\r\n  flushedNode.next = flushedNode.previous = null;\r\n\r\n  // Now it's safe to call the callback.\r\n  var callback = flushedNode.callback;\r\n  var expirationTime = flushedNode.expirationTime;\r\n  var priorityLevel = flushedNode.priorityLevel;\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  var previousExpirationTime = currentExpirationTime;\r\n  currentPriorityLevel = priorityLevel;\r\n  currentExpirationTime = expirationTime;\r\n  var continuationCallback;\r\n  try {\r\n    continuationCallback = callback();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    currentExpirationTime = previousExpirationTime;\r\n  }\r\n\r\n  // A callback may return a continuation. The continuation should be scheduled\r\n  // with the same priority and expiration as the just-finished callback.\r\n  if (typeof continuationCallback === 'function') {\r\n    var continuationNode = {\r\n      callback: continuationCallback,\r\n      priorityLevel: priorityLevel,\r\n      expirationTime: expirationTime,\r\n      next: null,\r\n      previous: null\r\n    };\r\n\r\n    // Insert the new callback into the list, sorted by its expiration. This is\r\n    // almost the same as the code in `scheduleCallback`, except the callback\r\n    // is inserted into the list *before* callbacks of equal expiration instead\r\n    // of after.\r\n    if (firstCallbackNode === null) {\r\n      // This is the first callback in the list.\r\n      firstCallbackNode = continuationNode.next = continuationNode.previous = continuationNode;\r\n    } else {\r\n      var nextAfterContinuation = null;\r\n      var node = firstCallbackNode;\r\n      do {\r\n        if (node.expirationTime >= expirationTime) {\r\n          // This callback expires at or after the continuation. We will insert\r\n          // the continuation *before* this callback.\r\n          nextAfterContinuation = node;\r\n          break;\r\n        }\r\n        node = node.next;\r\n      } while (node !== firstCallbackNode);\r\n\r\n      if (nextAfterContinuation === null) {\r\n        // No equal or lower priority callback was found, which means the new\r\n        // callback is the lowest priority callback in the list.\r\n        nextAfterContinuation = firstCallbackNode;\r\n      } else if (nextAfterContinuation === firstCallbackNode) {\r\n        // The new callback is the highest priority callback in the list.\r\n        firstCallbackNode = continuationNode;\r\n        ensureHostCallbackIsScheduled();\r\n      }\r\n\r\n      var previous = nextAfterContinuation.previous;\r\n      previous.next = nextAfterContinuation.previous = continuationNode;\r\n      continuationNode.next = nextAfterContinuation;\r\n      continuationNode.previous = previous;\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushImmediateWork() {\r\n  if (\r\n  // Confirm we've exited the outer most event handler\r\n  currentEventStartTime === -1 && firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority) {\r\n    isExecutingCallback = true;\r\n    try {\r\n      do {\r\n        flushFirstCallback();\r\n      } while (\r\n      // Keep flushing until there are no more immediate callbacks\r\n      firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority);\r\n    } finally {\r\n      isExecutingCallback = false;\r\n      if (firstCallbackNode !== null) {\r\n        // There's still work remaining. Request another callback.\r\n        ensureHostCallbackIsScheduled();\r\n      } else {\r\n        isHostCallbackScheduled = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushWork(didTimeout) {\r\n  // Exit right away if we're currently paused\r\n\r\n  if (enableSchedulerDebugging && isSchedulerPaused) {\r\n    return;\r\n  }\r\n\r\n  isExecutingCallback = true;\r\n  var previousDidTimeout = currentDidTimeout;\r\n  currentDidTimeout = didTimeout;\r\n  try {\r\n    if (didTimeout) {\r\n      // Flush all the expired callbacks without yielding.\r\n      while (firstCallbackNode !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {\r\n        // TODO Wrap in feature flag\r\n        // Read the current time. Flush all the callbacks that expire at or\r\n        // earlier than that time. Then read the current time again and repeat.\r\n        // This optimizes for as few performance.now calls as possible.\r\n        var currentTime = exports.unstable_now();\r\n        if (firstCallbackNode.expirationTime <= currentTime) {\r\n          do {\r\n            flushFirstCallback();\r\n          } while (firstCallbackNode !== null && firstCallbackNode.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused));\r\n          continue;\r\n        }\r\n        break;\r\n      }\r\n    } else {\r\n      // Keep flushing callbacks until we run out of time in the frame.\r\n      if (firstCallbackNode !== null) {\r\n        do {\r\n          if (enableSchedulerDebugging && isSchedulerPaused) {\r\n            break;\r\n          }\r\n          flushFirstCallback();\r\n        } while (firstCallbackNode !== null && !shouldYieldToHost());\r\n      }\r\n    }\r\n  } finally {\r\n    isExecutingCallback = false;\r\n    currentDidTimeout = previousDidTimeout;\r\n    if (firstCallbackNode !== null) {\r\n      // There's still work remaining. Request another callback.\r\n      ensureHostCallbackIsScheduled();\r\n    } else {\r\n      isHostCallbackScheduled = false;\r\n    }\r\n    // Before exiting, flush all the immediate work that was scheduled.\r\n    flushImmediateWork();\r\n  }\r\n}\r\n\r\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n    case LowPriority:\r\n    case IdlePriority:\r\n      break;\r\n    default:\r\n      priorityLevel = NormalPriority;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  var previousEventStartTime = currentEventStartTime;\r\n  currentPriorityLevel = priorityLevel;\r\n  currentEventStartTime = exports.unstable_now();\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    currentEventStartTime = previousEventStartTime;\r\n\r\n    // Before exiting, flush all the immediate work that was scheduled.\r\n    flushImmediateWork();\r\n  }\r\n}\r\n\r\nfunction unstable_next(eventHandler) {\r\n  var priorityLevel = void 0;\r\n  switch (currentPriorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n      // Shift down to normal priority\r\n      priorityLevel = NormalPriority;\r\n      break;\r\n    default:\r\n      // Anything lower than normal priority should remain at the current level.\r\n      priorityLevel = currentPriorityLevel;\r\n      break;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  var previousEventStartTime = currentEventStartTime;\r\n  currentPriorityLevel = priorityLevel;\r\n  currentEventStartTime = exports.unstable_now();\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    currentEventStartTime = previousEventStartTime;\r\n\r\n    // Before exiting, flush all the immediate work that was scheduled.\r\n    flushImmediateWork();\r\n  }\r\n}\r\n\r\nfunction unstable_wrapCallback(callback) {\r\n  var parentPriorityLevel = currentPriorityLevel;\r\n  return function () {\r\n    // This is a fork of runWithPriority, inlined for performance.\r\n    var previousPriorityLevel = currentPriorityLevel;\r\n    var previousEventStartTime = currentEventStartTime;\r\n    currentPriorityLevel = parentPriorityLevel;\r\n    currentEventStartTime = exports.unstable_now();\r\n\r\n    try {\r\n      return callback.apply(this, arguments);\r\n    } finally {\r\n      currentPriorityLevel = previousPriorityLevel;\r\n      currentEventStartTime = previousEventStartTime;\r\n      flushImmediateWork();\r\n    }\r\n  };\r\n}\r\n\r\nfunction unstable_scheduleCallback(callback, deprecated_options) {\r\n  var startTime = currentEventStartTime !== -1 ? currentEventStartTime : exports.unstable_now();\r\n\r\n  var expirationTime;\r\n  if (typeof deprecated_options === 'object' && deprecated_options !== null && typeof deprecated_options.timeout === 'number') {\r\n    // FIXME: Remove this branch once we lift expiration times out of React.\r\n    expirationTime = startTime + deprecated_options.timeout;\r\n  } else {\r\n    switch (currentPriorityLevel) {\r\n      case ImmediatePriority:\r\n        expirationTime = startTime + IMMEDIATE_PRIORITY_TIMEOUT;\r\n        break;\r\n      case UserBlockingPriority:\r\n        expirationTime = startTime + USER_BLOCKING_PRIORITY;\r\n        break;\r\n      case IdlePriority:\r\n        expirationTime = startTime + IDLE_PRIORITY;\r\n        break;\r\n      case LowPriority:\r\n        expirationTime = startTime + LOW_PRIORITY_TIMEOUT;\r\n        break;\r\n      case NormalPriority:\r\n      default:\r\n        expirationTime = startTime + NORMAL_PRIORITY_TIMEOUT;\r\n    }\r\n  }\r\n\r\n  var newNode = {\r\n    callback: callback,\r\n    priorityLevel: currentPriorityLevel,\r\n    expirationTime: expirationTime,\r\n    next: null,\r\n    previous: null\r\n  };\r\n\r\n  // Insert the new callback into the list, ordered first by expiration, then\r\n  // by insertion. So the new callback is inserted any other callback with\r\n  // equal expiration.\r\n  if (firstCallbackNode === null) {\r\n    // This is the first callback in the list.\r\n    firstCallbackNode = newNode.next = newNode.previous = newNode;\r\n    ensureHostCallbackIsScheduled();\r\n  } else {\r\n    var next = null;\r\n    var node = firstCallbackNode;\r\n    do {\r\n      if (node.expirationTime > expirationTime) {\r\n        // The new callback expires before this one.\r\n        next = node;\r\n        break;\r\n      }\r\n      node = node.next;\r\n    } while (node !== firstCallbackNode);\r\n\r\n    if (next === null) {\r\n      // No callback with a later expiration was found, which means the new\r\n      // callback has the latest expiration in the list.\r\n      next = firstCallbackNode;\r\n    } else if (next === firstCallbackNode) {\r\n      // The new callback has the earliest expiration in the entire list.\r\n      firstCallbackNode = newNode;\r\n      ensureHostCallbackIsScheduled();\r\n    }\r\n\r\n    var previous = next.previous;\r\n    previous.next = next.previous = newNode;\r\n    newNode.next = next;\r\n    newNode.previous = previous;\r\n  }\r\n\r\n  return newNode;\r\n}\r\n\r\nfunction unstable_pauseExecution() {\r\n  isSchedulerPaused = true;\r\n}\r\n\r\nfunction unstable_continueExecution() {\r\n  isSchedulerPaused = false;\r\n  if (firstCallbackNode !== null) {\r\n    ensureHostCallbackIsScheduled();\r\n  }\r\n}\r\n\r\nfunction unstable_getFirstCallbackNode() {\r\n  return firstCallbackNode;\r\n}\r\n\r\nfunction unstable_cancelCallback(callbackNode) {\r\n  var next = callbackNode.next;\r\n  if (next === null) {\r\n    // Already cancelled.\r\n    return;\r\n  }\r\n\r\n  if (next === callbackNode) {\r\n    // This is the only scheduled callback. Clear the list.\r\n    firstCallbackNode = null;\r\n  } else {\r\n    // Remove the callback from its position in the list.\r\n    if (callbackNode === firstCallbackNode) {\r\n      firstCallbackNode = next;\r\n    }\r\n    var previous = callbackNode.previous;\r\n    previous.next = next;\r\n    next.previous = previous;\r\n  }\r\n\r\n  callbackNode.next = callbackNode.previous = null;\r\n}\r\n\r\nfunction unstable_getCurrentPriorityLevel() {\r\n  return currentPriorityLevel;\r\n}\r\n\r\nfunction unstable_shouldYield() {\r\n  return !currentDidTimeout && (firstCallbackNode !== null && firstCallbackNode.expirationTime < currentExpirationTime || shouldYieldToHost());\r\n}\r\n\r\n// The remaining code is essentially a polyfill for requestIdleCallback. It\r\n// works by scheduling a requestAnimationFrame, storing the time for the start\r\n// of the frame, then scheduling a postMessage which gets scheduled after paint.\r\n// Within the postMessage handler do as much work as possible until time + frame\r\n// rate. By separating the idle call into a separate event tick we ensure that\r\n// layout, paint and other browser work is counted against the available time.\r\n// The frame rate is dynamically adjusted.\r\n\r\n// We capture a local reference to any global, in case it gets polyfilled after\r\n// this module is initially evaluated. We want to be using a\r\n// consistent implementation.\r\nvar localDate = Date;\r\n\r\n// This initialization code may run even on server environments if a component\r\n// just imports ReactDOM (e.g. for findDOMNode). Some environments might not\r\n// have setTimeout or clearTimeout. However, we always expect them to be defined\r\n// on the client. https://github.com/facebook/react/pull/13088\r\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\r\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\r\n\r\n// We don't expect either of these to necessarily be defined, but we will error\r\n// later if they are missing on the client.\r\nvar localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;\r\nvar localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined;\r\n\r\n// requestAnimationFrame does not run when the tab is in the background. If\r\n// we're backgrounded we prefer for that work to happen so that the page\r\n// continues to load in the background. So we also schedule a 'setTimeout' as\r\n// a fallback.\r\n// TODO: Need a better heuristic for backgrounded work.\r\nvar ANIMATION_FRAME_TIMEOUT = 100;\r\nvar rAFID;\r\nvar rAFTimeoutID;\r\nvar requestAnimationFrameWithTimeout = function (callback) {\r\n  // schedule rAF and also a setTimeout\r\n  rAFID = localRequestAnimationFrame(function (timestamp) {\r\n    // cancel the setTimeout\r\n    localClearTimeout(rAFTimeoutID);\r\n    callback(timestamp);\r\n  });\r\n  rAFTimeoutID = localSetTimeout(function () {\r\n    // cancel the requestAnimationFrame\r\n    localCancelAnimationFrame(rAFID);\r\n    callback(exports.unstable_now());\r\n  }, ANIMATION_FRAME_TIMEOUT);\r\n};\r\n\r\nif (hasNativePerformanceNow) {\r\n  var Performance = performance;\r\n  exports.unstable_now = function () {\r\n    return Performance.now();\r\n  };\r\n} else {\r\n  exports.unstable_now = function () {\r\n    return localDate.now();\r\n  };\r\n}\r\n\r\nvar requestHostCallback;\r\nvar cancelHostCallback;\r\nvar shouldYieldToHost;\r\n\r\nvar globalValue = null;\r\nif (typeof window !== 'undefined') {\r\n  globalValue = window;\r\n} else if (typeof global !== 'undefined') {\r\n  globalValue = global;\r\n}\r\n\r\nif (globalValue && globalValue._schedMock) {\r\n  // Dynamic injection, only for testing purposes.\r\n  var globalImpl = globalValue._schedMock;\r\n  requestHostCallback = globalImpl[0];\r\n  cancelHostCallback = globalImpl[1];\r\n  shouldYieldToHost = globalImpl[2];\r\n  exports.unstable_now = globalImpl[3];\r\n} else if (\r\n// If Scheduler runs in a non-DOM environment, it falls back to a naive\r\n// implementation using setTimeout.\r\ntypeof window === 'undefined' ||\r\n// Check if MessageChannel is supported, too.\r\ntypeof MessageChannel !== 'function') {\r\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\r\n  // fallback to a naive implementation.\r\n  var _callback = null;\r\n  var _flushCallback = function (didTimeout) {\r\n    if (_callback !== null) {\r\n      try {\r\n        _callback(didTimeout);\r\n      } finally {\r\n        _callback = null;\r\n      }\r\n    }\r\n  };\r\n  requestHostCallback = function (cb, ms) {\r\n    if (_callback !== null) {\r\n      // Protect against re-entrancy.\r\n      setTimeout(requestHostCallback, 0, cb);\r\n    } else {\r\n      _callback = cb;\r\n      setTimeout(_flushCallback, 0, false);\r\n    }\r\n  };\r\n  cancelHostCallback = function () {\r\n    _callback = null;\r\n  };\r\n  shouldYieldToHost = function () {\r\n    return false;\r\n  };\r\n} else {\r\n  if (typeof console !== 'undefined') {\r\n    // TODO: Remove fb.me link\r\n    if (typeof localRequestAnimationFrame !== 'function') {\r\n      console.error(\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\r\n    }\r\n    if (typeof localCancelAnimationFrame !== 'function') {\r\n      console.error(\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\r\n    }\r\n  }\r\n\r\n  var scheduledHostCallback = null;\r\n  var isMessageEventScheduled = false;\r\n  var timeoutTime = -1;\r\n\r\n  var isAnimationFrameScheduled = false;\r\n\r\n  var isFlushingHostCallback = false;\r\n\r\n  var frameDeadline = 0;\r\n  // We start out assuming that we run at 30fps but then the heuristic tracking\r\n  // will adjust this value to a faster fps if we get more frequent animation\r\n  // frames.\r\n  var previousFrameTime = 33;\r\n  var activeFrameTime = 33;\r\n\r\n  shouldYieldToHost = function () {\r\n    return frameDeadline <= exports.unstable_now();\r\n  };\r\n\r\n  // We use the postMessage trick to defer idle work until after the repaint.\r\n  var channel = new MessageChannel();\r\n  var port = channel.port2;\r\n  channel.port1.onmessage = function (event) {\r\n    isMessageEventScheduled = false;\r\n\r\n    var prevScheduledCallback = scheduledHostCallback;\r\n    var prevTimeoutTime = timeoutTime;\r\n    scheduledHostCallback = null;\r\n    timeoutTime = -1;\r\n\r\n    var currentTime = exports.unstable_now();\r\n\r\n    var didTimeout = false;\r\n    if (frameDeadline - currentTime <= 0) {\r\n      // There's no time left in this idle period. Check if the callback has\r\n      // a timeout and whether it's been exceeded.\r\n      if (prevTimeoutTime !== -1 && prevTimeoutTime <= currentTime) {\r\n        // Exceeded the timeout. Invoke the callback even though there's no\r\n        // time left.\r\n        didTimeout = true;\r\n      } else {\r\n        // No timeout.\r\n        if (!isAnimationFrameScheduled) {\r\n          // Schedule another animation callback so we retry later.\r\n          isAnimationFrameScheduled = true;\r\n          requestAnimationFrameWithTimeout(animationTick);\r\n        }\r\n        // Exit without invoking the callback.\r\n        scheduledHostCallback = prevScheduledCallback;\r\n        timeoutTime = prevTimeoutTime;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (prevScheduledCallback !== null) {\r\n      isFlushingHostCallback = true;\r\n      try {\r\n        prevScheduledCallback(didTimeout);\r\n      } finally {\r\n        isFlushingHostCallback = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  var animationTick = function (rafTime) {\r\n    if (scheduledHostCallback !== null) {\r\n      // Eagerly schedule the next animation callback at the beginning of the\r\n      // frame. If the scheduler queue is not empty at the end of the frame, it\r\n      // will continue flushing inside that callback. If the queue *is* empty,\r\n      // then it will exit immediately. Posting the callback at the start of the\r\n      // frame ensures it's fired within the earliest possible frame. If we\r\n      // waited until the end of the frame to post the callback, we risk the\r\n      // browser skipping a frame and not firing the callback until the frame\r\n      // after that.\r\n      requestAnimationFrameWithTimeout(animationTick);\r\n    } else {\r\n      // No pending work. Exit.\r\n      isAnimationFrameScheduled = false;\r\n      return;\r\n    }\r\n\r\n    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;\r\n    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {\r\n      if (nextFrameTime < 8) {\r\n        // Defensive coding. We don't support higher frame rates than 120hz.\r\n        // If the calculated frame time gets lower than 8, it is probably a bug.\r\n        nextFrameTime = 8;\r\n      }\r\n      // If one frame goes long, then the next one can be short to catch up.\r\n      // If two frames are short in a row, then that's an indication that we\r\n      // actually have a higher frame rate than what we're currently optimizing.\r\n      // We adjust our heuristic dynamically accordingly. For example, if we're\r\n      // running on 120hz display or 90hz VR display.\r\n      // Take the max of the two in case one of them was an anomaly due to\r\n      // missed frame deadlines.\r\n      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;\r\n    } else {\r\n      previousFrameTime = nextFrameTime;\r\n    }\r\n    frameDeadline = rafTime + activeFrameTime;\r\n    if (!isMessageEventScheduled) {\r\n      isMessageEventScheduled = true;\r\n      port.postMessage(undefined);\r\n    }\r\n  };\r\n\r\n  requestHostCallback = function (callback, absoluteTimeout) {\r\n    scheduledHostCallback = callback;\r\n    timeoutTime = absoluteTimeout;\r\n    if (isFlushingHostCallback || absoluteTimeout < 0) {\r\n      // Don't wait for the next frame. Continue working ASAP, in a new event.\r\n      port.postMessage(undefined);\r\n    } else if (!isAnimationFrameScheduled) {\r\n      // If rAF didn't already schedule one, we need to schedule a frame.\r\n      // TODO: If this rAF doesn't materialize because the browser throttles, we\r\n      // might want to still have setTimeout trigger rIC as a backup to ensure\r\n      // that we keep performing work.\r\n      isAnimationFrameScheduled = true;\r\n      requestAnimationFrameWithTimeout(animationTick);\r\n    }\r\n  };\r\n\r\n  cancelHostCallback = function () {\r\n    scheduledHostCallback = null;\r\n    isMessageEventScheduled = false;\r\n    timeoutTime = -1;\r\n  };\r\n}\r\n\r\nexports.unstable_ImmediatePriority = ImmediatePriority;\r\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\r\nexports.unstable_NormalPriority = NormalPriority;\r\nexports.unstable_IdlePriority = IdlePriority;\r\nexports.unstable_LowPriority = LowPriority;\r\nexports.unstable_runWithPriority = unstable_runWithPriority;\r\nexports.unstable_next = unstable_next;\r\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\r\nexports.unstable_cancelCallback = unstable_cancelCallback;\r\nexports.unstable_wrapCallback = unstable_wrapCallback;\r\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\r\nexports.unstable_shouldYield = unstable_shouldYield;\r\nexports.unstable_continueExecution = unstable_continueExecution;\r\nexports.unstable_pauseExecution = unstable_pauseExecution;\r\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\r\n  })();\r\n}\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/scheduler.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/scheduler.development.js');\r\n}\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/scheduler-tracing.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/scheduler-tracing.development.js');\r\n}\r\n","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\nvar stylesInDom = {};\r\n\r\nvar\tmemoize = function (fn) {\r\n\tvar memo;\r\n\r\n\treturn function () {\r\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\treturn memo;\r\n\t};\r\n};\r\n\r\nvar isOldIE = memoize(function () {\r\n\t// Test for IE <= 9 as proposed by Browserhacks\r\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\r\n\t// Tests for existence of standard globals is to allow style-loader\r\n\t// to operate correctly into non-standard environments\r\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\r\n\treturn window && document && document.all && !window.atob;\r\n});\r\n\r\nvar getTarget = function (target, parent) {\r\n  if (parent){\r\n    return parent.querySelector(target);\r\n  }\r\n  return document.querySelector(target);\r\n};\r\n\r\nvar getElement = (function (fn) {\r\n\tvar memo = {};\r\n\r\n\treturn function(target, parent) {\r\n                // If passing function in options, then use it for resolve \"head\" element.\r\n                // Useful for Shadow Root style i.e\r\n                // {\r\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\r\n                // }\r\n                if (typeof target === 'function') {\r\n                        return target();\r\n                }\r\n                if (typeof memo[target] === \"undefined\") {\r\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\r\n\t\t\t// Special case to return head of iframe instead of iframe itself\r\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\r\n\t\t\t\t\t// due to cross-origin restrictions\r\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tstyleTarget = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmemo[target] = styleTarget;\r\n\t\t}\r\n\t\treturn memo[target]\r\n\t};\r\n})();\r\n\r\nvar singleton = null;\r\nvar\tsingletonCounter = 0;\r\nvar\tstylesInsertedAtTop = [];\r\n\r\nvar\tfixUrls = require(\"./urls\");\r\n\r\nmodule.exports = function(list, options) {\r\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\r\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\r\n\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the <head> element\r\n        if (!options.insertInto) options.insertInto = \"head\";\r\n\r\n\t// By default, add <style> tags to the bottom of the target\r\n\tif (!options.insertAt) options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list, options);\r\n\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update (newList) {\r\n\t\tvar mayRemove = [];\r\n\r\n\t\tfor (var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList, options);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\r\n\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nfunction addStylesToDom (styles, options) {\r\n\tfor (var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles (list, options) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\r\n\tfor (var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = options.base ? item[0] + options.base : item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\r\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse newStyles[id].parts.push(part);\r\n\t}\r\n\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement (options, style) {\r\n\tvar target = getElement(options.insertInto)\r\n\r\n\tif (!target) {\r\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\r\n\t}\r\n\r\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\r\n\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif (!lastStyleElementInsertedAtTop) {\r\n\t\t\ttarget.insertBefore(style, target.firstChild);\r\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\ttarget.appendChild(style);\r\n\t\t}\r\n\t\tstylesInsertedAtTop.push(style);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\ttarget.appendChild(style);\r\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\r\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\r\n\t\ttarget.insertBefore(style, nextSibling);\r\n\t} else {\r\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement (style) {\r\n\tif (style.parentNode === null) return false;\r\n\tstyle.parentNode.removeChild(style);\r\n\r\n\tvar idx = stylesInsertedAtTop.indexOf(style);\r\n\tif(idx >= 0) {\r\n\t\tstylesInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement (options) {\r\n\tvar style = document.createElement(\"style\");\r\n\r\n\tif(options.attrs.type === undefined) {\r\n\t\toptions.attrs.type = \"text/css\";\r\n\t}\r\n\r\n\tif(options.attrs.nonce === undefined) {\r\n\t\tvar nonce = getNonce();\r\n\t\tif (nonce) {\r\n\t\t\toptions.attrs.nonce = nonce;\r\n\t\t}\r\n\t}\r\n\r\n\taddAttrs(style, options.attrs);\r\n\tinsertStyleElement(options, style);\r\n\r\n\treturn style;\r\n}\r\n\r\nfunction createLinkElement (options) {\r\n\tvar link = document.createElement(\"link\");\r\n\r\n\tif(options.attrs.type === undefined) {\r\n\t\toptions.attrs.type = \"text/css\";\r\n\t}\r\n\toptions.attrs.rel = \"stylesheet\";\r\n\r\n\taddAttrs(link, options.attrs);\r\n\tinsertStyleElement(options, link);\r\n\r\n\treturn link;\r\n}\r\n\r\nfunction addAttrs (el, attrs) {\r\n\tObject.keys(attrs).forEach(function (key) {\r\n\t\tel.setAttribute(key, attrs[key]);\r\n\t});\r\n}\r\n\r\nfunction getNonce() {\r\n\tif (typeof __webpack_nonce__ === 'undefined') {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn __webpack_nonce__;\r\n}\r\n\r\nfunction addStyle (obj, options) {\r\n\tvar style, update, remove, result;\r\n\r\n\t// If a transform function was defined, run it on the css\r\n\tif (options.transform && obj.css) {\r\n\t    result = typeof options.transform === 'function'\r\n\t\t ? options.transform(obj.css) \r\n\t\t : options.transform.default(obj.css);\r\n\r\n\t    if (result) {\r\n\t    \t// If transform returns a value, use that instead of the original css.\r\n\t    \t// This allows running runtime transformations on the css.\r\n\t    \tobj.css = result;\r\n\t    } else {\r\n\t    \t// If the transform function returns a falsy value, don't add this css.\r\n\t    \t// This allows conditional loading of css\r\n\t    \treturn function() {\r\n\t    \t\t// noop\r\n\t    \t};\r\n\t    }\r\n\t}\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\r\n\t\tstyle = singleton || (singleton = createStyleElement(options));\r\n\r\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\r\n\r\n\t} else if (\r\n\t\tobj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\"\r\n\t) {\r\n\t\tstyle = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, style, options);\r\n\t\tremove = function () {\r\n\t\t\tremoveStyleElement(style);\r\n\r\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyle = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, style);\r\n\t\tremove = function () {\r\n\t\t\tremoveStyleElement(style);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle (newObj) {\r\n\t\tif (newObj) {\r\n\t\t\tif (\r\n\t\t\t\tnewObj.css === obj.css &&\r\n\t\t\t\tnewObj.media === obj.media &&\r\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\r\n\t\t\t) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag (style, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (style.styleSheet) {\r\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = style.childNodes;\r\n\r\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\r\n\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyle.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag (style, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyle.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(style.styleSheet) {\r\n\t\tstyle.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(style.firstChild) {\r\n\t\t\tstyle.removeChild(style.firstChild);\r\n\t\t}\r\n\r\n\t\tstyle.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink (link, options, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\t/*\r\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\r\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\r\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\r\n\t\tdirectly\r\n\t*/\r\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\r\n\r\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\r\n\t\tcss = fixUrls(css);\r\n\t}\r\n\r\n\tif (sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = link.href;\r\n\r\n\tlink.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\r\n}\r\n","\r\n/**\r\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\r\n * embed the css on the page. This breaks all relative urls because now they are relative to a\r\n * bundle instead of the current page.\r\n *\r\n * One solution is to only use full urls, but that may be impossible.\r\n *\r\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\r\n *\r\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\r\n *\r\n */\r\n\r\nmodule.exports = function (css) {\r\n  // get current location\r\n  var location = typeof window !== \"undefined\" && window.location;\r\n\r\n  if (!location) {\r\n    throw new Error(\"fixUrls requires window.location\");\r\n  }\r\n\r\n\t// blank or null?\r\n\tif (!css || typeof css !== \"string\") {\r\n\t  return css;\r\n  }\r\n\r\n  var baseUrl = location.protocol + \"//\" + location.host;\r\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\r\n\r\n\t// convert each url(...)\r\n\t/*\r\n\tThis regular expression is just a way to recursively match brackets within\r\n\ta string.\r\n\r\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\r\n\t   (  = Start a capturing group\r\n\t     (?:  = Start a non-capturing group\r\n\t         [^)(]  = Match anything that isn't a parentheses\r\n\t         |  = OR\r\n\t         \\(  = Match a start parentheses\r\n\t             (?:  = Start another non-capturing groups\r\n\t                 [^)(]+  = Match anything that isn't a parentheses\r\n\t                 |  = OR\r\n\t                 \\(  = Match a start parentheses\r\n\t                     [^)(]*  = Match anything that isn't a parentheses\r\n\t                 \\)  = Match a end parentheses\r\n\t             )  = End Group\r\n              *\\) = Match anything and then a close parens\r\n          )  = Close non-capturing group\r\n          *  = Match anything\r\n       )  = Close capturing group\r\n\t \\)  = Match a close parens\r\n\r\n\t /gi  = Get all matches, not the first.  Be case insensitive.\r\n\t */\r\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\r\n\t\t// strip quotes (if they exist)\r\n\t\tvar unquotedOrigUrl = origUrl\r\n\t\t\t.trim()\r\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\r\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\r\n\r\n\t\t// already a full url? no change\r\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\r\n\t\t  return fullMatch;\r\n\t\t}\r\n\r\n\t\t// convert the url to a full url\r\n\t\tvar newUrl;\r\n\r\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\r\n\t\t  \t//TODO: should we add protocol?\r\n\t\t\tnewUrl = unquotedOrigUrl;\r\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\r\n\t\t\t// path should be relative to the base url\r\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\r\n\t\t} else {\r\n\t\t\t// path should be relative to current directory\r\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\r\n\t\t}\r\n\r\n\t\t// send back the fixed url(...)\r\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\r\n\t});\r\n\r\n\t// send back the fixed css\r\n\treturn fixedCss;\r\n};\r\n","\"use strict\";\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n/**\r\n * Tiny stack for browser or server\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2018\r\n * @license BSD-3-Clause\r\n * @link http://avoidwork.github.io/tiny-stack\r\n * @version 1.1.0\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\tvar TinyStack = function () {\r\n\t\tfunction TinyStack() {\r\n\t\t\t_classCallCheck(this, TinyStack);\r\n\r\n\t\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n\t\t\t\targs[_key] = arguments[_key];\r\n\t\t\t}\r\n\r\n\t\t\tthis.data = [null].concat(args);\r\n\t\t\tthis.top = this.data.length - 1;\r\n\t\t}\r\n\r\n\t\t_createClass(TinyStack, [{\r\n\t\t\tkey: \"clear\",\r\n\t\t\tvalue: function clear() {\r\n\t\t\t\tthis.data.length = 1;\r\n\t\t\t\tthis.top = 0;\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: \"empty\",\r\n\t\t\tvalue: function empty() {\r\n\t\t\t\treturn this.top === 0;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: \"length\",\r\n\t\t\tvalue: function length() {\r\n\t\t\t\treturn this.top;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: \"peek\",\r\n\t\t\tvalue: function peek() {\r\n\t\t\t\treturn this.data[this.top];\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: \"pop\",\r\n\t\t\tvalue: function pop() {\r\n\t\t\t\tvar result = void 0;\r\n\r\n\t\t\t\tif (this.top > 0) {\r\n\t\t\t\t\tresult = this.data.pop();\r\n\t\t\t\t\tthis.top--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: \"push\",\r\n\t\t\tvalue: function push(arg) {\r\n\t\t\t\tthis.data[++this.top] = arg;\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: \"search\",\r\n\t\t\tvalue: function search(arg) {\r\n\t\t\t\tvar index = this.data.indexOf(arg);\r\n\r\n\t\t\t\treturn index === -1 ? -1 : this.data.length - index;\r\n\t\t\t}\r\n\t\t}]);\r\n\r\n\t\treturn TinyStack;\r\n\t}();\r\n\r\n\tfunction factory() {\r\n\t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n\t\t\targs[_key2] = arguments[_key2];\r\n\t\t}\r\n\r\n\t\treturn new (Function.prototype.bind.apply(TinyStack, [null].concat(args)))();\r\n\t}\r\n\r\n\t// Node, AMD & window supported\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = factory;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(function () {\r\n\t\t\treturn factory;\r\n\t\t});\r\n\t} else {\r\n\t\tglobal.stack = factory;\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : global);\r\n","function ensureImported(element, target) {\r\n\r\n  if (element.ownerDocument !== target.ownerDocument) {\r\n    try {\r\n      // may fail on webkit\r\n      return target.ownerDocument.importNode(element, true);\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * appendTo utility\r\n */\r\n\r\n/**\r\n * Append a node to a target element and return the appended node.\r\n *\r\n * @param  {SVGElement} element\r\n * @param  {SVGElement} target\r\n *\r\n * @return {SVGElement} the appended node\r\n */\r\nfunction appendTo(element, target) {\r\n  return target.appendChild(ensureImported(element, target));\r\n}\r\n\r\n/**\r\n * append utility\r\n */\r\n\r\n/**\r\n * Append a node to an element\r\n *\r\n * @param  {SVGElement} element\r\n * @param  {SVGElement} node\r\n *\r\n * @return {SVGElement} the element\r\n */\r\nfunction append(target, node) {\r\n  appendTo(node, target);\r\n  return target;\r\n}\r\n\r\n/**\r\n * attribute accessor utility\r\n */\r\n\r\nvar LENGTH_ATTR = 2;\r\n\r\nvar CSS_PROPERTIES = {\r\n  'alignment-baseline': 1,\r\n  'baseline-shift': 1,\r\n  'clip': 1,\r\n  'clip-path': 1,\r\n  'clip-rule': 1,\r\n  'color': 1,\r\n  'color-interpolation': 1,\r\n  'color-interpolation-filters': 1,\r\n  'color-profile': 1,\r\n  'color-rendering': 1,\r\n  'cursor': 1,\r\n  'direction': 1,\r\n  'display': 1,\r\n  'dominant-baseline': 1,\r\n  'enable-background': 1,\r\n  'fill': 1,\r\n  'fill-opacity': 1,\r\n  'fill-rule': 1,\r\n  'filter': 1,\r\n  'flood-color': 1,\r\n  'flood-opacity': 1,\r\n  'font': 1,\r\n  'font-family': 1,\r\n  'font-size': LENGTH_ATTR,\r\n  'font-size-adjust': 1,\r\n  'font-stretch': 1,\r\n  'font-style': 1,\r\n  'font-variant': 1,\r\n  'font-weight': 1,\r\n  'glyph-orientation-horizontal': 1,\r\n  'glyph-orientation-vertical': 1,\r\n  'image-rendering': 1,\r\n  'kerning': 1,\r\n  'letter-spacing': 1,\r\n  'lighting-color': 1,\r\n  'marker': 1,\r\n  'marker-end': 1,\r\n  'marker-mid': 1,\r\n  'marker-start': 1,\r\n  'mask': 1,\r\n  'opacity': 1,\r\n  'overflow': 1,\r\n  'pointer-events': 1,\r\n  'shape-rendering': 1,\r\n  'stop-color': 1,\r\n  'stop-opacity': 1,\r\n  'stroke': 1,\r\n  'stroke-dasharray': 1,\r\n  'stroke-dashoffset': 1,\r\n  'stroke-linecap': 1,\r\n  'stroke-linejoin': 1,\r\n  'stroke-miterlimit': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': LENGTH_ATTR,\r\n  'text-anchor': 1,\r\n  'text-decoration': 1,\r\n  'text-rendering': 1,\r\n  'unicode-bidi': 1,\r\n  'visibility': 1,\r\n  'word-spacing': 1,\r\n  'writing-mode': 1\r\n};\r\n\r\n\r\nfunction getAttribute(node, name) {\r\n  if (CSS_PROPERTIES[name]) {\r\n    return node.style[name];\r\n  } else {\r\n    return node.getAttributeNS(null, name);\r\n  }\r\n}\r\n\r\nfunction setAttribute(node, name, value) {\r\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n\r\n  var type = CSS_PROPERTIES[hyphenated];\r\n\r\n  if (type) {\r\n    // append pixel unit, unless present\r\n    if (type === LENGTH_ATTR && typeof value === 'number') {\r\n      value = String(value) + 'px';\r\n    }\r\n\r\n    node.style[hyphenated] = value;\r\n  } else {\r\n    node.setAttributeNS(null, name, value);\r\n  }\r\n}\r\n\r\nfunction setAttributes(node, attrs) {\r\n\r\n  var names = Object.keys(attrs), i, name;\r\n\r\n  for (i = 0, name; (name = names[i]); i++) {\r\n    setAttribute(node, name, attrs[name]);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets or sets raw attributes on a node.\r\n *\r\n * @param  {SVGElement} node\r\n * @param  {Object} [attrs]\r\n * @param  {String} [name]\r\n * @param  {String} [value]\r\n *\r\n * @return {String}\r\n */\r\nfunction attr(node, name, value) {\r\n  if (typeof name === 'string') {\r\n    if (value !== undefined) {\r\n      setAttribute(node, name, value);\r\n    } else {\r\n      return getAttribute(node, name);\r\n    }\r\n  } else {\r\n    setAttributes(node, name);\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Clear utility\r\n */\r\nfunction index(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nvar re = /\\s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\r\n\r\nfunction remove(element) {\r\n  var parent = element.parentNode;\r\n\r\n  if (parent) {\r\n    parent.removeChild(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * Clear utility\r\n */\r\n\r\n/**\r\n * Removes all children from the given element\r\n *\r\n * @param  {DOMElement} element\r\n * @return {DOMElement} the element (for chaining)\r\n */\r\nfunction clear(element) {\r\n  var child;\r\n\r\n  while ((child = element.firstChild)) {\r\n    remove(child);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nfunction clone(element) {\r\n  return element.cloneNode(true);\r\n}\r\n\r\nvar ns = {\r\n  svg: 'http://www.w3.org/2000/svg'\r\n};\r\n\r\n/**\r\n * DOM parsing utility\r\n */\r\n\r\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\r\n\r\nfunction parse(svg) {\r\n\r\n  var unwrap = false;\r\n\r\n  // ensure we import a valid svg document\r\n  if (svg.substring(0, 4) === '<svg') {\r\n    if (svg.indexOf(ns.svg) === -1) {\r\n      svg = SVG_START + svg.substring(4);\r\n    }\r\n  } else {\r\n    // namespace svg\r\n    svg = SVG_START + '>' + svg + '</svg>';\r\n    unwrap = true;\r\n  }\r\n\r\n  var parsed = parseDocument(svg);\r\n\r\n  if (!unwrap) {\r\n    return parsed;\r\n  }\r\n\r\n  var fragment = document.createDocumentFragment();\r\n\r\n  var parent = parsed.firstChild;\r\n\r\n  while (parent.firstChild) {\r\n    fragment.appendChild(parent.firstChild);\r\n  }\r\n\r\n  return fragment;\r\n}\r\n\r\nfunction parseDocument(svg) {\r\n\r\n  var parser;\r\n\r\n  // parse\r\n  parser = new DOMParser();\r\n  parser.async = false;\r\n\r\n  return parser.parseFromString(svg, 'text/xml');\r\n}\r\n\r\n/**\r\n * Create utility for SVG elements\r\n */\r\n\r\n\r\n/**\r\n * Create a specific type from name or SVG markup.\r\n *\r\n * @param {String} name the name or markup of the element\r\n * @param {Object} [attrs] attributes to set on the element\r\n *\r\n * @returns {SVGElement}\r\n */\r\nfunction create(name, attrs) {\r\n  var element;\r\n\r\n  if (name.charAt(0) === '<') {\r\n    element = parse(name).firstChild;\r\n    element = document.importNode(element, true);\r\n  } else {\r\n    element = document.createElementNS(ns.svg, name);\r\n  }\r\n\r\n  if (attrs) {\r\n    attr(element, attrs);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * Events handling utility\r\n */\r\n\r\nfunction on(node, event, listener, useCapture) {\r\n  node.addEventListener(event, listener, useCapture);\r\n}\r\n\r\nfunction off(node, event, listener, useCapture) {\r\n  node.removeEventListener(event, listener, useCapture);\r\n}\r\n\r\n/**\r\n * Geometry helpers\r\n */\r\n\r\n// fake node used to instantiate svg geometry elements\r\nvar node = create('svg');\r\n\r\nfunction extend(object, props) {\r\n  var i, k, keys = Object.keys(props);\r\n\r\n  for (i = 0; (k = keys[i]); i++) {\r\n    object[k] = props[k];\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\n\r\nfunction createPoint(x, y) {\r\n  var point = node.createSVGPoint();\r\n\r\n  switch (arguments.length) {\r\n  case 0:\r\n    return point;\r\n  case 2:\r\n    x = {\r\n      x: x,\r\n      y: y\r\n    };\r\n    break;\r\n  }\r\n\r\n  return extend(point, x);\r\n}\r\n\r\n/**\r\n * Create matrix via args.\r\n *\r\n * @example\r\n *\r\n * createMatrix({ a: 1, b: 1 });\r\n * createMatrix();\r\n * createMatrix(1, 2, 0, 0, 30, 20);\r\n *\r\n * @return {SVGMatrix}\r\n */\r\nfunction createMatrix(a, b, c, d, e, f) {\r\n  var matrix = node.createSVGMatrix();\r\n\r\n  switch (arguments.length) {\r\n  case 0:\r\n    return matrix;\r\n  case 1:\r\n    return extend(matrix, a);\r\n  case 6:\r\n    return extend(matrix, {\r\n      a: a,\r\n      b: b,\r\n      c: c,\r\n      d: d,\r\n      e: e,\r\n      f: f\r\n    });\r\n  }\r\n}\r\n\r\nfunction createTransform(matrix) {\r\n  if (matrix) {\r\n    return node.createSVGTransformFromMatrix(matrix);\r\n  } else {\r\n    return node.createSVGTransform();\r\n  }\r\n}\r\n\r\n/**\r\n * Serialization util\r\n */\r\n\r\nvar TEXT_ENTITIES = /([&<>]{1})/g;\r\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\r\n\r\nvar ENTITY_REPLACEMENT = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '>': '&gt;',\r\n  '\"': '\\''\r\n};\r\n\r\nfunction escape(str, pattern) {\r\n\r\n  function replaceFn(match, entity) {\r\n    return ENTITY_REPLACEMENT[entity] || entity;\r\n  }\r\n\r\n  return str.replace(pattern, replaceFn);\r\n}\r\n\r\nfunction serialize(node, output) {\r\n\r\n  var i, len, attrMap, attrNode, childNodes;\r\n\r\n  switch (node.nodeType) {\r\n  // TEXT\r\n  case 3:\r\n    // replace special XML characters\r\n    output.push(escape(node.textContent, TEXT_ENTITIES));\r\n    break;\r\n\r\n  // ELEMENT\r\n  case 1:\r\n    output.push('<', node.tagName);\r\n\r\n    if (node.hasAttributes()) {\r\n      attrMap = node.attributes;\r\n      for (i = 0, len = attrMap.length; i < len; ++i) {\r\n        attrNode = attrMap.item(i);\r\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\r\n      }\r\n    }\r\n\r\n    if (node.hasChildNodes()) {\r\n      output.push('>');\r\n      childNodes = node.childNodes;\r\n      for (i = 0, len = childNodes.length; i < len; ++i) {\r\n        serialize(childNodes.item(i), output);\r\n      }\r\n      output.push('</', node.tagName, '>');\r\n    } else {\r\n      output.push('/>');\r\n    }\r\n    break;\r\n\r\n  // COMMENT\r\n  case 8:\r\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\r\n    break;\r\n\r\n  // CDATA\r\n  case 4:\r\n    output.push('<![CDATA[', node.nodeValue, ']]>');\r\n    break;\r\n\r\n  default:\r\n    throw new Error('unable to handle node ' + node.nodeType);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\n/**\r\n * innerHTML like functionality for SVG elements.\r\n * based on innerSVG (https://code.google.com/p/innersvg)\r\n */\r\n\r\n\r\nfunction set(element, svg) {\r\n\r\n  var parsed = parse(svg);\r\n\r\n  // clear element contents\r\n  clear(element);\r\n\r\n  if (!svg) {\r\n    return;\r\n  }\r\n\r\n  if (!isFragment(parsed)) {\r\n    // extract <svg> from parsed document\r\n    parsed = parsed.documentElement;\r\n  }\r\n\r\n  var nodes = slice(parsed.childNodes);\r\n\r\n  // import + append each node\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    appendTo(nodes[i], element);\r\n  }\r\n\r\n}\r\n\r\nfunction get(element) {\r\n  var child = element.firstChild,\r\n      output = [];\r\n\r\n  while (child) {\r\n    serialize(child, output);\r\n    child = child.nextSibling;\r\n  }\r\n\r\n  return output.join('');\r\n}\r\n\r\nfunction isFragment(node) {\r\n  return node.nodeName === '#document-fragment';\r\n}\r\n\r\nfunction innerSVG(element, svg) {\r\n\r\n  if (svg !== undefined) {\r\n\r\n    try {\r\n      set(element, svg);\r\n    } catch (e) {\r\n      throw new Error('error parsing SVG: ' + e.message);\r\n    }\r\n\r\n    return element;\r\n  } else {\r\n    return get(element);\r\n  }\r\n}\r\n\r\n\r\nfunction slice(arr) {\r\n  return Array.prototype.slice.call(arr);\r\n}\r\n\r\n/**\r\n * Selection utilities\r\n */\r\n\r\nfunction select(node, selector) {\r\n  return node.querySelector(selector);\r\n}\r\n\r\nfunction selectAll(node, selector) {\r\n  var nodes = node.querySelectorAll(selector);\r\n\r\n  return [].map.call(nodes, function(element) {\r\n    return element;\r\n  });\r\n}\r\n\r\n/**\r\n * prependTo utility\r\n */\r\n\r\n/**\r\n * Prepend a node to a target element and return the prepended node.\r\n *\r\n * @param  {SVGElement} node\r\n * @param  {SVGElement} target\r\n *\r\n * @return {SVGElement} the prepended node\r\n */\r\nfunction prependTo(node, target) {\r\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\r\n}\r\n\r\n/**\r\n * prepend utility\r\n */\r\n\r\n/**\r\n * Prepend a node to a target element\r\n *\r\n * @param  {SVGElement} target\r\n * @param  {SVGElement} node\r\n *\r\n * @return {SVGElement} the target element\r\n */\r\nfunction prepend(target, node) {\r\n  prependTo(node, target);\r\n  return target;\r\n}\r\n\r\n/**\r\n * Replace utility\r\n */\r\n\r\nfunction replace(element, replacement) {\r\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\r\n  return replacement;\r\n}\r\n\r\n/**\r\n * transform accessor utility\r\n */\r\n\r\nfunction wrapMatrix(transformList, transform) {\r\n  if (transform instanceof SVGMatrix) {\r\n    return transformList.createSVGTransformFromMatrix(transform);\r\n  }\r\n\r\n  return transform;\r\n}\r\n\r\n\r\nfunction setTransforms(transformList, transforms) {\r\n  var i, t;\r\n\r\n  transformList.clear();\r\n\r\n  for (i = 0; (t = transforms[i]); i++) {\r\n    transformList.appendItem(wrapMatrix(transformList, t));\r\n  }\r\n}\r\n\r\n/**\r\n * Get or set the transforms on the given node.\r\n *\r\n * @param {SVGElement} node\r\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\r\n *\r\n * @return {SVGTransform} the consolidated transform\r\n */\r\nfunction transform(node, transforms) {\r\n  var transformList = node.transform.baseVal;\r\n\r\n  if (transforms) {\r\n\r\n    if (!Array.isArray(transforms)) {\r\n      transforms = [ transforms ];\r\n    }\r\n\r\n    setTransforms(transformList, transforms);\r\n  }\r\n\r\n  return transformList.consolidate();\r\n}\r\n\r\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || new Function(\"return this\")();\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n"],"sourceRoot":""}